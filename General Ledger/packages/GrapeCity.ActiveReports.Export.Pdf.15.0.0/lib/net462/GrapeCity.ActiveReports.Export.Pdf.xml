<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrapeCity.ActiveReports.Export.Pdf</name>
    </assembly>
    <members>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.AdditionalMetadataNamespace.PurlOrg">
            <summary>
            Dublin Core Properties(namespace "http://purl.org/dc/elements/1.1/")
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.AdditionalMetadataNamespace.NsAdobeComXap">
            <summary>
            XML Core Properties(namespace "http://ns.adobe.com/xap/1.0/")
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.AdditionalMetadataNamespace.NsAdobeComPdf">
            <summary>
            PDF Properties(namespace http://ns.adobe.com/pdf/1.3/)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.AdditionalMetadataInfo">
            <summary>
            Single entry of the document additional metadata
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.AdditionalMetadataInfo.Namespace">
            <summary>
            Namespace
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.AdditionalMetadataInfo.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.AdditionalMetadataInfo.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.FontFactorySectionHandler">
            <summary>
            A <see cref="T:System.Configuration.IConfigurationSectionHandler"/> for the FontFolders configuration section.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.FontFactorySectionHandler.ReadFolderPath(System.Xml.XmlNode)">
            <summary>
            Reads the folder path from XML node.
            </summary>
            <param name="node">The XML node.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Config.FontFactoryConfiguration">
            <summary>
            Folder font factory configuration
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Config.FontFactoryConfiguration.#ctor">
            <summary>
            Initializes a new configuration for GDI font factory
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Config.FontFolderConfigEntry">
            <summary>
            Font folder configuration record
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Config.FontSubstituteEntry">
            <summary>
            Font substitution configuration entry
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Config.FontLinkEntry">
            <summary>
            FontLink configuration record
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Config.EudcFontLinkEntry">
            <summary>
            Font link for EUDC font
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions">
            <summary>
            Encapsulates viewer preferences and document information/metadata for an output PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.HideToolbar">
            <summary>
            True to hide the viewer application’s toolbars when the document is active. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.HideMenubar">
            <summary>
            True to hide the viewer application’s menu bar when the document is active. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.HideWindowUI">
            <summary>
            True to hide user interface elements in the document’s window (such as scroll bars and navigation controls), leaving only the document’s contents displayed. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.FitWindow">
            <summary>
            True to resize the document’s window to fit the size of the first displayed page. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.CenterWindow">
            <summary>
            True to position the document’s window in the center of the screen. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.DisplayTitle">
            <summary>
            True if the window’s title bar should display the document title taken from the Title entry in the document information/metadata.  If this value is false, the title bar should instead display the name of the PDF file containing the document. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.DisplayMode">
            <summary>
            Specifies how the document should be displayed when opened. 
            Default value: <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Section.DisplayMode.None"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.Title">
            <summary>
            The document’s title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.Author">
            <summary>
            The name of the person who created the document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.Subject">
            <summary>
            The subject of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.Keywords">
            <summary>
            Keywords associated with the document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.Application">
            <summary>
            The value that appears for “Application” inside the Document Properties dialog of the PDF viewer application.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.OnlyForPrint">
            <summary>
            Indicate whether the PDF is only for print.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.AdditionalMetadata">
            <summary>
            Additional metadata associated with this document
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.Attachments">
            <summary>
            Document level file attachments
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.DisplayMode">
            <summary>
            Used to specify <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfDocumentOptions.DisplayMode"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.DisplayMode.None">
            Neither document outline nor thumbnail images are visible.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.DisplayMode.Outlines">
            The document outline is visible.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.DisplayMode.Thumbs">
            Thumbnail images are visible. If thumbnails and outline flags are set, thumbnails will be shown.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.DisplayMode.FullScreen">
            Full-screen mode with no menu bar, window controls, or any other window visible.
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport">
            <summary>
            Provides PDF document creation functionality for ActiveReports documents.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport._signature">
            <summary>
            Object for signing .pdf export
            </summary>
            <remarks>
            Default value is null. If value is not null, then document will be signed during export
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.#ctor">
            <summary>
            Initializes a new instance of the PdfExport class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.CreateAndInitializeFontFactory(System.Boolean)">
            <summary>
            Reads configuration and returns initialized FontFactory instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.InitDefaults">
            <summary>
            Initializes members to their default values.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.PdfEngine">
            <summary>
            Table render needs this for fonts.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Finalize">
            <summary>
            Finalizer to make sure we dispose any unmanaged resources. Part of disposable pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Dispose(System.Boolean)">
            <summary>
            Disposes the engine.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Pagination">
            <summary>
            Gets or sets the value indicates should pagination be used for resulted PDF document or not
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ImageQuality">
            <summary>
            Specifies the quality used for any images that are converted by ActiveReports.  Note that if a JPG image is used in the report, it is written directly to PDF without any conversion.  Other image formats may incur a conversion, which this value will effect.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ImageInterpolation">
            <summary>
            Specifies the images interpolation value
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ConvertMetaToPng">
            <summary>
            Sets or returns a value indicating whether Windows metafiles are converted to PNG files in the exported PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Security">
            <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity"/> object for initializing document encryption and security.
            </summary>
            <remarks>
            You must set the <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Encrypt"/> property to true in order for the document to be encrypted and the permissions enforced.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ExportBookmarks">
            <summary>
            Sets or returns a value indicating whether bookmarks are exported to the PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ShowBookmarks">
            <summary>
            Gets or sets a value indicating whether the navigation pane is displayed in the Acrobat viewer.
            </summary>
            <remarks>This property has been made obsolete by the <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Options"/> property.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Options">
            <summary>
            Returns an object allowing you to specify viewer preferences and document information options for the exported PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.PrintPresets">
            <summary>
            Gets the print presets.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Signature">
            <summary>
            Specifies the signature settings for pdf export
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Version">
            <summary>
            Sets or returns the version of the PDF format the exported document is saved in.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ImageResolution">
            <summary>
            Sets or returns the resolution of images converted from metafiles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.NeverEmbedFonts">
            <summary>
            Sets or returns a semicolon-delimited string of values indicating fonts that should not be embedded in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.FontFallback">
            <summary>
            Gets or sets a comma-delimited string of font families that will be used to lookup glyphs missing in original font
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.OptimizeMemory">
            <summary>
            Gets; Sets teh optimization for pdf export.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.String)">
            <summary>
            Exports the specified document to a PDF file.
            </summary>
            <param name="document">The ActiveReports <see cref="T:GrapeCity.ActiveReports.Document.SectionDocument"/>Document object to export.</param>
            <param name="filePath">The file name and path to save the main PDF file to.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.String,System.String)">
            <summary>
            Exports the specified document to a PDF file.
            </summary>
            <param name="document">The ActiveReports <see cref="T:GrapeCity.ActiveReports.Document.SectionDocument"/>Document object to export.</param>
            <param name="filePath">The file name and path to save the main PDF file to.</param>
            <param name="pageRange"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.IO.Stream)">
            <summary>
            Exports the specified document to a PDF stream.
            </summary>
            <param name="document">The ActiveReports <c>GrapeCity.ActiveReports.Document.SectionDocument</c> object to export.</param>
            <param name="stream">The stream to save the PDF document to.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.IO.Stream,System.String)">
            <summary>
            Exports the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="stream">The stream.</param>
            <param name="pageRange">The page range.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ExportImpl(GrapeCity.ActiveReports.Document.SectionDocument,System.IO.Stream,System.String,System.Boolean,DataDynamics.DDLib.PdfEngine.PdfDocumentOptions@)">
            <summary>
            Exports the specified document to a PDF stream.
            </summary>
            <param name="document">The ActiveReports <c>GrapeCity.ActiveReports.Document.SectionDocument</c> object to export.</param>
            <param name="stream">The stream to save the PDF document to.</param>
            <param name="pageRange"></param>
            <param name="options"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.ExportPage(GrapeCity.ActiveReports.Document.Section.Document.Filters.IFilteredPage,System.Drawing.Graphics,DataDynamics.ActiveReports.Export.InternalC.ExportContext,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Document.Section.Bookmark},System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Renders the specified page to a new page in the current PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.RenderCanvasItems(System.Collections.Generic.IEnumerator{GrapeCity.ActiveReports.Document.Section.CanvasItem},DataDynamics.DDLib.PdfEngine.PsPage,System.Drawing.PointF,System.Drawing.Graphics,DataDynamics.ActiveReports.Export.InternalC.ExportContext,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Document.Section.Bookmark},System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Renders the specified canvas items to the specified <see cref="T:DataDynamics.DDLib.PdfEngine.PsPage"/>.
            </summary>
            <param name="canvasItems">The canvas items that are to be rendered.</param>
            <param name="pdfPage">The destination that the page is to be rendered to.</param>
            <param name="offset">The amount to offset rendering of the contents of the page horizontally and vertically. This params is udes for rendering table because table/cell has its own page.</param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport._fontOffset">
            <summary>
            For fonts inside the table. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.GetLicense(System.Type,System.Object)">
            <summary>
            Gets license.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.SetLicLevel(GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.LicLevel)">
            <summary>
            For tests only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.SetEval">
            <summary>
            For tests only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport.Guts">
            <summary>
            Gets access to internals for tests
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion">
            <summary>
            Specifies the file format version of a PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.Pdf11">
            <summary>
            PDF version 1.1.  Suitable for legacy viewers.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.Pdf12">
            <summary>
            PDF version 1.2. This is the native file format of Acrobat 3.0.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.Pdf13">
            <summary>
            PDF version 1.3.  This is the native file format of Acrobat 4.0.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.Pdf14">
            <summary>
            PDF version 1.4.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.Pdf15">
            <summary>
            PDF version 1.5.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.Pdf16">
            <summary>
            PDF version 1.6.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.Pdf17">
            <summary>
            PDF version 1.7.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA1b">
            <summary>
            PDF/A-1b level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA1a">
            <summary>
            PDF/A-1a level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA2b">
            <summary>
            PDF/A-2b level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA2u">
            <summary>
            PDF/A-2u level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA2a">
            <summary>
            PDF/A-2a level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA3b">
            <summary>
            PDF/A-3b level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA3u">
            <summary>
            PDF/A-3u level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFA3a">
            <summary>
            PDF/A-3a level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion.PDFUA1">
            <summary>
            PDF/UA-1 level, see http://en.wikipedia.org/wiki/PDF/UA
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.ImageQuality">
            <summary>
            Specifies the quality used for any images that are converted by ActiveReports.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.ImageQuality.Lowest">
            Absolute, smallest files size, lowest quality.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.ImageQuality.Medium">
            The file image size and quality.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.ImageQuality.Highest">
            Highest quality at the cost of increased file size.
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException">
            <summary>
            Summary description for PdfExportException.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
            <param name="??"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <remarks>This constructor supports serialization.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.EudcHelper">
            <summary>
            Helpers for EUDC fonts
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.EudcHelper.GetFilenameFromRegistry(System.String)">
            <summary>
            Get EUDC file name of linked EUDC font.
            </summary>
            <param name="fontName">The name of the font for which to find EUDC font file.</param>
            <returns>File name of linked EUDC font</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FileTtfReader">
            <summary>
            File based ITtfReader implementation
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FileTtfReader.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the FileTtfReader.
            </summary>
            <param name="stream">Stream to read data from. Will be closed on dispose</param>
            <param name="tableCatalogOffset"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory">
            <summary>
            File system fonts factory
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.LookupFamilyName(System.String)">
            <summary>
            Performs case insensitive name lookup within collection of regiatered names
            </summary>
            <param name="fontName"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.RegisterFont(System.IO.FileInfo)">
            <summary>
            Registers file with particular font
            </summary>
            <param name="fontFile"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.RegisterFont(System.IO.FileInfo,System.String)">
            <summary>
            Registers TTF file under specific alias
            </summary>
            <param name="fontFile"></param>
            <param name="fontNameAlias"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.RegisterFolder(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Registers all font files with known TrueType formats
            </summary>
            <param name="directory"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.AddFontLinksFonts(System.String,System.String[])">
            <summary>
            Adds font to link collection
            </summary>
            <param name="fontName"></param>
            <param name="links"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.SetFallbackFont(System.String)">
            <summary>
            Sets fallback font
            </summary>
            <param name="fontName"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.SubstituteFont(System.String,System.String)">
            <summary>
            Specifies or updated font substitution rule
            </summary>
            <param name="faceName">Font name to be requested. Pass empty string for global fallback rule</param>
            <param name="subtituteTo">The facename to substitute requested font to</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FolderFontFactory.ReadFontNames(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader,GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FilePointer,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all font names (including localized ones and add them to map)
            </summary>
            <param name="reader"></param>
            <param name="fontPointer"></param>
            <param name="nameOverride">Alternative font names instead of names defined in font file</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDataAdapter">
            <summary>
            Provides uniform access to font data using both GDI and TTF/MediumTrust code paths
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDataAdapter.CreateReader">
            <summary>
            Gets TTF data reader
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDataAdapter.VerticalSubstGlyphMap">
            <summary>
            Gets glyphs substitution map for vertical writing
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.DisposeSafeFontDataAdapter">
            <summary>
            Wrapper around FontDataAdapter to make it safe to extra Dispose(0 calls such as when we use factory and caching
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiFontDataAdapter">
            <summary>
            System font data adapter
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiSafeFontDataAdapter">
            <summary>
            MediumTrust safe implementation of FontDataAdapter
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FilePointer">
            <summary>
            Specifies file and origin position within a file
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FilePointer.File">
            <summary>
            Points to file with font
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FilePointer.Offset">
            <summary>
            Specifies file header offset (for TTC files)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FilePointer.Empty">
            <summary>
            Gets "Empty/Null" pointer instance
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FilePointer.IsEmpty">
            <summary>
            Gets true if pointer points nowhere
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FileFontDataAdapter">
            <summary>
            File based font data adapter
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FileFontDataAdapter.TtfOutlineMetric">
            <summary>
            Font metrics retrieval from TTF file
            Gets all data in PDF units (1000 per Em) which makes it a bit different from GdiOutlineMetric which uses random scale
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory">
            <summary>
            Font factory
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.LocateFont(System.String,System.Drawing.FontStyle,System.Boolean)">
            <summary>
            Locates font with requested name according to known font and substitution/fallback rules
            </summary>
            <param name="faceName"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.GetFontData(System.String,System.Boolean)">
            <summary>
            Locates font and retrieves its data
            </summary>
            <param name="faceName"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.GetFontData(System.String,System.Drawing.FontStyle,System.Boolean)">
            <summary>
            Gets
            </summary>
            <param name="faceName"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.GetFontData(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc,System.Boolean)">
            <summary>
            Gets the font data by exact font reference
            </summary>
            <param name="descriptor"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.CanExtractGlyphs">
            <summary>
            Gets true if Font factory is capable of creating partial font file/extract font data
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.GetFontDataImpl(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc)">
            <summary>
            Font data getter implementation
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.FallbackLinkFont">
            <summary>
            Gets or sets the entry name withing LinkFonts that is to be used as fallback font
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.FallbackFonts">
            <summary>
            Gets list of fallback font families. The list has lowest priority
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.GetFontLinks(System.String,System.Drawing.FontStyle)">
            <summary>
            Gets prioritized font names list to lookup missing glyphs
            Font substitution is applied to font name first
            </summary>
            <param name="fontName">Font name</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontFactory.CheckBoldSupport(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc)">
            <summary>
            Checks if export should use bold simulation or not.
            </summary>
            <exception cref="T:System.InvalidOperationException">If <b>CanExtractGlyphs</b> return false</exception>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc">
            <summary>
            Base font descriptor
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc.Style">
            <summary>
            Gets font style
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc.FaceName">
            <summary>
            Gets font face name
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc.Empty">
            <summary>
            Empty instance
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc.IsEmpty">
            <summary>
            Gets true if descriptor is empty
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiFontFactory">
            <summary>
            GDI/Windows based font factory implementation
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiFontFactory.#ctor(System.Drawing.Text.FontCollection)">
            <summary>
            Initializes a new instance of the GdiFontFactory
            </summary>
            <param name="fontCollection">Font collection. Pass null for installed font collection (default)</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiFontFactory.#ctor">
            <summary>
            Initializes a new instance of the GdiFontFactory
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiFontFactory.NormalizeFontName(System.String)">
            <summary>
            Gets english normalized font name
            </summary>
            <remarks>
            Windows allows multiply font names: http://blogs.msdn.com/b/michkap/archive/2005/02/26/380867.aspx
            we should reproduce this mapping here, because user can use local names
            instead of international and font fallback will fails.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiFontFactory.NormalizeFontNameRegistry(System.String)">
            <summary>
            Gets english normalized font name without exceptions
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.GdiTtfReader">
            <summary>
            Implements TTF reader based on GDI API
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader">
            <summary>
            Interface for FFT (TrueType fonts) format readers
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader.ReadTable(DataDynamics.DDLib.Ttf.TtfTableId)">
            <summary>
            Reads contents of entire table
            </summary>
            <param name="tableId"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader.ReadTable(DataDynamics.DDLib.Ttf.TtfTableId,System.Int32,System.Int32)">
            <summary>
            Reads part of table content
            </summary>
            <param name="tableId"></param>
            <param name="offset">Offset within table</param>
            <param name="len">Number of bytes to read</param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader.Tables">
            <summary>
            Gets tables info
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.NullTtfReader">
            <summary>
            "Null object" implementation
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.NullTtfReader.Instance">
            <summary>
            Gets the instance
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.RawImageData">
            <summary>
            Summary description for RawImageData.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.SafeGraphics.GraphicsFromHDCWorks">
             <summary>
             A hackish test to check if we running on Azure 
            (on Azure Graphics.FromHdcInternal throws OOM exception.
             see here for details:
            http://social.msdn.microsoft.com/Forums/en/windowsazure/thread/04db1ebe-36b4-4562-b79c-cc9c61014b83
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.SafeGraphics.IsFullTrust">
            <summary>
            Check to see if the calling code is executing with FullTrust
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.TtfDataImpl">
            <summary>
            Implementation for reading various Ttf data
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.TtfDataImpl.ReadFeatureSubst(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader,System.String)">
            <summary>
            Reads glyph substitution list for particular feature.
            </summary>
            <param name="reader"></param>
            <param name="featureTag">Feature tag</param>
            <returns>Substitution map. Empty map is case GSUB table is not defined or no lookup lists found for specific feature</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.TtfDataImpl.FontStringId">
            <summary>
            String ident. See http://scripts.sil.org/IWS-Chapter08 for reference
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.TtfDataImpl.FontInfoPiece">
            <summary>
            Represents font name
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.TtfDataImpl.GetFontInfo(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader,GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.TtfDataImpl.FontStringId)">
            <summary>
            Gets the full font info table.
            </summary>
            <param name="reader"></param>
            <param name="requestNameId">which NameId to read or -1 to read all</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.TtfDataImpl.ReadCoverageTable(System.Byte[],System.Int32)">
            <summary>
            Reads CoverageTable from GSUB table data
            </summary>
            <param name="data"></param>
            <param name="coverageTableOffset"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity">
            <summary>
            Encapsulates the information necessary to provide PDF document security and encryption.
            </summary>
            <remarks>
            If a user password is supplied the viewer application should prompt for a password.
            If a user password is not supplied no password will be requested to open the document.
            By correctly supplying either the user password, or the owner password, the user will be able to open the document, decrypt it and display it on the screen.
            Whether additional operations are allowed on a decrypted document depends on which password (if any) was supplied when the document was opened and on any access restrictions specified using this class's <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Permissions"/> property.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.#ctor(System.String,System.String,GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions)">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity"/> class with the specified passwords and permissions.
            </summary>
            <param name="ownerPassword">The password, that upon being entered will permit the viewer unrestricted access to the document.</param>
            <param name="userPassword">The password, that upon being entered permits the viewer the permissions as specified in this class's <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Permissions"/> property.</param>
            <param name="permissions">The initial <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Permissions"/> value for this object.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity"/> class with the specified passwords and default permissions.  By default all permissions are allowed.
            </summary>
            <param name="ownerPassword">The password, that upon being entered will permit the viewer unrestricted access to the document.</param>
            <param name="userPassword">The password, that upon being entered permits the viewer the permissions as specified in this class's <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Permissions"/> property.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity"/> class with empty passwords, and the default permissions.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Encrypt">
            <summary>
            Determines whether the document is encrypted or not.
            </summary>
            <remarks>You must set this property to true for the document to be encrypted and the permissions enforced.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.OwnerPassword">
            <summary>
            The owner password that can be entered in the reader that permits full access to the document regardless of the specified user permissions.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.UserPassword">
            <summary>
            The user password that can be entered in the reader.  If this value is left empty they user will not be prompted for a password, however the user will be restricted by the specified permissions.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Permissions">
            <summary>
            Specifies the user permissions for the document.  The <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions"/> values can be combined using a bitwise OR combination.
            </summary>
            <remarks>By default all permissions are set/allowed.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSecurity.Use128Bit">
            <summary>
            True to use 128 bit encryption with full permissions capability.  
            False to use 40 bit encryption with limited permissions.
            The <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowFillIn"/>, <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowAccessibleReaders"/>, and <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowAssembly"/> permissions require this value to be true.
            </summary>
            <remarks>The default value is true.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions">
            <summary>
            Specifies the permissions available for a PDF document.
            These values can be combined using a bitwise OR combination.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.None">
            You can use this setting alone to specify that none of the other permissions are set.  It has no effect if you bitwise or this flag together with the other flags.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowPrint">
            Set to permit printing the document when it is opened with user access permission.  This is a revision 2 permission.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowModifyContents">
            Set to permit modifying the document’s contents when it is opened with user access permission. Text annotations can still be added or modified.   This is a revision 2 permission.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowCopy">
            Set to permit copying text or graphics from the document when it is opened with user access permission.   This is a revision 2 permission.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowModifyAnnotations">
            Set to permit adding or modifying annotations in the document when it is opened with user access permission.  This permission is a revision 2 or revision 3 permission.  Under revision three, the ability to copy/paste document contents is restricted other than what is specified by bit 10 (AllowAccessibleReaders).
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowFillIn">
            Set to permit filling in form fields in the document when it is opened with user access permission.  This is revision 3 only permission.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowAccessibleReaders">
            Set to permit extracting the text and graphics of the document for accessibility purposes or otherwise (it is most likely for accessibility reasons, but possibly for other “screen reading” purposes) when it is opened with user access permission.  This is revision 3 only permission.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfPermissions.AllowAssembly">
            Set to permit the following operations when the document is opened with user access permission:Insert, rotate, or delete pages, and create bookmarks or thumbnail images even if AllowModifyContents is false. This is revision 3 only permission.
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSigningException">
            <summary>
            Thrown while signing .pdf
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSigningException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSigningException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
            <param name="??"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSigningException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfSigningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfExportException"/> class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <remarks>This constructor supports serialization.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer">
            <summary>
            Renders a <see cref="T:GrapeCity.ActiveReports.Document.Section.Table"/> to a <see cref="T:DataDynamics.DDLib.PdfEngine.PsPage"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer._offset">
            The amount to offset the Table and it's contents horizontally and vertically.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer._pdfExport">
            The PdfExport object that performing the export that called on this object.
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.#ctor(GrapeCity.ActiveReports.Document.Section.Table,DataDynamics.DDLib.PdfEngine.PsPage,System.Drawing.PointF,GrapeCity.ActiveReports.Export.Pdf.Section.PdfExport,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Document.Section.Bookmark},System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer"/> class with the specified table object.
            </summary>
            <param name="table">The table to render.</param>
            <param name="offset">The amount of offset the table and it's contents by.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <c>table</c> or <c>page</c> argument is null.</exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.Table">
            <value>
            Provides access to the <see cref="T:GrapeCity.ActiveReports.Document.Section.Table"/> that this object will render.
            </value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.Render">
            <summary>
            Renders the current <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.Table"/> to the specified Page.
            </summary>
            <param name="offsetX">The amount to offset the table and it's contents horizontally.</param>
            <param name="offsetY">The amount to offset the table and it's contents vertically.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.RenderRow(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            Renders the specified row to the current <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer._page"/>.
            </summary>
            <param name="row">The row to be rendered.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.RenderCell(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            Renders the specified cell to the current <see cref="T:DataDynamics.DDLib.PdfEngine.PsPage"/>.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.RenderBorderLines">
            <summary>
            Renders <see cref="P:GrapeCity.ActiveReports.Document.Section.Table.BorderLines"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.PdfTableRenderer.DebugCell(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell,System.Drawing.RectangleF)">
            <summary>
            Trace
            </summary>
            <param name="cell"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.ResCategoryAttribute">
            <summary>
            ResCategoryAttribute overrides and provides an implementation of the CategoryAttribute class's GetLocalizedString method.
            This class aids in localizing.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.ResCategoryAttribute.#ctor(System.String)">
            <summary>
            The Category the property should be in.
            </summary>
            <param name="category">The LocalStrings key to be used as the category key.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.ResCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized Category string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature">
            <summary>
            Contains signing settings
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._signDate">
            <summary>
            Specifies date of signing
            </summary>
            <remarks>
            case 123298
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._reason">
            <summary>
            Specifies the reason of signing
            </summary>
            <remarks>
            case 123298
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._contact">
            <summary>
            Specifies contact information of signer
            </summary>
            <remarks>
            case 123298
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._location">
            <summary>
            Specifies location of signer
            </summary>
            <remarks>
            case 123298
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._certificationLevel">
            <summary>
            Specifies type of certification
            </summary>
            <remarks>
            case 123225
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._visibilityType">
            <summary>
            Specifies visibility type
            </summary>
            <remarks>
            case 123227
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._certificate">
            <summary>
            Certificate which is used to sign document
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._timeStamp">
            <summary>
            Provides time stamp settings. If this is null, then no time stamp will be applied
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature._visibleStamp">
            <summary>
            Provides settings for visible signature
            </summary>
            <remarks>
            cases 123287, 123298, 123302
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.#ctor">
            <summary>
            Default ctor for PageReport
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.SignDate">
            <summary>
            Gets/sets the signature date. Default value is DateTime.Now
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.Contact">
            <summary>
            Gets/sets the signing contact. Default value is ""
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.Reason">
            <summary>
            Gets/sets the signing reason. Default value is ""
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.Location">
            <summary>
            Gets/sets the signing location. Default value is ""
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.Name">
            <summary>
            Gets the name of the certificate
            </summary>
            <remarks>
            This field is generated, based on data from certificate. 
            So after certificate changed, Visible/ShowLabel fields should be set again
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.DistinguishedName">
            <summary>
            Gets the Distinguished Name of the certificate
            </summary>
            <remarks>
            This field is generated, based on data from certificate. 
            So after certificate changed, Visible/ShowLabel fields should be set again
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.Certificate">
            <summary>
            Gets/sets the signing certificate. Default value is null
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.CertificationLevel">
            <summary>
            Gets/sets type of the certification
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.VisibilityType">
            <summary>
            Gets/sets visible type for the signature
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.TimeStamp">
            <summary>
            Gets the settings for TSA server
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.Stamp">
            <summary>
            Gets settings for visible signature
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.SignDigitally(System.String,System.IO.Stream,DataDynamics.DDLib.PdfEngine.PdfDocumentOptions,GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion)">
            <summary>
            Signs .pdf document
            </summary>
            <param name="filename">The file name of the document</param>
            <param name="output">Stream with signed document</param>
            <param name="options"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.SignDigitally(System.IO.Stream,System.IO.Stream,DataDynamics.DDLib.PdfEngine.PdfDocumentOptions,GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion,GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5)">
            <summary>
            Signs .pdf document
            </summary>
            <param name="inputStream">
            The <see cref="T:System.IO.Stream"/> containing the document. 
            The stream is read to the end but is not closed
            </param>
            <param name="output">Stream with signed document</param>
            <param name="options"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature.Clone">
            <summary>
            Clones current signatures
            </summary>
            <returns>Copy of the current signature</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignImpl">
            <summary>
            Encapsulates signing logic
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignImpl.#ctor(GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignature)">
            <summary>
            Ctor
            </summary>
            <param name="signature">Signature's settings</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignImpl.SignDigitally(System.IO.Stream,System.IO.Stream,DataDynamics.DDLib.PdfEngine.PdfDocumentOptions,GrapeCity.ActiveReports.Export.Pdf.Section.PdfVersion,GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5)">
            <summary>
            actual signing happens here
            </summary>
            <param name="reader">input data</param>
            <param name="output">output data</param>
            <param name="options"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignImpl.PrepareText">
            <summary>
            Prepares text which should be shown on signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignImpl.IsFieldVisible``1(GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField{``0})">
            <summary>
            Checks field's visibility
            </summary>
            <param name="field">Field to check</param>
            <returns>true, if field is visible</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfSignImpl.GetFieldText``1(System.String)">
            <summary>
            Gets text from signature field
            </summary>
            <param name="name">Name of the field</param>
            <returns>Text value, stored in signature field</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp">
            <summary>
            Encapsulates settings for visible part of signature
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.Bounds">
            <summary>
            Gets/sets the bounds of the signature
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.PageIndex">
            <summary>
            Gets/sets index of the page, where signature should be placed
            </summary>
            <remarks>
            First page have index 1
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.CustomText">
            <summary>
            Gets/sets drawn on signature
            </summary>
            <remarks>
            if no text specified, generated text will be used
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.Font">
            <summary>
            gets/sets text font
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.TextAlignment">
            <summary>
            Gets/sets text alignment
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.TextColor">
            <summary>
            Gets/sets text color
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.ImageAlignment">
            <summary>
            Gets/sets image alignment inside signature
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.Image">
            <summary>
            Gets/sets image shown on signature
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.ImageRectangle">
            <summary>
            Gets/sets area where image should be placed. 
            By default entire signature rectangle will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.TextRectangle">
            <summary>
            Gets/sets area where text should be placed.
            By default entire signature area will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.PdfStamp.ParentPageSize">
            <summary>
            Stores parent's size. In our case parent is page where signature should be placed.
            </summary>
            <remarks>
            For internal use only
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.CertificationLevel">
            <summary>
            Enumerates possible certification types
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.CertificationLevel.NotCertified">
            <summary>
            Document is not certified
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.CertificationLevel.NoChangesAllowed">
            <summary>
            Certified, but no changes permitted
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.CertificationLevel.FormFilling">
            <summary>
            Certified, permit changes to form field and signing
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.CertificationLevel.FormFillingAnnotations">
            <summary>
            Certified, permit changes to form field, annotation and signing
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.VisibilityType">
            <summary>
            Possible visibility types for pdf signature
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.VisibilityType.Invisible">
            <summary>
            Invisible signature, it means no data will be shown on page, but it will be accessible 
            via "Signatures" tab in reader
            </summary>
            <remarks>
            Default value
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.VisibilityType.Text">
            <summary>
            Show only text on signature
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.VisibilityType.Image">
            <summary>
            Show only image on signature
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.VisibilityType.ImageText">
            <summary>
            Show both, image and text
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.Alignment">
            <summary>
            Specifies item alignment
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.Alignment.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.Alignment.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.Alignment.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1">
            <summary>
            Class wrapper, provides additional fields to values which should be placed on signature
            </summary>
            <typeparam name="T">Type of the value, which should be shown</typeparam>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.#ctor(`0)">
            <summary>
            Ctor
            </summary>
            <param name="value">Value to write on signature</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.#ctor(`0,System.Boolean)">
            <summary>
            Ctor
            </summary>
            <param name="value">Value to write on signature</param>
            <param name="visible">true, if value should be written</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.#ctor(`0,System.Boolean,System.Boolean)">
            <summary>
            Ctor
            </summary>
            <param name="value">Value to write on signature</param>
            <param name="visible">true, if value should be written</param>
            <param name="showLabel">true, if label for value should be shown</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.Value">
            <summary>
            Gets the value, which will be written on signature
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.Visible">
            <summary>
            Gets/sets value visibility. If true, then the value will be written
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.ShowLabel">
            <summary>
            Gets/sets value, indicating that label for value should be shown
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.ToString">
            <summary>
            Overrides base <see cref="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.ToString"/> method. 
            </summary>
            <returns>Returns Value.ToString()</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.op_Implicit(`0)~GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField{`0}">
            <summary>
            Converts value to <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1"/> object
            </summary>
            <param name="value">Value to convert</param>
            <returns>Converted value</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureField`1.CreateEmpty">
            <summary>
            Creates empty field with default(T) as value
            </summary>
            <returns>Created empty field</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureLabelAttribute">
            <summary>
            Specifies resource value for signature label
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureLabelAttribute.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="resourceKey">Key in resource file</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureLabelAttribute.ResourceKey">
            <summary>
            Key in resource file
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.SignatureLabelAttribute.ResourceValue">
            <summary>
            Value of the resource
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.TimeStamp">
            <summary>
            Specifies time stamp server settings
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.TimeStamp.#ctor(System.String,System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="server">TSA server address</param>
            <param name="user">User ID for TSA server</param>
            <param name="password">Password for TSA server</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.TimeStamp.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="serverUrl">TSA server URL</param>
            <param name="user">User ID for TSA server</param>
            <param name="password">Password for TSA server</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.TimeStamp.ServerUrl">
            <summary>
            TSA server URL
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.TimeStamp.UserName">
            <summary>
            User ID for TSA server
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Section.Signing.TimeStamp.Password">
            <summary>
            Password for TSA server
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.Implementation.RTextForPdf.Render(GrapeCity.ActiveReports.Core.Document.Drawing.Gdi.Text.GraphicsCache,DataDynamics.DDLib.PdfEngine.PsPage,DataDynamics.DDLib.PdfEngine.PdfFonts,System.Drawing.RectangleF,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
            Pdf Rendering.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.Implementation.RTextForPdf.ShapeText(System.String,System.Boolean)">
            <summary>
            Shapes the text to meet RTL specifics
            </summary>
            <param name="lineText"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.Implementation.RTextForPdf.GetCharPlaces(System.String)">
            <summary>
            Get Char Places.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.Implementation.RTextForPdf.GetCharSpaceCount(System.String)">
            <summary>
            Get the count of char space.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfStructureTreeRoot">
            <summary>
            Create and write Logical struct for tagged pdf.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfStructureTreeRoot.RoleMap">
            <summary>
            Custom tags -> standart tags role mapping. Ex. 'Picture' -> 'Figure'
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfStructureTreeRoot.Write(DataDynamics.DDLib.PdfEngine.PdfStreamWriter,System.Int32,System.Boolean)">
            <summary>
            Write Logical struct objects.
            </summary>
            <param name="writer"></param>
            <returns>ID of StructTreeRoot object</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfStructureTreeRoot.StartMarkNode(System.Drawing.RectangleF,GrapeCity.ActiveReports.Document.Section.ControlType,System.String,System.String)">
            <summary>
            Add node with marked content.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfStructureTreeRoot.StartNode(System.String,System.String)">
            <summary>
            Add tree node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfStructureTreeRoot.StartNode(System.Drawing.RectangleF,System.String,System.String,System.String)">
            <summary>
            Add tree node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfStructureTreeRoot.EndNode">
            <summary>
            Set current node to parent of current node.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.AR.PdfStructTreeRootExtension.DefaultMapTag">
            <summary>
            If not null, the role map for custom tag will be automatically added to RoleMap of PdfStructTreeRoot.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.AttachmentInfo">
            <summary>
            Document level file attachment
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.AttachmentInfo.Name">
            <summary>
            Name of the content
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.AttachmentInfo.Content">
            <summary>
            Content itself
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.AttachmentInfo.Description">
            <summary>
            Description(optional)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Attributes.DescriptionRes">
            <summary>
            base class for Description Attribute
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Attributes.DescriptionRes.Description">
            <summary>
            Description for Resource
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.Core.InternalConstants">
            <summary>
            Configuration key for target device name.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.DestinationService">
            <summary>
            Translates page layout area into physycal page area.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.ILinkProvider">
            <summary>
            Defines drill through linking.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.ILinkProvider.BookmarkLink(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IAction,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns the bookmark link based on the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IAction" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.ILinkProvider.DrillthroughLink(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IAction,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns the drill through link based on the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IAction" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.ILinkProvider.Hyperlink(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IAction,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns the hyperlink based on the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IAction" />.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.PdfRenderingExtension">
            <summary>
            <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension" /> implementation used to create a PDF report.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.PdfRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
             <summary>
             Implements <see cref="M:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)" />
             </summary>
            <param name="report"><see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport" /> instance to render.</param>
            <param name="streams">Stream to write PDF output to.</param>
            <param name="settings">Settings used to render.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.PdfRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)">
             <summary>
             Implements <see cref="M:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)" />
             </summary>
            <param name="report"><see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport" /> instance to render.</param>
            <param name="streams">Stream to write PDF output to.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.PdfRenderingExtension.GetSupportedSettings">
            <summary>
            Implements <see cref="M:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable.GetSupportedSettings" />
            </summary>
            <returns><see cref="T:System.Collections.Specialized.NameValueCollection" /> of <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Page.PdfRenderingExtension" /> settings</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.PdfRenderingExtension.GetSupportedSettings(System.Boolean)">
            <summary>
            Implements <see cref="M:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable.GetSupportedSettings(System.Boolean)" />
            </summary>
            <param name="fpl">Fixed page layout flag</param>
            <returns><see cref="T:System.Collections.Specialized.NameValueCollection" /> of <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Page.PdfRenderingExtension" /> settings</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.Settings">
            <summary>
            Settings for PDF Rendering Extension
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Page.Settings"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Version">
            <summary>
            Sets output PDF version.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.HideToolbar">
            <summary>
            True to hide the viewer application’s toolbars when the document is active. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.HideMenubar">
            <summary>
            True to hide the viewer application’s menu bar when the document is active. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.HideWindowUI">
            <summary>
            True to hide user interface elements in the document’s window (such as scroll bars and navigation controls), leaving only the document’s contents displayed. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.FitWindow">
            <summary>
            True to resize the document’s window to fit the size of the first displayed page. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.CenterWindow">
            <summary>
            True to position the document’s window in the center of the screen. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.DisplayTitle">
            <summary>
            True if the window’s title bar should display the document title taken from the Title entry in the document information/metadata.  If this value is false, the title bar should instead display the name of the PDF file containing the document. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.DisplayMode">
            <summary>
            Specifies how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.PrintOnOpen">
            <summary>
            Gets or sets the value indicating whether the document should be printed after open.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.DocumentToAddBeforeReport">
            <summary>
            Gets or sets the path to the PDF document that should be inserted to the beginning of the rendering output.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.DocumentToAddAfterReport">
            <summary>
            Gets or sets the path to the PDF document that should be inserted to the end of the rendering output.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Title">
            <summary>
            Gets or sets the document's title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Author">
            <summary>
            Gets or sets the the name of the person who created the document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Subject">
            <summary>
            Gets or sets the subject of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Keywords">
            <summary>
            Gets or sets keywords associated with the document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Application">
            <summary>
            Gets or sets the value that appears for “Application” inside the Document Properties dialog of the PDF viewer application.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.ImageInterpolation">
            <summary>
            Interpolation value of images. Allows to enable/disable image interpolation, when exporting the file to PDF.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.DpiX">
            <summary>
            Gets or sets the resolution of the output device in x-direction. The default value is 300.
            </summary>
            <remarks>
            PDF hasn't its own DPI options. 
            So this setting can be obtained throght <see cref="F:GrapeCity.ActiveReports.Extensibility.Layout.Features.FeatureResoluton"/>
            and used for customers rendering (overriding of <see cref="T:GrapeCity.ActiveReports.Drawing.IGraphicsRenderer"/>.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.DpiY">
            <summary>
            Gets or sets the resolution of the output device in y-direction. The default value is 300.
            </summary>
            <remarks>
            PDF hasn't its own DPI options. 
            So this setting can be obtained throght <see cref="F:GrapeCity.ActiveReports.Extensibility.Layout.Features.FeatureResoluton"/>
            and used for customers rendering (overriding of <see cref="T:GrapeCity.ActiveReports.Drawing.IGraphicsRenderer"/>.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.EndPage">
            <summary>
            Gets or sets the last page of the report to render. The default value is the value for StartPage.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.StartPage">
            <summary>
            Gets or sets the first page of the report to render. A value of 0 indicates that all pages are rendered. The default value is 1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.MarginBottom">
            <summary>
            Gets or sets the bottom margin value, in inches, to set for the report. You must include an integer or decimal value followed by "in" (for example, 1in). This value overrides the report's original settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.MarginTop">
            <summary>
            Gets or sets the top margin value, in inches, to set for the report. You must include an integer or decimal value followed by "in" (for example, 1in). This value overrides the report's original settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.MarginLeft">
            <summary>
            Gets or sets the left margin value, in inches, to set for the report. You must include an integer or decimal value followed by "in" (for example, 1in). This value overrides the report's original settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.MarginRight">
            <summary>
            Gets or sets the right margin value, in inches, to set for the report. You must include an integer or decimal value followed by "in" (for example, 1in). This value overrides the report's original settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.PageHeight">
            <summary>
            Gets or sets the page height value, in inches, to set for the report. You must include an integer or decimal value followed by "in" (for example, 1in). This value overrides the report's original settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.PageWidth">
            <summary>
            Gets or sets the page width value, in inches, to set for the report. You must include an integer or decimal value followed by "in" (for example, 1in). This value overrides the report's original settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.LinkProvider">
            <summary>
            Gets or sets the fully qualified name for a link provider to load.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.EmbedFonts">
            <summary>
            Gets or sets the embed fonts.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Encrypt">
            <summary>
            Gets or sets a value indicating whether the document is encrypted or not.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.OwnerPassword">
            <summary>
            Gets or sets the owner password that can be entered in the reader that permits full access to the document regardless of the specified user permissions.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.UserPassword">
            <summary>
            Gets or sets the user password that can be entered in the reader.  If this value is left empty they user will not be prompted for a password, however the user will be restricted by the specified permissions.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Permissions">
            <summary>
            Gets or sets the the user permissions for the document. The <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions" /> values can be combined using a bitwise OR combination.
            </summary>
            <remarks>By default all permissions are set/allowed.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Use128Bit">
            <summary>
            True to use 128 bit encryption with full permissions capability.  
            False to use 40 bit encryption with limited permissions.
            The <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowFillIn" />, <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowAccessibleReaders" />, and <see cref="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowAssembly" /> permissions require this value to be true.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.GetWritablePermissions">
            <summary>
            Gets the permissions value for writing (there are some special bits that need set/cleared before writing them out).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.PrintLayoutMode">
            <summary>
            Gets or sets the layout mode to be used for PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.WatermarkTitle">
            <summary>
            Gets or sets the watermark title for PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.WatermarkFontName">
            <summary>
            Gets or sets the watermark font for PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.WatermarkFontSize">
            <summary>
            Gets or sets the watermark font for PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.WatermarkFontStyle">
            <summary>
            Gets or sets the watermark font for PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.WatermarkAngle">
            <summary>
            Gets or sets the watermark angle for PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.WatermarkColor">
            <summary>
            Gets or sets the watermark color for PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SizeToFit">
            <summary>
            Gets or sets a value indicating whether PDF pages are fit to the selected paper size or not.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.FallbackFonts">
            <summary>
            Gets or sets a comma-delimited string of font families to be used as fallback fonts. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.NeverEmbedFonts">
            <summary>
            Gets or sets a semicolon-delimited string of font families which should not be embedded in the pdf document. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.PrintPresets">
            <summary>
            Gets or sets the PDF print dialog presets.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureCertificateFileName">
            <summary>
            Gets/sets the signing certificate file name location
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureCertificatePassword">
            <summary>
            Gets/sets the signing certificate password
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureCertificationLevel">
            <summary>
            Gets/sets type of the signature certification
            </summary>
            <remarks>This value parsed from string. 
            Possible values: NotCertified, NoChangesAllowed, FormFilling or FormFillingAnnotations</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureVisibilityType">
            <summary>
            Gets/sets visible type for the signature
            </summary>
            <remarks>This value parsed from string. Default value: Invisible. 
            Possible values: Invisible, Text, Image, ImageText</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureSignDate">
            <summary>
            Gets/sets the sign date. Default value is DateTime.Now
            </summary>
            <remarks>Value must be a serialized DateTime value</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureContact">
            <summary>
            Gets/sets the signing contact.
            </summary>
            <remarks>This value parsed from strings. 
            Required 'contact' parameter passed via the 'SignatureContact' field.
            Optional parameters (visible and showLabel) passed via the 'SignatureContactVisible' 
            and the 'SignatureContactShowLabel' fields</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureReason">
            <summary>
            Gets/sets the signing reason.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureLocation">
            <summary>
            Gets/sets the signing location.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureTimeStamp">
            <summary>
            Gets the settings for TSA server
            </summary>
            <remarks>This value parsed from strings.  
            Required 'serverUrl' parameter passed via the 'SignatureTimeStamp' field.
            Optional parameters (user and password) passed via the 'SignatureTimeStampUser' 
            and the 'SignatureTimeStampPassword' fields</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureNameShowLabel">
            <summary>
            Gets/sets value, indicating that label for the name of the certificate should be shown
            </summary>
            <remarks>This value parsed from strings.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureNameVisible">
            <summary>
            Gets/sets value visibility for the name of the certificate. 
            If true, then the value will be written
            </summary>
            <remarks>This value parsed from strings.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureDistinguishedShowLabel">
            <summary>
            Gets/sets value, indicating that label for the Distinguished Name 
            of the certificate should be shown
            </summary>
            <remarks>This value parsed from strings.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureDistinguishedNameVisible">
            <summary>
            Gets/sets value visibility for the Distinguished Name of the certificate. 
            If true, then the value will be written
            </summary>
            <remarks>This value parsed from strings.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampImageFileName">
            <summary>
            Gets/sets the file location for image shown on signature
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampBounds">
            <summary>
            Gets/sets the bounds of the signature
            </summary>
            <remarks>This value parsed from strings.  
            Should be passed as serialized RectangleF struct.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampTextRectangle">
            <summary>
            Gets/sets area where text should be placed.
            By default entire signature area will be used.
            </summary>
            <remarks>This value parsed from strings.  
            Should be passed as serialized RectangleF struct.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampImageRectangle">
            <summary>
            Gets/sets area where image should be placed. 
            By default entire signature rectangle will be used.
            </summary>
            <remarks>This value parsed from strings.  
            Should be passed as serialized RectangleF struct.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampTextAlignment">
            <summary>
            Gets/sets stamp text alignment
            </summary>
            <remarks>This value parsed from strings.  
            Should be passed as serialized Alignment struct.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampImageAlignment">
            <summary>
            Gets/sets stamp image alignment inside signature
            </summary>
            <remarks>This value parsed from strings.  
            Should be passed as serialized Alignment struct.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampFontName">
            <summary>
            gets/sets stamp text font
            </summary>
            <remarks>This value parsed from strings.  
            Parameters passed via 'SignatureStampFontStyle', 'SignatureStampFontName',
            'SignatureStampFontSize' fields</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampFontSize">
            <summary>
            gets/sets stamp text font
            </summary>
            <remarks>This value parsed from strings.  
            Parameters passed via 'SignatureStampFontStyle', 'SignatureStampFontName',
            'SignatureStampFontSize' fields</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampFontStyle">
            <summary>
            gets/sets stamp text font
            </summary>
            <remarks>This value parsed from strings.  
            Parameters passed via 'SignatureStampFontStyle', 'SignatureStampFontName',
            'SignatureStampFontSize' fields</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampTextColor">
            <summary>
            Gets/sets stamp text color
            </summary>
            <remarks>This value parsed from strings.  
            Should be passed as serialized Color struct.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampPageIndex">
            <summary>
            Gets/sets index of the page, where signature should be placed
            </summary>
            <remarks>This value parsed from strings. First page have index 1</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.SignatureStampCustomText">
            <summary>
            Gets/sets the custom text that drawn on signature
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.AdditionalMetadata">
            <summary>
            Additional metadata associated with this document
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.Attachments">
            <summary>
            Document level file attachments
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.ApplySettings(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Apply settings for the rendering extension.
            </summary>
            <param name="settings">Settings for the rendering extension.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.ApplySignatureTimeStampSettings(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Apply settings for SignatureTimeStamp property
            </summary>
            <remarks>TimeStamp constructor uses:
            new TimeStamp(serverUrl, user, password)</remarks>
            <param name="settings">settings</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.ApplySignatureContactSettings(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Apply settings for SignatureContact property
            </summary>
            <remarks>SignatureField constructor has three overrided methods:
            new SignatureField(contact) or
            new SignatureField(contact,visible) or
            new SignatureField(contact, visible, showLabel)</remarks>
            <param name="settings">settings</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.op_Implicit(GrapeCity.ActiveReports.Export.Pdf.Page.Settings)~System.Collections.Specialized.NameValueCollection">
            <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.ActiveReports.Export.Pdf.Page.Settings"/> to <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <param name="settings">The settings.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.GetPdfRenderingSettings(System.Collections.Specialized.NameValueCollection)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.FontEmbedding">
            <summary>
            Define fonts embedding strategy.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.FontEmbedding.All">
            <summary>
            Embed all fonts.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.FontEmbedding.Partial">
            <summary>
            Embed only unicode fonts - default value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.FontEmbedding.None">
            <summary>
            Do not embed fonts - works only with professional edition.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion">
            <summary>
            Output pdf conformance level. Allows to export to PDF/A.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.Pdf12">
            <summary>
            PDF version 1.2. This is the native file format of Acrobat 3.0.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.Pdf13">
            <summary>
            PDF version 1.3.  This is the native file format of Acrobat 4.0.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.Pdf14">
            <summary>
            PDF version 1.4. This is the native file format of Acrobat 5.0.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.Pdf15">
            <summary>
            PDF version 1.5.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.Pdf16">
            <summary>
            PDF version 1.6.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.Pdf17">
            <summary>
            PDF version 1.7.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA1b">
            <summary>
            PDF/A-1b level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA1a">
            <summary>
            PDF/A-1a level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA2b">
            <summary>
            PDF/A-2b level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA2u">
            <summary>
            PDF/A-2u level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA2a">
            <summary>
            PDF/A-2a level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA3b">
            <summary>
            PDF/A-3b level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA3u">
            <summary>
            PDF/A-3u level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFA3a">
            <summary>
            PDF/A-3a level, see http://en.wikipedia.org/wiki/PDF/A
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfVersion.PDFUA1">
            <summary>
            PDF/UA-1 level, see http://en.wikipedia.org/wiki/PDF/UA
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.DisplayMode">
            <summary>
            Used to specify <see cref="P:GrapeCity.ActiveReports.Export.Pdf.Page.Settings.DisplayMode" />.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.DisplayMode.None">
            <summary>
            Neither document outline nor thumbnail images are visible.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.DisplayMode.Outlines">
            <summary>
            The document outline is visible.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.DisplayMode.Thumbs">
            <summary>
            Thumbnail images are visible. If thumbnails and outline flags are set, thumbnails will be shown.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.DisplayMode.FullScreen">
            <summary>
            Full-screen mode with no menu bar, window controls, or any other window visible.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions">
            <summary>
            Specifies the permissions available for a PDF document. These values can be combined using a bitwise OR combination.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.Default">
            <summary>
            The default permissions.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.None">
            <summary>
            You can use this setting alone to specify that none of the other permissions are set.  It has no effect if you bitwise or this flag together with the other flags.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowPrint">
            <summary>
            Set to permit printing the document when it is opened with user access permission.  This is a revision 2 permission.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowModifyContents">
            <summary>
            Set to permit modifying the document’s contents when it is opened with user access permission. Text annotations can still be added or modified.   This is a revision 2 permission.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowCopy">
            <summary>
            Set to permit copying text or graphics from the document when it is opened with user access permission.   This is a revision 2 permission.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowModifyAnnotations">
            <summary>
            Set to permit adding or modifying annotations in the document when it is opened with user access permission.  This permission is a revision 2 or revision 3 permission.  Under revision three, the ability to copy/paste document contents is restricted other than what is specified by bit 10 (AllowAccessibleReaders).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowFillIn">
            <summary>
            Set to permit filling in form fields in the document when it is opened with user access permission.  This is revision 3 only permission.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowAccessibleReaders">
            <summary>
            Set to permit extracting the text and graphics of the document for accessibility purposes or otherwise (it is most likely for accessibility reasons, but possibly for other “screen reading” purposes) when it is opened with user access permission.  This is revision 3 only permission.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Page.PdfPermissions.AllowAssembly">
            <summary>
            Set to permit the following operations when the document is opened with user access permission:Insert, rotate, or delete pages, and create bookmarks or thumbnail images even if AllowModifyContents is false. This is revision 3 only permission.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Page.PdfSettingsConverter">
            <summary>
            Type converter for PDF settings. Shows\Hides various properties depending on report type.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Enums">
            <summary>
            Class Enums.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Enums.ImageInterpolation">
            <summary>
            Interpolation value of images. Allows to swtich on/off image interpolation during export to PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.ImageInterpolation.None">
            <summary>
            Interpolation is off
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.ImageInterpolation.Auto">
            <summary>
            Interpolation is on
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Enums.PageScaling">
            <summary>
            Specifies the Page Scaling.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.PageScaling.Default">
            <summary>
            Uses the application default setting, which is Shrink To Printable Area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.PageScaling.None">
            <summary>
            Prevents automatic scaling to fit the printable area. Use this setting to preserve the scale in engineering documents or the point size required for legal reasons.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Enums.NumberOfCopies">
            <summary>
            Specifies the Number of copies supported by PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.NumberOfCopies.Default">
            <summary>
            Print 1 copy.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.NumberOfCopies.Two">
            <summary>
            Print 2 copies.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.NumberOfCopies.Three">
            <summary>
            Print 3 copies.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.NumberOfCopies.Four">
            <summary>
            Print 4 copies.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.NumberOfCopies.Five">
            <summary>
            Print 5 copies.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Enums.DuplexMode">
            <summary>
            Specifies Printer duplex option. For best results, the selected printer should support duplex printing if you select a duplex option.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.DuplexMode.Simplex">
            <summary>
            Prints on one side of the paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.DuplexMode.DuplexFlipLongEdge">
            <summary>
            Prints on both sides of the paper; the paper flips along the long edge.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Pdf.Enums.DuplexMode.DuplexFlipShortEdge">
            <summary>
            Prints on both sides of the paper; the paper flips along the short edge.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.PrintPresets">
            <summary>
            Specifies the print presets.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.PrintPresets.PageScaling">
            <summary>
            Gets or sets the page scaling.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.PrintPresets.DuplexMode">
            <summary>
            Gets or sets the duplex mode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.PrintPresets.PaperSourceByPageSize">
            <summary>
            Gets or sets the paper source by page size flag.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.PrintPresets.PrintPageRange">
            <summary>
            Gets or sets the print page range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.PrintPresets.NumberOfCopies">
            <summary>
            Gets or sets the number of copies.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.PrintPresets.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Pdf.PrintPresets"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.PrintPresets.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.AppendedDocumentName">
            <summary>
              Looks up a localized string similar to DocumentToAddAfterReport.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.ApplicationDefault">
            <summary>
              Looks up a localized string similar to ActiveReports 15.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.ApplicationName">
            <summary>
              Looks up a localized string similar to Application.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.AuthorName">
            <summary>
              Looks up a localized string similar to Author.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_ExportBookmarks">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_FontFallback">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_ImageInterpolation">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_ImageQuality">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_ImageResolution">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_NeverEmbedFonts">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_Options">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_Security">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Cat_PdfExport_Version">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.CenterWindowName">
            <summary>
              Looks up a localized string similar to CenterWindow.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_AppendedDocument">
            <summary>
              Looks up a localized string similar to The path to the document that will be inserted to the end of the output..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Application">
            <summary>
              Looks up a localized string similar to The value that appears for “Application” inside the Document Properties dialog of the PDF viewer application..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Author">
            <summary>
              Looks up a localized string similar to The name of the person who created the document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_CenterWindow">
            <summary>
              Looks up a localized string similar to True to position the document’s window in the center of the screen. Default value: false..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_ConvertMetaToPng">
             <summary>
               Looks up a localized string similar to Sets or returns a value indicating whether Windows metafiles are converted to PNG files in the exported PDF document.
            
            .
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_DisplayMode">
            <summary>
              Looks up a localized string similar to 	Specifies how the document should be displayed when opened..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_DisplayTitle">
            <summary>
              Looks up a localized string similar to True if the window’s title bar should display the document title taken from the Title entry in the document information/metadata.  If this value is false, the title bar should instead display the name of the PDF file containing the document. Default value: false..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_DpiX">
            <summary>
              Looks up a localized string similar to Adjust the horizontal resolution of the rendered PDF file. The default value is 300..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_DpiY">
            <summary>
              Looks up a localized string similar to Adjust the vertical resolution of the rendered PDF file. The default value is 300..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_DuplexMode">
            <summary>
              Looks up a localized string similar to Specifies Printer duplex option. For best results, the selected printer should support duplex printing if you select a duplex option..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_EmbedFonts">
            <summary>
              Looks up a localized string similar to Gets or sets the value indicating whether the fonts used in the report are embedded in the PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Encrypt">
            <summary>
              Looks up a localized string similar to Determines whether the document is encrypted or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_EndPage">
            <summary>
              Looks up a localized string similar to The default value of zero in this and the StartPage properties render all of the report pages. Otherwise, set this value to the number of the last page to render..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_FallbackFonts">
            <summary>
              Looks up a localized string similar to Fallback fonts..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_FitWindow">
            <summary>
              Looks up a localized string similar to True to resize the document’s window to fit the size of the first displayed page. Default value: false..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_HideMenuBar">
            <summary>
              Looks up a localized string similar to True to hide the viewer application’s menu bar when the document is active. Default value: false..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_HideToolbar">
            <summary>
              Looks up a localized string similar to True to hide the viewer application’s toolbars when the document is active. Default value: false..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_HideWindowUI">
            <summary>
              Looks up a localized string similar to True to hide user interface elements in the document’s window (such as scroll bars and navigation controls), leaving only the document’s contents displayed. Default value: false..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_ImageInterpolation">
            <summary>
              Looks up a localized string similar to Determines whether the images in document are interpolated or not. Default value: None..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Keywords">
            <summary>
              Looks up a localized string similar to Keywords associated with the document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_LinkProvider">
            <summary>
              Looks up a localized string similar to Enter the fully qualified name for a link provider to load. (TO BE HIDDEN OR REMOVED.).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_MarginBottom">
            <summary>
              Looks up a localized string similar to Enter a value in inches (i.e. 0.5in) for the space between the bottom of the report and the edge of the page. This overrides the report&apos;s original settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_MarginLeft">
            <summary>
              Looks up a localized string similar to Enter a value in inches (i.e. 0.5in) for the space between the left edge of the report and the edge of the page. This overrides the report&apos;s original settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_MarginRight">
            <summary>
              Looks up a localized string similar to Enter a value in inches (i.e. 0.5in) for the space between the right edge of the report and the edge of the page. This overrides the report&apos;s original settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_MarginTop">
            <summary>
              Looks up a localized string similar to Enter a value in inches (i.e. 0.5in) for the space between the top of the report and the edge of the page. This overrides the report&apos;s original settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_NeverEmbedFonts">
            <summary>
              Looks up a localized string similar to Gets or sets a semicolon-delimited string of font families which should not be embedded in the pdf document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_NumberOfCopies">
            <summary>
              Looks up a localized string similar to Prepopulates the Copies box in the Print dialog box..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_OnlyForPrint">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating whether the PDF is only for print..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_OwnerPassowrd">
            <summary>
              Looks up a localized string similar to The owner password that can be entered in the reader that permits full access to the document regardless of the specified user permissions..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_OwnerPassword">
            <summary>
              Looks up a localized string similar to Enter text that can be entered in the reader to permit full access to the document regardless of the specified user permissions..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PageHeight">
            <summary>
              Looks up a localized string similar to Enter a value in inches (i.e. 11in) to set the height of the report&apos;s pages. This value overrides the report&apos;s original settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PageScaling">
            <summary>
              Looks up a localized string similar to Specifies the Page Scaling..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PageWidth">
            <summary>
              Looks up a localized string similar to Enter a value in inches (i.e. 8.5in) to set the width of the report&apos;s pages. This value overrides the report&apos;s original settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PaperSourceByPageSize">
            <summary>
              Looks up a localized string similar to Uses the PDF page size to determine the output tray rather than the page setup option..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport">
            <summary>
              Looks up a localized string similar to ActiveReports PDF (.pdf) Export Component.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_ExportBookmarks">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating whether bookmarks are exported to the PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_FontFallback">
            <summary>
              Looks up a localized string similar to Gets or sets a comma-delimited string of font families that will be used to lookup glyphs missing in original font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_ImageQuality">
            <summary>
              Looks up a localized string similar to Specifies the quality used for any images that are converted by ActiveReports..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_ImageResolution">
            <summary>
              Looks up a localized string similar to Sets or returns the image resolution for the PDF export if a metafile is used as an image for the picture control or if the Page.DrawPicture api is used..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_NeverEmbedFonts">
            <summary>
              Looks up a localized string similar to Sets or returns a semicolon-delimited string of values indicating fonts that should not be embedded in a PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_Options">
            <summary>
              Looks up a localized string similar to Returns an object allowing you to specify viewer preferences and document information options for the exported PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_Security">
            <summary>
              Looks up a localized string similar to Returns a PdfSecurity object for initializing document encryption and security..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfExport_Version">
            <summary>
              Looks up a localized string similar to Sets or returns the version of the PDF format the exported document is saved in..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfSign_Certificate">
            <summary>
              Looks up a localized string similar to Specifies the signing certificate. Default value is &quot;&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfSign_Contact">
            <summary>
              Looks up a localized string similar to Specifies the signing contact. Default value is &quot;&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfSign_Date">
            <summary>
              Looks up a localized string similar to Specifies the signature date. Default value is DateTime.Now.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfSign_Location">
            <summary>
              Looks up a localized string similar to Specifies the signing location. Default value is &quot;&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfSign_Reason">
            <summary>
              Looks up a localized string similar to Specifies the signing reason. Default value is &quot;&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PdfSigning">
            <summary>
              Looks up a localized string similar to GrapeCity ActiveReports PDF (.pdf) Signature Component.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Permissions">
            <summary>
              Looks up a localized string similar to Specifies the user permissions for the document.  The PdfPermissions values can be combined using a bitwise OR combination..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PrependedDocument">
            <summary>
              Looks up a localized string similar to The path to the document that will be inserted to the beginning of the output..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PrintLayoutMode">
            <summary>
              Looks up a localized string similar to Select how to lay out the pages of the report in the PDF document. .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PrintOnOpen">
            <summary>
              Looks up a localized string similar to Gets or sets the value indicating whether the document should be printed after open.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PrintPageRange">
            <summary>
              Looks up a localized string similar to Prepopulates the Pages box in the Print Range section of the Print dialog box with the page ranges you enter here..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_PrintPresets">
            <summary>
              Looks up a localized string similar to PDF print dialog presets.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Signature">
            <summary>
              Looks up a localized string similar to Specifies the settings for signarute..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_SizeToFit">
            <summary>
              Looks up a localized string similar to Determines whether PDF pages are fit to the selected paper size..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_StartPage">
            <summary>
              Looks up a localized string similar to The default value of zero in this and the EndPage properties render all of the report pages. Otherwise, set this value to the number of the first page to render..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Subject">
            <summary>
              Looks up a localized string similar to The subject of the document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Title">
            <summary>
              Looks up a localized string similar to The document’s title..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Use128Bit">
            <summary>
              Looks up a localized string similar to True to use 128 bit encryption with full permissions capability. False to use 40 bit encryption with limited permissions..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_UserPassword">
            <summary>
              Looks up a localized string similar to The user password that can be entered in the reader.  If this value is left empty they user will not be prompted for a password, however the user will be restricted by the specified permissions..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_Version">
            <summary>
              Looks up a localized string similar to Sets or returns the version of the PDF format the exported document is saved in..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_WatermarkAngle">
            <summary>
              Looks up a localized string similar to Specify the degree of angle for the watermark text on the PDF document. Valid values range from 0 to 359, where 0 is horizontal, left to right..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_WatermarkColor">
            <summary>
              Looks up a localized string similar to Select a color for the watermark text on the PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_WatermarkFont">
            <summary>
              Looks up a localized string similar to Click the + or the ellipsis to set the font properties for the watermark text on the PDF document, or enter any valid System.Drawing.Font..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Desc_WatermarkTitle">
            <summary>
              Looks up a localized string similar to Enter text (i.e. CONFIDENTIAL) to use as the watermark on the PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DisplayMode_FullScreen">
            <summary>
              Looks up a localized string similar to FullScreen.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DisplayMode_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DisplayMode_Outlines">
            <summary>
              Looks up a localized string similar to Outlines.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DisplayMode_Thumbs">
            <summary>
              Looks up a localized string similar to Thumbs.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DisplayModeName">
            <summary>
              Looks up a localized string similar to DisplayMode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DisplayTitleName">
            <summary>
              Looks up a localized string similar to DisplayTitle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DocumentToAddAfterReportException">
            <summary>
              Looks up a localized string similar to Cannot use &apos;DocumentToAddAfterReport&apos; setting together with PDF/A output version..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DocumentToAddBeforeReportException">
            <summary>
              Looks up a localized string similar to Cannot use &apos;DocumentToAddBeforeReport&apos; setting together with PDF/A output version..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DpiXName">
            <summary>
              Looks up a localized string similar to DpiX.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DpiYName">
            <summary>
              Looks up a localized string similar to DpiY.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DuplexMode_DuplexFlipLongEdge">
            <summary>
              Looks up a localized string similar to Duplex (Flip on long edge).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DuplexMode_DuplexFlipShortEdge">
            <summary>
              Looks up a localized string similar to Duplex (Flip on short edge).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DuplexMode_Simplex">
            <summary>
              Looks up a localized string similar to Simplex.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.DuplexModeName">
            <summary>
              Looks up a localized string similar to DuplexMode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.EmbedFontsName">
            <summary>
              Looks up a localized string similar to EmbedFonts.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.EncryptName">
            <summary>
              Looks up a localized string similar to Encrypt.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.EndPageName">
            <summary>
              Looks up a localized string similar to EndPage.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.EvalMessageFontFamily">
            <summary>
              Looks up a localized string similar to Arial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Exception_InvalidPDFFonts">
            <summary>
              Looks up a localized string similar to Invalid PDF Font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Export_Filter">
            <summary>
              Looks up a localized string similar to PDF files (*.pdf)|*.pdf|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.FallbackFontsName">
            <summary>
              Looks up a localized string similar to FallbackFonts.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.False">
            <summary>
              Looks up a localized string similar to False.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.FitWindowName">
            <summary>
              Looks up a localized string similar to FitWindow.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.FontEmbedding_All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.FontEmbedding_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.FontEmbedding_Partial">
            <summary>
              Looks up a localized string similar to Partial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.FontFallbackDefault">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.HideMenubarName">
            <summary>
              Looks up a localized string similar to HideMenubar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.HideToolbarName">
            <summary>
              Looks up a localized string similar to HideToolbar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.HideWindowUIName">
            <summary>
              Looks up a localized string similar to HideWindowUI.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.ImageInterpolationName">
            <summary>
              Looks up a localized string similar to ImageInterpolation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.INVALIDPDFFONTS">
            <summary>
              Looks up a localized string similar to Invalid PDF Fonts, index:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.KeywordsName">
            <summary>
              Looks up a localized string similar to Keywords.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.LastPageLessStartPage">
            <summary>
              Looks up a localized string similar to EndPage should be greater than or equal to StartPage, or 0..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.LinkProviderName">
            <summary>
              Looks up a localized string similar to LinkProvider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.MarginBottomName">
            <summary>
              Looks up a localized string similar to MarginBottom.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.MarginLeftName">
            <summary>
              Looks up a localized string similar to MarginLeft.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.MarginRightName">
            <summary>
              Looks up a localized string similar to MarginRight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.MarginTopName">
            <summary>
              Looks up a localized string similar to MarginTop.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NeverEmbedFontsDefault">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NeverEmbedFontsName">
            <summary>
              Looks up a localized string similar to NeverEmbedFonts.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NumberOfCopies_Default">
            <summary>
              Looks up a localized string similar to Default.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NumberOfCopies_Five">
            <summary>
              Looks up a localized string similar to 5.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NumberOfCopies_Four">
            <summary>
              Looks up a localized string similar to 4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NumberOfCopies_Three">
            <summary>
              Looks up a localized string similar to 3.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NumberOfCopies_Two">
            <summary>
              Looks up a localized string similar to 2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.NumberOfCopiesName">
            <summary>
              Looks up a localized string similar to NumberOfCopies.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Obsolete_ShowBookamarks">
            <summary>
              Looks up a localized string similar to Please use the PdfOptions.PageMode property to determine whether the bookmarks/outlines sidebar is initially displayed in the viewer..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.OwnerPasswordName">
            <summary>
              Looks up a localized string similar to OwnerPassword.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PageHeightName">
            <summary>
              Looks up a localized string similar to PageHeight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PageScaling_Default">
            <summary>
              Looks up a localized string similar to Default.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PageScaling_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PageScalingName">
            <summary>
              Looks up a localized string similar to PageScaling.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PageWidthName">
            <summary>
              Looks up a localized string similar to PageWidth.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PaperSourceByPageSizeName">
            <summary>
              Looks up a localized string similar to PaperSourceByPageSize.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_AllowAccessibleReaders">
            <summary>
              Looks up a localized string similar to AllowAccessibleReaders.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_AllowAssembly">
            <summary>
              Looks up a localized string similar to AllowAssembly.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_AllowCopy">
            <summary>
              Looks up a localized string similar to AllowCopy.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_AllowFillIn">
            <summary>
              Looks up a localized string similar to AllowFillIn.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_AllowModifyAnnotations">
            <summary>
              Looks up a localized string similar to AllowModifyAnnotations.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_AllowModifyContents">
            <summary>
              Looks up a localized string similar to AllowModifyContents.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_AllowPrint">
            <summary>
              Looks up a localized string similar to AllowPrint.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_Default">
            <summary>
              Looks up a localized string similar to Default.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfPermissions_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfProEvaluation">
             <summary>
               Looks up a localized string similar to PDF/A and PDF/UA conformance, PDF digital signature 
            and related APIs are only applicable with 
            Professional Edition of ActiveReports Developer..
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_Pdf12">
            <summary>
              Looks up a localized string similar to PDF-1.2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_Pdf13">
            <summary>
              Looks up a localized string similar to PDF-1.3.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_Pdf14">
            <summary>
              Looks up a localized string similar to PDF-1.4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_Pdf15">
            <summary>
              Looks up a localized string similar to PDF-1.5.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_Pdf16">
            <summary>
              Looks up a localized string similar to PDF-1.6.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_Pdf17">
            <summary>
              Looks up a localized string similar to PDF-1.7.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA1a">
            <summary>
              Looks up a localized string similar to PDF/A-1a.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA1b">
            <summary>
              Looks up a localized string similar to PDF/A-1b.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA2a">
            <summary>
              Looks up a localized string similar to PDF/A-2a.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA2b">
            <summary>
              Looks up a localized string similar to PDF/A-2b.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA2u">
            <summary>
              Looks up a localized string similar to PDF/A-2u.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA3a">
            <summary>
              Looks up a localized string similar to PDF/A-3a.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA3b">
            <summary>
              Looks up a localized string similar to PDF/A-3b.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFA3u">
            <summary>
              Looks up a localized string similar to PDF/A-3u.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PdfVersion_PDFUA1">
            <summary>
              Looks up a localized string similar to PDF/UA-1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PermissionsName">
            <summary>
              Looks up a localized string similar to Permissions.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PrependedDocumentName">
            <summary>
              Looks up a localized string similar to DocumentToAddBeforeReport.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PrintLayoutModeName">
            <summary>
              Looks up a localized string similar to PrintLayoutMode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PrintOnOpenName">
            <summary>
              Looks up a localized string similar to PrintOnOpen.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PrintPageRangeName">
            <summary>
              Looks up a localized string similar to PrintPageRange.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.PrintPresetsName">
            <summary>
              Looks up a localized string similar to PrintPresets.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.ProductName">
            <summary>
              Looks up a localized string similar to ActiveReports 15.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SignatureLabel_Contact">
            <summary>
              Looks up a localized string similar to Contact:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SignatureLabel_Date">
            <summary>
              Looks up a localized string similar to Date:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SignatureLabel_DN">
            <summary>
              Looks up a localized string similar to DN:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SignatureLabel_Location">
            <summary>
              Looks up a localized string similar to Location:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SignatureLabel_Name">
            <summary>
              Looks up a localized string similar to Digitally signed by.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SignatureLabel_Reason">
            <summary>
              Looks up a localized string similar to Reason:.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SizeToFitName">
            <summary>
              Looks up a localized string similar to SizeToFit.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.StartPageName">
            <summary>
              Looks up a localized string similar to StartPage.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.StartPageOverEndPage">
            <summary>
              Looks up a localized string similar to StartPage should be less than or equal to EndPage, or 0..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.SubjectName">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.TitleName">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.True">
            <summary>
              Looks up a localized string similar to True.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Use128BitName">
            <summary>
              Looks up a localized string similar to Use128Bit.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.UserPasswordName">
            <summary>
              Looks up a localized string similar to UserPassword.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.Version">
            <summary>
              Looks up a localized string similar to Version.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.WatermarkAngleName">
            <summary>
              Looks up a localized string similar to WatermarkAngle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.WatermarkColorName">
            <summary>
              Looks up a localized string similar to WatermarkColor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.WatermarkFontName">
            <summary>
              Looks up a localized string similar to WatermarkFont.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.WatermarkFontSize">
            <summary>
              Looks up a localized string similar to WatermarkFontSize.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.WatermarkFontStyle">
            <summary>
              Looks up a localized string similar to WatermarkFontStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Pdf.Resources.WatermarkTitleName">
            <summary>
              Looks up a localized string similar to WatermarkTitle.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Pdf.StreamHelper">
            <summary>
            Represents the helper stuff to work with streams.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Pdf.StreamHelper.Copy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies the specified input stream to output one.
            </summary>
            <param name="input">The input stream.</param>
            <param name="output">The output stream.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer">
            <summary>
            Special class for arabic text processing.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Level.Nothing">
            <summary>
            No special processing.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Level.NoVowel">
            <summary>
            Flag if we should process arabic diacritics or not (see https://en.wikipedia.org/wiki/Arabic_diacritics)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Level.ComposedTashkeel">
            <summary>
            Special arabic processing.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Level.Lignum">
            <summary>
            Special arabic processing.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Level.Default">
            <summary>
            Default = ComposedTashkeel | Lignum
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DoArabicShapping(System.String)">
            <summary>
            Do arabic processing.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DoArabicShapping(System.String,GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Level)">
            <summary>
            Do arabic processing.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DoArabicShapping(System.String,GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Level,GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.Func{System.Int32,System.Boolean})">
            <summary>
            Do arabic processing.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.ProcessNumbers(System.String)">
            <summary>
            Replace digits to arabic.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGITS_EN2AN">
            Digit shaping option: Replace European digits (U+0030...U+0039) by Arabic-Indic digits.
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGITS_AN2EN">
            Digit shaping option: Replace Arabic-Indic digits by European digits (U+0030...U+0039).
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGITS_EN2AN_INIT_LR">
            Digit shaping option:
            Replace European digits (U+0030...U+0039) by Arabic-Indic digits
            if the most recent strongly directional character
            is an Arabic letter (its Bidi direction value is RIGHT_TO_LEFT_ARABIC).
            The initial state at the start of the text is assumed to be not an Arabic,
            letter, so European digits at the start of the text will not change.
            Compare to DIGITS_ALEN2AN_INIT_AL.
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGITS_EN2AN_INIT_AL">
            Digit shaping option:
            Replace European digits (U+0030...U+0039) by Arabic-Indic digits
            if the most recent strongly directional character
            is an Arabic letter (its Bidi direction value is RIGHT_TO_LEFT_ARABIC).
            The initial state at the start of the text is assumed to be an Arabic,
            letter, so European digits at the start of the text will change.
            Compare to DIGITS_ALEN2AN_INT_LR.
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGITS_RESERVED">
            Not a valid option value. 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGITS_MASK">
            Bit mask for digit shaping options.
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGIT_TYPE_AN">
            Digit type option: Use Arabic-Indic digits (U+0660...U+0669).
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGIT_TYPE_AN_EXTENDED">
            Digit type option: Use Eastern (Extended) Arabic-Indic digits (U+06f0...U+06f9).
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.ArabicLigaturizer.DIGIT_TYPE_MASK">
            Bit mask for digit type options.
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.L">
            Left-to-right
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.LRE">
            Left-to-Right Embedding 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.LRO">
            Left-to-Right Override 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.R">
            Right-to-Left 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.AL">
            Right-to-Left Arabic 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.RLE">
            Right-to-Left Embedding 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.RLO">
            Right-to-Left Override 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.PDF">
            Pop Directional Format 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.EN">
            European Number 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ES">
            European Number Separator 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ET">
            European Number Terminator 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.AN">
            Arabic Number 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.CS">
            Common Number Separator 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.NSM">
            Non-Spacing Mark 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.BN">
            Boundary Neutral 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.B">
            Paragraph Separator 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.S">
            Segment Separator 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.WS">
            Whitespace 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ON">
            Other Neutrals 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.TYPE_MIN">
            Minimum bidi type value. 
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.TYPE_MAX">
            Maximum bidi type value. 
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.#ctor(System.SByte[])">
             Initialize using an array of direction types.  Types range from TYPE_MIN to TYPE_MAX inclusive
             and represent the direction codes of the characters in the text.
            
             @param types the types array
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.#ctor(System.SByte[],System.SByte)">
             Initialize using an array of direction types and an externally supplied paragraph embedding level.
             The embedding level may be -1, 0, or 1.  -1 means to apply the default algorithm (rules P2 and P3),
             0 is for LTR paragraphs, and 1 is for RTL paragraphs.
            
             @param types the types array
             @param paragraphEmbeddingLevel the externally supplied paragraph embedding level.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.RunAlgorithm">
            The algorithm.
            Does not include line-based processing (Rules L1, L2).
            These are applied later in the line-based phase of the algorithm.
        </member>
        <!-- Badly formed XML comment ignored for member "M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.DetermineParagraphEmbeddingLevel" -->
        <!-- Badly formed XML comment ignored for member "M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.DetermineExplicitEmbeddingLevels" -->
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.RemoveExplicitCodes">
            Rules X9.
            Remove explicit codes so that they may be ignored during the remainder
            of the main portion of the algorithm.  The length of the resulting text
            is returned.
            @return the length of the data excluding explicit codes and BN.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ReinsertExplicitCodes(System.Int32)">
            Reinsert levels information for explicit codes.
            This is for ease of relating the level information
            to the original input data.  Note that the levels
            assigned to these codes are arbitrary, they're
            chosen so as to avoid breaking level runs.
            @param textLength the length of the data after compression
            @return the length of the data (original length of
            types array supplied to constructor)
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ProcessEmbeddings(System.SByte[],System.SByte)">
             2) determining explicit levels
             Rules X1 - X8
            
             The interaction of these rules makes handling them a bit complex.
             This examines resultTypes but does not modify it.  It returns embedding and
             override information in the result array.  The low 7 bits are the level, the high
             bit is set if the level is an override, and clear if it is an embedding.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ResolveWeakTypes(System.Int32,System.Int32,System.SByte,System.SByte,System.SByte)">
             3) resolving weak types
             Rules W1-W7.
            
             Note that some weak types (EN, AN) remain after this processing is complete.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ResolveNeutralTypes(System.Int32,System.Int32,System.SByte,System.SByte,System.SByte)">
            6) resolving neutral types
            Rules N1-N2.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ResolveImplicitLevels(System.Int32,System.Int32,System.SByte,System.SByte,System.SByte)">
            7) resolving implicit embedding levels
            Rules I1, I2.
        </member>
        <!-- Badly formed XML comment ignored for member "M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.GetLevels(System.Int32[])" -->
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ComputeMultilineReordering(System.SByte[],System.Int32[])">
            Return multiline reordering array for a given level array.
            Reordering does not occur across a line break.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ComputeReordering(System.SByte[])">
            Return reordering array for a given level array.  This reorders a single line.
            The reordering is a visual to logical map.  For example,
            the leftmost char is string.CharAt(order[0]).
            Rule L2.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.GetBaseLevel">
            Return the base level of the paragraph.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.IsWhitespace(System.SByte)">
            Return true if the type is considered a whitespace type for the line break rules.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.TypeForLevel(System.Int32)">
            Return the strong type (L or R) corresponding to the level.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.FindRunLimit(System.Int32,System.Int32,System.SByte[])">
            Return the limit of the run starting at index that includes only resultTypes in validSet.
            This checks the value at index, and will return index if that value is not in validSet.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.FindRunStart(System.Int32,System.SByte[])">
            Return the start of the run including index that includes only resultTypes in validSet.
            This assumes the value at index is valid, and does not check it.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.SetTypes(System.Int32,System.Int32,System.SByte)">
            Set resultTypes from start up to (but not including) limit to newType.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.SetLevels(System.Int32,System.Int32,System.SByte)">
            Set resultLevels from start up to (but not including) limit to newLevel.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ValidateTypes(System.SByte[])">
            Throw exception if type array is invalid.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ValidateParagraphEmbeddingLevel(System.SByte)">
            Throw exception if paragraph embedding level is invalid. Special allowance for -1 so that
            default processing can still be performed when using this API.
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Text.BidiOrder.ValidateLineBreaks(System.Int32[],System.Int32)">
            Throw exception if line breaks array is invalid.
        </member>
        <member name="T:DataDynamics.Shared.BitFlagUtil">
            <summary>
            Utility functions for dealing with bit flag fields/properties.
            </summary>
        </member>
        <member name="M:DataDynamics.Shared.BitFlagUtil.IsFlagSet(System.Int32,System.Int32)">
            <summary>
            Returns true if the specified flag/bit is set in the specified value.
            </summary>
            <param name="value">The value to check the flag in.</param>
            <param name="flag">The flag to check/bit to check.</param>
            <returns>True if the flag is set, otherwise false.</returns>
        </member>
        <member name="T:DataDynamics.GDI.BitmapFileHeader">
            <summary>
            Represents the Win32 BITMAPFILEHEADER structure.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.BitmapFileHeader.SizeOf">
            <summary>
            The size of the <see cref="T:DataDynamics.GDI.BitmapFileHeader"/> structure in bytes.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.BitmapFileHeader.bfType">
            Specifies the file type, must be BM (0x4d42). 
        </member>
        <member name="F:DataDynamics.GDI.BitmapFileHeader.bfSize">
            Specifies the size, in bytes, of the bitmap file. 
        </member>
        <member name="F:DataDynamics.GDI.BitmapFileHeader.bfReserved1">
            Reserved; must be zero.
        </member>
        <member name="F:DataDynamics.GDI.BitmapFileHeader.bfReserved2">
            Reserved; must be zero.
        </member>
        <member name="F:DataDynamics.GDI.BitmapFileHeader.bfOffBits">
            Specifies the offset, in bytes, from the beginning of the BITMAPFILEHEADER structure to the bitmap bits.
        </member>
        <member name="M:DataDynamics.GDI.BitmapFileHeader.Read(System.IO.BinaryReader)">
            <summary>
            Reads a Win32 BITMAPFILEHEADER structure from the curernt position in the specified stream, and returns a <see cref="T:DataDynamics.GDI.BitmapFileHeader"/> representation of the data.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.BitmapFileHeader.WriteTo(System.IO.BinaryWriter)">
            <summary>
            Writes this records' data to the specified stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:DataDynamics.GDI.BitmapInfoHeader">
            <summary>
            Represents the Win32 BITMAPINFOHEADER structure.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.BitmapInfoHeader.biSize">
            Specifies the number of bytes required by the structure.
        </member>
        <member name="F:DataDynamics.GDI.BitmapInfoHeader.biWidth">
            Specifies the width of the bitmap, in pixels. 
            Windows 98/Me, Windows 2000/XP: If biCompression is BI_JPEG or BI_PNG, the biWidth 
            member specifies the width of the decompressed JPEG or PNG image file, respectively.
        </member>
        <member name="F:DataDynamics.GDI.BitmapInfoHeader.biHeight">
            Specifies the height of the bitmap, in pixels. If biHeight is positive, the bitmap is 
            a bottom-up DIB and its origin is the lower-left corner. If biHeight is negative, the 
            bitmap is a top-down DIB and its origin is the upper-left corner. 
            If biHeight is negative, indicating a top-down DIB, biCompression must be either 
            BI_RGB or BI_BITFIELDS. Top-down DIBs cannot be compressed. 
        </member>
        <member name="F:DataDynamics.GDI.BitmapInfoHeader.biPlanes">
            Specifies the number of planes for the target device. This value must be set to 1. 
        </member>
        <member name="T:DataDynamics.GDI.DefaultRenderContext">
            <summary>
            Base class that contains current context information (handle table, selected object, etc..) during the rendering of a metafile.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.DefaultRenderContext.handleTable">
            Used with SelectObject, DeleteObject, CreatePen, ExtCreatePen, CreateBrushIndirect, ExtCreateFontIndirectW
        </member>
        <member name="T:DataDynamics.GDI.DefaultRenderContext.ContextState">
            <summary>
            Used for stack save/restore support to store context information that can be saved to a stack.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.ContextState.#ctor(System.Drawing.Brush,System.Drawing.Font,System.Drawing.Pen,System.Drawing.Region,DataDynamics.GDI.MapMode,System.Drawing.Color,System.Drawing.Color,DataDynamics.GDI.GdiTextAlign,System.Int32,DataDynamics.GDI.GdiBackgroundFillMode,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Size,System.Drawing.Size,System.Drawing.Point,System.Drawing.Point,DataDynamics.GDI.ROP2,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.DefaultRenderContext.ContextState"/> class with the specified values.
            </summary>
            <param name="brush"></param>
            <param name="font"></param>
            <param name="pen"></param>
            <param name="clipRegion"></param>
            <param name="mapMode"></param>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.PdfRenderContext"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.Save">
            <summary>
            Saves the current state of this context object by pushing it onto a stack.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.Save(System.Int32)">
            <summary>
             Saves the current state of this context object by pushing it onto a stack ans setting an ID for it
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.Restore(System.Int32)">
            <summary>
            Restores a previously saved state by popping it off the stack.
            </summary>
            <param name="relative">
            Specifies the saved state to be restored. If this parameter is positive, nSavedDC represents a specific instance of the state to be restored. If this parameter is negative, nSavedDC represents an instance relative to the current state. For example, ? restores the most recently saved state. 
            </param>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.RestoreWithID(System.Int32)">
            <summary>
            AM CR16401:
            restores state with specified id and returns all contexts were written after that state			
            </summary>
            <param name="contextID"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.SaveHandleTable">
            <summary>
            Save the current handle table to the stack.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.RestoreHandleTable">
            <summary>
            Restore the current handle table from the stack.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.Pen">
            <summary>
            Returns a reference to the currently selected pen.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.Font">
            <summary>
            Returns the currently selected font.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.FontEscapement">
            <summary>
            Used to specify rotated fonts.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.Brush">
            <summary>
            Returns the currently selected brush.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.Rop2">
            <summary>
            Returns the currently selected brush.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.HandleTable">
            <summary>
            Returns the current table of GDIObjects (pens, brushes, fonts, etc..).
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.CurrentPath">
            <summary>
            The current <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <remarks>
            Use <see cref="P:DataDynamics.GDI.DefaultRenderContext.IsPathUnderConstruction"/> to set or determine whether the path is still being constructed.
            May return null.
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.IsPathUnderConstruction">
            <summary>
            Sets or determines whether the <see cref="P:DataDynamics.GDI.DefaultRenderContext.CurrentPath"/> is still being constructed.
            </summary>
            <remarks>
            Some of the metafile records classes (such as PolyShape) render differently depending whether a path is under construction or not.
            For exmaple, PolyBezier16 adds one or more Bezier curves to the current path if the path is under construction (between BeginPath and EndPath records).
            However, if no path is under construction PolyBezier16 draws one or more Bezier curves.
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.CurrentPoint">
            <summary>
            The current position that applicable drawing operations will use (such as LineTo, MoveToEx, PolyBezierTo,etc..).
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.Frame">
            <summary>
            The frame of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.SourceDpiX">
            <summary>
            The horizontal DPI of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.SourceDpiY">
            <summary>
            The veritcal DPI of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.Transform">
            <summary>
            Gets the current world transformation for this object.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.ScaleTransform">
            <summary>
            Gets or sets the current scale transformation for this object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Multiples this object's current transformation matrix by the specified matrix in the specified order.
            </summary>
            <param name="matrix">The transformation matrix to multiply with the current transformation matrix.</param>
            <param name="order">The order to multiply the matrices in.  <see cref="T:System.Drawing.Graphics"/> defaults to Prepend.</param>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.SetTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            This is used by SetWorldTransform
            </summary>
            <param name="matrix"></param>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.ScaleTransformPoints(System.Drawing.PointF[])">
            <summary>
            Transform an array of points using the current scale transformation.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.TransformPoints(System.Drawing.PointF[])">
            <summary>
            Transforms an array of points from the world coordinate space to the page coordinate space using the current transformation of this object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.DefaultRenderContext.TransformRectangle(System.Drawing.RectangleF)">
            <summary>
            Transforms an the specified rectangle from the world coordinate space to the page coordinate space using the current transformation of this object.
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.TransformedPenWidth">
            <summary>
            Returns the with of the current <see cref="P:DataDynamics.GDI.DefaultRenderContext.Pen"/> transformed based on the current horizontal scale transform.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.TextColor">
            <summary>
            Sets or returns the color that should be used to draw text.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.BackColor">
            <summary>
            Sets or returns the color that should be used to draw the background.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.TextAlign">
            <summary>
            Sets or returns alignment options for text.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.BackgroundFillMode">
            <summary>
            The SetBkMode function sets the background mix mode of the specified device context. The background mix mode is used with text, hatched brushes, and pen styles that are not solid lines. 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.PolyFillMode">
            <summary>
            The SetBkMode function sets the background mix mode of the specified device context. The background mix mode is used with text, hatched brushes, and pen styles that are not solid lines. 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.WindowExtent">
            <summary>
            <see cref="P:DataDynamics.GDI.IRenderDevice.WindowExtent"/>
            </summary>
            <value></value>
        </member>
        <member name="P:DataDynamics.GDI.DefaultRenderContext.ViewportExtent">
            <summary>
            <see cref="!:IRenderDevice.ViewportEtentd"/>
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.ExtLogFont">
            <summary>
            Summary description for ExtLogFont.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.ExtLogFont.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.ExtLogFont"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.ExtLogFont.Read(System.IO.BinaryReader)">
            <summary>
            Reads a Win32 EXTLOGFONT structure from teh specified reader and returns a <see cref="T:DataDynamics.GDI.ExtLogFont"/> representation of the data.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.ExtLogFont.ToFont(System.Boolean)">
            <summary>
            Returns a <see cref="T:System.Drawing.Font"/> representation of this font.
            Needs a bool parameter to tell whether this font's size needs transform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.ExtLogFont.Panose.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.ExtLogFont.Panose"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.ExtLogFont.Panose.Read(System.IO.BinaryReader)">
            <summary>
            Reads a Win32 Panose structure from the stream and returns the data as a <see cref="T:DataDynamics.GDI.ExtLogFont.Panose"/> object.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.ExtLogPen">
            <summary>
            Summary description for ExtLogPen.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.DIB_RGB_COLORS">
            Color table in RGBs (used with the color member).
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.DIB_PAL_COLORS">
            Color table in palette indices (used with the color member).
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.penStyle">
            Specifies a combination of pen type, style, end cap style, and join style. The values from each category can be retrieved by using a bitwise AND operator with the appropriate mask.
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.width">
            Specifies the width of the pen. If the elpPenStyle member is 
            <see cref="!:Win32PenStyle.Geometric"/>, this value is the width of the line in logical 
            units. Otherwise, the lines are cosmetic and this value is 1, which indicates a line 
            with a width of one pixel. 
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.brushStyle">
            Specifies the brush style of the pen. The elpBrushStyle member value can be one of the following. 
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.color">
            If elpBrushStyle is BS_SOLID or BS_HATCHED, elpColor specifies the color in which the 
            pen is to be drawn. For BS_HATCHED, the SetBkMode and SetBkColor functions determine 
            the background color. 
            If elpBrushStyle is BS_HOLLOW or BS_PATTERN, elpColor is ignored. 
            If elpBrushStyle is BS_DIBPATTERN or BS_DIBPATTERNPT, the low-order word of elpColor 
            specifies whether the bmiColors members of the BITMAPINFO structure contain explicit 
            RGB values or indices into the currently realized logical palette. 
            The elpColor value must be one of the following.
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.hatch">
            If elpBrushStyle is BS_PATTERN, elpHatch is a handle to the bitmap that defines the pattern. 
            If elpBrushStyle is BS_SOLID or BS_HOLLOW, elpHatch is ignored. 
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.numEntries">
            Specifies the number of entries in the style array in the elpStyleEntry member. This value is zero if elpPenStyle does not specify PS_USERSTYLE. 
        </member>
        <member name="F:DataDynamics.GDI.ExtLogPen.styleEntries">
            Specifies a user-supplied style array. The array is specified with a finite length, but it is used as if it repeated indefinitely. The first entry in the array specifies the length of the first dash. The second entry specifies the length of the first gap. Thereafter, lengths of dashes and gaps alternate. 
            If elpWidth specifies geometric lines, the lengths are in logical units. Otherwise, the lines are cosmetic and lengths are in device units. 
        </member>
        <member name="M:DataDynamics.GDI.ExtLogPen.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.ExtLogPen"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.ExtLogPen.Read(System.IO.BinaryReader)">
            <summary>
            Reads a EXTLOGPEN structure from the specified stream and returns a <see cref="!:ExtCreatePen"/> representation of the structure.
            </summary>
            <param name="reader">The BinaryReader to read the pen data from.</param>
            <param name="recordType">Must be <see cref="!:EmfRecordType.ExtCreatePen"/>.</param>
            <param name="recordSize">The size of the entire record.</param>
            <returns>A <see cref="!:ExtCreatePen"/>.</returns>
        </member>
        <member name="T:DataDynamics.GDI.Win32PenStyles">
            <summary>
            Represents the Win32 PSDK PS_XXX pens style constants.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.TypeCosmetic">
            The pen is cosmetic.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.TypeGeometric">
            The pen is geometric.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.TypeMask">
            The bitwise AND mask used to determine a pen's type.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleSolid">
            The pen is solid.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleDash">
            The pen is dashed.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleDot">
            The pen is dotted.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleDashDot">
            The pen has alternating dashes and dots.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleDashDotDot">
            The pen has alternating dashes and double dots.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleNull">
            The pen is invisible.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleInsideFrame">
            The pen is solid. When this pen is used in any GDI drawing function that takes a bounding rectangle, the dimensions of the figure are shrunk so that it fits entirely in the bounding rectangle, taking into account the width of the pen. 
            This applies only to <see cref="!:Win32PenStyles.Geomtric"/> pens.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleUserStyle">
            The pen uses a styling array supplied by the user.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.StyleMask">
            The bitwise AND mask used to determine pen's dash style.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.EndCapRound">
            Line end caps are round.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.EndCapSquare">
             Line end caps are square. 
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.EndCapFlat">
            Line end caps are flat.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.EndCapMask">
            The bitwise AND mask used to determine pen's end cap style.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.JoinRound">
            Line joins are round.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.JoinBevel">
            Line joins are beveled.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.JoinMiter">
            Line joins are mitered when they are within the current limit set by the SetMiterLimit function. A join is beveled when it would exceed the limit.
        </member>
        <member name="F:DataDynamics.GDI.Win32PenStyles.JoinMask">
            The bitwise AND mask used to determine a pen's line join style.
        </member>
        <member name="T:DataDynamics.GDI.Win32BrushStyle">
            <summary>
            Represents the Win32 PSDK BS_XXX brush style constants.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.Solid">
            Solid brush.
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.Null">
            Same as BS_HOLLOW.
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.Hollow">
            Hollow brush.
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.Hatched">
            Hatched brush.
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.Pattern">
            Pattern brush defined by a memory bitmap.
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.DibPattern">
            A pattern brush defined by a device-independent bitmap (DIB) specification. 
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.DibPatternPt">
            A pattern brush defined by a device-independent bitmap (DIB) specification. 
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.Pattern8x8">
            Same as BS_PATTERN.
        </member>
        <member name="F:DataDynamics.GDI.Win32BrushStyle.DibPattern8x8">
            Same as BS_DIBPATTERN.
        </member>
        <member name="T:DataDynamics.GDI.Win32HatchStyle">
            <summary>
            Specifies the Win32 PSDK HS_xxxx hatch style constants.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Win32HatchStyle.Horizontal">
            -----
        </member>
        <member name="F:DataDynamics.GDI.Win32HatchStyle.Vertical">
            |||||
        </member>
        <member name="F:DataDynamics.GDI.Win32HatchStyle.FDiagonal">
            \\\\\
        </member>
        <member name="F:DataDynamics.GDI.Win32HatchStyle.BDiagonal">
            /////
        </member>
        <member name="F:DataDynamics.GDI.Win32HatchStyle.Cross">
            +++++
        </member>
        <member name="F:DataDynamics.GDI.Win32HatchStyle.DiagCross">
            xxxxx
        </member>
        <member name="T:DataDynamics.GDI.GdiStockObject">
            <summary>
            Specifies the stock GDI object contants.  These are pens, brushes, and fonts that are assumed "built-in" to be in the rendering implementation.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.GdiObjectKind">
            <summary>
            Specifies the kind of <see cref="!:IGDIObject"/>.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.MapMode">
            <summary>
            Specifies the mapping mode for a GDI device.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.MapMode.AnIsotropic">
            Logical units are mapped to arbitrary units with arbitrarily scaled axes. Use the SetWindowExtEx and SetViewportExtEx functions to specify the units, orientation, and scaling. 
        </member>
        <member name="F:DataDynamics.GDI.MapMode.HiEnglish">
            Each logical unit is mapped to 0.001 inch. Positive x is to the right; positive y is up. 
        </member>
        <member name="F:DataDynamics.GDI.MapMode.HiMetric">
            Each logical unit is mapped to 0.01 millimeter. Positive x is to the right; positive y is up. 
        </member>
        <member name="F:DataDynamics.GDI.MapMode.Isotropic">
            Logical units are mapped to arbitrary units with equally scaled axes; that is, one unit along the x-axis is equal to one unit along the y-axis. Use the SetWindowExtEx and SetViewportExtEx functions to specify the units and the orientation of the axes. Graphics device interface (GDI) makes adjustments as necessary to ensure the x and y units remain the same size (When the window extent is set, the viewport will be adjusted to keep the units isotropic). 
        </member>
        <member name="F:DataDynamics.GDI.MapMode.LoEnglish">
            Each logical unit is mapped to 0.01 inch. Positive x is to the right; positive y is up. 
        </member>
        <member name="F:DataDynamics.GDI.MapMode.LoMetric">
            Each logical unit is mapped to 0.1 millimeter. Positive x is to the right; positive y is up. 
        </member>
        <member name="F:DataDynamics.GDI.MapMode.Text">
            Each logical unit is mapped to one device pixel. Positive x is to the right; positive y is down. 
        </member>
        <member name="F:DataDynamics.GDI.MapMode.Twips">
            Each logical unit is mapped to one twentieth of a printer's point (1/1440 inch, also called a twip). Positive x is to the right; positive y is up. 
        </member>
        <member name="F:DataDynamics.GDI.DibColorTableType.RgbColors">
            color table in RGBs
        </member>
        <member name="F:DataDynamics.GDI.DibColorTableType.PaletteColors">
            color table in palette indices
        </member>
        <member name="T:DataDynamics.GDI.GdiRasterOperation">
            <summary>
            The Win32 "Ternary raster operations". Used with <see cref="!:BitBlt.dwRop"/>, <see cref="!:StretchDIBits.dwRop"/>.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.SrcCopy">
            Copies the source rectangle directly to the destination rectangle.
            dest = source
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.SrcPaint">
            Combines the colors of the source and destination rectangles by using the Boolean OR operator.
            dest = source OR dest
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.SrceAnd">
            Combines the colors of the source and destination rectangles by using the Boolean AND operator.
            dest = source AND dest
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.SrcInvert">
            Combines the colors of the source and destination rectangles by using the Boolean XOR operator.
            dest = source XOR dest
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.SrcErase">
            Combines the inverted colors of the destination rectangle with the colors of the source rectangle by using the Boolean AND operator.
            dest = source AND (NOT dest )
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.NotSrcCopy">
            Copies the inverted source rectangle to the destination.
            dest = (NOT source)
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.NotSrcErase">
            Combines the colors of the source and destination rectangles by using the Boolean OR operator and then inverts the resultant color.
            dest = (NOT src) AND (NOT dest)
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.MergeCopy">
            Merges the colors of the source rectangle with the brush currently selected in hdcDest, by using the Boolean AND operator.
            dest = (source AND pattern)
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.MergePaint">
            Merges the colors of the inverted source rectangle with the colors of the destination rectangle by using the Boolean OR operator.
            dest = (NOT source) OR dest
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.PatCopy">
            Copies the brush currently selected in hdcDest, into the destination bitmap.
            dest = pattern
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.PatPaint">
            Combines the colors of the brush currently selected in hdcDest, with the colors of the inverted source rectangle by using the Boolean OR operator. The result of this operation is combined with the colors of the destination rectangle by using the Boolean OR operator.
            dest = DPSnoo
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.PatInvert">
            Combines the colors of the brush currently selected in hdcDest, with the colors of the destination rectangle by using the Boolean XOR operator.
            dest = pattern XOR dest
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.DstInvert">
            Inverts the destination rectangle.
            dest = (NOT dest)
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.Blackness">
            Fills the destination rectangle using the color associated with index 0 in the physical palette. (This color is black for the default physical palette.)
            dest = BLACK
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.Whiteness">
            Fills the destination rectangle using the color associated with index 1 in the physical palette. (This color is white for the default physical palette.)
            dest = WHITE
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.NoMirrorBitmap">
            Windows 98/Me, Windows 2000/XP: Prevents the bitmap from being mirrored.
            Do not Mirror the bitmap in this call
        </member>
        <member name="F:DataDynamics.GDI.GdiRasterOperation.CaptureBlt">
            Windows 98/Me, Windows 2000/XP: Includes any windows that are layered on top of your window in the resulting image. By default, the image only contains your window.
            Include layered windows
        </member>
        <member name="T:DataDynamics.GDI.GdiTextAlign">
            <summary>
            Text alignment options used with SetTextAlign EMF record.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_BASELINE">
            The reference point will be on the base line of the text. 
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_BOTTOM">
            The reference point will be on the bottom edge of the bounding rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_TOP">
            The reference point will be on the top edge of the bounding rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_CENTER">
            The reference point will be aligned horizontally with the center of the bounding rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_LEFT">
            The reference point will be on the left edge of the bounding rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_RIGHT">
            The reference point will be on the right edge of the bounding rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_NOUPDATECP">
            The current position is not updated after each text output call. The reference point is passed to the text output function. 
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_RTLREADING">
            Middle East language edition of Windows: The text is laid out in right to left reading order, as opposed to the default left to right order. This applies only when the font selected into the device context is either Hebrew or Arabic. 	
        </member>
        <member name="F:DataDynamics.GDI.GdiTextAlign.TA_UPDATECP">
            The current position is updated after each text output call. The current position is used as the reference point. 
        </member>
        <member name="T:DataDynamics.GDI.GdiBackgroundFillMode">
            <summary>
            Background mode Used with SetBkMode record.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.GdiPolyFillMode">
            <summary>
            Poly Fill Mode used with SetPolyFillMode record.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.ClippingMode">
            <summary>
            Specifies the way to use the path.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.ClippingMode.And">
            The new clipping region includes the intersection (overlapping areas) 
            of the current clipping region and the current path. 
        </member>
        <member name="F:DataDynamics.GDI.ClippingMode.Or">
            The new clipping region includes the union (combined areas) of the current 
            clipping region and the current path. 
        </member>
        <member name="F:DataDynamics.GDI.ClippingMode.Xor">
            The new clipping region includes the union of the current clipping region and 
            the current path but without the overlapping areas. 
        </member>
        <member name="F:DataDynamics.GDI.ClippingMode.Diff">
            The new clipping region includes the areas of the current clipping region with 
            those of the current path excluded.
        </member>
        <member name="F:DataDynamics.GDI.ClippingMode.Copy">
            The new clipping region is the current path. 
        </member>
        <member name="T:DataDynamics.GDI.GdiObjectFactory">
            <summary>
            Creates GDI Pen, Brush, and Font objects, including stock objects.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.GdiObjectFactory.StockObjectEntry">
            <summary>
            Used as entries into the stock object hashtable to provide the object and an efficient way of identifying the type of object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.GdiObjectFactory.CreateStockObject(DataDynamics.GDI.GdiStockObject,DataDynamics.GDI.GdiObjectKind@)">
            <summary>
            Creates the stock object specified by the stockObject arguments and returns it.
            </summary>
            <param name="stockObject"></param>
            <param name="objectKind">Returns a value indicating the type of object returned.</param>
            <returns>A stock object, could be a <see cref="T:System.Drawing.Pen"/>, <see cref="T:System.Drawing.Brush"/>, or <see cref="T:System.Drawing.Font"/>.</returns>
        </member>
        <member name="T:DataDynamics.GDI.GdiPolygon">
            <summary>
            Represents a polygon object as a set of points
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.GdiPolygon.#ctor(System.Drawing.PointF[])">
            <summary>
            Constructs object from point array
            </summary>
            <param name="points"></param>
        </member>
        <member name="P:DataDynamics.GDI.GdiPolygon.Points">
            <summary>
            Returns the entire point array for polygon
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.IRenderDevice">
            <summary>
            An interface used to render graphics operations.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawLines(System.Drawing.PointF[])">
            <summary>
            Draws line segments between each of the specified points.
            </summary>
            <remarks>This method not use or update the current drawing position.</remarks>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawLinesTo(System.Drawing.PointF[])">
            <summary>
            Draws line segments between each of the specified points and uses and updates the current drawing position. 
            </summary>
            <remarks>
            A line is drawn from the current position to the first point specified by the lppt parameter by using the current pen. 
            For each additional line, the function draws from the ending point of the previous line to the next point specified by lppt. 
            This method moves the current drawing position to the ending point of the last line. 
            If the line segments drawn by this function form a closed figure, the figure is not filled. 
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawBeziers(System.Drawing.PointF[])">
            <summary>
            Draws cubic Bézier curves by using the specified endpoints and control points. 
            </summary>
            <remarks>
            This method participates in path construction. If a path is under construction this method will add its contents to the current path, and not output to the device.
            The first curve is drawn from the first point to the fourth point by using the  second and third points as control points. 
            Each subsequent curve in the sequence needs exactly three more points: the ending point of the previous curve is used as the starting point, the next two points in the sequence are control points, and the third is the ending point.
            Therefore the number of points must be "one more than three times the number of curves".
            The current position is neither used nor updated by the PolyBezier function.
            The figure is not filled.
            This function draws lines by using the current pen.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawBeziersTo(System.Drawing.PointF[])">
            <summary>
            Draws cubic Bézier curves by using the specified endpoints and control points, and changes the current drawing position to the ending point of the last curve.
            </summary>
            <remarks>
            The first curve is drawn from the current drawing position to the third point by using the first two points as control points. 
            For each  subsequent curve, the function needs exactly three more points, and uses the ending point of the previous curve as the starting point for the next.
            The figure is not filled. This function draws lines by using the current pen.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawLineTo(System.Drawing.Point)">
            <summary>
            Draws a segment from the current point to the specified point. 
            The current point then changed to the specified point.
            This effects paths after a call to <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/> and before the subsequent call to <see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.MoveTo(System.Drawing.Point)">
            <summary>
            Moves the current point to the specified point.
            This effects paths after a call to <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/> and before the subsequent call to <see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.Polygon(System.Drawing.PointF[])">
            <summary>
            Renders a polygon defined by the specified array of point structures.
            Polygon is outlined using the current pen and filled using the current brush and polygon fill mode.
            </summary>
            <remarks>
            This method participates in path construction if a path is being constructed.
            Every pair of two consecutive points in the array specify a side of the polygon. In addition, if the last point and the first point of the array do not coincide, they specify the last side of the polygon.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.Polygons(DataDynamics.GDI.GdiPolygon[])">
            <summary>
            Draws given polygons as one PDF Path and it is outlined using the current pen and filled using the current brush and polygon fill mode.
            </summary>
            <param name="polys">An array of polygons to draw</param>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renders the specified rectangle.
            The rectanlge is outlined by using the current pen and is filled by using the current brush.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Fills rectangle with color.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Fills rectangle with texture.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.RoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Outlines the specified rectangle using the current pen.
            The rounded rectangle is outlined by using the current pen and is filled by using the current brush.
            </summary>
            <param name="x">The x position of hte rectangle.</param>
            <param name="y">The y position of the rectangle.</param>
            <param name="width">The width of the rectangle</param>
            <param name="height">The height of the rectangle.</param>
            <param name="cornerWidth">The width of the ellipse used to round corners.</param>
            <param name="cornerHeight">The height of the ellipse used to round corners.</param>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.Ellipse(System.Drawing.Rectangle)">
            <summary>
            Renders the ellipse that conforms to the speicifed bounding box. 
            The ellipse is outlined by using the current pen and is filled by using the current brush.
            </summary>
            <param name="boundingBox">Bounding rectangle for the ellipse. The center of the ellipse is the center of this rectangle.</param>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawCurrentPath">
            <summary>
            Draws the current path (constructed with <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/>/<see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/>) with the context's current pen.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.FillCurrentPath">
            <summary>
            Fills the interior of the current path (constructed with <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/>/<see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/>) with the context's current brush.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawString(System.String,System.Drawing.Point)">
            <summary>
            Draws the specified string a the specified location with the current <see cref="P:DataDynamics.GDI.IRenderDevice.TextColor"/>.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="point">Text **baseline** position. **Y coordinate is baseline**.</param>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.DrawPie(DataDynamics.GDI.RectL,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws pie.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.IsWordpadDocObject">
            <summary>
            To mark if the metafile object is from a wordpad document object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.SaveContext">
            <summary>
            Saves the current state of the specified device context (DC) by copying data 
            describing selected objects and graphic modes (such as the bitmap, brush, palette, 
            font, pen, region, drawing mode, current clipping path, and mapping mode) to a context stack.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.RestoreContext(System.Int32)">
            <summary>
            Restores a context to the specified state. The context is restored by popping state 
            information off a stack created by earlier calls to the <see cref="M:DataDynamics.GDI.IRenderDevice.SaveContext"/> 
            function.
            </summary>
            <param name="relative">Relative instance to restore. 
            Specifies the saved state to be restored. If this parameter is positive, nSavedDC 
            represents a specific instance of the state to be restored. If this parameter is 
            negative, nSavedDC represents an instance relative to the current state. For 
            example, –1 restores the most recently saved state.
            </param>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.SaveHandleTable">
            <summary>
            Saves the state of current handle table of the specified device to a stack.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.RestoreHandleTable">
            <summary>
            Restrore the handle table of the specified device to the previous saved state from a stack.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.IntersectClip(System.Drawing.Rectangle)">
            <summary>
            Modifies the current clipping path by intersecting it with the specified clipping rectangle.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.IntersectClipDeviceUnits(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Modifies the current clipping path by intersecting it with the specified clipping path in device units.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.ResetClip">
            <summary>
            Resets current clip
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.IntersectClipWithCurrentPath">
            <summary>
            Modifies the current clipping path by intersecting it with the current path (built with commands between calls to <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/> and <see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/>).
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.HandleTable">
            <summary>
            The table of GDI objects 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.Pen">
            <summary>
            The current pen that applicable drawing operations will use.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.Rop2">
            <summary>
            The current pen that applicable drawing operations will use.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.Brush">
            <summary>
            The current brush that applicable drawing operations will use.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.Font">
            <summary>
            The current Font that applicable drawing operations will use.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.FontEscapement">
            <summary>
            Used to specify rotated fonts.
            </summary>
            <remarks>This value comes directly from the Win32 LOGFONT.lfEscapement value.</remarks>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.BeginPath">
            <summary>
            After calling <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/> subsequent applicable drawing operations will be used to build a path and not actually render anything to the output device.  To resume normal output drawing, call <see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.EndPath">
            <summary>
            Called after a call to <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/> to indicate that the path under construction is complete, and subsequent drawing operations should render to the output device normally.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.CloseFigure">
            <summary>
            Called after <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/> and before <see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/> to indicate that the current figure in the path under construction should be closed.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.Frame">
            <summary>
            The frame of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.SourceDpiX">
            <summary>
            The horizontal DPI of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.SourceDpiY">
            <summary>
            The veritcal DPI of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.WindowOrigin">
            <summary>
            Specifies which window point maps to the viewport origin (0,0). 
            </summary>
            <remarks>
            This helps define the mapping from the logical coordinate space (also known as a 
            window) to the device coordinate space (the viewport). WindowOrigin specifies which 
            logical point maps to the device point (0,0). It has the effect of shifting the axes 
            so that the logical point (0,0) no longer refers to the upper-left corner. 
            <seealso cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetWindowOrgEx"/>
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.WindowExtent">
            <summary>
            Sets or returns the window extent.
            </summary>
            <remarks>
            <seealso cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetWindowExtEx"/>
            When the following mapping modes are set, calls to WindowExtEx and ViewportExtEx are ignored: MapMode.HiEnglish, MapMode.HiMetric, MapMode.LoEnglish, MapMode.LoMetric, MapMode.Text, MapMode.Twips.
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.ViewportOrigin">
            <summary>
            Specifies which device point maps to the window origin (0,0).
            </summary>
            <remarks>
            This (along with ViewportExtent and WindowExtent) helps define the mapping from the logical coordinate space (also known as a window) to the device coordinate space (the viewport). 
            ViewportOrigin specifies which device point maps to the logical point (0,0).  
            It has the effect of shifting the axes so that the logical point (0,0) no longer refers to the upper-left corner. 
            <seealso cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetViewPortOrgEx"/>
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.ViewportExtent">
            <summary>
            Sets or returns the viewport extent.
            </summary>
            <remarks>
            <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetViewPortExtEx"/>
            Calls to WindowExtEx and ViewportExtEx are ignored unless the MapMode is AnIsotropic.
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.MapMode">
            <summary>
            Sets or returns the current mapping mode.
            </summary>
            <remarks>
            Calls to WindowExtEx and ViewportExtEx are ignored unless the MapMode is AnIsotropic.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.SetScaleTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Sets the current scale transformation matrix.
            </summary>
            <param name="matrix">The scale transformation matrix.</param>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.MultiplyScaleTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            post-multiply the current scale transformation matrix.
            </summary>
            <param name="matrix">The scale transformation matrix.</param>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Multiples this object's current transformation matrix by the specified matrix in the specified order.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.IRenderDevice.SetTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Set this object's current transformation matrix by the specified matrix in the specified order.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.LocationOffset">
            <summary>
            Specifies the location offset on the target render device (such as the actual PDF page) that render should begin at (in inches).
            </summary>
            <remarks>
            This is essentially a translation transform, but since know the units that will be used on a given metafile can be different, this is a seperate translation in a defined measurement unit (inches).
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.TextColor">
            <summary>
            Sets or returns the color that should be used to draw text.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.BackColor">
            <summary>
            Sets or returns the color that should be used to draw text.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.TextAlign">
            <summary>
            Sets or returns alignment options for text.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.BackgroundFillMode">
            <summary>
            The SetBkMode function sets the background mix mode of the specified device context. The background mix mode is used with text, hatched brushes, and pen styles that are not solid lines. 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.PolyFillMode">
            <summary>
            The PolyFillMode function sets how a polygon will be filled. 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.IRenderDevice.Size">
            <summary>
            The Size of the device.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.LogFont">
            <summary>
            Represents the Win32 LogFont structure.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.LogFont.lfEscapement">
            <summary>
            Value of type LONG that contains the angle, in tenths of degrees, between the 
            escapement vector and the x-axis of the device. The escapement vector is parallel 
            to the base line of a row of text. 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.LogFont.SizeInPoints">
            <summary>
            Derrives a point size rounded to nearest half a point from lfHeight.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.LogFont.#ctor">
            <summary>
            Initializes a new instance of hte LogFont structure.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.LogFont.Read(System.IO.BinaryReader)">
            <summary>
            Reads a Win32 LOGFONT structure from the current position in the specified reader and returns a <see cref="T:DataDynamics.GDI.LogFont"/> representation of the data.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.LogPen">
            <summary>
            Represents the Win32 LOGPEN structure.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.LogPen.Read(System.IO.BinaryReader)">
            <summary>
            Reads a Win32 LOGPEN structure from the specified BinaryReader and returns the <see cref="T:DataDynamics.GDI.LogPen"/> representation of it.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.LogPen.CreateNetPen">
            <summary>
            Creates a <see cref="T:System.Drawing.Pen"/> representation of this LogPen object.
            </summary>
            <remarks>The caller is responsible for disposing the returned pen.</remarks>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.MetafileReader">
            <summary>
            Can read and render a stream of enhanced metafile (EMF) records.
            </summary>
            <remarks>
            This class is the heart of converting EMF to other formats such as PDF.  
            To use this library take the following steps:
            <br/>1: Initialize this class with a stream containing an enhanced metafile (EMF).
            <br/>2: Create an <see cref="T:DataDynamics.GDI.IRenderDevice"/> such as <see cref="T:DataDynamics.GDI.PdfRenderDevice"/> and pass it to the <see cref="!:EmfRenderer.Render"/> method.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.MetafileReader.Render(System.IO.BinaryReader,DataDynamics.GDI.IRenderDevice,System.Single,System.Single,System.IO.TextWriter)">
            <summary>
            Enumerates the metafile in the stream specified in this class's constructor.
            </summary>
            <param name="reader">A <see cref="T:System.IO.BinaryReader"/> to read a stream of enhanced metafile (EMF) data.</param>
            <param name="renderDevice">The device to render to as records are read.</param>
            <param name="height"></param>
            <param name="tracer">An output stream to write tracing information to. Can be null in which no tracing will occur.</param>
            <param name="width"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.MetafileReader.Render(System.IO.BinaryReader,DataDynamics.GDI.IRenderDevice,System.Single,System.Single,System.IO.TextWriter,System.Boolean)">
            <summary>
            Enumerates the metafile in the stream specified in this class's constructor.
            </summary>
            <param name="reader">A <see cref="T:System.IO.BinaryReader"/> to read a stream of enhanced metafile (EMF) data.</param>
            <param name="renderDevice">The device to render to as records are read.</param>
            <param name="height"></param>
            <param name="tracer">An output stream to write tracing information to. Can be null in which no tracing will occur.</param>
            <param name="width"></param>
            <param name="isEmbeddedImage">Whether the image is embedded in the emf+ record.</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.MetafileReader.PreProcessForWordpadDocument(DataDynamics.GDI.IRenderDevice,DataDynamics.GDI.Metafiles.Records.MetaRecordBase,DataDynamics.GDI.Metafiles.MetafileReader.WordpadDocumentFontHolder)">
            <summary>
            For the metafile which comes from a wordpad document object.
            In this type of metafile, there is one or more than one empty ExtTextOut records before the ExtTextOut record with the real content.
            The empty ones and the real one have the same scale values. The code uses this rule to judge this metafile type.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.MetafileReader.PostProcessForWordpadDocument(DataDynamics.GDI.IRenderDevice,DataDynamics.GDI.Metafiles.Records.MetaRecordBase,DataDynamics.GDI.Metafiles.MetafileReader.WordpadDocumentFontHolder)">
            <summary>
            will store the CreateFontIndirectW records and SelectObject record to render again if the metafile is from a wordpad document object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.MetafileReader.CreateMetafile(System.Drawing.Imaging.Metafile@,System.IO.MemoryStream@)">
            <summary>
            Creates a metafile on a memorystream, returns the metafile and a reference to the stream containing it's data.
            </summary>
            <param name="mf"></param>
            <param name="ms"></param>
            <remarks>
            <para>Upon return the caller can draw on the metafile by passing the return mf argument to <see cref="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)"/>.</para>
            <para>The metafile will be serialized to the returned ms MemoryStream with <see cref="F:System.Drawing.Imaging.EmfType.EmfOnly"/> commands.</para>
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.MetafileReader.TraceRecord(DataDynamics.GDI.Metafiles.Records.MetaRecordBase,System.IO.TextWriter)">
            <summary>
            Writes trace information for the specified record to the specified TextWriter.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.MetafileReader.WordpadDocumentFontHolder">
            <summary>
            for metafile which comes from wordpad document object, 
            save the ExtCreateFontIndirectW record and corresponding SelectObject record,
            and then render them again before the render of ExtTextOut record.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.AlphaBlend">
            <summary>
            Summary description for AlphaBlend.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.rclBounds">
            Bounding rectangle, in device units. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.xDest">
            Logical x-coordinate of the upper-left corner of the destination rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.yDest">
            Logical y-coordinate of the upper-left corner of the destination rectangle.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.cxDest">
            Logical x-coordinate of the upper-left corner of the destination rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.cyDest">
            Logical y-coordinate of the upper-left corner of the destination rectangle.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.blendOp">
            Raster-operation code. These codes define how the color data of the source rectangle 
            is to be combined with the color data of the destination rectangle to achieve the 
            final color. 
            
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.xSrc">
            Logical x-coordinate of the upper-left corner of the source rectangle.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.ySrc">
            Logical y-coordinate of the upper-left corner of the source rectangle.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.iUsageSrc">
            The iUsageSrc member can be either the DIB_PAL_COLORS or DIB_RGB_COLORS value. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.offBmiSrc">
            Offset to the source BITMAPINFO structure. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.cbBmiSrc">
            Size of the source BITMAPINFO structure. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.offBitsSrc">
            Offset to source bitmap bits.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.cxSrc">
            Width of the source rectangle, in logical units. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.AlphaBlend.cySrc">
            Height of the source rectangle, in logical units.
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.AlphaBlend.Dispose">
            <summary>
            Disposes this object (its image).
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.AlphaBlend.Dispose(System.Boolean)">
            <summary>
            Disposable pattern implementation.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.AlphaBlend.Finalize">
            <summary>
            Finalizer/disposable pattern implementation.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.Arc">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/> record.
            The rectangle is outlined by using the current pen and filled by using the current brush. 
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Arc.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the Arc record from the data in the specified BinaryReader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to read the records data from. The position should be directly after the EMR record size field.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/>.</param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Arc.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Arc.NormalizePoint(System.Drawing.PointF[],System.Drawing.PointF@,System.Double@,System.Double@)">
             <summary>
             
             NormalizePoint
            
             Normalizes a point with respect to the box whose corners are passed in
             "corners". The normalized coordinates are stored in "x" and "y".
             </summary>
             <param name="corners"></param>
             <param name="point"></param>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Arc.ScaleNormalizedPoint(System.Drawing.PointF[],System.Double,System.Double,System.Drawing.PointF@)">
            <summary>
            ScaleNormalizedPoint
            
            Scales a normalized point (x, y) with respect to the box whose corners are
            passed in "corners". The point is stored in "point". The normalized
            coordinates (-1.0, -1.0) correspond to corners[0], the coordinates
            (1.0, 1.0) correspond to corners[1].
            </summary>
            <param name="corners"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="point"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Arc.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Render
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.BackColor">
            <summary>
            Summary description for BackColor.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.BackColor.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the <see cref="!:IGdiRenderContext.IsPathUnderConstruction"/> property to true and initializes the CurrentPath property.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.BeginPath">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.BeginPath"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.BeginPath.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.BeginPath"/> class.
            </summary>
            <param name="reader">The BinaryReader to read the data from.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.CreatePen"/>.</param>
            <param name="recordSize">The total size of the record.</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.BeginPath.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the <see cref="!:IGdiRenderContext.IsPathUnderConstruction"/> property to true and initializes the CurrentPath property.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.BitBlt">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.BitBlt"/> record's data.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.BitBlt.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.BitBlt"/> record from the data at the current position in the specified <see cref="T:System.IO.BinaryReader"/>.
            </summary>
            <param name="??"></param>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.BitBlt.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.BitBlt.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Renders the BitBlt bitmap onto the specified renderDevice.
            </summary>
            <param name="renderDevice"></param>		
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ChangeClipRect">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.IntersectClipRect"/>, or the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExcludeClipRect"/> records' data.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ChangeClipRect.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.ChangeClipRect"/> class.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ChangeClipRect.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Specifies this record's clip (either intersect or exclude) to the renderDevice.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.CloseFigure">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.CloseFigure"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CloseFigure.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.CloseFigure"/> class.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CloseFigure.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Closes the the current figure on the curent path under construction on the context.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.CreateBrushIndirect"/> record data.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect.ihBrush">
            Index of brush in handle table. 
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Adds a <see cref="T:System.Drawing.Brush"/> representation of this brush to the context's handle table.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect.LogBrush32">
            <summary>
            Represents the Win32 LOGBRUSH32 structure.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect.LogBrush32.lbStyle">
            <summary>
            Specifies the brush style.
            </summary>
            <remarks>
            If lbStyle is BS_DIBPATTERN, the lbHatch member contains a handle to a packed DIB. For more information, see discussion in lbHatch.
            </remarks>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect.LogBrush32.lbColor">
            Specifies the color in which the brush is to be drawn. 
            If lbStyle is BS_HATCHED or BS_SOLID, lbColor is a COLORREF color value. 
            If lbStyle is the BS_HOLLOW or BS_PATTERN style, lbColor is ignored. 
            If lbStyle is BS_DIBPATTERN or BS_DIBPATTERNPT, the low-order word of lbColor specifies whether the bmiColors members of the BITMAPINFO structure contain explicit red, green, blue (RGB) values or indexes into the currently realized logical palette. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateBrushIndirect.LogBrush32.lbHatch">
            Specifies a hatch style. The meaning depends on the brush style defined by lbStyle. 
            If lbStyle is BS_HATCHED, the lbHatch member specifies the orientation of the lines used to create the hatch. 
            If lbStyle is BS_DIBPATTERN, the lbHatch member contains a handle to a packed DIB. 
            If lbStyle is BS_DIBPATTERNPT, the lbHatch member contains a pointer to a packed DIB.
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.CreateDIBPatternBrushPT"/> record.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.ihBrush">
            Index of brush in handle table. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.iUsage">
            Value specifying whether the bmiColors member of the BITMAPINFO structure was provided and, if so, whether bmiColors contains explicit red, green, blue (RGB) values or indices. The iUsage member must be either the DIB_PAL_COLORS or DIB_RGB_COLORS value. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.offBmi">
            Offset to BITMAPINFO structure. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.cbBmi">
            Size of BITMAPINFO structure. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.offBits">
            Offset to bitmap bits.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.cbBits">
            Size of bitmap bits. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.bitmap">
            The System.Drawing.Bitmap representation of the bitmap read from the record data.
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the CreateDIBPatternBrushPT class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.CreateBrush">
            <summary>
            Creates a new <see cref="T:System.Drawing.Brush"/> based on this records' bitmap.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Adds the brush this record represents to the device's handle table.
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.Dispose">
            <summary>
            Disposes this object (its image).
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.Dispose(System.Boolean)">
            <summary>
            Disposable pattern implementation.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreateDIBPatternBrushPT.Finalize">
            <summary>
            Finalizer/disposable pattern implementation.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.CreatePen">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.CreatePen"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreatePen.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.CreatePen"/> class.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.CreatePen.PenIndex">
            <summary>
            Returns the pen handle index. 
            </summary>
            <remarks>This is the ihPen member of the Win32 LOGPEN structure.</remarks>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.CreatePen.LogPen">
            <summary>
            Returns the LOGPEN representation of the pen.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreatePen.CreateNetPen">
            <summary>
            Creates a <see cref="T:System.Drawing.Pen"/> representation of this LogPen object.
            </summary>
            <remarks>The caller is responsible for disposing the returned pen.</remarks>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreatePen.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Adds the pen to the context's handle table.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.CreatePen.DashStyleFromWin32PenStyles(DataDynamics.GDI.Win32PenStyles)">
            <summary>
            Converts <see cref="T:DataDynamics.GDI.Win32PenStyles"/> to <see cref="T:System.Drawing.Drawing2D.DashStyle"/>.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.DeleteObject">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.DeleteObject"/>
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.DeleteObject.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            REads the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.DeleteObject"/> from the specified BinaryReader.
            </summary>
            <param name="reader">A binary reader at the position directly after the EMR recored size.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.DeleteObject"/>.</param>
            <param name="recordSize">Must be 12.</param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfHeader">
            <summary>
            Stores information for the EmfHeader or (same as Win32 ENHMETAHEADER struct).
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.EnhMetaSignature">
            The EMF signature on windows.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.EnhMetaSignatureMac">
            The EMF signature on MAC.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.Key">
            This is the key that identifies the type of header.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.bounds">
            Inclusive-inclusive bounds in device units.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.frame">
            Inclusive-inclusive Picture Frame of metafile in .01 mm units
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.signature">
            Signature.  Must be EnhMetaSignature or EnhMetaSignatureMac.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.version">
            Version number
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.records">
            Number of records in the metafile
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.descriptionSize">
            Number of chars in the unicode description string. This is 0 if there is no description string
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.palEntries">
            Number of entries in the metafile palette.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeDevice">
             Size of the reference device in pixels.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeMillimeters">
            Size of the reference device in millimeters
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.pixelFormatSize">
            Size of PIXELFORMATDESCRIPTOR information. This is 0 if no pixel format is set (Windows 95/98/Me, Windows NT 4.0 and later).
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.pixelFormatOffset">
            Offset to PIXELFORMATDESCRIPTOR. This is 0 if no pixel format is set (Windows 95/98/Me, Windows NT 4.0 and later).
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.hasOpenGL">
            TRUE if OpenGL commands are present in the metafile, otherwise FALSE.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeMicrometers">
            Size of the reference device in micrometers (Windows 98/Me, Windows 2000/XP).
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfHeader.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.EmfHeader"/> class from the data at the current position in the specified <see cref="T:System.IO.BinaryReader"/>.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfHeader.CalcDeviceDpiX">
            <summary>
            Calculates the device's DPI from the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeDevice"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeMillimeters"/> field values.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfHeader.CalcDeviceDpiY">
            <summary>
            Calculates the device's DPI from the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeDevice"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeMillimeters"/> field values.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfHeader.CalcDeviceDpmX">
            <summary>
            Calculates the device's DPM (dots per mm) from the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeDevice"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeMillimeters"/> field values.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfHeader.CalcDeviceDpmY">
            <summary>
            Calculates the device's DPM (dots per mm) from the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeDevice"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfHeader.sizeMillimeters"/> field values.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfHeader.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Initializes the context's handle table to the correct size by setting each element to null.
            Sets the <see cref="!:IGdiRenderContext.SourceDpiX"/> and <see cref="!:IGdiRenderContext.SourceDpiY"/> properties.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusBitmap">
            <summary>
            Handles the EmfPlusBitmap image.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusClear">
            <summary>
            Handles the EmfPlusClear record.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase">
            <summary>
            The base class of all Emf+ graphics objects.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase.#ctor(DataDynamics.GDI.Metafiles.Records.EmfPlusObjectType,System.Int32,System.Int64)">
            <summary>
            Allows derived classes to initialize an instance of <see cref="T:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase"/>.
            </summary>
            <param name="objectType">The type of the Emf+ object.</param>
            <param name="dataSize">The size of the object data.</param>
            <param name="position">Position of this record in the GDI comment data stream (used for identification purposes during debugging).</param>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase.ObjectType">
            <summary>
            The type of the Emf+ object.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase.DataSize">
            <summary>
            The size of the object data.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase.Position">
            <summary>
            Position of this record in the GDI comment data stream (used for identification purposes during debugging).
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Renders the object to the specified device or context.
            </summary>
            <param name="renderDevice">The device to render/draw to (e.g. draw a line or text).</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusGraphicsObjectBase.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusImage">
            <summary>
            Handles the EmfPluseImage object.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusImage.MetafileSignature">
            <summary>
            A value that identifies the type of metafile. The value for an EMF+ metafile is 0xDBC01.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusImage.GraphicsVersion">
            <summary>
            Specifies the version of operating system graphics.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusImage.Type">
            <summary>
            Specifies the type of image data.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase">
            <summary>
            The base class for all Emf+ image from image data.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase.#ctor(DataDynamics.GDI.Metafiles.Records.EmfPlusImageDataType,System.Int32,System.Int64)">
            <summary>
            Allows derived classes to initialize an instance of <see cref="T:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase"/>.
            </summary>
            <param name="imageType">The type of the image from image data.</param>
            <param name="dataSize">The size of the image data.</param>
            <param name="position">osition of this record in the GDI comment data stream (used for identification purposes during debugging).</param>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase.ImageType">
            <summary>
            The type of the image from image data.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase.DataSize">
            <summary>
            The size of the image data.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase.Position">
            <summary>
            osition of this record in the GDI comment data stream (used for identification purposes during debugging).
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Renders the record to the specified device or context.
            </summary>
            <param name="renderDevice">The device to render/draw to (e.g. draw a line or text).</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusImageBase.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusMetafile">
            <summary>
            Handles the EmfPlusMetafile image.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusMetafile.MetafileDataType">
            <summary>
            Specifies the type of metafile that is embedded in the MetafileData field.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusMetafile.MetafileData">
            <summary>
            The data of the metafile.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusObject">
            <summary>
            Handles the EmfPlusObject record.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusObject.ObjectType">
            <summary>
            Specifies the type of object to be created by this record.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusObject.ObjectID">
            <summary>
            The index in the EMF+ Object Table to associate with the object created by this record.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusObject.IsContinues">
            <summary>
            Indicates that the object definition continues on in the next EmfPlusObject record. 
            Return false in the final record that defines the object.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase">
            <summary>
            Base class for Emf+ records.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase.#ctor(DataDynamics.GDI.Metafiles.Records.EmfPlusRecordType,System.UInt16,System.UInt32,System.Int64)">
            <summary>
            Allows derived classes to initialize an instance of <see cref="T:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase"/>.
            </summary>
            <param name="recordType">The type of this record.</param>
            <param name="recordFlags">Flags for the record.</param>
            <param name="recordSize">Size of this record</param>
            <param name="position">Position of this record in the GDI comment data stream (used for identification purposes during debugging).</param>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase.Position">
            <summary>
            Position of this record in the GDI comment data stream (used for identification purposes during debugging).
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase.RecordType">
            <summary>
            Returns a value indicating the type of EMF+ record this instance represents.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase.RecordFlags">
            <summary>
            Return a value indicating the flags of the record.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase.RecordSize">
            <summary>
            Returns the size in bytes of the data for this record object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Renders the record to the specified device or context.
            </summary>
            <param name="renderDevice">The device to render/draw to (e.g. draw a line or text).</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EmfPlusRecordBase.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusScaleWordTransform">
            <summary>
            Handles the EmfPlusScaleWordTrandform record.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfPlusUnknownImage">
            <summary>.
            Handles the Emf+ unknown image.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EmfRecordType">
            <summary>
            Specifies the records available in a metafile.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.EndPath">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.EndPath"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EndPath.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.EndPath"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.EndPath.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the <see cref="!:IGdiRenderContext.IsPathUnderConstruction"/> property to true.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ExtCreateFontIndirectW">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtCreateFontIndirectW"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtCreateFontIndirectW.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.ExtCreateFontIndirectW"/> class.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ExtCreatePen">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtCreatePen"/> record.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.penIndex">
            Index to pen in handle table. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.bitmapInfoOffset">
            Offset to BITMAPINFO structure, if any. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.bitmapInfoSize">
            Size of BITMAPINFO structure, if any. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.brushBitmapBitsOffset">
            Offset to brush bitmap bits, if any. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.brushBitmapBitsSize">
            Size of brush bitmap bits, if any. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.extLogPen">
            Extended logical pen, including the elpStyleEntry member of the EXTLOGPEN structure. 
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.ExtCreatePen"/> class.
            </summary>
            <param name="reader"></param>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Adds the pen to the context's handle table.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtCreatePen.DashStyleFromWin32PenStyles(DataDynamics.GDI.Win32PenStyles)">
            <summary>
            Converts <see cref="T:DataDynamics.GDI.Win32PenStyles"/> to <see cref="T:System.Drawing.Drawing2D.DashStyle"/>.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ExtSelectClipRgn">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtSelectClipRgn"/> or <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtSelectClipRgn"/> records.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtSelectClipRgn.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.ExtSelectClipRgn"/> class.
            </summary>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtSelectClipRgn"/></param>
            <param name="recordSize">Record size in bytes.</param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ExtTextOut">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtTextOutA"/> or <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtTextOutW"/> records.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtTextOut.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.ExtTextOut"/> class.
            </summary>
            <param name="reader"></param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtTextOutA"/> or <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ExtTextOutW"/>.</param>
            <param name="recordSize">Record size in bytes.</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtTextOut.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Draws text onto the specified device.
            </summary>
            <param name="device"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText">
            <summary>
            The Win32 EMRTEXT structure.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText.ptlReference">
            Logical coordinates of the reference point used to position the string.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText.nChars">
            Number of characters in string.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText.offString">
            Offset to string.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText.fOptions">
            Value specifying how to use the application-defined rectangle. This member can be a combination of the ETO_CLIPPED and ETO_OPAQUE values.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText.rcl">
            Optional clipping and/or opaquing rectangle, in logical units.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText.offDx">
            Offset to intercharacter spacing array.
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ExtTextOut.EmrText.Read(System.IO.BinaryReader)">
            <summary>
            Reads the feilds of this structure from the specified reader. Does not read the text only the offset value to it.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.FillRgn">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/> record.
            The rectangle is outlined by using the current pen and filled by using the current brush. 
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.FillRgn.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the RoundRect record from the data in the specified BinaryReader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to read the records data from. The position should be directly after the EMR record size field.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/>.</param>
            <param name="recordSize"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.GdiComment">
            <summary>
            Handles some of the common actions embedded with the EMRGDICOMMENT record
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusGraphicsObject">
            <summary>
            Handles the general Emf+ graphics object.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusGraphicsObject.Data">
            <summary>
            Returns the record specific data if any.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusGraphicsObject.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusGraphicsObject.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Does nothing.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusRecord">
            <summary>
            A general case for all ignored Emf+ records. It just read the data of the record.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusRecord.Data">
            <summary>
            Returns the record specific data if any.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusRecord.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.GeneralEmfPlusRecord.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Does nothing.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.GenericEmfPlusImage">
            <summary>.
            Handles the Emf+ unknown image.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.GenericMetaRecord">
            <summary>
            Represents a generic metafile record.
            </summary>
            <remarks>
            This is essentially any record that does not have a class to directly represent it, an "unhandled" record by this library.
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.GenericMetaRecord.Data">
            <summary>
            Returns the record specific data if any.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.GenericMetaRecord.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.GenericMetaRecord.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Does nothing.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.LineTo">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.LineTo"/> or <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.MoveToEx"/> record's data.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.LineTo.ptl">
            The ptl/point that this structure represents.
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.LineTo.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.LineTo"/> class.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.LineTo.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Adds this objects point to the current path.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.MetaRecordBase">
            <summary>
            An abstract base class for metafile records that provides a default implementation for 
            <see cref="P:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.RecordType"/> and <see cref="P:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.RecordSize"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.#ctor(DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32,System.Int64)">
            <summary>
            Allows derived classes to initialize an instance of <see cref="T:DataDynamics.GDI.Metafiles.Records.MetaRecordBase"/>.
            </summary>
            <param name="recordType">The type of this record.</param>
            <param name="recordSize">Size of this record</param>
            <param name="position">Position of this record in the image stream (used for identification purposes during debugging).</param>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.Position">
            <summary>
            Position of this record in the image stream (used for identification purposes during debugging).
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.RecordType">
            <summary>
            Returns a value indicating the type of meta file record this instance represents.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.RecordSize">
            <summary>
            Returns the size in bytes of the data for this record object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Renders the record to the specified device or context.
            </summary>
            <param name="renderDevice">The device to render/draw to (e.g. draw a line or text).</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.MetaRecordBase.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ModifyWorldTransform"/> record.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform.ModifyWorldTransformMode">
            <summary>
            Specifies the possible values for the <see cref="F:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform.mode"/> member.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform.ModifyWorldTransformMode.Identity">
            Resets the current world transformation by using the identity matrix. If this mode is specified, the XFORM structure pointed to by lpXform is ignored.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform.ModifyWorldTransformMode.LeftMultiply">
            Multiplies the current transformation by the data in the XFORM structure. (The data in the XFORM structure becomes the left multiplicand, and the data for the current transformation becomes the right multiplicand.)
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform.ModifyWorldTransformMode.RightMultiply">
            Multiplies the current transformation by the data in the XFORM structure. (The data in the XFORM structure becomes the right multiplicand, and the data for the current transformation becomes the left multiplicand.)
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform"/> class.
            </summary>
            <param name="recordType">Inidcates the type of record, must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ModifyWorldTransform"/></param>
            <param name="recordSize">The total size of the record.</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Renders this records data to the specified render context.
            Not implemented at this time.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.Pie">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.Pie"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Pie.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the Pie record from the data in the specified BinaryReader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to read the records data from. The position should be directly after the EMR record size field.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.Pie"/>.</param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Pie.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.Pie.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Render
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.PolyPolyGon16">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/> record.
            The rectangle is outlined by using the current pen and filled by using the current brush. 
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.PolyPolyGon16.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the RoundRect record from the data in the specified BinaryReader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to read the records data from. The position should be directly after the EMR record size field.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/>.</param>
            <param name="recordSize"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.PolyShape16">
            <summary>
            Represents a <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.PolyBezier16"/>, 
            <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.PolyBezierTo16"/>,
            <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.Polygon16"/>,
            <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.PolyLine16"/>,
            or a <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.PolyLineTo16"/>.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.PolyShape16.bounds">
            Bounding rectangle, in device units.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.PolyShape16.pointCount">
            Number of points in the array. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.PolyShape16.linePoints">
            Array of 16-bit points, in logical units. 
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.PolyShape16.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.PolyShape16"/> class.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.PolyShape16.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            If a path is under construction (<see 
            cref="!:IRenderDevice.IsPathUnderConstruction"/>) the shape is added to the current
            path.  Alternatively, if a path is not under construction, the shape is rendered.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.RectangleRecord">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.Rectangle"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.Ellipse"/> records.
            The rectangle is outlined by using the current pen and filled by using the current brush. 
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.RectangleRecord.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            The rectangle is outlined by using the current pen and filled by using the current brush. 
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.RestoreDC">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RestoreDC"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.RestoreDC.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.RestoreDC"/> class.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.RestoreDC.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Tells the render device to restore it's current state.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.RoundRect">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/> record.
            The rectangle is outlined by using the current pen and filled by using the current brush. 
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.RoundRect.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the RoundRect record from the data in the specified BinaryReader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to read the records data from. The position should be directly after the EMR record size field.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/>.</param>
            <param name="recordSize"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SaveDC">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SaveDC"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SaveDC.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.SaveDC"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SaveDC.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Tells the render device to save it's current state.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SelectClipPath">
            <summary>
            Summary description for SelectClipPath.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SelectClipPath.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.SelectClipPath"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SelectClipPath.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the <see cref="!:IGdiRenderDevicePath.CurrentPath"/> as the current clipping path using a combination mode specifed in this records data.
            </summary>
            <remarks>The <see cref="T:DataDynamics.GDI.IRenderDevice"/> specified must contain a closed path.</remarks>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SelectObject">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SelectObject"/> EMF record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SelectObject.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of SelectObject.
            </summary>
            <param name="reader"></param>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SelectObject.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Modifies the specified IGdiRenderContext by selecting a GDIObject from the context's handle table to be a "current object".
            </summary>
            <param name="renderDevice"></param>
            <remarks>
            This member will change the current value of the 
            <see cref="!:IGdiRenderContext.Pen"/>,
            <see cref="!:IGdiRenderContext.Font"/>, or <see cref="!:IGdiRenderContext.Font"/>.
            </remarks>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetBkMode">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetBKMode"/> record.
            </summary>
            <remarks>
            The SetBkMode function sets the background mix mode of the specified device context. 
            The background mix mode is used with text, hatched brushes, and pen styles that are 
            not solid lines. 
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetBkMode.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.SetBkMode"/> class.
            </summary>
            <param name="reader"></param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetBKMode"/>.</param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetBkMode.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the <see cref="P:DataDynamics.GDI.IRenderDevice.BackgroundFillMode"/>
            </summary>
            <param name="device"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetExtent">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetWindowExtEx"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetViewPortExtEx"/> records.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetExtent.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetMapMode">
            <summary>
            Represents <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetMapMode"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetMapMode.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new insance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.SetMapMode"/> class.
            </summary>
            <param name="reader"></param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetMapMode"/>.</param>
            <param name="recordSize">Size of record in bytes, should be ?.</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetMapMode.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the current mapping mode on the render context.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetMetaRgn">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetMetaRgn"/> record.	
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetMetaRgn.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the SetMetaRgn record from the data in the specified BinaryReader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to read the records data from. The position should be directly after the EMR record size field.</param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.RoundRect"/>.</param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetMetaRgn.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetMetaRgn.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Render
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetOrg">
            <summary>
            Handles <see cref="!:EmfRecordType.SetViewportOrgEx"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetWindowOrgEx"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetOrg.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the <see cref="!:IRenderDevice.WindowOrign"/> or <see cref="!:IRenderDevice.ViewportOrgEx"/>
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetOrg.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetPolyFillMode">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetPolyFillMode"/> record.
            </summary>
            <remarks>
            The SetBkMode function sets the background mix mode of the specified device context. 
            The background mix mode is used with text, hatched brushes, and pen styles that are 
            not solid lines. 
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetPolyFillMode.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.SetBkMode"/> class.
            </summary>
            <param name="recordSize"></param>
            <param name="reader"></param>
            <param name="recordType">Must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetBKMode"/>.</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetPolyFillMode.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the <see cref="P:DataDynamics.GDI.IRenderDevice.BackgroundFillMode"/>
            </summary>
            <param name="device"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetROP2">
            <summary>
            Summary description for SetROP2.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetScaleExt">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ScaleViewPortExtEx"/> and <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ScaleWindowExtEx"/> records.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetScaleExt.ToString">
            <summary>
            Returns a simple string representing this object (for tracing purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetTextAlign">
            <summary>
            Handles the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.SetTextAlign"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetTextAlign.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.SetTextAlign"/> class.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetTextAlign.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the text alignment on the specified device.
            </summary>
            <param name="device"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetTextColor">
            <summary>
            Summary description for SetTextColor.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetTextColor.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Sets the text color on the render device.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.SetWorldTransform">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ModifyWorldTransform"/> record.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetWorldTransform.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.ModifyWorldTransform"/> class.
            </summary>
            <param name="reader"></param>
            <param name="recordType">Inidcates the type of record, must be <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.ModifyWorldTransform"/></param>
            <param name="recordSize">The total size of the record.</param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.SetWorldTransform.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Renders this records data to the specified render context.
            Not implemented at this time.
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.StretchDIBits">
            <summary>
            Represents the <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.StretchDIBits"/> record's data.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.rclBounds">
            Bounding rectangle, in device units. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.xDest">
            Logical x-coordinate of the upper-left corner of the destination rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.yDest">
            Logical y-coordinate of the upper-left corner of the destination rectangle.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.xSrc">
            Logical x-coordinate of the upper-left corner of the source rectangle.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.ySrc">
            Logical y-coordinate of the upper-left corner of the source rectangle.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.cxSrc">
            Width of the source rectangle, in logical units. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.cySrc">
            Height of the source rectangle, in logical units.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.offBmiSrc">
            Offset to the source BITMAPINFO structure. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.cbBmiSrc">
            Size of the source BITMAPINFO structure. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.offBitsSrc">
            Offset to source bitmap bits.
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.iUsageSrc">
            Value of the bmiColors member of the BITMAPINFO structure. 
            The iUsageSrc member can be either the DIB_PAL_COLORS or DIB_RGB_COLORS value. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.dwRop">
            Raster-operation code. These codes define how the color data of the source rectangle 
            is to be combined with the color data of the destination rectangle to achieve the 
            final color. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.cxDest">
            Logical width of the destination rectangle. 
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.Records.StretchDIBits.cyDest">
            Logical height of the destination rectangle. 
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.StretchDIBits.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.StretchDIBits"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.StretchDIBits.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Render
            </summary>
            <param name="renderDevice"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.StretchDIBits.Dispose">
            <summary>
            Disposes this object (its image).
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.StretchDIBits.Dispose(System.Boolean)">
            <summary>
            Disposable pattern implementation.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.StretchDIBits.Finalize">
            <summary>
            Finalizer/disposable pattern implementation.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.Records.StrokeFillPath">
            <summary>
            Represents the Win32 <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.StrokeAndFillPath"/>, <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.FillPath"/>, or <see cref="F:DataDynamics.GDI.Metafiles.Records.EmfRecordType.StrokePath"/> records.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.StrokeFillPath.#ctor(System.IO.BinaryReader,DataDynamics.GDI.Metafiles.Records.EmfRecordType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.Records.StrokeFillPath"/> class.
            </summary>
            <param name="recordType"></param>
            <param name="recordSize"></param>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.Records.StrokeFillPath.Render(DataDynamics.GDI.IRenderDevice)">
            <summary>
            Fills and or strokes the current path specified on the context.
            </summary>
            <param name="renderDevice"></param>
            <param name="context"></param>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader">
            <summary>
            Defines the fields of a placeable metafile header.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.Key">
            <summary>
            Identification value that indicates the presence of a placeable metafile header. This value is always 0x9AC6CDD7.
            This key is also used as the <see cref="!:MetaRecordBase.RecordType"/>.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.Hmf">
            <summary>
            Handle to the metafile in memory. When written to disk, this field is not used and will always contains the value 0.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.BoundingBox">
            <summary>
            Destination rectangle, measured in twips, for displaying the metafile. 
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.Inch">
            <summary>
            Number of twips per inch used to represent the image.
            Normally, there are 1440 twips per inch; however, this number can be changed to scale the image. 
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.Reserved">
            <summary>
            Not used and is always set to 0. 
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.Checksum">
            <summary>
            Checksum for the previous 10 WORDs in the header. This value can be used to determine whether the metafile has become corrupted.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.Size">
            <summary>
            Size of the PlaceableMetafileHeader structure in bytes.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader"/> class.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader.Read(System.IO.BinaryReader)">
            <summary>
            Reads a <see cref="!:EmfRecordType.PlaceableMetafileHeader"/> record from the reader begining at offset 4 (the key field is not read by this function as typically the caller will need to read it to determine how to procede), and returns a <see cref="T:DataDynamics.GDI.Metafiles.WMF.PlaceableMetafileHeader"/> object that represents the data.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.WMF.PWMFRect16.Read(System.IO.BinaryReader)">
            <summary>
            Reads a PWMFRect16 structure from the specified <see cref="T:System.IO.BinaryReader"/>.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.WMF.WmfHeader">
            <summary>
            This is the header for a traditional metafile (not an enhanced metafile/EMF).
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.WmfHeader.Type">
            <summary>
            Specifies whether the metafile is in memory or recorded in a disk file. This member can be one of the following values.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.WmfHeader.HeaderSize">
            <summary>
            Specifies the size, in words, of the metafile header. 
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.WmfHeader.Version">
            <summary>
            Specifies the system version number. 
            The version number for metafiles that support device-independent bitmaps (DIBs) is 0x0300. Otherwise, the version number is 0x0100. 
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.WmfHeader.Size">
            <summary>
            Specifies the size, in words, of the file. 
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.WmfHeader.NoObjects">
            <summary>
            Specifies the maximum number of objects that exist in the metafile at the same time. 
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.WmfHeader.MaxRecord">
            <summary>
            Specifies the size, in words, of the largest record in the metafile.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.Metafiles.WMF.WmfHeader.NoParameters">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.Metafiles.WMF.WmfHeader.WmfType">
            <summary>
            Represents the different types of windows metafiles.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.Metafiles.WMF.WmfHeader.Read(System.IO.BinaryReader)">
            <summary>
            Reads this structures data from the specified <see cref="T:System.IO.BinaryReader"/>.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.PdfRenderContext">
            <summary>
            Contains current context information (handle table, selected object, etc..) during the rendering of a metafile with PDF specific extentions.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.GDI.PdfRenderContext"/> class.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderContext.LocationOffset">
            <summary>
            Specifies the location offset on the target PDF page that render should begin at (in inches).
            </summary>
            <remarks>
            This is essentially a translation transform, but since know the units that will be used on a given metafile can be different, this is a seperate translation in a defined measurement unit (inches).
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.TransformPoints(System.Drawing.PointF[])">
            <summary>
            Transforms an array of points from the world coordinate space to the page coordinate space using the current transformation of this object.
            Then converts the units to inches for the PDFRender lib's PsPage.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.TransformPoint(System.Drawing.PointF@)">
            <summary>
            Transforms an array of points from the world coordinate space to the page coordinate space using the current transformation of this object.
            Then converts the units to inches for the PDFRender lib's PsPage.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.TransformPointScaleOnly(System.Drawing.PointF@)">
            <summary>
            Same as above but used for font height scaling , so no remapping to inches of offsets
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.ScaleTransformPoint(System.Drawing.PointF@)">
            <summary>
            Transform the point using the current scale transformation.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.TransformRectangle(System.Drawing.RectangleF)">
            <summary>
            Transforms an the specified rectangle from the world coordinate space to the page coordinate space using the current transformation of this object.
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderContext.TransformedPenWidth">
            <summary>
            Returns the with of the current <see cref="T:System.Drawing.Pen"/> transformed based on the current horizontal scale transform, and convereted to inches.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderContext.FillColorFromBrush">
            <summary>
            Returns the current fill color from the current <see cref="T:System.Drawing.Brush"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.MapModeToInchScaleX">
            <summary>
            Returns the scaling factor to make horizontal units inches based on the current map mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.TransformPointsToInches(System.Drawing.PointF[])">
            <summary>
            Transforms the points to inches (as PDFRender is using Inches #*!@).
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderContext.MapModeToInchScaleY">
            <summary>
            Returns the scaling factor to make horizontal units inches based on the current map mode.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.GDI.PdfRenderDevice">
            <summary>
            Summary description for PdfRenderDevice.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.#ctor(DataDynamics.DDLib.PdfEngine.PsPage,DataDynamics.DDLib.PdfEngine.PdfRender)">
            <summary>
            Initializes a new instance of <see cref="T:DataDynamics.GDI.PdfRenderDevice"/>.
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawLines(System.Drawing.PointF[])">
            <summary>
            Implementation of <see cref="M:DataDynamics.GDI.IRenderDevice.DrawLines(System.Drawing.PointF[])"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawLinesTo(System.Drawing.PointF[])">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.DrawLineTo(System.Drawing.Point)"/>.
            </summary>
            <remarks>
            A line is drawn from the current position to the first point specified by the lppt parameter by using the current pen. 
            For each additional line, the function draws from the ending point of the previous line to the next point specified by lppt. 
            This method moves the current drawing position to the ending point of the last line. 
            If the line segments drawn by this function form a closed figure, the figure is not filled. 
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawBeziers(System.Drawing.PointF[])">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.DrawBeziers(System.Drawing.PointF[])"/>.
            </summary>
            <remarks>
            The first curve is drawn from the first point to the fourth point by using the  second and third points as control points. 
            Each subsequent curve in the sequence needs exactly three more points: the ending point of the previous curve is used as the starting point, the next two points in the sequence are control points, and the third is the ending point.
            Therefore the number of points must be "one more than three times the number of curves".
            The current position is neither used nor updated by the PolyBezier function.
            The figure is not filled.
            This function draws lines by using the current pen.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawBeziersTo(System.Drawing.PointF[])">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.DrawBeziersTo(System.Drawing.PointF[])"/>.
            </summary>
            <remarks>
            The first curve is drawn from the current drawing position to the third point by using the first two points as control points. 
            For each  subsequent curve, the function needs exactly three more points, and uses the ending point of the previous curve as the starting point for the next.
            The figure is not filled. This function draws lines by using the current pen.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawLineTo(System.Drawing.Point)">
            <summary>
            Implementation of <see cref="M:DataDynamics.GDI.IRenderDevice.DrawLineTo(System.Drawing.Point)"/>.
            </summary>
            <param name="toPoint"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.MoveTo(System.Drawing.Point)">
            <summary>
            Moves the current drawing point to the specified point.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.Polygon(System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of Point structures.
            
            </summary>
            <param name="points"></param>
            <remarks>
            Every pair of two consecutive points in the array specify a side of the polygon. 
            In addition, if the last point and the first point of the array do not coincide, they 
            specify the last side of the polygon.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.Polygons(DataDynamics.GDI.GdiPolygon[])">
            <summary>
             Draws an array of polygons as one drawing path
            </summary>
            <param name="polys"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawPolygons(DataDynamics.GDI.GdiPolygon[],System.Drawing.Color,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Single)">
            <summary>
            Draws given array of the polygons  as one PDF path, using currently selected fill color, polygon fillmode, and stroke parameters
            </summary>	
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawPolygons(DataDynamics.GDI.GdiPolygon[],System.Drawing.Image,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color)">
            <summary>
            Draws given array of the polygons  as one PDF path, using currently selected pattern, fill mode etc
            </summary>
            <param name="polys"></param>
            <param name="fillImage">The image to use to fill the polygon with.</param>		
            <param name="polyFillMode">The fill mode to use with this path</param>				
            <param name="monoChromeFillColor"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Implementation of <see cref="M:DataDynamics.GDI.IRenderDevice.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32)"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Implementation of <see cref="M:DataDynamics.GDI.IRenderDevice.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="color"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Implementation of <see cref="M:DataDynamics.GDI.IRenderDevice.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="image"></param>
            <param name="color"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.RoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.RoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.Ellipse(System.Drawing.Rectangle)">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.Ellipse(System.Drawing.Rectangle)"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.CreateTransformedRoundRectPath(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a pdfPath that is the roun rect defined by the specified arguments.
            </summary>
            <remarks>The returned path is transformed and ready to go directly to PDF.</remarks>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.GraphicsPathToPdfPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
            <summary>
            Converts a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> to a PdfPath.
            </summary>
            <param name="path">The path to be converted.</param>
            <param name="transformPoints">
            True if the current <see cref="T:System.Security.Cryptography.Xml.Transform"/> should be applied to the points of the path.
            </param>
            <returns>
            The PdfPath will have transformed points, in inches prepared for PsPage.
            </returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.GraphicsPathToPdfPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean,System.Boolean)">
            <summary>
            Converts a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> to a PdfPath.
            </summary>
            <param name="path">The path to be converted.</param>
            <param name="transformPoints">
            True if the current <see cref="T:System.Security.Cryptography.Xml.Transform"/> should be applied to the points of the path.
            </param>
            <param name="isDeviceUnits">
            True if it is device units, otherwise it's world units. If isDeviceUnits is true transformPoints must be false.
            </param>
            <returns>
            The PdfPath will have transformed points, in inches prepared for PsPage.
            </returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.ConvertPathPointsToPdfPath(System.Int32,System.Drawing.PointF[],System.Byte[])">
            <summary>
            converts array of points to pdf path
            </summary>
            <param name="pointCount"></param>
            <param name="pathPoints"></param>
            <param name="pointTypes"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.IntersectClipDeviceUnits(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            intersect Clip in DeviceUnits
            </summary>
            <param name="clipPath"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image"></param>
            <param name="destRect"></param>
            <param name="srcRect"></param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.GetCharPlaces(System.String)">
            <summary>
            Get Char Places.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.MeasureStringByCharacterRanges(System.String,System.Drawing.Font)">
            <summary>
            Calculate the string size by graphics' MeasureCharacterRanges method.
            </summary>
            <param name="measureString">The string.</param>
            <param name="font">Font.</param>
            <returns>The string size</returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.DrawString(System.String,System.Drawing.Point)">
            <summary>
            Draws the specified string a the specified location with the current <see cref="P:DataDynamics.GDI.PdfRenderDevice.TextColor"/>.
            </summary>
            <param name="s"></param>
            <param name="point">Text **baseline** position. **Y coordinate is baseline**.</param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.CalculateSweepAngle(DataDynamics.GDI.RectL,System.Drawing.PointF,System.Drawing.PointF,System.Single@,System.Single@)">
            <summary>
            Calculate the sweep angle, and also the start and end angle in clockwise.
            </summary>
            <param name="rect">the bounds of the ellipse.</param>
            <param name="start">the start point of the pie in counter clockwise.</param>
            <param name="end">the end point of the pie in counter clickwise.</param>
            <param name="startAngle_Clockwise">the start angle of the pie in clockwise.</param>
            <param name="endAngle_Clockwise">the end angle of the pie in clockwise.</param>
            <returns>The sweep angle of the pie.</returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.TransformAngle(System.Single)">
            <summary>
            Transform an angle measured in degrees counterclockwise from the x-axis
            to an angle measured in degrees clockwise from the x-axis.
            Force the result angle from -180 to 180.
            e.g.
            From -90 To 90;
            From 90  To -90;
            From 270 To 90;
            From -270 to -90;
            </summary>
            <param name="angle">the angle in counterclockwise to transform. from -360 to 360.</param>
            <returns>the transformed angle in clockwise. from -180 to 180.</returns>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.CalculateAngle_CounterClockwise(DataDynamics.GDI.RectL,System.Drawing.PointF)">
            <summary>
            Calculate the angle in degrees counterclockwise from the x-axis.
            </summary>
            <remarks>
            The angle is is based on the x-axis and the line through the center point and the given point.
            </remarks>
            <param name="box">the bounds of the ellipse.</param>
            <param name="point">the point to define the angle.</param>
            <returns>the angle in degrees counterclockwise from the x-axis. from -360 to 360.</returns>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.IsWordpadDocObject">
            <summary>
            To mark if the metafile object is from a wordpad document object.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.SaveContext">
            <summary>
            Saves the current state of the specified device context (DC) by copying data 
            describing selected objects and graphic modes (such as the bitmap, brush, palette, 
            font, pen, region, drawing mode, and mapping mode) to a context stack.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.SaveContext(System.Int32)">
            <summary>
            Saves the current state of the specified device context (DC) by copying data 
            describing selected objects and graphic modes (such as the bitmap, brush, palette, 
            font, pen, region, drawing mode, and mapping mode) to a context stack ans sets an ID for it.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.RestoreContext(System.Int32)">
            <summary>
            Restores a context to the specified state. The context is restored by popping state 
            information off a stack created by earlier calls to the <see cref="M:DataDynamics.GDI.PdfRenderDevice.SaveContext"/> 
            function.
            </summary>
            <param name="relative">Relative instance to restore. 
            Specifies the saved state to be restored. If this parameter is positive, nSavedDC 
            represents a specific instance of the state to be restored. If this parameter is 
            negative, nSavedDC represents an instance relative to the current state. For 
            example, ? restores the most recently saved state.
            </param>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.RestoreToState(System.Int32)">
            <summary>
            returns specified context and number of the restore operators applied
            if returns null so contexts were poped
             </summary>		
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.IntersectClip(System.Drawing.Rectangle)">
            <summary>
            Modifies the current clipping path by intersecting it with the specified clipping rectangle.
            </summary>		
            		
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.ResetClip">
            <summary>
            resets clip for pdf page by rolling back to a fistly saved context state
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.IntersectClipWithCurrentPath">
            <summary>
            Modifies the current clipping path by intersecting it with the current path (built with commands between calls to <see cref="M:DataDynamics.GDI.PdfRenderDevice.BeginPath"/> and <see cref="M:DataDynamics.GDI.PdfRenderDevice.EndPath"/>).
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.HandleTable">
            <summary>
            The table of GDI objects 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.Pen">
            <summary>
            The current pen that applicable drawing operations will use.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.Brush">
            <summary>
            The current brush that applicable drawing operations will use.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.Rop2">
            <summary>
            Rop2
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.BackgroundFillMode">
            <summary>
            The SetBkMode function sets the background mix mode of the specified device context. The background mix mode is used with text, hatched brushes, and pen styles that are not solid lines. 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.PolyFillMode">
            <summary>
            The PolyFillMode function sets the background mix mode of the specified device context. The background mix mode is used with text, hatched brushes, and pen styles that are not solid lines. 
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.Font">
            <summary>
            The current Font that applicable drawing operations will use.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.FontEscapement">
            <summary>
            Used to specify rotated fonts.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.BeginPath">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.BeginPath"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.EndPath">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.EndPath"/>.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.CloseFigure">
            <summary>
            Implements <see cref="M:DataDynamics.GDI.IRenderDevice.CloseFigure"/>.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.Frame">
            <summary>
            The frame of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.SourceDpiX">
            <summary>
            The horizontal DPI of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.SourceDpiY">
            <summary>
            The veritcal DPI of the source metafile.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.MapMode">
            <summary>
            Sets or returns the current mapping mode.
            </summary>
            <remarks>
            The SetMapMode function sets the mapping mode of the specified device context. The mapping mode defines the unit of measure used to transform page-space units into device-space units, and also defines the orientation of the device's x and y axes.
            </remarks>
        </member>
        <member name="M:DataDynamics.GDI.PdfRenderDevice.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Multiplies this object's current transformation matrix by the specified matrix in the specified order.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.LocationOffset">
            <summary>
            Specifies the location offset on the target render device (such as the actual PDF page) that render should begin at (in inches).
            </summary>
            <remarks>
            This is essentially a translation transform, but since know the units that will be used on a given metafile can be different, this is a seperate translation in a defined measurement unit (inches).
            </remarks>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.TextColor">
            <summary>
            Sets or returns the color that should be used to draw text.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.BackColor">
            <summary>
            Sets or returns the color that should be used to draw the background.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.TextAlign">
            <summary>
            Sets or returns alignment options for text.
            </summary>
        </member>
        <member name="P:DataDynamics.GDI.PdfRenderDevice.Size">
            <summary>
            he Size of the device.
            </summary>
        </member>
        <member name="T:DataDynamics.GDI.RectL">
            <summary>
            Equivelent of the RECTL structure in Win32.
            Rectangle that stores Top, Left, Right and Bottom values instead of Top, Left, Width, Height.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.RectL.Top">
            <summary>
            Returns the top position of the rectangle.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.RectL.Left">
            <summary>
            Returns the left position of the rectangle.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.RectL.Right">
            <summary>
            Returns the right position of the rectangle.
            </summary>
        </member>
        <member name="F:DataDynamics.GDI.RectL.Bottom">
            <summary>
            Returns the bottom position of the rectangle.
            </summary>
        </member>
        <member name="M:DataDynamics.GDI.RectL.Read(System.IO.BinaryReader)">
            <summary>
            Reads the top, left, right, bottom (32 bit) values from the stream and returns a <see cref="T:DataDynamics.GDI.RectL"/>.  
            </summary>
            <returns>
            A <see cref="T:DataDynamics.GDI.RectL"/> which is equivelent to the Win32 RECTL structure.
            </returns>
        </member>
        <member name="T:DataDynamics.GDI.StreamUtil">
            <summary>
            Utilies for working with streams and binaryreaders.
            </summary>
        </member>
        <member name="T:DataDynamics.Drawing.GDI.MatrixTransform">
            <summary>
            Provides information and functionality for performing linear matrix transformations.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:DataDynamics.Drawing.GDI.MatrixTransform.TransformPoints(System.Drawing.PointF[])">
            <summary>
            Transforms the specified points from the world coordinate space according to this matrix.
            </summary>
            <param name="p"></param>
        </member>
        <member name="T:DataDynamics.ActiveReports.Export.InternalC.ExportContext">
            <summary>
            This class is basically the same as RenderContext in ActiveReports, but customized for contextual information specific to Exports and not a Graphics.  
            Much of the functionality is exactly the same as RenderContext.
            However, RenderContext is tightly coupled with each of the CanvasItem's and uses CanvasItem.Render to maintain/update RenderContext, which also does rendering to a Grahpics, which is inappropriate and inefficient for Excel or any Export filter. 
            </summary>
            <remarks>
            Differences between ExportContext and RenderContext:
            - The current cliprect is manged by ExportContext here, not Graphics like RenderContext. 
            - The ClipStack is a stack of RectangleF structs, and not System.Drawing.Drawing2D.Region.  All our clips are rectangles in RDF and I think regions were only used in RenderContext because that's what Graphics uses and rendercontext stores it's "current cliprect" on the Grahpics, not RenderContext.
            </remarks>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.#ctor">
            <summary>
            Creates an instance of the ExportContext.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.PushClipRect">
            <summary>
            Takes the current clipRect (in CurrentClipRect property) and pushes it onto the ClipStack.  
            The current cliprect is still maintained as the "current cliprect".
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.PopClipRect">
            <summary>
            Takes the last cliprect put onto the stack and sets it as the current cliprect.
            If there are no cliprects on the stack then the current cliprect is cleared, and IsClipActive is set to false.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.IntersectClipRect(System.Drawing.RectangleF)">
            <summary>
            Uses member method RectangleF.Intersect on the currentCliprect to calculate the intersecting clipping rectangle and sets that resulting clip rect as the current clip rect available via the ClipRect property.
            </summary>
            <param name="intersectClip">The clipping rectangle to intersect the current clipping rectangle with.</param>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.ClipRect">
            <summary>
            Returns the current cliprect bounding the output device/surface.
            </summary>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.ClipStack">
            <summary>
            Returns the Stack of RectangleF structs.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.Clone">
            <summary>
            Returns an instance of ExportContext that contains an exact replica of the data on this object.
            ** Note this method does not copy the m_theFonts font follection.  
            Only .Font/m_theFont. For performance reasons, and because I don't see why it's needed in most cases where you would clone this class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.SelectFont(System.Int32)">
            <summary>
            Sets the Font property's value to the font at the specified Index.
            </summary>
            <param name="fontIndex"></param>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.CharacterSpacing">
            <summary>
            The character spacing
            </summary>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.LineSpacing">
            <summary>
            The line spacing
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DataDynamics.ActiveReports.TraceHelper" -->
        <member name="M:DataDynamics.ActiveReports.TraceHelper.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TraceHelper
            </summary>
            <param name="traceTag">Trace message tag. Also used as trace configuration switch</param>
            <param name="description"></param>
        </member>
        <member name="M:DataDynamics.ActiveReports.TraceHelper.Info(System.String,System.Object[])">
            <summary>
            Writes informational message
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.ImageEncoding">
            <summary>
            Provides functionality for Image Encoders &amp; Decoders.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.ImageEncoding.GetImageCodecInfo(System.String)">
            <summary>
            Gets an Image encoder with the specified mimeType such as "image/jpeg".
            </summary>
            <param name="mimeType"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.ImageEncoding.CreateEncoderParamQuality(System.Int64)">
            <summary>
            Returns an EncoderParameter that specifies image Quality used for encoders.  Used with Image.Save.
            </summary>
            <param name="qualityValue">
            Value must be in the range 1-100.
            </param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.ImageEncoding.CreateEncoderParamCompression(System.Drawing.Imaging.EncoderValue)">
            <summary>
            Returns an EncoderParameter that specifies a type of Compression used for encoders. Used with Image.Save.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.ImageEncoding.CreateEncoderParamTiffFrame(System.Drawing.Imaging.EncoderValue)">
            <summary>
            Creates and returns an EncoderParameter for the SaveFlag category.  Used with the tiff encoder.
            </summary>
            <param name="value">Should be one of the following values: 
            EncoderValue.Flush, EncoderValue.FrameDimensionPage, EncoderValue.LastFrame, or EncoderValue.MultiFrame.
            </param>
            <returns>An EncoderParameter with the specified EncoderValue set in the SaveFlag category.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.ImageEncoding.ContainsAlpha(System.Drawing.Image)">
            <summary>
            Returns true if the image has transparency in it.
            </summary>
            <param name="image">
            The image to be tested for transparency.
            </param>
            <returns>True if the specified image contains any trancparency areas.</returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.OutlineMetricBase">
            <summary>
            Base class for all font metrics
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.SafeOutlineMetric">
            <summary>
            Provides font metrics from GDI+ methods
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.MemoryTributary">
            <summary>
            MemoryTributary is a re-implementation of MemoryStream that uses a dynamic list of byte arrays as a backing store, instead of a single byte array, the allocation
            of which will fail for relatively small streams as it requires contiguous memory.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.MemoryTributary.CurrentBlock">
            <summary>
            The block of memory currently addressed by Position
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.MemoryTributary.CurrentBlockId">
            <summary>
            The id of the block currently addressed by Position
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.MemoryTributary.CurrentBlockOffset">
            <summary>
            The offset of the byte currently addressed by Position, into the block that contains it
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.MemoryTributary.ToArray">
            <summary>
            Returns the entire content of the stream as a byte array. This is not safe because the call to new byte[] may 
            fail if the stream is large enough. Where possible use methods which operate on streams directly instead.
            </summary>
            <returns>A byte[] containing the current data in the stream</returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.OutlineMetric">
            <summary>
            Provides font metrics from GDI methods
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfBookmarks">
            <summary>
            Summary description for PDFBookmarks.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions">
            <summary>
            Encapsulates viewer preferences and document information/metadata for an output PDF document.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions"/> class.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.HideToolbar">
            <summary>
            True to hide the viewer application’s toolbars when the document is active. Default value: false.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.HideMenubar">
            <summary>
            True to hide the viewer application’s menu bar when the document is active. Default value: false.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.HideWindowUI">
            <summary>
            True to hide user interface elements in the document’s window (such as scroll bars and navigation controls), leaving only the document’s contents displayed. Default value: false.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.FitWindow">
            <summary>
            True to resize the document’s window to fit the size of the first displayed page. Default value: false.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.CenterWindow">
            <summary>
            True to position the document’s window in the center of the screen. Default value: false.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.DisplayTitle">
            <summary>
            True if the window’s title bar should display the document title taken from the Title entry in the document information/metadata.  If this value is false, the title bar should instead display the name of the PDF file containing the document. Default value: false.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.DisplayMode">
            <summary>
            Specifies how the document should be displayed when opened. Default value: <see cref="F:DataDynamics.DDLib.PdfEngine.DisplayMode.None"/>.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.Title">
            <summary>
            The document’s title.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.Author">
            <summary>
            The name of the person who created the document.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.Subject">
            <summary>
            The subject of the document.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.Keywords">
            <summary>
            Keywords associated with the document.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.Creator">
            <summary>
            If the document was converted to PDF from another format, the name of the application (for example, Adobe FrameMaker®) that created the original document from which it was converted.
            This shows up as "Application" in Acrobat 6 viewer under Document Properties.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.Producer">
            <summary>
            If the document was converted to PDF from another format, the name of the application (for example, Acrobat Distiller) that converted it to PDF.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.CreationDate">
            <summary>
            The date and time the document was created. Determined when document is exported.
            Used for sync data between Info and Xmp sections.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.AdditionalMetadata">
            <summary>
            Additional metadata associated with this document
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.Attachments">
            <summary>
            Document level file attachments
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.WriteDocInfoDictionary(DataDynamics.DDLib.PdfEngine.PdfStreamWriter)">
            <summary>
            Writes out the DocumentInformationDictionary begining with the indirect object keyword obj and ending with the endobj keyword.
            </summary>
            <param name="writer">The Writer to write the object to and also revealing encryption information if applicable, as some element values of this dictionary are encrypted when encryption is on.</param>
            <returns>The object number for the indirect object.  This number should used to write an object reference in the trailer dictionary's Info element.</returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.DisplayMode">
            <summary>
            Used to specify <see cref="P:DataDynamics.DDLib.PdfEngine.PdfDocumentOptions.DisplayMode"/>.
            </summary>
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.DisplayMode.None">
            Neither document outline nor thumbnail images are visible.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.DisplayMode.Outlines">
            The document outline is visible.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.DisplayMode.Thumbs">
            Thumbnail images are visible. If thumbnails and outline flags are set, thumbnails will be shown.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.DisplayMode.FullScreen">
            Full-screen mode with no menu bar, window controls, or any other window visible.
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfElementsSerializer">
            <summary>
            Utility class that performs reading/writing PdfElement collection to/from Stream
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElementsSerializer.Map``1(DataDynamics.DDLib.PdfEngine.PdfElementsSerializer.PdfElementType)">
            <summary>
            Maps PdfElementType and PdfElement type also fills ctors 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="et"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElementsSerializer.EnsureInitialized">
            <summary>
            Ensures that we have valid ctors collection and converters
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElementsSerializer.SerializeElements(System.IO.MemoryStream,System.Collections.Generic.IList{DataDynamics.DDLib.PdfEngine.PdfElement})">
            <summary>
            Serializes a PdfElement collection into MemoryStream
            </summary>
            <param name="stream"></param>
            <param name="elements"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElementsSerializer.DeSerializeElements(System.IO.MemoryStream,DataDynamics.DDLib.PdfEngine.PsPage)">
            <summary>
            DeSerialize a MemoryStream into PdfElement collection
            </summary>
            <param name="stream"></param>
            <returns></returns>
            <param name="page"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElementsSerializer.ProcessElement(DataDynamics.DDLib.PdfEngine.PdfElement,DataDynamics.DDLib.PdfEngine.PsPage)">
            <summary>
            Performs special actions with an element right after read
            </summary>
            <param name="element"></param>
            <param name="page"></param>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfElementsSerializer.PdfElementType">
            <summary>
            PdfElement type enum
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfElement">
            <summary>
            PdfElement base class
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElement.Render(DataDynamics.DDLib.PdfEngine.PdfRenderContext,System.Text.StringBuilder)">
            <summary>
            Renders element on PdfRenderContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElement.Read(System.IO.BinaryReader)">
            <summary>
            Reads content from BinaryReader
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElement.Write(System.IO.BinaryWriter)">
            <summary>
            writes contenr to BinaryWriter
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfElement.AllowsArtifact">
            <summary>
            True if this element can be marked as "Artifact".
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfElement.CanBeMissedInStructTree(System.Boolean)">
            <summary>
            True if this element can be skipped in structure tree.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfSetClip">
            <summary>
            Represents a clip record.
            </summary>
            <remarks>A clip is defined by a path (which is oftentimes a simple rectangle).</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfSetClip.#ctor(System.Single,System.Single,System.Single,System.Single,DataDynamics.DDLib.PdfEngine.PsPage)">
            <summary>
            Initializes a new PdfSetClip with the specified rectangle as it's initial clipping area.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="destinationPage">
            The <see cref="T:DataDynamics.DDLib.PdfEngine.PsPage"/> that this element will be on. This is needed for PdfPath to flip the Y axis.
            </param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfSetClip.#ctor(DataDynamics.DDLib.PdfEngine.PdfPath)">
            <summary>
            Initializes a new <see cref="T:DataDynamics.DDLib.PdfEngine.PdfSetClip"/> object with the specified path as its initial clipping area.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfText.MeasureCharacterSpacing(System.String,System.Single)">
            <summary>
            RS: CR 23121 - Measures the total character spacing in the string
            </summary>
            <param name="text">The string</param>
            <param name="characterSpacing">The character spacing in ????</param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfText.CreatePDFText(DataDynamics.DDLib.PdfEngine.PdfFonts.PdfFont,System.String,System.Text.StringBuilder)">
            <summary>
            Completes any mapping that might be required by a font, and escaping any special string characters.
            </summary>
            <param name="baseFont"></param>
            <param name="text"></param>
            <returns>
            </returns>
            <remarks>
            The special characters that are escaped are: (line feed, carriage return, horizontal tab, backspace, form feed, left parnthesis, right parenthesis, backslash, and non-ASCII characters)
            </remarks>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfText.CharacterSpacing">
            <summary>
            Gets or sets character spacing in inches
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfText.WordSpacing">
            <summary>
            Gets or sets word spacing
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfAnnotation.GetGoToYPosition(System.String,DataDynamics.DDLib.PdfEngine.PdfBookmarks,System.Single)">
            <summary>
            Get destination Y position of GoTo action.
            </summary>
            <param name="bookmarkTextToSearch">Bookmark text to search.</param>
            <param name="bookmarks">PDF bookmarks.</param>
            <param name="pageHeight">Page height.</param>
            <returns>Y position.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfAnnotation.TranslatePDFText(System.String)">
            <summary>
            Performs character escaping on the specified string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfModifyTransform">
            <summary>
            Modifies the current transformation matrix by concatenating the specified matrix.
            </summary>
            <remarks>The transforms don't work since we flip the y axis when each PdfElement is rendered !!!</remarks>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfPathPainting">
            <summary>
            Represents a stroked and or filled path.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPathPainting.#ctor(DataDynamics.DDLib.PdfEngine.PdfPath,System.Drawing.Color,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Single)">
            <summary>
            Initializes a new instance of the PdfPathPainting class.
            </summary>
            <param name="path">The path to be filled/stroked.</param>
            <param name="fillColor">The color to fill the polygon with. Use <see cref="F:System.Drawing.Color.Empty"/> if you do not want the polygon filled.</param>
            <param name="polyFillMode"></param>
            <param name="strokeColor">
            The color to stroke the path with.  Use <see cref="F:System.Drawing.Color.Empty"/> if the path should not have a stroke/outline.
            </param>
            <param name="strokeDashStyle">
            The dash style to use if the path is stroked.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <param name="strokeThickness">
            The thickness of the stroke in inches.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <remarks>If the path should be filled stroked, it will be filled first and then stroked.</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPathPainting.Render(DataDynamics.DDLib.PdfEngine.PdfRenderContext,System.Text.StringBuilder)">
            <summary>
            Renders the polygon path and path painting operators.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfFonts">
             <summary>
             Summary description for PdfFonts.
             
             This class managed the main font list and embedding
             The baseList may contain multiple copies of the same font in different size
             For embedding and PDF font descriptor purposes unique fonts are added to FontManager. The font manager
             index is stored in baseList.
            
             We are supporting the following font types:
             
             TrueTypeNoEmbed : These are the non-embedded fonts which still are truetype
             Type1 :  These are Helvetica,Courier,Times Roman etc that are built into Acrobat. We only need to write out the descriptor to pdf
             TrueTypeFull	: These are the fully embedded fonts. If a font is ANSI and small, to make it editable we embed the whole font
             TrueTypeCID0	: These are partially constructed fonts so we don't have to embed all glyphs in Far eastern fonts (>10MB sometimes)
             
             Pseudo code for deciding on font type:
             1- Translate Arial->Helv , Times New Roman->Times, Courier->courier
             2- If font name matches Acrobat builtin font, use Type1
             3- If font is in NeverEmbedList or output version is Acrobat21, we use TrueTypeNoEmbed
             4- If font is ansi and small, use TrueTypeFull for full embedding
             5- Otherwise use CID0 encoding
             
             </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfFonts.NextFontIndex">
            <summary>
            Count of fonts
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.AddFont(System.Int32,System.String,System.Drawing.FontStyle,System.Single,System.Boolean)">
            <summary>
            Adds font
            </summary>
            <param name="fontIndex">The index of the font for further references</param>
            <param name="fontName"></param>
            <param name="fontStyle"></param>
            <param name="sizeInPoints"></param>
            <returns>font index</returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.GetReferenceFont(System.Int32)">
            <summary>
            Gets the font for measuring text
            </summary>
            <param name="fontIndex"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfFonts.FontInfo">
            <summary>
            this class is used to precache several metrics that will be used during rendering
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfFonts.RawStringBinaryWriter">
            <summary>
            This is a BinaryWriter that does not write null term and string length prefixes for strings, used for fixing CR12669.
            </summary>
            
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.RawStringBinaryWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Performs a WriteLine but applies a string.Format first with the specified string and format specifiers.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.GetFontObjectId(DataDynamics.DDLib.PdfEngine.PdfFonts.BaseFontId,System.Boolean)">
            <summary>
            Gets first font data stream id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfFonts.FontKey">
            <summary>
            Identifies the font in font linking structures
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.FontManager.GetFontData(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc,DataDynamics.DDLib.Ttf.TtfTableId)">
            <summary>
            Get specified table from font data.
            </summary>
            <param name="font"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.FontManager.GetPartialFontFile(GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.FontDesc,System.String,System.Collections.Generic.IList{System.UInt32},System.Collections.Generic.IDictionary{System.UInt16,System.UInt16},System.Boolean)">
            <summary>
            Creates partial font file
            </summary>
            <param name="font"></param>
            <param name="newFontName"></param>
            <param name="charList"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.PdfFont.Dispose">
            <summary>
            IDisposable implementation.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.PdfFont.Dispose(System.Boolean)">
            <summary>
            Derrived classes should call this method to ensure any resources used by this class may be disposed (at this time there are no scarce resources used by this classs).
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfFonts.PdfFont.AddChars(System.String,System.Boolean)">
            <summary>
            Add characters to be printed with this font.
            </summary>
            <param name="outputString">Characters to be printed.</param>
            <param name="disableEudc">true= not distinguish EUDC characters</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DataDynamics.DDLib.PdfEngine.PdfFonts.TrueTypeFull.WriteBfcharMap(DataDynamics.DDLib.PdfEngine.PdfFonts.RawStringBinaryWriter)" -->
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfImageCache">
            <summary>
            Summary description for PdfImageCache.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfImageCache.Add(System.Drawing.Image,System.Int32,System.Boolean)">
            <summary>
            Adds the specified image to the cache, while searching for and detecting duplicates. Uses the specified imageConversion quality (0-100) when images (WMF/EMF/8bpp Indexed) must be converted to a PDF compatable format (JPG).
            </summary>
            <param name="img"></param>
            <param name="imageConversionQuality">A value from 0-100 that specifies the quality used with the JPGEncoder when saving a converted image.</param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfImageCache.IsAlphaSupported(System.Drawing.Image)">
            <summary>
            Returns if image supports Alpha 
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfImageCache.GetImageMask(System.Drawing.Image)">
            <summary>
            Extracts transparency mask data from the image
            </summary>
            <returns></returns>	 
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfImageCache.BitsPerSampleFromPixelFormat(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Returns the bits per sample for the specified pixel format.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfImageCache.ContainsPalette(System.Int32)">
            Returns true if the image is indexed and contains a valid palette.
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PDFOutputIntent">
            <summary>
            "Output indent" implementation.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfPath">
            <summary>
            Used to construct paths in PDF.
            </summary>
            <remarks>All Y coordinates will be from top to bottom of the destination page.</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.#ctor(System.Drawing.PointF,DataDynamics.DDLib.PdfEngine.PsPage)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.DDLib.PdfEngine.PdfPath"/> class with the specified starting point.
            </summary>
            <param name="startingPoint"></param>
            <param name="destinationPage"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.#ctor(DataDynamics.DDLib.PdfEngine.PsPage)">
            <summary>
            Initializes a new instance of hte <see cref="T:DataDynamics.DDLib.PdfEngine.PdfPath"/> class with no initial starting point.
            </summary>
            <param name="startingPoint"></param>
            <param name="destinationPage"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.BeginNewSubPath(System.Drawing.PointF)">
            <summary>
            Begins a new subpath/figure by moving the current point to the specified point.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.TransformY(System.Single)">
            <summary>
            Transforms the y coordinate's axis to top-to-bottom from bottom-to-top and converts it from inches to points.
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.#ctor(DataDynamics.DDLib.PdfEngine.PsPage,System.Text.StringBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:DataDynamics.DDLib.PdfEngine.PdfPath"/> class for cloning support.
            </summary>
            <param name="destinationPage"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.LineTo(System.Drawing.PointF)">
            <summary>
            Appends a straight line to the current path.  The new current point is the specified point.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.BezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Appends a cubic bezier curve to the current path.
            </summary>
            <param name="controlPoint1">The first control point for the cubic bezier curve.</param>
            <param name="controlPoint2">The first control point for the cubic bezier curve.</param>
            <param name="endPoint">The final end point for the cubic bezier curve</param>
            <remarks>
            The starting point for the curve is the current/last path point.
            The new current point is the endPoint.
            </remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.AddRectangleSubpath(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
            <param name="x">The left coordinate.</param>
            <param name="y">The TOP coordinate.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.ClosePath">
            <summary>
            Closes the current path by appending a striaght line segment from the current point to hte starting point of hte subpath. This operator terminates the current path.Appending antoerh segment will begin a new subpath.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfPath.ToString">
            <summary>
            Returns the complete path string, the result of the path construction methods on this class.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfPatternCache">
            <summary>
            Summary description for PdfPatternCache.
            
            According to V1.6 of PDF specs, pattern reuse across pages is still not supported so patterns
            need to be redefined on each page they are used. If future versions support it this class will
            be able to resolve duplicates. For now , Add method DOES NOT check for duplicates across pages and creates a
            new PatternInfo instance for each page even if cacheImageIndex is the same.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfPatternCache.PatternInfo.CacheImageIndex">
            <summary>
            Returns index into pdfrender imagecache
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfPatternCache.PatternInfo.MonoChrome">
            <summary>
            Returns true if bitmap for pattern is monochrome
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfRender">
            <summary>
            <see cref="T:DataDynamics.DDLib.PdfEngine.PdfRender"/> is the main class used to generate a PDF document.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfRender.DocumentOptions">
            <summary>
            Returns an object that provides access to optional information to be saved with the document such as viewer preferences and document metadata.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfRender.Compress">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfRender.ImageQuality">
            <summary>
            Species the Image Quality used when converting images to JPG. This is a setting on the GDI+ encoder.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfRender.ImageInterpolation">
            <summary>
            Specifies the images interpolation value.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfRender.NeverEmbedFonts">
            <summary>
            Semicolon delimited list of fonts to ignore during font embedding
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfRender.NextFontIndex">
            <summary>
            returns the current font count for the engine
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfRender.Save(System.IO.Stream)">
            <summary>
            Saves the current document without security and encryption.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.PdfRenderContext._rightToLeft">
            <summary>
            Right to left; is based on controls.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfRenderContext.RightToLeft">
            <summary>
            RightToLeft
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity">
            <summary>
            Encapsulates the information necessary to provide PDF document security and encryption.
            </summary>
            <remarks>
            If a user password is supplied the viewer application should prompt for a password.
            If a user password is not supplied no password will be requested to open the document.
            By correctly supplying either the user password, or the owner password, the user will be able to open the document, decrypt it and display it on the screen.
            Whether additional operations are allowed on a decrypted docuemtn depends on which password (if any) was supplied when the document was opened and on any access restrictions specified using this class's <see cref="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Permissions"/> property.
            </remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.#ctor(System.String,System.String,DataDynamics.DDLib.PdfEngine.Security.PdfPermissions)">
            <summary>
            Initializes an instance of the <see cref="T:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity"/> class with the specified passwords and permissions.
            </summary>
            <param name="ownerPassword">The password, that upon being entered will permit the viewer unrestricted access to the document.</param>
            <param name="userPassword">The password, that upon being entered permits the viewer the permissions as specified in this class's <see cref="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Permissions"/> property.</param>
            <param name="permissions">The initial <see cref="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Permissions"/> value for this object.</param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance of the <see cref="T:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity"/> class with the specified passwords and default permissions.  By default all permissions are allowed.
            </summary>
            <param name="ownerPassword">The password, that upon being entered will permit the viewer unrestricted access to the document.</param>
            <param name="userPassword">The password, that upon being entered permits the viewer the permissions as specified in this class's <see cref="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Permissions"/> property.</param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity"/> class with empty passwords, and the default permissions.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.OwnerPassword">
            <summary>
            The owner password that can be entered in the reader that permits full access to the 
            document regardless of the specified user permissions.  
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.UserPassword">
            <summary>
            The user password that can be entered in the reader.  If this value is left empty 
            they user will not be prompted for a password, however the user will restricted by 
            the specified permissions.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Permissions">
            <summary>
            Specfies the user permissions for the document.  The <see cref="T:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions"/> values can be combined using a bitwise OR combination.
            </summary>
            <remarks>By default all permissions are set/allowed.</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.GetWritablePermissions">
            <summary>
            Prepares the current <see cref="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Permissions"/> value for writing (there are some special bits that need set/cleared before writing them out) and returns them.
            This method does not modify the current <see cref="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Permissions"/> value.
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.Security.PdfSecurity.Use128Bit">
            <summary>
            True to use 128 bit encryption with full permissions capability.  
            False to use lessor 40 bit encryption with limited permissions.
            The <see cref="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowFillIn"/>, <see cref="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowAccessibleReaders"/>, and <see cref="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowAssembly"/> permissions require this value to be true.
            </summary>
            <remarks>The default value is true.</remarks>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions">
            <summary>
            Specifies the permissions available for a PDF document.
            These values can be combined using a bitwise OR combination.
            </summary>
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.None">
            You can use this setting alone to specify that none of the other permissions are set.  It has no effect if you bitwise or this flag together with the other flags.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowPrint">
            Set to permit printing the document when it is opened with user access permission.  This is a revision 2 permission.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowModifyContents">
            Set to permit modifying the document’s contents when it is opened with user access permission. Text annotations can still be added or modified.   This is a revision 2 permission.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowCopy">
            Set to permit copying text or graphics from the document when it is opened with user access permission.   This is a revision 2 permission.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowModifyAnnotations">
            Set to permit adding or modifying annotations in the document when it is opened with user access permission.  This permission is a revision 2 or revision 3 permission.  Under revision three, the ability to copy/paste document contents is restricted other than what is specified by bit 10 (AllowAccessibleReaders).
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowFillIn">
            Set to permit filling in form fields in the document when it is opened with user access permission.  This is revision 3 only permission.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowAccessibleReaders">
            Set to permit extracting the text and graphics of the document for accessibility purposes or otherwise (it is most likely for accessibility reasons, but possibly for other “screen reading” purposes) when it is opened with user access permission.  This is revision 3 only permission.
        </member>
        <member name="F:DataDynamics.DDLib.PdfEngine.Security.PdfPermissions.AllowAssembly">
            Set to permit the following operations when the document is opened with user access permission:Insert, rotate, or delete pages, and create bookmarks or thumbnail images even if AllowModifyContents is false. This is revision 3 only permission.
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfStreamWriter">
            <summary>
            PdfStreamWriter appears to be how all data is ultimately written out.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.Write(System.String,System.Object[])">
            <summary>
            Performs a Write but applies a string.Format first with the specified string and format specifiers.
            </summary>
            <param name="str"></param>
            <param name="args"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.Write(System.String)">
            <summary>
            Writes the specified string to the stream.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.Write(System.Char)">
            <summary>
            Writes the specified character to the stream.
            </summary>
            <param name="ch"></param>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.IsUnicodeSupported">
            <summary>
            Returns true if unicode strings are supported by the current file version.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.WriteLiteralString(System.String)">
            <summary>
            Writes out the specified literal string with necessary escaping.  
            *Surounding parentheses* are added by this method.
            </summary>
            <param name="literalString">The literal string to be written.</param>
            <remarks>
            The following characters are escaped (using C# syntax here): 
            '\\', '\n', '\r', '\t', '\b', '\f', '(', ')'.
            The surounding parentheses required to write out a literal string to the PDF stream is not added by this function.
            DO NOT escape the output of <see cref="!:PdfEncryption"/>. It performs escaping as necessary.
            </remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.WriteLiteralString(System.String,System.Boolean)">
            <summary>
            Writes out the specified literal string with necessary escaping.  
            Surounding parentheses are added by this method.
            </summary>
            <param name="literalString">The literal string to be written.</param>
            <param name="appendLineFeed">True to append a linefeed char after the literal string is closed.</param>
            <remarks>
            The following characters are escaped (using C# syntax here): 
            '\\', '\n', '\r', '\t', '\b', '\f', '(', ')'.
            The surounding parentheses required to write out a literal string to the PDF stream is not added by this function.
            DO NOT escape the output of <see cref="!:PdfEncryption"/>. It performs escaping as necessary.
            </remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Performs a WriteLine but applies a string.Format first with the specified string and format specifiers.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.WriteLine">
            <summary>
            Writes a end of line token (CRLF) to the output.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.WriteLine(System.String)">
            <summary>
            Writes out the specified string, then an end of line token (CRLF).
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.WriteLine(System.Char)">
            <summary>
            Writes out the specified character, then an end of line token (CRLF).
            </summary>
            <param name="ch"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.StartObj">
            <summary>
            Writes out the very simple object header "x y obj" where x is the object id, y is the generation numbe (always zero), and obj is literal text.
            </summary>
            <returns>The ojbect id number written out for this object.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.EndObj">
            <summary>
            Writes out hte text endobj followed by a new line (CRLF).
            Calculates the object's size (size since <see cref="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.StartObj"/> was called) and adds it to the <see cref="F:DataDynamics.DDLib.PdfEngine.PdfStreamWriter._objectSizes"/> list.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfStreamWriter.EscapeString(System.Byte[])">
            <summary>
            Escapes the specified string (specified as an array of bytes) and returns the result as an array of bytes.
            </summary>
            <param name="stringBytes"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfUnsafe">
            <summary>
            Summary description for PdfUnsafe.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PdfUnsafe.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system resources associated with the object. After the object is deleted, the specified handle is no longer valid. 
            </summary>
            <param name="hObject">
            Handle to a logical pen, brush, font, bitmap, region, or palette. 
            </param>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfUtil">
            <summary>
            Summary description for PdfUtil.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfUtil.SafeHdc">
            <summary>
            Safe wrapper around GDI HDC for use with using()
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.PdfUtil.SafeGdiObject">
            <summary>
            Safe wrapper around GDI HDC for use with using()
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.CreatePdfItemsStream">
            <summary>
            Creates a pdfStream for PsPage, that contains all the pdfElement objects written to it.
            </summary>
            <returns>Stream of all the pdfElements on the page</returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.ClearPdfItems">
            <summary>
            Clears the PdfElements for the page, happens only if export's optimize memory flag is set to true
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.HandlePattern(DataDynamics.DDLib.PdfEngine.PdfRenderContext,System.Int32,System.Int32,System.Text.StringBuilder,System.Text.StringBuilder,System.Int32@,System.Int32@,System.Collections.Generic.IList{DataDynamics.DDLib.PdfEngine.PdfPatternCache.PatternInfo})">
            AM: CR17489
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.WritePageInfo(DataDynamics.DDLib.PdfEngine.PdfStreamWriter,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Func{System.Int32,System.Int32},DataDynamics.DDLib.PdfEngine.PdfRenderContext,System.Int32@)">
            <summary>
            Write page stream out
            
            The tricky part of this code is resource indices. 
            
            The fonts used in the file are written starting at FirstValidObjectIdInPdf. A global fontpool is used 
            
            Basically image elements that have not been written out yet are
            assigned TargetImageIndex. 
            
            </summary>
            <param name="writer"></param>
            <param name="parentID"></param>
            <param name="context"></param>
            <param name="procSetObjectId">Id of ProcSet object in PDF Document</param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.WriteContent(DataDynamics.DDLib.PdfEngine.PdfStreamWriter,DataDynamics.DDLib.PdfEngine.PsPage.WriteState,System.Boolean,System.Int32,System.Int32,System.Func{System.Int32,System.Int32},DataDynamics.DDLib.PdfEngine.PdfRenderContext)">
            <summary>
            Write page stream out
            
            The tricky part of this code is resource indices. 
            
            The fonts used in the file are written starting at FirstValidObjectIdInPdf. A global fontpool is used 
            
            Basically image elements that have not been written out yet are
            assigned TargetImageIndex. 
            
            </summary>
            <param name="writer"></param>
            <param name="bFirstPage"></param>
            <param name="context"></param>
            <param name="procSetObjectId">Id of ProcSet object in PDF Document</param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.WriteSMask(DataDynamics.DDLib.PdfEngine.PdfStreamWriter,System.Byte[],System.Int32,System.Int32)">
            <summary>
            writes image object that contains SMask
            </summary>
            <param name="writer"></param>
            <param name="data"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.DrawText(DataDynamics.DDLib.PdfEngine.PdfFonts,System.Int32,System.String,System.Single,System.Single,System.Drawing.Color,System.Single,System.Single,System.Boolean,System.Single,System.Single)">
            <summary>
            RS: CR 23121 - Add DrawText with character spacing parameter
            </summary>
            <param name="fontIndex"></param>
            <param name="str"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
            <param name="characterSpacing"></param>
            <param name="wordSpacing"></param>
            <param name="verticalText"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.PlaceHyperlink(GrapeCity.ActiveReports.Export.Pdf.AR.PDFRender.PdfObjectReference,System.Drawing.RectangleF,System.String,System.Int32)">
            <summary>
            Add GoTo action.
            </summary>
            <param name="rectangle">Affected rectangle</param>
            <param name="uri">Hyperlink URI</param>
            <param name="pageIndex">Additional info for 'toc://...' hyperlinks</param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.DrawImage(DataDynamics.DDLib.PdfEngine.PdfRender,GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.RawImageData,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Render image to page
            </summary>
            <param name="imageData"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.DrawMetafile(DataDynamics.DDLib.PdfEngine.PdfRender,GrapeCity.ActiveReports.Document.Section.RawImageResourceData,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified metafile onto PDF using PDF drawing operations.
            </summary>
            <param name="imageData"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.IntersectClip(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Intersects the specified rectangle with the current clipping path.
            </summary>
            <param name="x">The left location of the rectangle.</param>
            <param name="y">The top location of the rectangle.</param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.IntersectClip(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Intersects the specified clipping path with the current clipping path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.IntersectClip(DataDynamics.DDLib.PdfEngine.PdfPath)">
            <summary>
            Intersects the specified clipping path with the current clipping path.
            </summary>
            <param name="pdfPath"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.DrawPolygon(System.Drawing.PointF[],System.Drawing.Color,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="M:DataDynamics.DDLib.PdfEngine.PsPage.DrawPolygon(System.Drawing.PointF[],System.Drawing.Color,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Single)"/> class with the specified points defining the polygon.
            </summary>
            <param name="points"></param>
            <param name="fillColor">The color to fill the polygon with. Use <see cref="F:System.Drawing.Color.Empty"/> if you do not want the polygon filled.</param>
            <param name="polyFillMode"></param>
            <param name="strokeColor">
            The color to stroke the path with.  Use <see cref="F:System.Drawing.Color.Empty"/> if the path should not have a stroke/outline.
            </param>
            <param name="strokeDashStyle">
            The dash style to use if the path is stroked.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <param name="strokeThickness">
            The thickness of the stroke in inches.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <remarks>If the path should be filled stroked, it will be filled first and then stroked.</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.DrawPolygon(DataDynamics.DDLib.PdfEngine.PdfRender,System.Drawing.PointF[],System.Drawing.Image,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="M:DataDynamics.DDLib.PdfEngine.PsPage.DrawPolygon(System.Drawing.PointF[],System.Drawing.Color,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Single)"/> class with the specified points defining the polygon.
            </summary>
            <param name="points"></param>
            <param name="fillImage">The image to use to fill the polygon with.</param>
            <param name="strokeColor">
            The color to stroke the path with.  Use <see cref="F:System.Drawing.Color.Empty"/> if the path should not have a stroke/outline.
            </param>
            <param name="strokeDashStyle">
            The dash style to use if the path is stroked.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <param name="strokeThickness">
            The thickness of the stroke in inches.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <remarks>If the path should be filled stroked, it will be filled first and then stroked.</remarks>
            <param name="polyFillMode"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.IsMonochromePalette(System.Drawing.Image)">
            <summary>
            AM:CR 16401(ARN2) fix, helper method
            if we have 1bpp colors, so check it contains Black &amp; white together
            otherwise we are not supposed to mask it as monochrome later, in PDF Export
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.PaintPath(DataDynamics.DDLib.PdfEngine.PdfPath,System.Drawing.Color,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Single)">
            <summary>
            Strokes and or fills the specified path.
            </summary>
            <param name="path">The path to stroke.</param>
            <param name="fillColor">The color to fill the polygon with. Use <see cref="F:System.Drawing.Color.Empty"/> if you do not want the polygon filled.</param>
            <param name="strokeColor">
            The color to stroke the path with.  Use <see cref="F:System.Drawing.Color.Empty"/> if the path should not have a stroke/outline.
            </param>
            <param name="strokeDashStyle">
            The dash style to use if the path is stroked.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <param name="strokeThickness">
            The thickness of the stroke in inches.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <remarks>If the path should be filled stroked, it will be filled first and then stroked.</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.PaintPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,DataDynamics.GDI.GdiPolyFillMode,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Single)">
            <summary>
            Strokes and or fills the specified path.
            </summary>
            <param name="path">The path to stroke.</param>
            <param name="fillColor">The color to fill the polygon with. Use <see cref="F:System.Drawing.Color.Empty"/> if you do not want the polygon filled.</param>
            <param name="strokeColor">
            The color to stroke the path with.  Use <see cref="F:System.Drawing.Color.Empty"/> if the path should not have a stroke/outline.
            </param>
            <param name="strokeDashStyle">
            The dash style to use if the path is stroked.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <param name="strokeThickness">
            The thickness of the stroke in inches.  If the strokeColor is <see cref="F:System.Drawing.Color.Empty"/>, this argument is ignored.
            </param>
            <remarks>If the path should be filled stroked, it will be filled first and then stroked.</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPage.GraphicsPathToPdfPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Converts a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> to a PdfPath.
            </summary>
            <param name="path"></param>
            <returns>
            The PdfPath will have transformed points, in inches prepared for PsPage.
            </returns>
        </member>
        <member name="P:DataDynamics.DDLib.PdfEngine.PsPages.HasTocHyperlinks">
            <summary>
            Specify if this document has toc hyperlinks
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPages.AddPageToTempFile(DataDynamics.DDLib.PdfEngine.PsPage)">
            <summary>
            Adds pages to temp file in Isolated Storage
            </summary>
            <param name="psPage"></param>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.PsPages.CreateTempFile">
            <summary>
            Creates a temp file for storage.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.TtfFontEmbedding">
            <summary>
            Summary description for TtfFontEmbedding.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.TtfFontEmbedding.GetFullFontFile(System.Drawing.Font)">
            <summary>
            Read full font file.
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.TtfFontEmbedding.GetFontData(System.Byte[],System.String)">
            <summary>
            Gets font data of only desired font (from TTC container).
            </summary>
            <param name="fontData"></param>
            <param name="fontName"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.PdfEngine.TtfFontEmbedding.CreatePartialFontFile(System.String,System.Collections.Generic.IList{System.UInt32},GrapeCity.ActiveReports.Export.Pdf.Section.PDFRender.ITtfReader,System.Collections.Generic.IDictionary{System.UInt16,System.UInt16},System.Boolean)">
            <summary>
            This function will construct a new TTF font file for PDF embedding. The following tables need to be written out:
            (to construct this list, use \ddlib.net\PdfRender\PDFReadTest to create a ttf file out of an acrobat file)
            
            
            OffsetTable
            TTF Directory
            cvt		Full copy,		(optional) This table contains a list of values that can be referenced by instructions. 
            fpgm	Full copy,		(optional) This table is similar to the CVT Program, except that it is only run once, when the font is first used.
            hhea	Copy/Update,	Horizontal header, copy all values, and update USHORT numberOfHMetrics value according to new # of glyphs
            hmtx	Partial copy,	(hhea.numberOfHMetrics count)
            prep	Full copy,		The Control Value Program consists of a set of TrueType instructions that will be executed whenever the font or point size or transformation matrix change and before each glyph is interpreted
            glyf	Partial copy,	with composite glyph handling (basically if a referred glyph is composite copy relevant glyphs too)
            loca	Partial copy,	The indexToLoc table stores the offsets to the locations of the glyphs in the font
            cmap	Reconstruct,	We need to build a new table with only code points we cover
            post	Full copy,		This table contains additional information needed to use TrueType or OpenTypeTM fonts on PostScript printers	
            name	Minimal prefix+fontname			// this is for copyright info etc.. we don't write this out yet
            		The name table historically needs Mac+Unicode strings for font name otherwise OS won't recognize font
            		Acrobat encodes the following:
            		Format=0,Count=8
            		P=1,Enc=0,Lang=0,Nameid=3 = prefix+name ANSI
            		P=1,Enc=0,Lang=0,Nameid=4 = prefix+name ANSI
            		P=1,Enc=0,Lang=0,Nameid=6 = prefix+name ANSI
            		P=3,Enc=1,Lang=1033,Nameid=1 = prefix+name Unicode
            		P=3,Enc=1,Lang=1033,Nameid=2 = Regular/Bold/etc.. Unicode
            		P=3,Enc=1,Lang=1033,Nameid=3 = prefix+name Unicode
            		P=3,Enc=1,Lang=1033,Nameid=4 = prefix+name Unicode
            		P=3,Enc=1,Lang=1033,Nameid=6 = prefix+name Unicode
            		
            maxp	Copy/Update,	copy all values, update numGlyphs
            OS/2	Copy/Update,	copy all values, update usFirstChar,usLastChar
            head	Copy/Update,	copy all values, update font checksum
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.PdfEngine.Type1Fonts">
            <summary>
            Summary description for Type1Fonts.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.Ttf.MacEncoding">
            <summary>
            Summary description for MacEncoding.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.Ttf.TableEntry">
            <summary>
            Table directory entry
            </summary>
        </member>
        <member name="P:DataDynamics.DDLib.Ttf.TableEntry.Name">
            <summary>
            Gets human readable table name
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.Ttf.TableEntry.#ctor(System.Byte[],System.Int32)">
            <summary>
            Reads TableEntry instance from byte array
            </summary>
            <param name="tableData"></param>
            <param name="offset"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DataDynamics.DDLib.Ttf.EncodingHeader" -->
        <member name="T:AssemblyNames">
            <summary>
            Contains strong assembly names and such
            </summary>
        </member>
    </members>
</doc>
