<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrapeCity.ActiveReports.Export.Excel</name>
    </assembly>
    <members>
        <member name="T:DataDynamics.ActiveReports.Export.InternalC.IPeekableCanvasItemEnumerator">
            <summary>
            Extends IEnumerator to add a Peek method for CanvasItems
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.IPeekableCanvasItemEnumerator.PeekNext">
            <summary>
            Returns the next object in the collection without changing the current postion or the object that the Current property returns.
            </summary>
            <returns>
            The next object in the collection.
            </returns>
        </member>
        <member name="T:DataDynamics.ActiveReports.Export.InternalC.CanvasEnumerator">
            <summary>
            Used for enumerating an arraylist of CanvasItem objects and objects decending from CanvasItem.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasEnumerator.#ctor(System.Collections.IList)">
            <summary>
            Creates an instance of CanvasItemEnumerator that will enumerate the specified ArrayList of CanvasItems.
            </summary>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.CanvasEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasEnumerator.PeekNext">
            <summary>
            Returns the next CanvasItem in the collection without changing the current postion or the object that the Current property returns.
            </summary>
            <returns>
            The next CanvasItem in the collection.
            Calling reset or movenext resets the peak.
            </returns>
        </member>
        <member name="T:DataDynamics.ActiveReports.Export.InternalC.ExportContext">
            <summary>
            This class is basically the same as RenderContext in ActiveReports, but customized for contextual information specific to Exports and not a Graphics.  
            Much of the functionality is exactly the same as RenderContext.
            However, RenderContext is tightly coupled with each of the CanvasItem's and uses CanvasItem.Render to maintain/update RenderContext, which also does rendering to a Grahpics, which is inappropriate and inefficient for Excel or any Export filter. 
            </summary>
            <remarks>
            Differences between ExportContext and RenderContext:
            - The current cliprect is manged by ExportContext here, not Graphics like RenderContext. 
            - The ClipStack is a stack of RectangleF structs, and not System.Drawing.Drawing2D.Region.  All our clips are rectangles in RDF and I think regions were only used in RenderContext because that's what Graphics uses and rendercontext stores it's "current cliprect" on the Grahpics, not RenderContext.
            </remarks>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.#ctor(GrapeCity.ActiveReports.Document.Section.Document.Filters.IFilteredPage)">
            <summary>
            Creates an instance of the ExportContext.
            </summary>
            <param name="page">The DataDynamics.ActiveReports.Page object that this context is relative to. All fonts (see <see cref="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.SelectFont(System.Int16)"/>) are slected from the Page's Fonts collection.</param>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.GetDefaultFontWithPointUnit">
            <summary>
            Clone font for azure while sizeinpoints throw outofmemory exception.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.PushClipRect">
            <summary>
            Takes the current clipRect (in CurrentClipRect property) and pushes it onto the ClipStack.  
            The current cliprect is still maintained as the "current cliprect".
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.PopClipRect">
            <summary>
            Takes the last cliprect put onto the stack and sets it as the current cliprect.
            If there are no cliprects on the stack then the current cliprect is cleared, and IsClipActive is set to false.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.IntersectClipRect(System.Drawing.RectangleF)">
            <summary>
            Uses member method RectangleF.Intersect on the currentCliprect to calculate the intersecting clipping rectangle and sets that resulting clip rect as the current clip rect available via the ClipRect property.
            </summary>
            <param name="intersectClip">The clipping rectangle to intersect the current clipping rectangle with.</param>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.ClipRect">
            <summary>
            Returns the current cliprect bounding the output device/surface.
            </summary>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.ClipStack">
            <summary>
            Returns the Stack of RectangleF structs.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.Clone">
            <summary>
            Returns an instance of ExportContext that contains an exact replica of the data on this object.
            ** Note this method does not copy the m_theFonts font follection.  
            Only .Font/m_theFont. For performance reasons, and because I don't see why it's needed in most cases where you would clone this class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.ExportContext.SelectFont(System.Int16)">
            <summary>
            Sets the Font property's value to the font at the specified Index.
            </summary>
            <param name="fontIndex"></param>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.CharacterSpacing">
            <summary>
            Determines the intercharacter spacing in inches
            </summary>
        </member>
        <member name="P:DataDynamics.ActiveReports.Export.InternalC.ExportContext.LineSpacing">
            <summary>
            Determines the interline spacing in inches
            </summary>
        </member>
        <member name="T:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils">
            <summary>
            Provides utility functions useful when parsing CanvasItem records in a Canvas/Page.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.AreBoundsClose(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Returns true if the bounds are within 1000'th of an inch of each other.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.OutsideRect(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if element is entirely outside rectangle. False if inside or intersecting.
            </summary>
            <param name="pcr">Clip rect.</param>
            <param name="elementX">x coordinate for element.</param>
            <param name="elementY">y coordinate for element.</param>
            <param name="elementWidth">width for element.</param>
            <param name="elementHeight">height for element.</param>
            <returns>True if element is entirely outside rectangle, otherwise returns false.</returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.InsideRect(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if the specified element is entirely inside the specified rectangle (or exactly the same bounds); false if outside or intersecting.
            </summary>
            <param name="pcr">Clip rect</param>
            <param name="x">Line x coordinate.</param>
            <param name="y">Line y coordinate.</param>
            <param name="w">Line width.</param>
            <param name="h">Line height.</param>
            <returns>True if the specified element is entirely inside the specified rectangle; false if outside or intersecting.</returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.ClipLine(System.Drawing.RectangleF,GrapeCity.ActiveReports.Document.Section.LineItem@,GrapeCity.ActiveReports.Document.Section.LineItem)">
            <summary>
            This function takes a line and a clipping rectangle, and outputs a clipped line in the pNew argument.
            </summary>
            <param name="pCR">The clipping rectangle.</param>
            <param name="pNew">The new, clipped line will be returned in this argument.</param>
            <param name="pOld">The old line you want clipped.</param>
            <returns>
            Returns true when the line is entirely outside of the cliprect and therefore not renderable.  
            If the line intersects the cliprect, then ClipLine(..) will generate a line that does fit entirely inside the cliprect and set it to pNew, and true will be returned.
            If the line is entirely inside the cliprect, then ClipLine simply sets pNew to pOld and returns false.
            </returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.IntersectLines(System.Drawing.PointF@,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if lines intersect, false if not, sets ppointout to point of intersection.
            </summary>
            <param name="ppointout">
            If lines intersect, this will be the point of intersection.
            </param>
            <param name="x1">X1 coordinate for first line.</param>
            <param name="y1">Y1 coordinate for first line.</param>
            <param name="x2">X2 coordinate for first line.</param>
            <param name="y2">Y2 coordinate for first line.</param>
            <param name="x3">X1 coordinate for second line.</param>
            <param name="y3">Y1 coordinate for second line.</param>
            <param name="x4">X2 coordinate for second line.</param>
            <param name="y4">Y2 coordinate for second line.</param>
            <returns>True if lines intersect, false if not.</returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.ClipShapeBounds(System.Drawing.RectangleF@,System.Drawing.RectangleF)">
            <summary>
            Clips the specified bounds for a shape based on the specified clipRect.
            </summary>
            <param name="itemBounds">The bounds for the item. Upon return of this function this value will have the clipped bounds.</param>
            <param name="clipRect">The clipping rectangle according to which itemBounds will be clipped.</param>
            <returns>
            True if the item should be rendered according to the new bounds, or false if the item should not be rendered at all.
            </returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.ClipImage(System.Drawing.Image@,System.Drawing.RectangleF@,System.Drawing.RectangleF)">
            <summary>
            Clips the specified image if necessary.
            </summary>
            <param name="sourceImage"></param>
            <param name="imageBounds"></param>
            <param name="clipRect"></param>
            <returns>
            True if you should render the specified image.  Note that the location and actual image arguments may have been changed by this function.
            False, indicates that you should not render the specified image due to the cliprect.  This would normally indicate that the image is entirely outside of the cliprect.
            </returns>
        </member>
        <member name="F:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.DEFAULTPIXELSPERINCH">
            <summary>
            Number of pixels per inch used in unit default conversions. 
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.InchesToPixels(System.Single,System.Single)">
            <summary>
            Returns the specified inch value in pixel units.
            </summary>
            <param name="inches">The value in inches to convert.</param>
            <param name="dpi">The pixels/dots per inch value to be used for the conversion.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.InchesToPixels(System.Single)">
            <summary>
            Returns the specifed inch value in pixel units with pixels per inch/dpi value of <see cref="F:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.DEFAULTPIXELSPERINCH"/>.
            </summary>
            <param name="inches">The value in inches to convert.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.InitStringFormat">
            <summary>
            Returns a <see cref="T:System.Drawing.StringFormat"/> initialized for measuring text records in AR.NET.  This is typically what would be used with CanvasUtils.GetClippedTextLines.
            </summary>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.MeasureString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Single,GrapeCity.ActiveReports.PaddingEx,System.Int32@,System.Int32@,System.Single)">
            <summary>
            RS: CR 23121 - String measurer that takes into account the character spacing
            </summary>
            <param name="gRef"></param>
            <param name="text"></param>
            <param name="font"></param>
            <param name="size"></param>
            <param name="stringFormat"></param>
            <param name="characterSpacing"></param>
            <param name="charactersFitted"></param>
            <param name="padding"></param>
            <param name="linesFilled"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.GetClippedTextLines(System.String,System.Drawing.Graphics,System.Drawing.StringFormat,System.Drawing.RectangleF@,DataDynamics.ActiveReports.Export.InternalC.ExportContext,System.Single@,System.Func{System.Int32,System.String,DataDynamics.ActiveReports.Export.InternalC.ExportContext,System.Int32})">
            <summary>
            Divides the specified text into lines using \n as line dividers.  Also clips the text according to the cliprect specified in context.
            </summary>
            <param name="text">The text to be divided into lines and clipped.</param>
            <param name="referenceGraphics">A graphics used for measuring text. Passed in for performance optimization.</param>
            <param name="stringFormat">A StringFormat used for measuring text. Passed in for performance optimization.</param>
            <param name="controlRect">The bounds of the text record from the RDF DrawText2 item.</param>
            <param name="context">The context providing information such as font, colors, and cliprect.</param>
            <param name="outLineHeightInches">Since this function has to calculate the line height anyway, it will return the lineheight it calculated.</param>
            <param name="handleWrapMode">The action for manual WrapMode handling if it was not been performed before.</param>
            <returns>Null if text is entirely clipped. Or an array of lines of text clipped based on the specified ExportContext.</returns>
        </member>
        <member name="M:DataDynamics.ActiveReports.Export.InternalC.CanvasUtils.DeflateRect(System.Drawing.RectangleF,GrapeCity.ActiveReports.PaddingEx)">
            <summary>
            Deflates the padding from the rect
            </summary>
            <param name="rect"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.Diagnostics.InternalTracer">
            <summary>
            Provides a common way to trace messages that do not show up easily to our users.
            Support personel or the developer can use the TraceSwitch in a config file (web.config for exe config) to turn tracing on and off.
            </summary>
        </member>
        <member name="F:DataDynamics.Diagnostics.InternalTracer.traceSwitchString">
            <summary>
            Put this string in a config file under configuration\system.diagnostics\switches\add to turn on tracing.
            Then add a listenter under configuration\system.diagnostics\trace\listeners.
            </summary>
        </member>
        <member name="F:DataDynamics.Diagnostics.InternalTracer.tracingSwitch">
            <summary>
            Used with this class's LogMessage method to indicate if tracing is turned on or not. 
            I'm using guid strings to keep prying eyes from understanding what's going on, and an attempt ot prevent users from easily turning tracing on.
            </summary>
        </member>
        <member name="M:DataDynamics.Diagnostics.InternalTracer.Trace(System.String)">
            <summary>
            Provides tracing when defined appropriately in an application configuration file.
            </summary>
            <param name="message">The trace message to be written to a trace listener.</param>
            <remarks>
            This could be used with support and an appropriate app.config file to implement tracing when output is messed up for unknown reasons.
            I've applied these debugger attributes to it to attempt to keep it out of call stacks and debuggers stepping though it.
            If this method is found to be a sevear performance hinderence (presumably via profiling), then we should be able to uncomment the ConditionalAttribute below and only have it included in DEBUG builds only.
            </remarks>
        </member>
        <member name="M:DataDynamics.Diagnostics.InternalTracer.Trace(System.String,System.Object[])">
            <summary>
            Provides tracing with string.format like capabilities.
            </summary>
        </member>
        <member name="M:DataDynamics.Utility.GraphicsUtility.MeasureStringByCharacterRanges(System.String,System.Drawing.Font,System.Drawing.Graphics,System.Drawing.StringFormat,System.Single,System.Int32)">
            <summary>
            Calculate the string size by graphics' MeasureCharacterRanges method.
            </summary>
            <param name="measureString">The string.</param>
            <param name="font">Font.</param>
            <param name="graphics">Graphics</param>
            <param name="stringFormat">StringFormat</param>
            <param name="charSpaceWidth">Char space width in inch unit.</param>
            <param name="outCharSpace">When calculate the side of the string, there is an extra charSpace.
            When calculate the middle part of the string, there are 2 extra charSpaces.
            </param>
            <returns>The string size in inch unit.</returns>
        </member>
        <member name="M:DataDynamics.Utility.GraphicsUtility.GetCharPlaces(System.String)">
            <summary>
            Get Char Places.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.Utility.GraphicsUtility.GetXOffsetForSkipCode(System.Collections.Generic.IDictionary{System.Int32,System.String},System.String,System.Drawing.Graphics,System.Drawing.StringFormat,GrapeCity.ActiveReports.Document.Section.TextAlignment,System.Drawing.Font,System.Single,System.Single,System.Single)">
            <summary>
            Get the offset in horizontal direction for skip code format.
            </summary>
            <param name="skipCodes">A dictionary which contains the skip chars and its positions</param>
            <param name="text">The fornated text</param>
            <param name="g">Graphics</param>
            <param name="stringFormat">StringFormat</param>
            <param name="align">TextAlignment</param>
            <param name="font">Font</param>
            <param name="charSpaceWidth">The width of characters in inch unit</param>
            <param name="textWidth">The width of the text</param>
            <param name="rectWidth">The width of layout area</param>
            <returns>The offset in horizontal direction for skip code format.</returns>
        </member>
        <member name="T:DataDynamics.StructuredStorage.InMemoryDocFileEx">
            <summary>
            Implement IStorage interface and includes a InMemoryDocFile class.
            </summary>
        </member>
        <member name="F:DataDynamics.StructuredStorage.InMemoryDocFileEx.file">
            <summary>
            Represenet InMemoryDocFile instance.
            </summary>
        </member>
        <member name="F:DataDynamics.StructuredStorage.InMemoryDocFileEx.storage">
            <summary>
            The Storage of InMemoryDocFile.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFileEx.#ctor">
            <summary>
            Create an InMemoryDocFileEx class.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFileEx.GetDocFileBytes">
            <summary>
            Get the IInMemoryDocFile's file bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.StructuredStorage.InMemoryDocFile">
            <summary>
            Represents a Structured Storage file created in memory. 
            This class can be used to access an in memory strucured storage file as an IStorage reference, or to request a System.IO.MemoryStream containing the actual bytes of the storage file.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.CreateILockBytesOnHGlobalExtern(System.IntPtr,System.Boolean,System.Object@)">
            <summary>
            Creates a byte array object that allows you to use global memory as the physical device underneath a compound file implementation. This object supports a COM implementation of the ILockBytes interface (from Platform SDK documentation).
            </summary>
            <param name="hGlobal">[in] Memory handle allocated by the GlobalAlloc function. The handle must be allocated as moveable and nondiscardable. If the handle is to be shared between processes, it must also be allocated as shared. New handles should be allocated with a size of zero. If hGlobal is NULL, CreateILockBytesOnHGlobal internally allocates a new shared memory block of size zero.</param>
            <param name="fDeleteOnRelease">[in] Determines whether the underlying handle for this byte array object should be automatically freed when the object is released. If set to FALSE, the caller must free the hGlobal after the final release. If set to TRUE, the final release will automatically free the hGlobal parameter.</param>
            <param name="ppLkbyt">[out] Address of ILockBytes pointer variable that receives the interface pointer to the new byte array object.</param>
            <remarks>
            The CreateILockBytesOnHGlobal function creates a byte array object based on global memory. This object supports a COM implementation of the ILockBytes interface, and is intended as the basis for a compound file. You can then use the supplied ILockBytes pointer in a call to the StgCreateDocfileOnILockBytes function to build a compound file on top of this byte array object. The ILockBytes instance calls the GlobalReAlloc function to grow the memory block as needed.
            The current contents of the memory block are undisturbed by the creation of the new byte array object. After creating the ILockBytes instance, you can use the StgOpenStorageOnILockBytes function to reopen a previously existing storage object that is already contained in the memory block. You can also call GetHGlobalFromILockBytes to get the global memory handle associated with the byte array object created by CreateILockBytesOnHGlobal.
            Note  If you free the hGlobal memory handle, the byte array object is no longer valid. You must call the ILockBytes::Release method before freeing the memory handle.
            The value of the hGlobal parameter can be changed by a subsequent call to the GlobalReAlloc function; thus, you cannot rely on this value after the byte array object is created.
            If the caller sets the fDeleteOnRelease parameter to FALSE, then the caller must also free the hGlobal after the final release. If the caller sets the fDeleteOnRelease parameter to TRUE, the final release will automatically free the hGlobal as shown in the following code excerpt...
            
            
            
            Definition in ole2.h: 
            WINOLEAPI CreateILockBytesOnHGlobal (IN HGLOBAL hGlobal, IN BOOL fDeleteOnRelease,
            OUT LPLOCKBYTES FAR* pplkbyt);
            
            Definition from Platform SDK Documentation:
            WINOLEAPI CreateILockBytesOnHGlobal(
            	HGLOBAL hGlobal,
            	BOOL fDeleteOnRelease,
            	ILockBytes** ppLkbyt
            	);
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.StgCreateDocfileOnILockBytesExtern(System.Object,DataDynamics.StructuredStorage.STGM,System.UInt32,DataDynamics.StructuredStorage.IStorage@)">
            <summary>
            Creates and opens a new compound file storage object on top of a byte-array object provided by the caller. The storage object supports the COM-provided, compound-file implementation for the IStorage interface (from Platform SDK documentation).
            </summary>
            <param name="plkbyt">[in] Pointer to the ILockBytes interface on the underlying byte-array object on which to create a compound file. </param>
            <param name="grfMode">[in] Specifies the access mode to use when opening the new compound file. For more information, see the STGM enumeration.</param>
            <param name="reserved">[in] Reserved for future use; must be zero.</param>
            <param name="ppstgOpen">[out] Pointer to the location of the IStorage pointer on the new storage object.</param>
            <remarks>
            The StgCreateDocfileOnILockBytes function creates a storage object on top of a byte array object using the COM-provided, compound-file implementation of the IStorage interface. StgCreateDocfileOnILockBytes can be used to store a document in a relational database. The byte array (indicated by the pLkbyt parameter, which points to the ILockBytes interface on the object) is used for the underlying storage in place of a disk file.
            Except for specifying a programmer-provided byte-array object, StgCreateDocfileOnILockBytes is similar to the StgCreateDocfile function. For more information, refer to StgCreateDocfile.
            The newly created compound file is opened according to the access modes in the grfMode parameter. For conversion purposes, the file is considered to already exist. As a result, it is not useful to use the STGM_FAILIFTHERE value, because it causes an error to be returned. However, both STGM_CREATE and STGM_CONVERT remain useful.
            
            
            Definition in objbase.h:
            WINOLEAPI StgCreateDocfileOnILockBytes(IN ILockBytes FAR *plkbyt,
             IN DWORD grfMode,
             IN DWORD reserved,
             OUT IStorage FAR * FAR *ppstgOpen);
            
            Definition from Platform SDK Documentation:
            WINOLEAPI StgCreateDocfileOnILockBytes(
            	ILockBytes* plkbyt,
            	DWORD grfMode,
            	DWORD reserved,
            	IStorage** ppstgOpen
            	);
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.GetHGlobalFromILockBytesExtern(System.Object,System.IntPtr@)">
            <summary>
            Retrieves a global memory handle to a byte array object created using the CreateILockBytesOnHGlobal function (from platform sdk docs).
            </summary>
            <param name="pLkbyt">[in] Pointer to the ILockBytes interface on the byte-array object previously created by a call to the CreateILockBytesOnHGlobal function.</param>
            <param name="phglobal">[out] Pointer to the current memory handle used by the specified byte-array object. </param>
            <remarks>
            After a call to CreateILockBytesOnHGlobal, which creates a byte array object on global memory, GetHGlobalFromILockBytes retrieves a pointer to the handle of the global memory underlying the byte array object. The handle this function returns might be different from the original handle due to intervening calls to the GlobalRealloc function.
            The contents of the returned memory handle can be written to a clean disk file, and then opened as a storage object using the StgOpenStorage function.
            
            
            Definition from ole2.h:
            WINOLEAPI GetHGlobalFromILockBytes (IN LPLOCKBYTES plkbyt, OUT HGLOBAL FAR* phglobal);
            
            Platform SDK Documentation:
            WINOLEAPI GetHGlobalFromILockBytes(
            	ILockBytes* pLkbyt,
            	HGLOBAL* phglobal
            	);
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.GlobalSizeExtern(System.IntPtr)">
             <summary>
             The GlobalSize function retrieves the current size of the specified global memory object, in bytes.
             </summary>
             <param name="hMem">[in] Handle to the global memory object. This handle is returned by either the GlobalAlloc or GlobalReAlloc function.</param>
             <returns>
             If the function succeeds, the return value is the size of the specified global memory object, in bytes.
             If the specified handle is not valid or if the object has been discarded, the return value is zero. To get extended error information, call GetLastError.
             </returns>
             <remarks>
             The size of a memory block may be larger than the size requested when the memory was allocated.
             To verify that the specified object's memory block has not been discarded, use the GlobalFlags function before calling GlobalSize.
             
             Definition from Platform SDK Docs:
             SIZE_T GlobalSize(
              HGLOBAL hMem
             );
             
             
             Definition from Winbase.h:
            WINBASEAPI
            SIZE_T
            WINAPI
            	GlobalSize(
            	IN HGLOBAL hMem
            	);
            	</remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.GlobalLockExtern(System.IntPtr)">
            <summary>
            The GlobalLock function locks a global memory object and returns a pointer to the first byte of the object's memory block (from Platform SDK Docs).
            </summary>
            <param name="hGlobal">[in] Handle to the global memory object. This handle is returned by either the GlobalAlloc or GlobalReAlloc function.</param>
            <returns>
            If the function succeeds, the return value is a pointer to the first byte of the memory block.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
            <remarks>
            The internal data structures for each memory object include a lock count that is initially zero. For movable memory objects, GlobalLock increments the count by one, and the GlobalUnlock function decrements the count by one. For each call that a process makes to GlobalLock for an object, it must eventually call GlobalUnlock. Locked memory will not be moved or discarded, unless the memory object is reallocated by using the GlobalReAlloc function. The memory block of a locked memory object remains locked until its lock count is decremented to zero, at which time it can be moved or discarded.
            Memory objects allocated with GMEM_FIXED always have a lock count of zero. For these objects, the value of the returned pointer is equal to the value of the specified handle.
            If the specified memory block has been discarded or if the memory block has a zero-byte size, this function returns NULL.
            Discarded objects always have a lock count of zero.
            
            Definition from Platform SDK Documentation:
            LPVOID GlobalLock(
             HGLOBAL hMem
            );
            
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.GlobalUnlockExtern(System.IntPtr)">
            <summary>
            The GlobalUnlock function decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE. This function has no effect on memory objects allocated with GMEM_FIXED.
            </summary>
            <param name="hMem">[in] Handle to the global memory object. This handle is returned by either the GlobalAlloc or GlobalReAlloc function.</param>
            <returns>
            If the memory object is still locked after decrementing the lock count, the return value is a nonzero value.
            If the function fails, the return value is zero. To get extended error information, call GetLastError. If GetLastError returns NO_ERROR, the memory object is unlocked.
            </returns>
            <remarks>
            The internal data structures for each memory object include a lock count that is initially zero. For movable memory objects, the GlobalLock function increments the count by one, and GlobalUnlock decrements the count by one. For each call that a process makes to GlobalLock for an object, it must eventually call GlobalUnlock. Locked memory will not be moved or discarded, unless the memory object is reallocated by using the GlobalReAlloc function. The memory block of a locked memory object remains locked until its lock count is decremented to zero, at which time it can be moved or discarded.
            Memory objects allocated with GMEM_FIXED always have a lock count of zero. If the specified memory block is fixed memory, this function returns TRUE.
            If the memory object is already unlocked, GlobalUnlock returns FALSE and GetLastError reports ERROR_NOT_LOCKED.
            A process should not rely on the return value to determine the number of times it must subsequently call GlobalUnlock for a memory object.
            
            
            Definition from Platform SDK: 
            BOOL GlobalUnlock(
            HGLOBAL hMem
            );
            
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.#ctor">
            <summary>
            Initializes the class to default state.
            </summary>
        </member>
        <member name="P:DataDynamics.StructuredStorage.InMemoryDocFile.Storage">
            <summary>
            Gets the IStorage.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.ThrowIfDisposed(System.Boolean)">
            <summary>
            Used internally to throw an InvalidOperationException if the instance has been disposed in a consistant manner that's easily localized.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.Close">
            <summary>
            Disposes this object. After calling this method the class is in an unusable state, and all methods will throw an InvalidOperationException.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.System#IDisposable#Dispose">
            <summary>
            IDisposable Implementation, calls Close().
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.Finalize">
            <summary>
            A finalize to make sure this instance is properly disposed.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.DataDynamics#StructuredStorage#IInMemoryDocFile#CreateStream(System.String)">
            <summary>
            Creates a stream with the specified name.
            </summary>
            <remarks>
            The grfMode value will be the following:STGM.CREATE | STGM.READWRITE | STGM.SHARE_EXCLUSIVE | STGM.SIMPLE.
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.DataDynamics#StructuredStorage#IInMemoryDocFile#CreateIStream(System.String,DataDynamics.StructuredStorage.STGM,System.Int32,System.Int32)">
            <summary>
            Create a IStream.
            </summary>
            <param name="streamName">The name of the IStream.</param>
            <param name="grfMode">STGM enum.</param>
            <param name="reserved1"></param>
            <param name="reserved2"></param>
            <returns>A IStream instance.</returns>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.InternalCreateIStream(System.String,DataDynamics.StructuredStorage.STGM,System.Int32,System.Int32)">
            <summary>
            Create a IStream for internal.
            </summary>
            <param name="streamName">The name of the IStream.</param>
            <param name="grfMode">STGM enum.</param>
            <param name="reserved1"></param>
            <param name="reserved2"></param>
            <returns>A IStream instance.</returns>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.DataDynamics#StructuredStorage#IInMemoryDocFile#CreateStorage(System.String,DataDynamics.StructuredStorage.STGM,System.Int32,System.Int32)">
            <summary>
            Create an IStorage.
            </summary>
            <param name="streamName">The name of the IStorage.</param>
            <param name="grfMode">STGM enum.</param>
            <param name="reserved1"></param>
            <param name="reserved2"></param>
            <returns>An IStorage instance.</returns>
        </member>
        <member name="M:DataDynamics.StructuredStorage.InMemoryDocFile.DataDynamics#StructuredStorage#IInMemoryDocFile#GetDocFileBytes">
            <summary>
            Returns an array of bytes for the underlying in memory structured storage file.
            </summary>
            <returns>
            Check return value for null incase the memorystream was empty, or couldn't be accessed due to an error in the unmanaged context.
            </returns>
            <remarks>
            ** Calling this function will Dispose this object, and it will be unusable after the function returns **
            </remarks>
        </member>
        <member name="T:DataDynamics.StructuredStorage.IInMemoryDocFile">
            <summary>
            An interface so the underlying implementation could be easily changed.  A similar interface should be created for the file based strucured storage too.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IInMemoryDocFile.Close">
            <summary>
            Disposes the object and it's resources in the same way the IDisposable implementation would.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IInMemoryDocFile.CreateStream(System.String)">
            <summary>
            Creates an IStream using the IStorage.CreateStream memeber using the specified name, returning the custom System.IO.Stream marshaler for the underlying COM IStream.
            </summary>
            <param name="streamName">A reference to the created stream</param>
            <remarks>
            The stream will be created with the following STGM flags:
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IInMemoryDocFile.CreateIStream(System.String,DataDynamics.StructuredStorage.STGM,System.Int32,System.Int32)">
            <summary>
            Create an IStream.
            </summary>
            <param name="streamName">The name of the IStream.</param>
            <param name="grfMode">STGM enum.</param>
            <param name="reserved1"></param>
            <param name="reserved2"></param>
            <returns>A IStream instance.</returns>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IInMemoryDocFile.CreateStorage(System.String,DataDynamics.StructuredStorage.STGM,System.Int32,System.Int32)">
            <summary>
            Create an IStorage.
            </summary>
            <param name="streamName">The name of the IStorage.</param>
            <param name="grfMode">STGM enum.</param>
            <param name="reserved1"></param>
            <param name="reserved2"></param>
            <returns>A IStorage instance.</returns>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IInMemoryDocFile.GetDocFileBytes">
            <summary>
            Returns the underlying OLE structured storage file as a byte array.  
            All streams should be commited, released and no longer used by the time this method is called.
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.StreamViewOfIStream">
            <summary>
            Provides a System.IO.Stream wraper implementation of the an IStream reference.
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.IStreamBuilder">
            <summary>
            This class is used to build IStream.
            </summary>
        </member>
        <member name="F:DataDynamics.StructuredStorage.IStreamBuilder._IStream">
            <summary>
            Represent a IStream.
            </summary>
        </member>
        <member name="F:DataDynamics.StructuredStorage.IStreamBuilder._binWriter">
            <summary>
            Binary writer.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IStreamBuilder.#ctor(System.String,DataDynamics.StructuredStorage.IStorage)">
            <summary>
            The constructor for creating a IStreamBuilder with specified IStream name and parent IStorage.
            </summary>
            <param name="name">The IStream name</param>
            <param name="stg">The parent IStorage</param>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IStreamBuilder.Close">
            <summary>
            Close current builder.
            </summary>
        </member>
        <member name="P:DataDynamics.StructuredStorage.IStreamBuilder.Writer">
            <summary>
            Gets BinaryWriter.
            </summary>
        </member>
        <member name="M:DataDynamics.StructuredStorage.IStreamBuilder.Dispose">
            <summary>
            Dispose current builder.
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.StructuredStorageHelper">
            <summary>
            Used for unsafe/unmanaged implementation of Structured Storage Files (a.k.a. OLE 2 Compound Files).
            </summary>
            <remarks>
            See this page for information on how Scott created IStorage and IStream by hand: 
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguidnf/html/cpcontlbimptypeconversion.asp
            </remarks>
        </member>
        <member name="M:DataDynamics.StructuredStorage.StructuredStorageHelper.StgCreateDocfile(System.String,DataDynamics.StructuredStorage.STGM,System.Int32,DataDynamics.StructuredStorage.IStorage@)">
            <summary>
            An import of the Classic WinAPI Structured Storage function StgCreateDocfile.
            </summary>
            <param name="pwcsName">Path of the compound file to create.</param>
            <param name="grfMode">Specifies the access mode for opening the storage object.</param>
            <param name="reserved">Reserved; must be zero.</param>
            <param name="ppstgOpen">Pointer to location for returning the new storage object.</param>
        </member>
        <member name="M:DataDynamics.StructuredStorage.StructuredStorageHelper.StgOpenStorage(System.String,DataDynamics.StructuredStorage.IStorage,DataDynamics.StructuredStorage.STGM,System.Int32,System.Int32,DataDynamics.StructuredStorage.IStorage@)">
            <summary>
            An import of the Classic WinAPI Structured Storage function StgOpenStorage.
            </summary>
            <param name="pwcsName">Points to the path of the file containing storage object.</param>
            <param name="pstgPriority">Points to a previous opening of a root storage object.</param>
            <param name="grfMode">Specifies the access mode for opening the storage object.</param>
            <param name="snbExclude">This is a Classic COM SNB structrure, pass in NULL or results are unexpected in .NET. - Scott</param>
            <param name="reserved">Reserved; must be zero.</param>
            <param name="ppstgOpen">Pointer to location for returning the new storage object.</param>
        </member>
        <member name="M:DataDynamics.StructuredStorage.StructuredStorageHelper.CreateDocFile(System.String,DataDynamics.StructuredStorage.STGM)">
            <summary>
            Uses StgCreateDocFile to create OLE 2 Structured Storage file, and return the IStorage interface to it.
            </summary>
            <param name="sFileName"></param>
            <param name="grfMode"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.StructuredStorage.STGM">
            <summary>
            The Win32/OLE/COM STGM enum.
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.UUID">
            <summary>
            The Win32/OLE/COM UUID struct.
            </summary>
        </member>
        <member name="F:DataDynamics.StructuredStorage.UUID.Data4">
            <summary>
            FIXED SIZE ARRAY ODL syntax: "unsigned char Data4[8];"
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.STGMOVE">
            <summary>
            The Win32/OLE/COM STGMOVE enum.
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.STGC">
            <summary>
            The Win32/OLE/COM STGC enum.
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.IEnumSTATSTG">
            <summary>
            The Win32/OLE/COM IEnumSTATSTG interface.
            </summary>
        </member>
        <member name="T:DataDynamics.StructuredStorage.STATFLAG">
            <summary>
            The Win32/OLE/COM STATFLAG enum.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.CellRange">
            <summary>
            Used for rendering styles to multiple cells.  Like making font, colors, and borders same on multiple cells when CellMerging=false.
            Used with XlsCellRenderer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.CellRange.#ctor">
            <summary>
            Initializes an instance the CellRange class with the default values for a SpreadBuilder/Excel cell.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.CellRange.Reset">
            <summary>
            Resets the styles on this instance to the SpreadBuilder/Excel defaults.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.CellRange.Commit(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Commits the current properties of this object to the cell(s).
            </summary>
            <param name="sheet"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="rowSpan"></param>
            <param name="colSpan"></param>
            <param name="isMergingAllowed"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.CellRange.CommitProperties(GrapeCity.SpreadBuilder.Cells.DDCell,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Used privatly by this class' Commit(...) method.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn">
            <summary>
            A logical column in a table or grid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn.PageItems">
            <summary>
            Returns a collection of PageItem objects that start on this column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn.Position">
            <summary>
            Sets or returns the X position that this column is at.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn.Width">
            <summary>
            Sets or returns the width of this column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn.Right">
            <summary>
            Returns the right bound of this column (defined by Position+Width).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutColumnsLeftToRightComparer">
            <summary>
            Sorts LayoutColumn objects based on Position property from left to right (lowest value to highest).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutColumnsLeftToRightComparer.Singleton">
            A singleton instance of this comparer.
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutColumnsLeftToRightComparer.#ctor">
            <summary>
            Initializes a new instance of the SortLayoutColumnsLeftToRightComparer class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutColumnsLeftToRightComparer.Compare(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn)">
            <summary>
            Compares the Position property of the two specified LayoutColumn objects.
            </summary>
            <param name="x">First LayoutColumn to compare.</param>
            <param name="y">Second LayoutColumn to compare.</param>
            <returns>
            Less than zero if x is to the right of y.
            Greater than zero if x is to the left of y.
            Zero if x and y are at the same location.
            </returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage">
            <summary>
            LayoutPage exists to seperate the list of layoutrows on each page.  The LayoutRows collection should typically be a distinct refernce for each page.  
            LayoutColumns collection will ( in the case of MultiSheet=false) will point to the same collection of columns for every page.
            This prevents the columns from being overwritten by different pages.
            For performance reasons, rather than have properties for the members and since the class *can* be immutable, I've made them public readonly fields.
            </summary>
            <remarks>Implements IDisposable to dispose any contained IDisposable PageItem objects (PageItemImage).</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.#ctor(System.Drawing.SizeF,GrapeCity.ActiveReports.Document.Section.Margins,System.Boolean)">
            <summary>
            Initializes a new instance of the layout page class. 
            You must later fill in the layout rows and columns !
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.#ctor(System.Drawing.SizeF,GrapeCity.ActiveReports.Document.Section.Margins,System.Boolean,System.Collections.Generic.List{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow},System.Collections.Generic.List{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn})">
            <summary>
            Initializes a new instance of the LayoutPage class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.AssertIfOnInvalidState">
            <summary>
            Asserts if this class does not have its collection of LayoutRows or LayoutColumns have not been initialized.
            Asserts if columns are not sorted left to right or rows are not sorted top to bottom.
            (debug only)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.LayoutRows">
            <summary>
            The collection of LayoutRow objects for this page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.LayoutColumns">
            <summary>
            The collection of LayoutColumn objects for this page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.Size">
            <summary>
            The Size of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.Margins">
            <summary>
             The margins for the page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.AppendPageBreak">
            <summary>
            True if this page should have a page break appended to it (this usually only happens if it is the last page.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.System#IDisposable#Dispose">
            <summary>
            IDisposable implementation to be sure all contained IDisposable PageItem's (PageItemImage) are disposed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage.Dispose(System.Boolean)">
            <summary>
            IDisposable implementation to be sure all contained IDisposable PageItem's (PageItemImage) are disposed.
            </summary>
            <param name="disposing">Pass true if you explicitly call this method.  False if called from finalizer.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow">
            <summary>
            A logical row used to build a table or grid.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.#ctor">
            <summary>
            Initializes a new instance of the LayoutRow class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.Position">
            <summary>
            Sets the Y position that this row is at.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.Height">
            <summary>
            Sets or returns the Height of this row.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.Bottom">
            <summary>
            Returns the bottom bound of the row (defined by Position+Height).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.PageItems">
            <summary>
            Returns the collection of PageItem objects that start on this row.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.GetRowSpanForColumn(System.Int32)">
            <summary>
            Rreturns whether a "row span" is set at a specified column in this row.
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
            <remarks>
            By default all values are false.  
            When a PageItem spans multiple LayoutRow objects, use this member to indicate the rows below the start of the PageItem that the PageItem is "spanning" or covering.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.IsRowEmpty">
            <summary>
            Returns true if the row has no pageitems, and no styles applied to it's cells.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow.SetRowSpanForColumn(System.Int32,System.Boolean)">
            <summary>
            Sets whether a "row span" is set at a specified column in this row.
            </summary>
            <param name="columnIndex">The column index indicating which column in this row the row span is set on.</param>
            <param name="value">True indicates that a "row span" is set at the specified column, false indicates no row span is set.</param>
            <remarks>
            When a PageItem spans multiple LayoutRow objects, use this member to indicate the rows below the start of the PageItem that the PageItem is "spanning" or covering.
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutRowsTopToBottomComparer">
            <summary>
            Sorts LayoutRow objects based on Position property top-to-bottom (lowest value to highest).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutRowsTopToBottomComparer.Singleton">
            Provides a singleton instance of this comparer.
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutRowsTopToBottomComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutRowsTopToBottomComparer"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortLayoutRowsTopToBottomComparer.Compare(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow)">
            <summary>
            Compares the Position property of the two specified LayoutRow objects.
            </summary>
            <param name="x">First LayoutRow to compare.</param>
            <param name="y">Second LayoutRow to compare.</param>
            <returns>
            Less than zero if x is lower or to the right of y.
            Greater than zero if x is above or to the left of y.
            Zero if x and y are at the same location.
            </returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem">
            <summary>
            PageItem is like a CanvasItem but always has a visible rectangle, and contains any export specific members or helper functions.  
            Some CanvasItems don't have this info (Alignments, Colors, Pens, etc..).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.parentRow">
            <summary>
            The LayoutRow this PageItem is on.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.parentColumn">
            <summary>
            The LayoutColumn this PageItem is on.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.ForceMergeCell">
            Causes the cell to be merged regardless of any other settings that normally may impact merging. This is used for TableCells. Essentially with table cell,s we know we want to merge the cells (so long as the fileformat supports it) and wrap the text in the cells.
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.#ctor(System.Drawing.RectangleF,DataDynamics.ActiveReports.Export.InternalC.ExportContext)">
            <summary>
            Creates a PageItem with the specified bounds and style/context. 
            </summary>
            <param name="bounds">This should be the same value as the CanvasItem's size and location.  It is passed in seperately so we don't have to determine the type of the CanvasItem and cast it to a type so that we can get the Bounds information.</param>
            <param name="styleContext">We use Clone to make a copy of the specified ExportContext and store it with this canvasitem.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.Bounds">
            <summary>
            Gets or sets the size and location of the PageItem.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.Style">
            <summary>
            Sets or returns style information about this PageItem.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.Border">
            <summary>
            Sets or returns the Border information for this PageItem.  Null if no border is specified.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.IsTextRecord">
            <summary>
            Returns true if this PageItem represents test in the output.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.IsOverlapPermitted">
            <summary>
            Returns true if this type of PageItem is permitted to overlap other PageItems.
            </summary>
            <returns>True if this type of PageItem is permitted to overlap other PageItems.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.Render(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            To be implemented for rendering a pageitem to a Sheet in a cell.  The ending row/col is needed for images.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem.RenderStyle(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer)">
            <summary>
            Provided so ExcelCellRenderer cell can obtain all style information before actual rendering information.
            This way all style info specific to Excel is handled in one place (ExcelCellRenderer) instead of having each pageitem implement the same style rendering.
            Each PageItem simple decides which of his styles should be applied to the ExcelCellRenderer which is provided in a generic format independent way.
            </summary>
            <param name="cell">The ExcelCell to receive all style information.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsTopToBottomLeftToRightComparer">
            <summary>
            Sorts PageObjects top-to-bottom, then left-to-right. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsTopToBottomLeftToRightComparer.Compare(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem)">
            <summary>
            Compares the top value, then if top is equal then the left value of two specified PageItems.
            </summary>
            <param name="x">First PageItem to compare.</param>
            <param name="y">Second PageItem to compare.</param>
            <returns>
            Less than zero if x is lower or to the right of y.
            Greater than zero if x is above or to the left of y.
            Zero if x and y are at the same location.
            </returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsOnLayoutRowComparer">
            <summary>
            Suitable for sorting pageitems inside a layoutrow.  Customized for HTML output by forcing overlap-permitted PageItems at the same location as PageItems that cannot overlap to come first (i.e. fillrects come before other PageItems at same location).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsOnLayoutRowComparer.Compare(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem)">
            <summary>
            Compares the left values, **If left is the same, then PageItems that are permitted to overlap come first.
            </summary>
            <param name="x">First PageItem to compare.</param>
            <param name="y">Second PageItem to compare.</param>
            <returns>
            Less than zero if x is less than (left of) y.
            Greater than zero if x is greater than (right of) y.
            Zero if x and y are at the same location.
            </returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsTopToBottomComparer">
            <summary>
            Sorts PageObjects top-to-bottom.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsTopToBottomComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the top value.
            </summary>
            <param name="x">First PageItem to compare.</param>
            <param name="y">Second PageItem to compare.</param>
            <returns>
            Less than zero if x is lower than y.
            Greater than zero if x is above y.
            Zero if x and y are at the same location.
            </returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsLeftToRightComparer">
            <summary>
            Sorts PageObjects left-to-right.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.SortPageItemsLeftToRightComparer.Compare(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem)">
            <summary>
            Compares the Left value.
            </summary>
            <param name="x">First PageItem to compare.</param>
            <param name="y">Second PageItem to compare.</param>
            <returns>
            Less than zero if x is to the right of y.
            Greater than zero if x is to the left of y.
            Zero if x and y are at the same location.
            </returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBackColor">
            <summary>
            Represents filled rectangles in the Canvas as they turn out to be BackColor in excel cells.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBackColor.OriginalBounds">
            <summary>
            Returns the original bounds of the original CanvasItem in the AR Page.
            This can be used to get the unclipped bounds of the original CanvasItem.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBackColor.Render(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Render is not implemented here in this case.  BackColors are applied before rendering any cells.  See XlsExport.ExportPageInternal.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBackColor.RenderStyle(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer)">
            <summary>
            BackColor style should be applied to cells in ExportPageInternal before this render method is ever called.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBackColor.IsTextRecord">
            <summary>
            Returns false as this is a BackColor record and will render no text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBackColor.IsOverlapPermitted">
            <summary>
            Returns true if this type of PageItem is permitted to overlap other PageItems.
            </summary>
            <returns>True if this type of PageItem is permitted to overlap other PageItems.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBorder">
            <summary>
            Represents a shape usually a border or non-filled rectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBorder.#ctor(System.Drawing.RectangleF,DataDynamics.ActiveReports.Export.InternalC.ExportContext,System.Drawing.RectangleF,GrapeCity.ActiveReports.Border)">
            <summary>
            Initializes an instance of the PageItemBorder class.
            </summary>
            <param name="bounds"></param>
            <param name="styleContext"></param>
            <param name="originalBounds"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBorder.Render(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Render is not implemented here in this case.  RenderStyle is where this PageItem does it's thing.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBorder.RenderStyle(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer)">
            <summary>
            This is where PageItemShape does it's job.  An AR rectangle or AR border is converted to a border on the specified XlsCellRenderer.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBorder.IsTextRecord">
            <summary>
            Returns false as this is a a shape record and will render no text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemBorder.IsOverlapPermitted">
            <summary>
            Returns true if this type of PageItem is permitted to overlap other PageItems.
            </summary>
            <returns>True if this type of PageItem is permitted to overlap other PageItems.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory">
            <summary>
            Given a list of CanvasItems, this class creates a list of PageItem objects that 
            encapsulate information from the CanvasItems suitable for exporting to excel.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.INCHTOPOINT">
            <summary>
            INCHTOPOINT is 72.0f
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory._isDistributeAllLines">
            <summary>
            Represent if the ARControl is set Justify to DistributeAllLines.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.PageItemsFromPage(GrapeCity.ActiveReports.Document.Section.Document.Filters.IFilteredPage,System.Drawing.Graphics,GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.KeyValuePair{System.Drawing.Image,System.Byte[]}},GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Creates a list of PageItem objects from the contents (i.e. CanvasItems) of the specified page.
            </summary>
            <param name="page">The page whos contents the returned list of PageItem objects will represent.</param>
            <param name="referenceGraphics">A Graphics object used to measure strings.  GraphicsUnit must be inches.</param>
            <param name="exportSettings">Settings specified on the current XlsExport.</param>
            <returns>The list of PageItem objects.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessPageItems(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Enumerates all CanvasItems in the specified Page object and returns a collection of PageItem objects representing the visible CanvasItems on that page.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessPictureControl(DataDynamics.ActiveReports.Export.InternalC.IPeekableCanvasItemEnumerator,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Process Picture ARControl.
            </summary>
            <param name="enumerator">CanvasEnumerator</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessContextItem(GrapeCity.ActiveReports.Document.Section.CanvasItem)">
            <summary>
            Processes all CanvasItem's with contextual information only.
            </summary>
            <param name="canvasItem"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessBorder(GrapeCity.ActiveReports.Document.Section.BorderItem)">
            <summary>
            Handles the processing for a <see cref="T:GrapeCity.ActiveReports.Document.Section.BorderItem"/>.
            </summary>
            <param name="border"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ClipBorderItem(GrapeCity.ActiveReports.Document.Section.BorderItem,System.Drawing.RectangleF)">
            <summary>
            Clips the specified BorderItem with the specified clipRect.
            </summary>
            <param name="oBorder"></param>
            <param name="clipRect"></param>
            <returns>
            Returns false if you should not render the BorderItem. This may happen if the BorderItem is entirely outside the specified cliprect.
            If true is returned, then you should render the BorderItem, although this function may have changed the dimensions and styles of the borderitem to make it inside the cliprect.
            </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessLine(GrapeCity.ActiveReports.Document.Section.LineItem)">
            <summary>
            Process <see cref="T:GrapeCity.ActiveReports.Document.Section.LineItem"/> CanvasItems.
            </summary>
            <param name="lineCanvasItem"></param>
            <remarks>
            Essentialy we have just pulled lines out of the output. Enough reports have shown problems that I've decided to just pull them out (excel crashes one some seemlying insignificant reports).
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessTextItem(GrapeCity.ActiveReports.Document.Section.CanvasItem)">
            <summary>
            Handles the specified canvasItem by adding one or more <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText"/> objects to the current <see cref="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory._pageItems"/> collection.
            </summary>
            <param name="canvasItem">Must be a DrawText, DrawText2, or DrawTextLink item.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.GetOffsetFromBorder(GrapeCity.ActiveReports.Document.Section.ControlType,GrapeCity.ActiveReports.Border,System.Single@,System.Single@)">
            <summary>
            Gets offset from Border settings
            For case 156354
            ARControl's position and width height will be compensated for border, but FillRect does not consider this
            So we should uncompensated the rect for border in order to fit FillRect.  And Padding inflating is no longer needed.
            Because it is calculated in following method.  You can find oppsite method in Controls.CompensateForBorder() method in engine.
            </summary>
            <param name="controlType">ControlType</param>
            <param name="border">Border</param>
            <param name="xMultiplier">Output horizontal offset</param>
            <param name="yMultiplier">Output vertical offset</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.GetOffsetFromBorder(GrapeCity.ActiveReports.Border,System.Single@,System.Single@)">
            <summary>
            Gets offset from Border settings. It is opposite to ARControl.CompensateForBorder.
            </summary>
            <param name="border">Border</param>
            <param name="xMultiplier">Output horizontal offset</param>
            <param name="yMultiplier">Output vertical offset</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessTextItem(System.Drawing.RectangleF,System.String,System.String,System.Boolean,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection)">
            <summary>
            Handles the specified canvasItem by adding one or more <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText"/> objects to the current <see cref="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory._pageItems"/> collection.
            </summary>
            <param name="actualBounds">The actual bounds of the original CanvasItem.</param>
            The bounds to use for the placement of the control. These will often be simply CanvasItem.Bounds, however, under some circumstances (table cell content), the size and location may need to be slightly modified.
            <param name="itemText"></param>
            <param name="hyperLink"></param>
            <param name="clipText">True to clip the text if it is outside of the current clipping rectangle.</param>
            <remarks>There be one PageItemText added per line of text if UseCellMerging=false. 
            If UseCellMerging=True then the there will be one PageItemText per text canvasitem.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.RecoverBoundsWithFormat(System.Drawing.RectangleF,System.String)">
            <summary>
            Recover the position offset which is adjusted for underscore(skip code) of 
            OutputFormat.
            </summary>
            <param name="rectF">The rectangle after adjusted</param>
            <param name="text">The content</param>
            <returns>The original recgtangle before adjusted</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.GetLogicalCharSpacingInch(System.Single,System.Single)">
            <summary>
            Calculate single CharacterSpacing width in pixel unit.
            </summary>
            <param name="cache">Graphics cache.</param>
            <param name="characterSpacing">CharacterSpacing in inch unit.</param>
            <returns>Return CharacterSpacing width in inch unit.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessImageItem(GrapeCity.ActiveReports.Document.Section.CanvasItem,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Process the specified CanvasItem to create a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage"/> and add it to the current <see cref="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory._pageItems"/> collection.
            </summary>
            <param name="canvasItem">Must be <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EnhMeta"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EnhMetaLink"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JPEG"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JPEGLink"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PING"/>, or <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PINGLink"/>.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessImageItem(GrapeCity.ActiveReports.Document.Section.CanvasItem,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Process the specified CanvasItem to create a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage"/> and add it to the current <see cref="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory._pageItems"/> collection.
            </summary>
            <param name="canvasItem">Must be <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EnhMeta"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EnhMetaLink"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JPEG"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JPEGLink"/>, <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PING"/>, or <see cref="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PINGLink"/>.</param>
            <param name="imageFormat">ImageFormat</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessImageItem(System.Drawing.Image,System.Drawing.RectangleF,System.String,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat)">
            <summary>
            Process the specified information to create a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage"/> and add it to the current <see cref="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory._pageItems"/> collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessTable(GrapeCity.ActiveReports.Document.Section.Table,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Extracts the contents of the table as if the contents were <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem"/> objects on the standard page, and returns them in a <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessPageCell(GrapeCity.ActiveReports.Document.Section.PageCell,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Handles the contents of the specified <see cref="T:GrapeCity.ActiveReports.Document.Section.PageCell"/>.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemFactory.ProcessSectionControlInfo(GrapeCity.ActiveReports.Document.Section.CanvasItem)">
            <summary>
            Process Section and control info begin/end
            can be used to do conditional formatting
            </summary>
            <param name="canvasItem"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage">
            <summary>
            PageItem that represents images in the canvas.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage._imageFormat">
            <summary>
            Represent ImageFormat property.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage.#ctor(System.Drawing.Image,System.Byte[],DataDynamics.ActiveReports.Export.InternalC.ExportContext,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat)">
            <summary>
            Create a PageItemImage with specified Image, ExportContext and ImageFormat.
            </summary>
            <param name="image">Image</param>
            <param name="styleContext">ExportContext</param>
            <param name="imageFormat">ImageFormat</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage.Render(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Uses DDSheet.AddImage to render an image.
            </summary>
            <param name="sheet"></param>
            <param name="xlStartRow"></param>
            <param name="xlStartCol"></param>
            <param name="xlEndRow"></param>
            <param name="xlEndCol"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage.RenderStyle(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer)">
            <summary>
            Border is the only "style" rendered to the ExcelCellRenderer.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage.ImageFormat">
            <summary>
            Gets and sets the ImageFormat.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemImage.IsOverlapPermitted">
            <summary>
            Returns true if this type of PageItem is permitted to overlap other PageItems.
            </summary>
            <returns>True if this type of PageItem is permitted to overlap other PageItems.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat">
            <summary>
            The ImageFormat represent the image format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._outBounds">
            <summary>
            Represent OutBounds property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._imageBounds">
            <summary>
            Represent ImageBounds property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._backColor">
            <summary>
            Represent BackColor property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._hasBackColor">
            <summary>
            Represent HasBackColor property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._hasOutBounds">
            <summary>
            Represent HasOutBounds property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._lineWidth">
            <summary>
            Represent LineWidth property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._lineColor">
            <summary>
            Represent LineColor property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._lineStyle">
            <summary>
            Represent LineStyle property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat._hyperlink">
            <summary>
            Represent Hyperlink property.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.#ctor">
            <summary>
            Create an ImageFormat instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.Init">
            <summary>
            Initial fields with default value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.Hyperlink">
            <summary>
            Gets and sets Hyperlink string.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.LineStyle">
            <summary>
            Gets and sets the line style of image's outline.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.LineWidth">
            <summary>
            Gets and sets the line width of image's outline. The unit is pixel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.LineColor">
            <summary>
            Gets and sets the line color of image's outline.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.OutBounds">
            <summary>
            Gets and sets the image's outbounds.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.ImageBounds">
            <summary>
            Gets and sets the image's bounds.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.BackColor">
            <summary>
            Gets and sets the image's backcolor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.HasBackColor">
            <summary>
            Gets and sets whether the image has backcolor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.ImageFormat.HasOutBounds">
            <summary>
            Gets and sets whether the image has out bounds.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection">
            <summary>
            A strongly typed collection for PageItem objects.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection.Add(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItem)">
            <summary>
            Adds the specified PageItem to the collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection.Item(System.Int32)">
            <summary>
            Gets the specified PageItem at the specified index in the collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection.LastPageItemAdded">
            <summary>
            Returns the last PageItem added using the Add method.  
            If no page items have been added this property may return null.
            </summary>
            <remarks>Calling the Clear or Removing the PageItem from the collection that is stored in this property resets this value to null.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection.WidestPageItemWidth">
            <summary>
            Returns the width.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection.TallestPageItemHeight">
            <summary>
            Returns the height of the tallest pageitem non-backcolor in this collection.  If the pageitem is backcolor, it's height is not considered.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText">
            <summary>
            Will represent the various text records in RDF (TextOut, DrawText, DrawText2, etc...).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.InitStatics">
            <summary>
            This class does some performance costly string measuring, so we store a StringFormat class used for measurement as a static.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.#ctor(System.Drawing.RectangleF,DataDynamics.ActiveReports.Export.InternalC.ExportContext,System.String,System.String,System.Boolean,GrapeCity.ActiveReports.Document.Section.TextInfoItem)">
            <summary>
            Initializes an instance of the PageItemText class.
            </summary>
            <param name="bounds">The location and size rectangle of the text.</param>
            <param name="styleContext">A context providing, colors, clipping information, and font information.</param>
            <param name="hyperLink">The hyperlink (if any).</param>
            <param name="performMultiLineTextClipping">True to clip the multiline text according to the cliprect.  False to indicate the text has already been clipped.</param>
            <param name="text">The text for this PageItem.</param>
            <param name="textInfo">The TextInfoItem.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.#ctor(System.Drawing.RectangleF,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemStyle,System.String,System.String,System.Boolean,GrapeCity.ActiveReports.Document.Section.TextInfoItem)">
            <summary>
            Initializes an instance of the PageItemText class.
            </summary>
            <param name="bounds">The location and size rectangle of the text.</param>
            <param name="styleContext">A context providing, colors, clipping information, and font information.</param>
            <param name="hyperLink">The hyperlink (if any).</param>
            <param name="performMultiLineTextClipping">True to clip the multiline text according to the cliprect.  False to indicate the text has already been clipped.</param>
            <param name="text">The text for this PageItem.</param>
            <param name="textInfo">The TextInfoItem.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.Text">
            <summary>
            Returns the text that this PageItem is to display.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.Render(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Handles the rendering of text.
            </summary>
            <param name="sheet"></param>
            <param name="xlStartRow"></param>
            <param name="xlStartCol"></param>
            <param name="xlEndRow"></param>
            <param name="xlEndCol"></param>
            <param name="useCellMerging">True if multiples cells can be merged into a single cell.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.RenderStyle(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer)">
            <summary>
            This should always be called by HtmlTableCell and be called before REnder
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.IsTextMultiline">
            <summary>
            Returns true if the text contained multiple lines.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemText.IsOverlapPermitted">
            <summary>
            Returns true if this type of PageItem is permitted to overlap other PageItems.
            </summary>
            <returns>True if this type of PageItem is permitted to overlap other PageItems.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer">
            <summary>
            XlsCellRenderer is used to aggregate the PageItems that will be rendering to a cell in Excel.
            In ExportPageInternal we create a logical grid layout containing the PageItems.  
            Then we take each PageItem at a LayoutRow/LayoutColumn intersection and add them to a ExcelCellRenderer.  
            Then ExcelCellRenderer goes through and extract style information, and takes care of rendering it to the proprietary format.  
            Then ExcelCellRenderer asks each individiual PageItem to Render its content (images &amp; text) into the cell.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.ForceMergeCell">
            Causes the cell to be merged regardless of any other settings that normally may impact merging. This is used for TableCells. Essentially with table cell,s we know we want to merge the cells (so long as the fileformat supports it) and wrap the text in the cells.
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the ExcelCellRenderer class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.Render(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Renders the Children and style information of this renderer to the specified column, and row in the specified excel sheet.
            </summary>
            <param name="sheet"></param>
            <param name="xlRow"></param>
            <param name="xlColumn"></param>
            <returns>The maximum row that was rendered to including xlRow plus any spans set on this cell.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.Children">
            <summary>
            The contents of cell such as backcolor, text and image items.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.Style">
            <summary>
            Sets/gets Style information for the cell.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.RowSpanCount">
            <summary>
            This value is used in the RowSpan attribute of the TD element.
            </summary>
            <remarks>
            The implied/default and minimum value for this attribute is 1.  
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.ColSpanCount">
            <summary>
            This value is used in the ColSpan attribute of the TD element.
            </summary>
            <remarks>
            The implied/default and minimum value for this attribute is 1.  
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.Width">
            <summary>
            Specifies the width for the cell in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.Height">
            <summary>
            Specifies the height of the cell in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.Text">
            <summary>
            The text to be displayed in the table cell.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.Border">
            <summary>
            Sets or returns the Border information for this cell.  Null if no border is specified.  It should be set by the children pageitems in their RenderStyle implementation.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.ArBorderToExcelBorder(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.CellRange)">
            <summary>
            Converts the current value of the Border property to the specified ExcelCell's border properties.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.InternalC.XlsCellRenderer.ArBorderLineStyleToExcelBorderLineStyle(GrapeCity.ActiveReports.BorderLineStyle)">
            <summary>
            Returns the appropriate SpreadBuilder.BorderLineStyle based on the specified ActiveREports BorderLineStyle value.
            </summary>
            <param name="lineStyle"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.DescriptionRes">
            <summary>
            base class for Description Attribute
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.DescriptionRes.Description">
            <summary>
            Description for Resource
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.FileFormat">
            <summary>
            Specifies the file format that the outputted file should support.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FileFormat.Xls97Plus">
            <summary>
            Optimized for Microsoft Excel 97 and newer versions.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FileFormat.Xls95">
            <summary>
            Microsoft Excel 95 format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FileFormat.Xlsx">
            <summary>
            Microsoft Excel OpenXml format.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter">
            <summary>
            This class is a tool for convert AR TextBox's OutputFormat and Value to Excel NumberFormat and Value.
            AR TextBox's OutputFormat is based on .NET Framework Formatting.
            See http://msdn.microsoft.com/en-us/library/fbxft59x(v=vs.80)
            In addition, AR OutputFormat also supports the forth section and _(undersorce).
            For Excel NumberFormat, see 
            http://www.brainbell.com/tutorials/ms-office/excel/Create_Custom_Number_Formats.htm
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.EXCEL_TEXT_FORMAT">
            <summary>
            Excel NumberFormat string which indicates text.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.INVARIANT_CULTURE_LCID">
            <summary>
            The LCID for invariant culture.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.DATE_FIRST_VALID">
            <summary>
            The earliest Date which is supported in Excel.
            Excel support date after 1900/1/1, 
            but there is a bug that excel has 1900/2/29 which is invalid,
            so the valid date start from 1900/3/1.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter._convertedFormats">
            <summary>
            The dictionary which caches converted Excel NumberFormat.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter._specialCalendarCultures">
            <summary>
            The dictionary which stores cultures of special calendars.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter._lockObj">
            <summary>
            The object for lock.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertedFormats">
            <summary>
            Gets the dictionary which caches converted Excel NumberFormat.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.GetExcelFormatAndValue(System.String,System.Int32,System.Int32,System.Object,System.String,System.String@,System.Object@)">
            <summary>
            Convert AR OutputFormat and Value to Excel NumberFormat and Value.
            </summary>
            <param name="outputFormat">AR OutputFormat</param>
            <param name="cultureId">The culture id used in format</param>
            <param name="currencyCultureId">The currency culture id used in format</param>
            <param name="value">AR Value</param>
            <param name="outputText">AR formated text</param>
            <param name="excelFormat">Output converted Excel NumberFormat string</param>
            <param name="excelValue">Output converted Excel Value</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.GetExcelValue(System.Object)">
            <summary>
            Convert AR Value to Excel Value.
            </summary>
            <param name="objValue">AR Value should be a number or a DateTime value.</param>
            <returns>Return the converted Excel Value. 
            If the value is supported, the reture value is a double.
            Otherwise, the reture value is null.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertNamedFormat(System.Object,System.String,System.Int32@,System.String@,System.Object@)">
            <summary>
            Convert the named format to specific .NET format. The format conversion result should same as the engine.
            </summary>
            <param name="value">The original value to apply the format.</param>
            <param name="format">The original output format.</param>
            <param name="cultureId">ref, the culture LCID from the TextInfo.Set with current current for named format.</param>
            <param name="convertedFormat">out, the .NET format after conversion. Empty string if conversion failed.</param>
            <param name="convertedValue">out, the converted value to apply the converted .NET format. the original value if conversion failed.</param>
            <returns>true if the original output format is a named format; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertNamedFormatForDoubleValue(System.Object,System.String,System.Globalization.CultureInfo,System.String@,System.Object@)">
            <summary>
            Convert the named format for double value.
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <param name="culture"></param>
            <param name="convertedFormat"></param>
            <param name="convertedValue"></param>
            <returns>true if the conversion succeed; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertNamedFormatForDateTimeValue(System.Object,System.String,System.Globalization.CultureInfo,System.String@,System.Object@)">
            <summary>
            Convert the named format for date value.
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <param name="culture"></param>
            <param name="convertedFormat"></param>
            <param name="convertedValue"></param>
            <returns>true if the conversion succeed; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertExcelFormat(GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.FormatDefinition,System.String@)">
            <summary>
            Convert FormatDefinition to Excel NumberFormat.
            </summary>
            <param name="formatDef">A FormatDefinition instance</param>
            <param name="excelFormat">Excel NumberFormat</param>
            <returns>A boolean indicates whether the converting is success.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertNumberExcelFormat(GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.FormatDefinition,System.String@)">
            <summary>
            Converting for number type value.
            </summary>
            <param name="formatDef">FormatDefinition</param>
            <param name="excelFormat">Output the Excel Format</param>
            <returns>A boolean indicates whether the converting is success.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertNumberFormatPattern(System.Int32,System.String@)">
            <summary>
            Converting format pattern for number type value.
            </summary>
            <param name="currencyCultureId">Currency culture id</param>
            <param name="excelFormat">Output the Excel Format</param>
            <returns>A boolean indicates whether the converting is success.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertDateTimeExcelFormat(GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.FormatDefinition,System.String@)">
            <summary>
            Converting for DateTime type value.
            </summary>
            <param name="formatDef">FormatDefinition</param>
            <param name="excelFormat">Output the Excel Format</param>
            <returns>A boolean indicates whether the converting is success.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertDateTimeFormatStandard(System.Globalization.CultureInfo,System.String@)">
            <summary>
            Convert datetime standard format char to patterns.
            </summary>
            <param name="culture"></param>
            <param name="excelFormat"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertDateTimeFormatPattern(System.Globalization.CultureInfo,System.String@)">
            <summary>
            Convert .net datetime format patterns to excel.Convert the patterns one by one.
            </summary>
            <param name="excelFormat"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertCalendarCultureID(System.Int32)">
            <summary>
            The default calendar is different for some special cultures.
            The value for year, month and day is different using different calendar for these cultures.
            need change the culture id to select specific calendar.
            </summary>
            <param name="cultureId"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.GetCultureInfo(System.Int32)">
            <summary>
            Get CultureInfo with cultureId.
            </summary>
            <param name="cultureId">cultureId</param>
            <returns>CultureInfo</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.ConvertCommonPattern(System.Int32@,System.String,System.Text.StringBuilder)">
            <summary>
            Convert common pattern.
            </summary>
            <param name="index">The index of the AR OutputFormat</param>
            <param name="chars">The AR OutputFormat string</param>
            <param name="sb">Output StringBuilder of Excel Format</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.FormatConverter.FormatDefinition">
            <summary>
            Represents a format definition.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.ListTools">
            <summary>
            Summary description for ListTools.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.ListTools.Copy(System.Collections.IList,System.Collections.IList)">
            <summary>
            Copies the elements of the specified source list to the specified destination list.
            </summary>
            <param name="sourceList"></param>
            <param name="destList"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.OpenXmlStandard">
            <summary>
            Specifies the level of Open XML document conformance on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.OpenXmlStandard.Strict">
            <summary>
            ISO/IEC 29500 Strict.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.OpenXmlStandard.Transitional">
            <summary>
            ISO/IEC 29500 Transitional.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools">
            <summary>
            Has some utilties for debugging excel export stuff.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.IsTweakSet(GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags,GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags)">
            <summary>
            Returns true if the specified tweak bit is set.
            </summary>
            <param name="tweakToCheck">The tweak value to you want to determine is set or not.</param>
            <param name="tweakValue">The current value of Tweaks to check against.</param>
            <returns>
            True if the <c>tweakToCheck</c> is specified in the specified <c>tweakValue</c>.
            </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.IsTweakSet(GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags,System.Int32)">
            <summary>
            Returns true if the specified tweak bit is set.
            </summary>
            <param name="tweakToCheck">The tweak value to you want to determine is set or not.</param>
            <param name="tweakValue">The current value of Tweaks to check against.</param>
            <returns>
            True if the <c>tweakToCheck</c> is specified in the specified <c>tweakValue</c>.
            </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.InitColumnLetterTable">
            <summary>
            Initializes the column letter table array.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.GraphicalDebugLayoutRowsAndColumns(System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow},System.Collections.Generic.List{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn})">
            <summary>
            Displays a debug form to show you layout columns and rows and their contained pageitems.  
            Should help determine what cells overlapping items occured in.
            Only compiled into DEBUG builds.
            </summary>
            <param name="rows">A list contianing LayoutRow objects.</param>
            <param name="columns">A list containing LayoutColumn objects.</param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.DEFAULTPIXELSPERINCH">
            <summary>
            Number of pixels per inch used in unit default conversions. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.InchesToPixels(System.Single,System.Single)">
            <summary>
            Returns the specifed inch value in pixel units.
            </summary>
            <param name="inches">The value in inches to convert.</param>
            <param name="dpi">The pixels/dots per inch value to be used for the conversion.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.InchesToPixels(System.Single)">
            <summary>
            Returns the specifed inch value in pixel units with pixels per inch/dpi value of <see cref="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.DEFAULTPIXELSPERINCH"/>.
            </summary>
            <param name="inches">The value in inches to convert.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.GraphicalDebugPageItems(System.Collections.IEnumerable,System.String)">
            <summary>
            Shows a form that displays all page items graphically. 
            Used to detect overlaps (look for dark areas) and other odd items not easily seen in export or viewer.
            </summary>
            <param name="pageItems">Should contain only PageItem objects</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.OutputColumnStatisticsSheet(System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn},GrapeCity.SpreadBuilder.DDSheet,System.String)">
            <summary>
            Outputs column statistics sheet.
            </summary>
            <param name="cols">
            ArrayList containing LayoutColumn objects.
            </param>
            <param name="destSheet">The seet to output the data to.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.StyleCellH1(GrapeCity.SpreadBuilder.Cells.DDCell,System.Boolean)">
            <summary>
            Used by this class to specify a H1 heading (ala html).
            </summary>
            <param name="cell"></param>
            <param name="wrap"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.TweakTools.StyleCellH2(GrapeCity.SpreadBuilder.Cells.DDCell,System.Boolean)">
            <summary>
            Used by this class to specify a H2 heading (ala html).
            </summary>
            <param name="cell"></param>
            <param name="wrap"></param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags.IgnoreColors">
            Removes all background colors and shapes from layout.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags.RemoveOverlaps">
            Will move controls around to prevent any overlaping controls.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags.NoColumnMerging">
            Turns off column merging operations.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags.NoRowMerging">
            Turns off row merging operations.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags.ShowPageItemsDebugForm">
            Shows a debug form for each page that displays only the pageitems that were found.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags.ShowRowsAndColumnsDebugForm">
            Shows a debug form for each page that displays the rows, columns and pageitems that were calculated.
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.TweakFlags.ShowColumnStatisticsSheet">
            Adds a column statistics sheet for each page (when multisheet =true, or just one when multisheet=false);
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport">
            <summary>
            Provides Excel Export functionality for ActiveReports for .NET.
            </summary>
            <remarks>
            Any public static (Shared in Visual Basic) members of this type are safe for multithreaded operations. Any instance members are not guaranteed to be thread safe.
            For example changing a property value in one thread while an Export method is running in a separate thread could yield unexpected results.
            
            <p><em>Optimizing your report for exporting to Excel:</em><br/>
            Since Excel is basically a table of rows and columns, and ActiveReports is a free form type output it may be necessary to “optimize?your ActiveReport for Excel exporting. 
            When you want two controls to be in the same column when outputted to excel it is imperative that the two controls have *exactly* the same left value.  And it may also help to ensure that the font of the two controls is the same.  Attempting to make the height of the two controls similar will often times lead to a cleaner looking output in excel.  Similarly if you want two controls to be in the same row when outputted to Excel, you should make sure the two controls have exactly the same Top value, that their font is the same, and that their width is similar if not the same. 
            Using RichText controls on your ActiveReports will often will not have good output in Excel.
            Using the Page object's drawing methods to draw anything in the margin areas of the export will cause pagination problems.  If you draw items on the page, do not draw them in the margin area to keep the pagination accurate when printing excel exported output.
            </p>
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Tweak">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.AutoRowHeight">
            <summary>
            True if excel should set the height of the row based on the contents of that row.  Otherwise the XlsExport will calculate the height of the rows.  In some cases this may make the output look better inside excel.  However, a value of true may adversely effect pagination when printing from excel, as it will often cause excel to stretch the height of the page.
            </summary>
            <remarks>Normally this property would not be true when UseCellMerging is true.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.MinRowHeight">
            <summary>
            Sets or returns the minimum height (in inches) of an empty row that will be permitted in the output.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.MinColumnWidth">
            <summary>
            Sets or returns the minimum width (in inches) of an empty column that will be permitted in the output.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.FileFormat">
            <summary>
            Sets or returns which file format version the outputted file should support.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Pagination">
            <summary>
            Gets or sets the value indicates should pagination be used for resulted xls document or not
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.OpenXmlStandard">
            <summary>
            Gets or sets the level of Open XML document conformance on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.UseCompression">
            <summary>
            Gets or sets the value indicating should compression be used on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.RemoveVerticalSpace">
            <summary>
            Sets or returns a value that indicates whether completely empty vertical spacing will be removed from the output.  
            </summary>
            <remarks>
            This may improve pagination if you wish to print the output from excel.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.UseCellMerging">
            <summary>
            Sets or returns whether cells should be merged together where applicable.
            </summary>
            <remarks>Since Excel95 does not support cell merging this property is not applicable when Version is set to Excel 95.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.MultiSheet">
            <summary>
            Sets or returns whether each page is to be exported to it's own sheet or not.  True indicates that each page in the ActiveReport Document will be exported to a separate sheet.
            </summary>
            <remarks>
            Setting this value to true can often increase performance and output quality at the cost of memory consumption up to a certain number of pages.  The more complex the pages, and the more deviation between the page's layouts in a single document will lower the number of pages that should be exported to a single sheet. As mentioned, the complicity and deviation of layout between the pages drastically effects this number, but a guess would be greater than 30 pages would be suitable for MultiSheet=false.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.SheetName">
            <summary>
            Sets or returns a value indicating the name of sheet. <b>Sheet</b> is default.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.DisplayGridLines">
            <summary>
            Sets or returns whether grid lines in workbook are displayed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Security">
            <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity"/> object for initializing document security.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.PageSettings">
            <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings"/> object for initializing Excel file print setting.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.UseDefaultPalette">
            <summary>
            Sets or returns whether export document with Excel default palette.
            </summary>
            <remarks>
            Setting this value to true, application will use the color which is in default palette and is closest to pre-defined custom color of control's forecolor and backcolor.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.CanUseCellMerging">
            <summary>
            Used internally to tell if the current combination of property values permitts cell merging.  
            For example FileFormat might be Xls95 and UseCellMering=True, but the code could still not use cell merging because Xls95 doesn't support it.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.#ctor">
            <summary>
            Initializes a new instance of the ExcelExport class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.InitStatics">
            <summary>
            Initiializes any statics.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.String)">
            <summary>
            Exports the specified document to a .xls file.
            </summary>
            <param name="document">
            The ActiveReports Document object to export.
            </param>
            <param name="filePath">
            The file name and path to save the main html file to.
            </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.String,System.String)">
            <summary>
            Exports the specified document to Excel.
            </summary>
            <param name="document">
            The ActiveReports Document object to export.
            </param>
            <param name="filePath">
            The file name and path to save the main html file to.
            </param>
            <param name="pageRange">
            A range of page numbers to export seperated by a comma.  Between each comma can have a single page number, or range of pages with a hyphen between the starting and ending page numbers in the range.
            </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.IO.Stream)">
            <summary>
            Exports the specified document to Excel.
            </summary>
            <param name="document">
            The ActiveReports Document object to export.
            </param>
            <param name="outputStream">The Stream to write the Excel workbook to.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,System.IO.Stream,System.String)">
            <summary>
            Exports the specified document to Excel.
            </summary>
            <param name="document">
            The ActiveReports Document object to export.
            </param>
            <param name="outputStream">The Stream to write the Excel workbook to.</param>
            <param name="pageRange">
            A range of page numbers to export seperated by a comma.  Between each comma can have a single page number, or range of pages with a hyphen between the starting and ending page numbers in the range.
            </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.CreateWorkbook(GrapeCity.ActiveReports.Document.SectionDocument,System.String)">
            <summary>
            Convert SectionDocument to a workbook.
            </summary>
            <param name="document">The SectionDocument.</param>
            <param name="pageRange">Page range.</param>
            <returns>The workbook.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.OnWorkbookCreated(GrapeCity.SpreadBuilder.Workbook)">
            <summary>
            Performed after workbook is created. 
            </summary>
            <param name="book">The workbook.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.FixSheetsPageBreaks(GrapeCity.SpreadBuilder.Workbook)">
            <summary>
            Fix the PageBreaks in all sheets if necessary.
            </summary>
            <param name="workbook">The workbook.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.FixPageBreaks(GrapeCity.SpreadBuilder.PageBreaks,System.Int32)">
            <summary>
            Fix the PageBreaks in the specified sheet if pageBreaks exceeds the maximun limit.
            </summary>
            <param name="pageBreaks">The PageBreaks.</param>
            <param name="maxCount">The maximum limit.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.FixSheetsImageOffset(GrapeCity.SpreadBuilder.Workbook)">
            <summary>
            Fix images' offset in all sheets.
            </summary>
            <param name="workbook">Workbook</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.FixImageOffset(GrapeCity.SpreadBuilder.DDSheet,System.Boolean)">
            <summary>
            Fix images' offset in a specified sheet.
            </summary>
            <param name="sheet">DDSheet</param>
            <param name="autoRowHeight"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.Export(GrapeCity.ActiveReports.Document.SectionDocument,GrapeCity.ActiveReports.Export.Html.IOutputHtml,System.String)">
            <summary>
            Exports the specified document.
            </summary>
            <param name="document">The document to be exported.</param>
            <param name="outputHandler">The output handler.</param>
            <param name="pageRange">The page range.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.ExportDocumentToWorkbook(GrapeCity.ActiveReports.Document.Section.Document.Filters.IFilteredDocument,GrapeCity.SpreadBuilder.Workbook,System.Drawing.Printing.PaperKind,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Performs the main export of the specified document to the specified workbook.
            </summary>
            <param name="document">The document to be exported</param>
            <param name="workBook">The SpreadBuilder Workbook to export it to.</param>
            <param name="paperKind">The paper kind from initial SectionDocument</param>
            <remarks>This method abstracts the core export logic so that the various overloads of the Export method can perform teh export the same way, but save the workbook differently (stream or file).</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.SetColWidthsAndMergeColumns(System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn},System.Single,System.Single,System.Int32)">
            <summary>
            Set Col Width &amp; Remove empty cols that are smaller than minColumnWidth, if it's not 
            empty set width to mincolwidth.
            </summary>
            <remarks>
            This should be called once for each page if multisheet=true, or once for the entire document if multisheet=false.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.RemoveOverlaps(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection,System.Int32)">
            <summary>
            Remove all possible overlaps.
            </summary>
            <param name="pageItems"></param>
            <param name="tweak"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.PageItemsToPageLayout(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.PageItemCollection,System.Collections.Generic.IDictionary{System.UInt64,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow},System.Collections.Generic.IDictionary{System.UInt64,GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutColumn},System.Int32)">
            <summary>
            Takes pageitems and puts them on logical rows and columns for a tabular layout.  The two tables must only contain LayoutRow and LayoutColumn objects respectivly.  If they don't there will be an exception.
            </summary>
            <param name="pageItems">The collection of PageItems to be put into the layout.</param>
            <param name="rowsTable">The hashtable to put hte LayoutRow objects in.</param>
            <param name="columnsTable">The hashtable to put the LayoutColumn objects in.  This collection could contain existing columns from prior pages.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.SetRowHeightsFromRowPositionDeltas(System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow},GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage)">
            <summary>
            Sets the height of each LayoutRow in the list based on the difference in position.
            </summary>
            <param name="rows">
            An ArrayList containing only LayoutRow objects that should be sorted from top (lowest Position value) to bottom (heighest Position value).
            It is critical that the ArrayList only contain LayoutRow objects.
            </param>
            <param name="layoutPage">A LayoutPage object describing the dimensions of the page.</param>
            <remarks>
            There are two techniques to set the heights of our LayoutRows; SetRowHeightsFromRowPositionDeltas and SetRowHeightsFromContainedPageItems.
            When cell merging is allowed, we set the height of rows based on how far apart they are.  This technique yields rows shorter than some PageItems on those rows, but because of cell merging that is not a problem.  If a PageItem is taller than a row, it merges into the next row.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.SetRowHeightsFromContainedPageItems(System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow})">
            <summary>
            Sets the height of each LayoutRow in the list based on the tallest PageItem in the row.
            </summary>
            <param name="rows">
            An ArrayList containing only LayoutRow objects that should be sorted from top (lowest Position value) to bottom (heighest Position value).
            It is critical that the ArrayList only contain LayoutRow objects.
            </param>
            <remarks>
            There are two techniques to set the heights of our LayoutRows; SetRowHeightsFromRowPositionDeltas and SetRowHeightsFromContainedPageItems.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.MergeLayoutRows(System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutRow},System.Single,System.Int32)">
            <summary>
            If two rows overlap vertically, and their PageItems don't overlap horizontally, then they are merged together.
            It is important to note that rows will only be merged if they overlap.
            </summary>
            <param name="rows"></param>
            <remarks>This is really only effective if UseCellMerging is false, and therefore the height of rows were set based on the tallest pageitem in the row.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport.ExportPageInternal(GrapeCity.ActiveReports.Export.Excel.Section.InternalC.LayoutPage,GrapeCity.SpreadBuilder.DDSheet,System.Drawing.Graphics,System.Int32)">
            <summary>
            Exports an individual page to the specified stream.
            </summary>
            <param name="layoutPage">This should have all information necessary to export a page to a tabular format.</param>
            <param name="sheet">The target excel sheet to export the pageitems to.</param>
            <param name="startingRow">The zero based Excel row index to begin exporting the page at.</param>
            <returns>The zero based Excel row number that the page ended on.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportException">
            <summary>
            The exception that is thrown for general exceptions that occur in the ActiveReports.XlsExport assembly.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExcelExportException class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ExcelExportException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExcelExportException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings">
            <summary>
            Stores settings for the export.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings.CanUseCellMerging">
            <summary>
            Get whether use cell merging function.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings.Tweak">
            <summary>
            Get TweakFlags class.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings.FileFormat">
            <summary>
            Get the file format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings.MinRowHeight">
            <summary>
            Get the minimum value of row height.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings.MinColumnWidth">
            <summary>
            Get the minimum value of column width.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportSettings.#ctor(System.Boolean,System.Int32,GrapeCity.ActiveReports.Export.Excel.Section.FileFormat,System.Single,System.Single)">
            <summary>
            Create a XlsExportSettings struct.
            </summary>
            <param name="canUseCellMerging">A boolean indicates whether use cell merging function.</param>
            <param name="tweak">An integer indicates a TweakFlags class.</param>
            <param name="fileFormat">A FileFormat enum indicates which file format.</param>
            <param name="minRowHeight">A float indicates the minimum value of row height.</param>
            <param name="minColumnWidth">A float indicates the minimum value of column width.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools">
            <summary>
            Provides some utility functions used only by the XlsExport assembly.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools.IsBorderEmpty(GrapeCity.ActiveReports.Border)">
            <summary>
            Returns true if a border has all sides' borderlinestyle set to none.
            </summary>
            <param name="border"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools.IsBorderDirectlyAhead(DataDynamics.ActiveReports.Export.InternalC.IPeekableCanvasItemEnumerator,GrapeCity.ActiveReports.Border@)">
            <summary>
            Will use <see cref="M:DataDynamics.ActiveReports.Export.InternalC.CanvasEnumerator.PeekNext"/> to look for a border that appears directly ahead.
            </summary>
            <param name="canvasItems">The pageitems to peek ahead into in search of a <see cref="T:GrapeCity.ActiveReports.Document.Section.BorderItem"/> that appears to match the specifie PageItem.</param>
            <param name="outBorder">The border found if the function returns true.</param>
            <returns>True if a border is found, otherwise false.</returns>
            <remarks>
            Used by PageItemsFromPage very odd implementation, but if you step through a few RDFs with borders and some odd cases you'll see why this is necessary.
            Basically if the next item is a border it returns true. If the next item is a TextAngle record then, a check is done to see if the <i>next</i> item is a border.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools.PenStyleToBorderLineStyle(GrapeCity.ActiveReports.Document.Section.PenStyles)">
            <summary>
            This function is used to convert the Rect CanvasItem's PenStyle values to the Border CanvasItems' BorderLineStyle values.
            </summary>
            <param name="penStyle"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools.PaperKindFromPage(GrapeCity.ActiveReports.Document.Section.Page)">
            <summary>
            Returns a PaperKind based on the dimensions of the page.  
            Letter or A4 are the only values that are returned.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools.GetPagePrintOrientation(GrapeCity.ActiveReports.Document.Section.PageOrientation)">
            <summary>
            Convert PageOrientation to SpreadBuilder PagePrintOrientation.
            </summary>
            <param name="pageOrientation">PageOrientation</param>
            <returns>PagePrintOrientation</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools.ToImageLineStyle(GrapeCity.ActiveReports.Document.Section.PenStyles)">
            <summary>
            Convert PenStyles to ImageLineStyle.
            </summary>
            <param name="style">PenStyles</param>
            <returns>ImageLineStyle</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsExportTools.ConvertToExcelAngle(System.Int32)">
            <summary>
            Convert degrees to Excel angle representation.
            
            Excel supports [-90,90] degrees
            (90,180] range we set to 90
            (180,270) range we set to -90
            Excel represents [0,90] degrees range as [0,90]
            and [-90,-1] degrees range as [91,180] (-1 is 91, -90 is 180)
            </summary>
            <param name="degrees">Angle in degrees</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings">
            <summary>
            Encapsulates the information necessary to provide Xls document print settings.
            </summary>
            <remarks>
            If you want to use default AR document print settings, you should Reset the properties on ProperGrid or invoke Reset() method.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings.Orientation">
            <summary>
            Gets or sets the print orientation of Excel sheet.
            </summary>		
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings.PaperSize">
            <summary>
            Gets or sets the print paper size of Excel sheet.
            </summary>
            <remarks>
            Reset this property to use default AR document print paper size.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings.#ctor(GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes,GrapeCity.ActiveReports.Document.Section.PageOrientation)">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings"/> class with the specified paper size and orientation.
            </summary>
            <param name="paperKind">The paperKind, that specifies the print paper size for Excel sheet.</param>
            <param name="orientation">The orientation, that specifies the print orientation for Excel sheet.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings"/> class with default paper size and page orientation.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings.Reset">
            <summary>
            Reset the properties of XlsPageSettings class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsPageSettings.GetPaperKind(GrapeCity.ActiveReports.Document.SectionDocument)">
            <summary>
            Get PaperKind according to this PaperSize and document's PaperKind.
            </summary>
            <param name="document">The ActiverReport Document.</param>
            <returns>PaperKind</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes">
            <summary>
            Specifies the standard paper sizes.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Default">
            <summary>
            The paper size is defined by the user.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Letter">
            <summary>
            Letter paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.LetterSmall">
            <summary>
            Letter small paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Tabloid">
            <summary>
            Tabloid paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Ledger">
            <summary>
            Ledger paper (17 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Legal">
            <summary>
            Legal paper (8.5 in. by 14 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Statement">
            <summary>
            Statement paper (5.5 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Executive">
            <summary>
            Executive paper (7.25 in. by 10.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A3">
            <summary>
            A3 paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A4">
            <summary>
            A4 paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A4Small">
            <summary>
            A4 small paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A5">
            <summary>
            A5 paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B4">
            <summary>
            B4 paper (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B5">
            <summary>
            B5 paper (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Folio">
            <summary>
            Folio paper (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Quarto">
            <summary>
            Quarto paper (215 mm by 275 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Standard10x14">
            <summary>
            Standard paper (10 in. by 14 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Standard11x17">
            <summary>
            Standard paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Note">
            <summary>
            Note paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Number9Envelope">
            <summary>
            #9 envelope (3.875 in. by 8.875 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Number10Envelope">
            <summary>
            #10 envelope (4.125 in. by 9.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Number11Envelope">
            <summary>
            #11 envelope (4.5 in. by 10.375 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Number12Envelope">
            <summary>
            #12 envelope (4.75 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Number14Envelope">
            <summary>
            #14 envelope (5 in. by 11.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.CSheet">
            <summary>
            C paper (17 in. by 22 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.DSheet">
            <summary>
            D paper (22 in. by 34 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.ESheet">
            <summary>
            E paper (34 in. by 44 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.DLEnvelope">
            <summary>
            DL envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.C5Envelope">
            <summary>
            C5 envelope (162 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.C3Envelope">
            <summary>
            C3 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.C4Envelope">
            <summary>
            C4 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.C6Envelope">
            <summary>
            C6 envelope (114 mm by 162 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.C65Envelope">
            <summary>
            C65 envelope (114 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B4Envelope">
            <summary>
            B4 envelope (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B5Envelope">
            <summary>
            B5 envelope (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B6Envelope">
            <summary>
            B6 envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.ItalyEnvelope">
            <summary>
            Italy envelope (110 mm by 230 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.MonarchEnvelope">
            <summary>
            Monarch envelope (3.875 in. by 7.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PersonalEnvelope">
            <summary>
            6 3/4 envelope (3.625 in. by 6.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.USStandardFanfold">
            <summary>
            US standard fanfold (14.875 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.GermanStandardFanfold">
            <summary>
            German standard fanfold (8.5 in. by 12 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.GermanLegalFanfold">
            <summary>
            German legal fanfold (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.IsoB4">
            <summary>
            ISO B4 (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapanesePostcard">
            <summary>
            Japanese postcard (100 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Standard9x11">
            <summary>
            Standard paper (9 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Standard10x11">
            <summary>
            Standard paper (10 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Standard15x11">
            <summary>
            Standard paper (15 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.InviteEnvelope">
            <summary>
            Invitation envelope (220 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.LetterExtra">
            <summary>
            Letter extra paper (9.275 in. by 12 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.LegalExtra">
            <summary>
            Legal extra paper (9.275 in. by 15 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.TabloidExtra">
            <summary>
            Tabloid extra paper (11.69 in. by 18 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A4Extra">
            <summary>
            A4 extra paper (236 mm by 322 mm). This value is specific to the PostScript driver and is used only by Linotronic printers to help save paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.LetterTransverse">
            <summary>
            Letter transverse paper (8.275 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A4Transverse">
            <summary>
            A4 transverse paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.LetterExtraTransverse">
            <summary>
            Letter extra transverse paper (9.275 in. by 12 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.APlus">
            <summary>
            SuperA/SuperA/A4 paper (227 mm by 356 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.BPlus">
            <summary>
            SuperB/SuperB/A3 paper (305 mm by 487 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.LetterPlus">
            <summary>
            Letter plus paper (8.5 in. by 12.69 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A4Plus">
            <summary>
            A4 plus paper (210 mm by 330 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A5Transverse">
            <summary>
            A5 transverse paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B5Transverse">
            <summary>
            JIS B5 transverse paper (182 mm by 257 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A3Extra">
            <summary>
            A3 extra paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A5Extra">
            <summary>
            A5 extra paper (174 mm by 235 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B5Extra">
            <summary>
            ISO B5 extra paper (201 mm by 276 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A2">
            <summary>
            A2 paper (420 mm by 594 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A3Transverse">
            <summary>
            A3 transverse paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A3ExtraTransverse">
            <summary>
            A3 extra transverse paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseDoublePostcard">
            <summary>
            Japanese double postcard (200 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A6">
            <summary>
            A6 paper (105 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeKakuNumber2">
            <summary>
            Japanese Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeKakuNumber3">
            <summary>
            Japanese Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeChouNumber3">
            <summary>
            Japanese Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeChouNumber4">
            <summary>
            Japanese Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.LetterRotated">
            <summary>
            Letter rotated paper (11 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A3Rotated">
            <summary>
            A3 rotated paper (420 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A4Rotated">
            <summary>
            A4 rotated paper (297 mm by 210 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A5Rotated">
            <summary>
            A5 rotated paper (210 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B4JisRotated">
            <summary>
            JIS B4 rotated paper (364 mm by 257 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B5JisRotated">
            <summary>
            JIS B5 rotated paper (257 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapanesePostcardRotated">
            <summary>
            Japanese rotated postcard (148 mm by 100 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseDoublePostcardRotated">
            <summary>
            Japanese rotated double postcard (148 mm by 200 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.A6Rotated">
            <summary>
            A6 rotated paper (148 mm by 105 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeKakuNumber2Rotated">
            <summary>
            Japanese rotated Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeKakuNumber3Rotated">
            <summary>
            Japanese rotated Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeChouNumber3Rotated">
            <summary>
            Japanese rotated Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeChouNumber4Rotated">
            <summary>
            Japanese rotated Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B6Jis">
            <summary>
            JIS B6 paper (128 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.B6JisRotated">
            <summary>
            JIS B6 rotated paper (182 mm by 128 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Standard12x11">
            <summary>
            Standard paper (12 in. by 11 in.). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeYouNumber4">
            <summary>
            Japanese You #4 envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.JapaneseEnvelopeYouNumber4Rotated">
            <summary>
            Japanese You #4 rotated envelope. Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Prc16K">
            <summary>
            People's Republic of China 16K paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Prc32K">
            <summary>
            People's Republic of China 32K paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Prc32KBig">
            <summary>
            People's Republic of China 32K big paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber1">
            <summary>
            People's Republic of China #1 envelope (102 mm by 165 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber2">
            <summary>
            People's Republic of China #2 envelope (102 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber3">
            <summary>
            People's Republic of China #3 envelope (125 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber4">
            <summary>
            People's Republic of China #4 envelope (110 mm by 208 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber5">
            <summary>
            People's Republic of China #5 envelope (110 mm by 220 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber6">
            <summary>
            People's Republic of China #6 envelope (120 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber7">
            <summary>
            People's Republic of China #7 envelope (160 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber8">
            <summary>
            People's Republic of China #8 envelope (120 mm by 309 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber9">
            <summary>
            People's Republic of China #9 envelope (229 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber10">
            <summary>
            People's Republic of China #10 envelope (324 mm by 458 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Prc16KRotated">
            <summary>
            People's Republic of China 16K rotated paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Prc32KRotated">
            <summary>
            People's Republic of China 32K rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.Prc32KBigRotated">
            <summary>
            People's Republic of China 32K big rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber1Rotated">
            <summary>
            People's Republic of China #1 rotated envelope (165 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber2Rotated">
            <summary>
            People's Republic of China #2 rotated envelope (176 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber3Rotated">
            <summary>
            People's Republic of China #3 rotated envelope (176 mm by 125 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber4Rotated">
            <summary>
            People's Republic of China #4 rotated envelope (208 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber5Rotated">
            <summary>
            People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber6Rotated">
            <summary>
            People's Republic of China #6 rotated envelope (230 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber7Rotated">
            <summary>
            People's Republic of China #7 rotated envelope (230 mm by 160 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber8Rotated">
            <summary>
            People's Republic of China #8 rotated envelope (309 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber9Rotated">
            <summary>
            People's Republic of China #9 rotated envelope (324 mm by 229 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.PaperSizes.PrcEnvelopeNumber10Rotated">
            <summary>
            People's Republic of China #10 rotated envelope (458 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity">
            <summary>
            Encapsulates the information necessary to provide excel document security and encryption.
            </summary>
            <remarks>
            If a WritePassword or a Password is supplied the Excel application will prompt for a write or open access password.
            If a WritePassword or a Password is not supplied no password will be requested to open the document.
            By correctly supplying the Password, the user will be able to open the document.
            By correctly supplying the WritePassword, the user will be able to write the document.
            If the read only recommended is set to true, the Excel application will prompt user whether to open document as read-only.
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity._writePassword">
            <summary>
            Represents WritePassword.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity._password">
            <summary>
            Represents Password.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity._protectedBy">
            <summary>
            Represents the name of person who protect the workbook.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity._readOnlyRecommended">
            <summary>
            Represents ReadOnlyRecommended.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity"/> class with the specified password and read only recommended.
            </summary>
            <param name="writePassword">The password, that upon being entered permits the Excel document be writable</param>
            <param name="password">The password, that upon being entered permits to open Excel document</param>
            <param name="readOnlyRecommended">The read only recommended, that specifies the document whether to prompt user to open a read-only document.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity"/> class with empty passwords, no read only recommended and specified owner.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity.ProtectedBy">
            <summary>
            Gets or sets the User Name responsible to password protect the excel spreadsheet.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity.WritePassword">
            <summary>
            Gets or sets the write password of the Excel file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity.Password">
            <summary>
            Gets or sets the password which can be entered to permit to open Excel document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Section.XlsSecurity.ReadOnlyRecommended">
            <summary>
            Gets or sets the value to indicate if the Excel file was saved as read only recommended.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.AR.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A2">
            <summary>
              Looks up a localized string similar to A2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A3">
            <summary>
              Looks up a localized string similar to A3.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A3Extra">
            <summary>
              Looks up a localized string similar to A3 Extra.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A3ExtraTransverse">
            <summary>
              Looks up a localized string similar to A3 Extra Transverse.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A3Transverse">
            <summary>
              Looks up a localized string similar to A3 Transverse.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A4">
            <summary>
              Looks up a localized string similar to A4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A4Extra">
            <summary>
              Looks up a localized string similar to A4 Extra.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A4Plus">
            <summary>
              Looks up a localized string similar to A4 Plus.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A4Small">
            <summary>
              Looks up a localized string similar to A4 Small.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A4Transverse">
            <summary>
              Looks up a localized string similar to A4 Transverse.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A5">
            <summary>
              Looks up a localized string similar to A5.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A5Extra">
            <summary>
              Looks up a localized string similar to A5 Extra.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A5Rotated">
            <summary>
              Looks up a localized string similar to A5 Rotated.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A5Transverse">
            <summary>
              Looks up a localized string similar to A5 Transverse.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A6">
            <summary>
              Looks up a localized string similar to A6.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.A6Rotated">
            <summary>
              Looks up a localized string similar to A6 Rotated.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ALIGNMENT">
            <summary>
              Looks up a localized string similar to Alignment.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.APlus">
            <summary>
              Looks up a localized string similar to A Plus.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTCANNOTBEEMPTY">
            <summary>
              Looks up a localized string similar to Argument cannot be empty..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTCANNOTBELESSTHANZERO">
            <summary>
              Looks up a localized string similar to argument cannot be less than zero..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTCANNOTBENULL">
            <summary>
              Looks up a localized string similar to [GetBiff8UnicodeStringByteCount:] Argument cannot be null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTNULLIMAGE">
            <summary>
              Looks up a localized string similar to Image.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTNULLTEXT">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTOUTOFRANGECANNOTBENEGATIVE">
            <summary>
              Looks up a localized string similar to The argument cannot be negative..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTOUTSIDEOFBOUNDS">
            <summary>
              Looks up a localized string similar to Argument is outside the bounds of the collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMENTPAGEITEM">
            <summary>
              Looks up a localized string similar to Argument must be of type PageItem..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMNETLAYOUTCOLUMN">
            <summary>
              Looks up a localized string similar to Argument must be of type LayoutColumn..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ARGUMNETLAYOUTROW">
            <summary>
              Looks up a localized string similar to Argument must be of type LayoutRow..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.AUTHORCANNOTBEEMPTY">
            <summary>
              Looks up a localized string similar to Author value cannot be empty..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B4">
            <summary>
              Looks up a localized string similar to B4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B4Envelope">
            <summary>
              Looks up a localized string similar to Envelope B4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B4JisRotated">
            <summary>
              Looks up a localized string similar to B4 Jis Rotated.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B5">
            <summary>
              Looks up a localized string similar to B5.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B5Envelope">
            <summary>
              Looks up a localized string similar to Envelope B5.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B5Extra">
            <summary>
              Looks up a localized string similar to B5 Extra.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B5JisRotated">
            <summary>
              Looks up a localized string similar to B5 Jis Rotated.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B5Transverse">
            <summary>
              Looks up a localized string similar to B5 Transverse.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B6Envelope">
            <summary>
              Looks up a localized string similar to Envelope B6.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B6Jis">
            <summary>
              Looks up a localized string similar to B6 Jis.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.B6JisRotated">
            <summary>
              Looks up a localized string similar to B6 Jis Rotated.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BEGINNINGOFFILENOTSUPPORTED">
            <summary>
              Looks up a localized string similar to The &apos;beginning of file record&apos; does not support the specified ({0}) file version..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BEGINREADISNOTSUPPORTED">
            <summary>
              Looks up a localized string similar to BeginRead isn&apos;t supported on this stream.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BEGINWRITEISNOTSUPPORTED">
            <summary>
              Looks up a localized string similar to BeginWrite isn&apos;t supported on this stream.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BHIDDENINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to bHidden member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BIFFCELLTABLECANNOTBENULL">
            <summary>
              Looks up a localized string similar to BiffCellTable argument in BiffCellTableEnumerator constructor cannot be null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BIFFCELLTABLECOULDNOTGETENUMERATOR">
            <summary>
              Looks up a localized string similar to BiffCellTableEnumerator constructor: Couldn&apos;t get table enumerator from specified BiffCellTable argument..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BIFFVERSIONNOTYETIMPL">
            <summary>
              Looks up a localized string similar to Specified BIFF Version not yet implemented..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BLOCKEDINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to bLocked member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BOFTYPENOTSUPPORTED">
            <summary>
              Looks up a localized string similar to Specified BofTypes value &apos;{0}&apos; not supported..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERBOTTOMSTYLE">
            <summary>
              Looks up a localized string similar to BorderBottomStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERBOTTOMSTYLERANGE">
            <summary>
              Looks up a localized string similar to Border style must be between 0 and 13..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERDIAGONALSTYLE">
            <summary>
              Looks up a localized string similar to BorderDiagonalStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERDIAGONALSTYLERANGE">
            <summary>
              Looks up a localized string similar to Border style must be between 0 and 13..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERDIAGONALVALUE">
            <summary>
              Looks up a localized string similar to val.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERDIAGONALVALUERANGE">
            <summary>
              Looks up a localized string similar to BorderDiagonalStyle must be 0-3..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERLEFTSTYLE">
            <summary>
              Looks up a localized string similar to BorderLeftStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERRIGHTSTYLE">
            <summary>
              Looks up a localized string similar to BorderRightStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERSTYLERANGE">
            <summary>
              Looks up a localized string similar to Border style must be between 0 and 13..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BORDERTOPSTYLE">
            <summary>
              Looks up a localized string similar to BorderTopStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BOTTOMBLSTYLEINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to bottomblStyle member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BOTTOMBORDERCOLORINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to bottomBorderColor member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BPlus">
            <summary>
              Looks up a localized string similar to B Plus.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.BWRAPINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to bWrap member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.C3Envelope">
            <summary>
              Looks up a localized string similar to Envelope C3.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.C4Envelope">
            <summary>
              Looks up a localized string similar to Envelope C4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.C5Envelope">
            <summary>
              Looks up a localized string similar to Envelope C5.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.C65Envelope">
            <summary>
              Looks up a localized string similar to Envelope C65.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.C6Envelope">
            <summary>
              Looks up a localized string similar to Envelope C6.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.CINDENTINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to cIndent member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COLUMN">
            <summary>
              Looks up a localized string similar to Column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COLUMNFROM">
            <summary>
              Looks up a localized string similar to Column from.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COLUMNFROMRANGE">
            <summary>
              Looks up a localized string similar to The columnFrom argument must be less than the columnTo argument..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COLUMNNOTNEGATIVE">
            <summary>
              Looks up a localized string similar to value must be non-negative..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COULDNOTCLONEXFRECORD8">
            <summary>
              Looks up a localized string similar to Could not clone the specified XFRecord8 object..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COULDNOTCREATEFILE">
            <summary>
              Looks up a localized string similar to Could not create file &apos;{0}&apos;.  Please ensure that the folder exists..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COULDNOTCREATEWORKBOOKSTREAM">
            <summary>
              Looks up a localized string similar to Workbook stream could not be created..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.COULDNOTFINDAFPARENTREC">
            <summary>
              Looks up a localized string similar to Could not find the xfParent indicated by the rec parameter..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.CREATEILOCKBYTESONHGLOBALSFAILED">
            <summary>
              Looks up a localized string similar to CreateILockBytesOnHGlobal caused a failure in unmanaged code..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.CREATEWAITHANDLEISNOTSUPPORTEDONSTREAM">
            <summary>
              Looks up a localized string similar to CreateWaitHandle isn&apos;t supported on this stream.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.CSheet">
            <summary>
              Looks up a localized string similar to C Sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DDFormatException1">
            <summary>
              Looks up a localized string similar to Argument_RankEQOne1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DDFormatException2">
            <summary>
              Looks up a localized string similar to Argument_Range0to99_1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DDFormatException3">
            <summary>
              Looks up a localized string similar to NumDigitsAfterDecimal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DDFormatException4">
            <summary>
              Looks up a localized string similar to InvalidCast_FromTo {0} Currency.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DDFormatException5">
            <summary>
              Looks up a localized string similar to &quot;VbMakeException(5).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_OpenPassword">
            <summary>
              Looks up a localized string similar to Gets or sets the password which can be entered to permit to open Excel document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_Orientation">
            <summary>
              Looks up a localized string similar to Gets or sets the print orientation of Excel sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_PaperKind">
            <summary>
              Looks up a localized string similar to Gets or sets the print paper size of Excel sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_ProtectedBy">
            <summary>
              Looks up a localized string similar to Gets or sets the User Name responsible to password protect the excel spreadsheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_ReadOnlyRecommended">
            <summary>
              Looks up a localized string similar to Gets or sets the value to indicate if the Excel file was saved as read only recommended..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_WritePassword">
            <summary>
              Looks up a localized string similar to Gets or sets the write password of the Excel file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_AutoRowHeight">
            <summary>
              Looks up a localized string similar to True if excel should set the height of the row based on the contents of that row.  Otherwise the XlsExport will calculate the height of the rows.  In some cases this may make the output look better inside excel.  However, a value of true may adversely effect pagination when printing from excel, as it will often cause excel to stretch the height of the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_DisplayGridLines">
            <summary>
              Looks up a localized string similar to Sets or returns whether grid lines in workbook are displayed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_FileFormat">
            <summary>
              Looks up a localized string similar to Sets or returns which file format version the outputted file should support..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_MinColumnWidth">
            <summary>
              Looks up a localized string similar to Sets or returns the minimum width (in inches) of an empty column that will be permitted in the output..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_MinRowHeight">
            <summary>
              Looks up a localized string similar to Sets or returns the minimum height (in inches) of an empty row that will be permitted in the output..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_MultiSheet">
            <summary>
              Looks up a localized string similar to Sets or returns whether each page is to be exported to it&apos;s own sheet or not.  True indicates that each page in the ActiveReport Document will be exported to a separate sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_OpenXmlStandard">
            <summary>
              Looks up a localized string similar to Gets or sets the level of Open XML document conformance on exporting with Xlsx file format..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_PageSettings">
            <summary>
              Looks up a localized string similar to Returns an XlsPageSetting object for initializing page size and orientation..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_RemoveVerticalSpace">
            <summary>
              Looks up a localized string similar to Sets or returns a value that indicates whether completely empty vertical spacing will be removed from the output..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_Security">
            <summary>
              Looks up a localized string similar to Returns a XlsSecurity object for initializing document encryption and security..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_SheetName">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating the name of sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_Tweaks">
            <summary>
              Looks up a localized string similar to For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_UseCellMerging">
            <summary>
              Looks up a localized string similar to Sets or returns whether cells should be merged together..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_UseCompression">
            <summary>
              Looks up a localized string similar to Gets or sets whether compression should be used on exporting Xlsx file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Desc_XlsExport_UseDefaultPalette">
            <summary>
              Looks up a localized string similar to Sets or returns whether export document with Excel default palette..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Description_XlsExport">
            <summary>
              Looks up a localized string similar to ActiveReports Excel (.xls) Export Component.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DGDIAGINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to dgDiag member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DLEnvelope">
            <summary>
              Looks up a localized string similar to Envelope DL.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.DSheet">
            <summary>
              Looks up a localized string similar to D Sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ENDLENGTH">
            <summary>
              Looks up a localized string similar to endlength.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ENDREADISNOTSUPPORTED">
            <summary>
              Looks up a localized string similar to EndRead isn&apos;t supported on this stream.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ENDSTYLE">
            <summary>
              Looks up a localized string similar to endstyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ENDWIDTH">
            <summary>
              Looks up a localized string similar to endwidth.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ENDWRITEISNOTSUPPORTED">
            <summary>
              Looks up a localized string similar to EndWrite isn&apos;t supported on this stream.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ENTRY">
            <summary>
              Looks up a localized string similar to Entry.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORCOMPACTINGPATCHINGXFRECORDS">
            <summary>
              Looks up a localized string similar to Error Compacting &amp; Patching XFRecords..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORCOMPRESSINGMETAFILE">
            <summary>
              Looks up a localized string similar to Error compressing metafile. Return code:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORCONVERTIMAGETOMETAFILE">
            <summary>
              Looks up a localized string similar to Error converting image to specialized metafile..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORCREATINGBINARYWRITER">
            <summary>
              Looks up a localized string similar to Error creating BinaryWriter..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORCREATINGCOLORTRANSLATIONTABLE">
            <summary>
              Looks up a localized string similar to Error Creating Color Translation Table..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORCREATINGFILE">
            <summary>
              Looks up a localized string similar to Unexpected Error creating file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORCREATINGFILE2">
            <summary>
              Looks up a localized string similar to Error creating File..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ErrorInvalidFileFormat">
            <summary>
              Looks up a localized string similar to Invalid file format.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ErrorInvalidVersionNumber">
            <summary>
              Looks up a localized string similar to Invalid version number.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORPREPARINGDOCUMENT">
            <summary>
              Looks up a localized string similar to An unexpected error occurred preparing document: {0}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORSERIALIZINGMARGINS">
            <summary>
              Looks up a localized string similar to An error occurred serializing margins..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORUNMANAGEDBYTEMARSHALING">
            <summary>
              Looks up a localized string similar to An error occurred performing unmanaged byte marshaling..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWHILEFLUSHINGCLOSINGBINARYWRITER">
            <summary>
              Looks up a localized string similar to Exception occurred while Flushing &amp; Closing binWriter..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKFILEPASS">
            <summary>
              Looks up a localized string similar to Error writing Workbook FILEPASS records.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKFILESHARING">
            <summary>
              Looks up a localized string similar to Error writing Workbook FILESHARING records.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALBOUNDSHEET">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals BOUNDSHEET records.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALEOF">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals EOF record.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALFONTRECORDS">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals FONT records.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALFORMAT">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals FORMAT records.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALPASSWORD">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals Password.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALPROTECT">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals PROTECT.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALSACCESSRECORD">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals Access record.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALSBOF">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals BOF.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALSCODEPAGE">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals CodePage.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALSDSF">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals DSF.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALSTABID">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals TABID.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALSTYLE">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals STYLE records.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALWINDOW1">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals WINDOW1.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALWINDOWPROTECT">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals WindowProtect.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWORKBOOKGLOBALXF">
            <summary>
              Looks up a localized string similar to Error writing WorkbookGlobals XF records.  ExtendedInfo:[{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWRITEACCESS">
            <summary>
              Looks up a localized string similar to Unexpected error while writing WRITEACCESS record..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWRITINGSERUPRECORD">
            <summary>
              Looks up a localized string similar to Error writing SETUP record..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWRITINGSHAREDSTRINGTABLE">
            <summary>
              Looks up a localized string similar to Error writing shared string table..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRORWRITINGWORKBOOKGLOBALS">
            <summary>
              Looks up a localized string similar to Error Writing Workbook Globals. Extended Info:[{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ERRRORWRITINGSHEETSCOLLECTION">
             <summary>
               Looks up a localized string similar to Error writing Sheets collection: Extended Info Follows: {0}
            .
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ESheet">
            <summary>
              Looks up a localized string similar to E Sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.EXCEEDEDARRAYLENGTH">
            <summary>
              Looks up a localized string similar to offset + count is greater than array length..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_ColumnCountLimit">
            <summary>
              Looks up a localized string similar to Column count on {0} file format cannot exceed {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_Default_InvalidPassword">
            <summary>
              Looks up a localized string similar to The password is invalid..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_Default_WorksheetSizeLimit">
            <summary>
              Looks up a localized string similar to This workbook contains data in cells outside of the row and column limit of selected file format..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_HorizontalPageBreaksCount">
            <summary>
              Looks up a localized string similar to The count of HorizontalPageBreaks on {0} file format cannot exceed {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_InvalidMargin">
            <summary>
              Looks up a localized string similar to Value is invalid. The value MUST be greater than or equal to 0 and less than 3528..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_InvalidSheetName">
            <summary>
              Looks up a localized string similar to Value is invalid. The name of worksheet cannot be empty, cannot exceed 31 characters and cannot contain any of following characters: : \ / ? * [ or ].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_LessThanAndEqual">
            <summary>
              Looks up a localized string similar to The length of property &apos;{0}&apos; must be less than or equal to {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_LineColumn">
            <summary>
              Looks up a localized string similar to Line: Value of ColumnLeft property should be less than or equal to the value of ColumnRight property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_LineRow">
            <summary>
              Looks up a localized string similar to Line: Value of RowTop property should be less than or equal to value of RowBottom property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_NumberNotLessThan">
            <summary>
              Looks up a localized string similar to The parameter &apos;{0}&apos; cannot be less than {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_OneNotLessThanOther">
            <summary>
              Looks up a localized string similar to {0} cannot be less than {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_PasswordLength">
            <summary>
              Looks up a localized string similar to The length of password on {0} file format cannot exceed {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_ProtectWorkbookPasswordLength">
            <summary>
              Looks up a localized string similar to The length of ProtectWorkbookPassword on {0} file format cannot exceed {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_RowCountLimit">
            <summary>
              Looks up a localized string similar to Row count on {0} file format cannot exceed {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Exception_VerticalPageBreaksCount">
            <summary>
              Looks up a localized string similar to The count of VerticalPageBreaks on {0} file format cannot exceed {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Executive">
            <summary>
              Looks up a localized string similar to Executive.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.F123PREFIXINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to f123Prefix member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILEDTOCREATEWORKBOOKSTREAM">
            <summary>
              Looks up a localized string similar to Workbook stream could not be created..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2BOTTOMBLSTYLE">
            <summary>
              Looks up a localized string similar to Failure2: bottomblStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2CINDENT">
            <summary>
              Looks up a localized string similar to Failure2: cIndent.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FATRALIGN">
            <summary>
              Looks up a localized string similar to Failure2: fAtrAlign.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FATRBORDER">
            <summary>
              Looks up a localized string similar to Failure2: fAtrBorder.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FATRFNT">
            <summary>
              Looks up a localized string similar to Failure2: fAtrFnt.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FATRLOCKEDHIDDEN">
            <summary>
              Looks up a localized string similar to Failure2: fAtrLockedHidden.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FATRNUM">
            <summary>
              Looks up a localized string similar to Failure2: fAtrNum.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FATRPATTERN">
            <summary>
              Looks up a localized string similar to Failure2: fAtrPattern.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FMERGECELL">
            <summary>
              Looks up a localized string similar to Failure2: fMergeCell.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2FSHRINKTOFIT">
            <summary>
              Looks up a localized string similar to Failure2: fShrinkToFit.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2GRBITDIAG">
            <summary>
              Looks up a localized string similar to Failure2: grbitDiag.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2IREADINGORDER">
            <summary>
              Looks up a localized string similar to Failure2: iReadingOrder.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2LEFTBLSTYLE">
            <summary>
              Looks up a localized string similar to Failure2: leftblStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2LEFTBORDERCOLOR">
            <summary>
              Looks up a localized string similar to Failure2: leftBorderColor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2RESERVEDOFF">
            <summary>
              Looks up a localized string similar to Failure2: reservedoff.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2RIGHTBLSTYLE">
            <summary>
              Looks up a localized string similar to Failure2: rightblStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2RIGHTBORDERCOLOR">
            <summary>
              Looks up a localized string similar to Failure2: rightBorderColor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FAILURE2TOPBLSTYLE">
            <summary>
              Looks up a localized string similar to Failure2: topblStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FATRALIGNINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fAtrAlign member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FATRBORDERINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fAtrBorder member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FATRFNTINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fAtrFnt member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FATRLOCKEDHIDDENINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fAtrLockedHidden member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FATRNUMINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fAtrNum member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FATRPATTERNINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fAtrPattern member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FILLBACKCOLORINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fillBackColor member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FILLFORECOLORINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fillForeColor member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FILLPATTERNINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fillPattern member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FJUSTLASTINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fJustLast member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FMERGECELLINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fMergeCell member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Folio">
            <summary>
              Looks up a localized string similar to Folio.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTINDEXINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fontIndex member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTNAME">
            <summary>
              Looks up a localized string similar to FontName.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTNAMELENGTH">
            <summary>
              Looks up a localized string similar to The font name cannot exceed 240 characters..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTNAMENOTNULL">
            <summary>
              Looks up a localized string similar to The FontName value cannot be set to null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTSIZE">
            <summary>
              Looks up a localized string similar to FontSize.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTSIZECANNOTBELESSOREQUALTOZERO">
            <summary>
              Looks up a localized string similar to FontSize cannot be less then or equal to zero..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTSIZERANGE">
            <summary>
              Looks up a localized string similar to FontSize cannot be zero or less than zero..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTSIZETOOLARGE">
            <summary>
              Looks up a localized string similar to FontSize is too large..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTUNDERLINESTYLE">
            <summary>
              Looks up a localized string similar to FontUnderineStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FONTUNDERLINESTYLERANGE">
            <summary>
              Looks up a localized string similar to FontUnderlineStyle must be one of the GrapeCity.SpreadBuilder.FontUnderlineStyles enumeration values..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FORMATINDEXINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to formatIndex member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FORMATRECORDDONOTSUPPORTTHISVERSION">
            <summary>
              Looks up a localized string similar to Format records don&apos;t support this version..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FSHRINKTOFITINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fShrinkToFit member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.FSXBUTTONINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to fsxButton member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.GermanLegalFanfold">
            <summary>
              Looks up a localized string similar to Fanfold Legal German.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.GermanStandardFanfold">
            <summary>
              Looks up a localized string similar to Fanfold Std German.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.GLOBALSIZEFAILED">
            <summary>
              Looks up a localized string similar to Couldn&apos;t obtain size of the memory stream..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.GRBITDIAGINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to grbitDiag member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.HALIGNMENTINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to hAlignment member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.HORIZONTALALIGNMENTRANGE">
            <summary>
              Looks up a localized string similar to Horizontal Alignment value must be between 0 and 6..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ICOLUMN">
            <summary>
              Looks up a localized string similar to iColumn.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ICOLUMNRANGE">
            <summary>
              Looks up a localized string similar to The specified iColumn argument is either less than zero or greater than the maximum number of rows that the Excel file format supports..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ICVDIAGINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to icvDiag member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IMAGE1">
            <summary>
              Looks up a localized string similar to Image: Right column specified is either the same as or to the left of the left column specified!.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IMAGE2">
            <summary>
              Looks up a localized string similar to Image: Top row specified is either the same as or above the top row specified!.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IMAGETYPE">
            <summary>
              Looks up a localized string similar to imageType.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IMAGETYPEERROR">
            <summary>
              Looks up a localized string similar to imageType must either be MSOBLIPTYPE.msoblipEMF or MSOBLIPTYPE.msoblipPNG..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IMPLWRITETOBIFF">
            <summary>
              Looks up a localized string similar to TODO: Implement WriteToBiff method for Ahendstyles..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INDEX">
            <summary>
              Looks up a localized string similar to iIndex.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INDEXERROR">
            <summary>
              Looks up a localized string similar to The specified zero based collection index is either less than zero or greater than Count-1..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INDEXOUTSIDEOFBOUNDS">
            <summary>
              Looks up a localized string similar to Argument is outside the bounds of the collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INST">
            <summary>
              Looks up a localized string similar to inst.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INVALIDMARGINRECORD">
            <summary>
              Looks up a localized string similar to Invalid margin record identifier..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INVALIDMSOBLIPTYPE">
            <summary>
              Looks up a localized string similar to Invalid MSOBLIPTYPE specified in OBJImage.OBJImage(..) !.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INVALIDPAGERANGE">
            <summary>
              Looks up a localized string similar to Invalid pageRange specified..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.INVALIDSEEKORIGINVALUE">
            <summary>
              Looks up a localized string similar to Not an expected SeekOrigin Value!.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.InvalidURIError">
            <summary>
              Looks up a localized string similar to Invalid hyperlink URI.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.InviteEnvelope">
            <summary>
              Looks up a localized string similar to Envelope Invite.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IREADINGORDERINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to iReadingOrder member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IROW">
            <summary>
              Looks up a localized string similar to iRow.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IROWRANGE">
            <summary>
              Looks up a localized string similar to The specified iRow argument is either less than zero or greater than the maximum number of columns that the Excel file format supports..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.IsoB4">
            <summary>
              Looks up a localized string similar to ISO B4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ItalyEnvelope">
            <summary>
              Looks up a localized string similar to Envelope Italy.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.JapanesePostcard">
            <summary>
              Looks up a localized string similar to Japanese Postcard.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.JapanesePostcardRotated">
            <summary>
              Looks up a localized string similar to Japanese Postcard Rotated.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Ledger">
            <summary>
              Looks up a localized string similar to Ledger.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LEFTBLSTYLEINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to leftblStyle member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LEFTBORDERCOLORINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to leftBorderColor member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Legal">
            <summary>
              Looks up a localized string similar to Legal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LegalExtra">
            <summary>
              Looks up a localized string similar to Legal Extra.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Letter">
            <summary>
              Looks up a localized string similar to Letter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LetterExtra">
            <summary>
              Looks up a localized string similar to Letter Extra.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LetterExtraTransverse">
            <summary>
              Looks up a localized string similar to Letter Extra Transverse.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LetterPlus">
            <summary>
              Looks up a localized string similar to Letter Plus.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LetterSmall">
            <summary>
              Looks up a localized string similar to Letters Small.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.LetterTransverse">
            <summary>
              Looks up a localized string similar to Letter Transverse.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.MonarchEnvelope">
            <summary>
              Looks up a localized string similar to Envelope Monarch.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.MSOFBTOPT">
            <summary>
              Looks up a localized string similar to You must call make_msofbtOPT() before calling get_msofbtOPT()..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.MSOFBTOPTDATA">
            <summary>
              Looks up a localized string similar to Exception encountered writing out msofbtOPT data for a metafile on sheet [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.NAME">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.NAMECANNOTBENULL">
            <summary>
              Looks up a localized string similar to Name value cannot be null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Note">
            <summary>
              Looks up a localized string similar to Note.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.NOTIMPLEMENTEDBIFFCOLINFO">
            <summary>
              Looks up a localized string similar to COLINFO support for BIFF2 not yet implemented..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.NULLDOCFILE">
            <summary>
              Looks up a localized string similar to The unmanaged doc file creation call returned a null pointer..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.NULLILOCKBYTES">
            <summary>
              Looks up a localized string similar to The unmanaged lock bytes call returned a null ILockBytes..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Number10Envelope">
            <summary>
              Looks up a localized string similar to Envelope 10.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Number11Envelope">
            <summary>
              Looks up a localized string similar to Envelope 11.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Number12Envelope">
            <summary>
              Looks up a localized string similar to Envelope 12.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Number14Envelope">
            <summary>
              Looks up a localized string similar to Envelope 14.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Number9Envelope">
            <summary>
              Looks up a localized string similar to Envelope 9.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.NUMBEROFCOLUMNSTOMERGE">
            <summary>
              Looks up a localized string similar to numberOfColumnsToMerge.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.NUMBEROFROWSTOMERGE">
            <summary>
              Looks up a localized string similar to numberOfRowsToMerge.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.OBJECTISDISPOSED">
            <summary>
              Looks up a localized string similar to The object has been disposed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.OBJMETAFILE">
            <summary>
              Looks up a localized string similar to The specified OBJ_metafile in pm cannot be null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.OLDPOSITION">
            <summary>
              Looks up a localized string similar to oldPosition.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.OUTLINELEVEL">
            <summary>
              Looks up a localized string similar to outlineLevel.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.OUTPUTSTREAMNOTWRITABLE">
            <summary>
              Looks up a localized string similar to The specified output stream must be writable..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.OWNERTABLE">
            <summary>
              Looks up a localized string similar to ownerTable.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.PARENTSHEET">
            <summary>
              Looks up a localized string similar to ParentSheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.PARENTSHEETCANNOTBENULL">
            <summary>
              Looks up a localized string similar to The ParentSheet value cannot be specified as null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.PARMMUSTBESAVETYPE">
            <summary>
              Looks up a localized string similar to The parameter must be the same type as the class or value type that implements this interface.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.PersonalEnvelope">
            <summary>
              Looks up a localized string similar to Envelope Personal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.PID">
            <summary>
              Looks up a localized string similar to pid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.PM">
            <summary>
              Looks up a localized string similar to pm.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ProtectedBy_Default">
            <summary>
              Looks up a localized string similar to ActiveReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Quarto">
            <summary>
              Looks up a localized string similar to Quarto.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVED">
            <summary>
              Looks up a localized string similar to reserved.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVED1">
            <summary>
              Looks up a localized string similar to reserved1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVED3">
            <summary>
              Looks up a localized string similar to reserved3.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVEDDOESNOTFIX">
            <summary>
              Looks up a localized string similar to current reserved value does not fit into 5 bits..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVEDINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to reserved member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVEDOFFINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to reservedoff member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVEDVALUE">
            <summary>
              Looks up a localized string similar to reserved value must fit into 5 bits (0-31)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RESERVEDXINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to reservedx member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RIGHTBLSTYLEINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to rightblStyle member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.RIGHTBORDERCOLORINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to rightBorderColor member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ROW">
            <summary>
              Looks up a localized string similar to row.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ROWFROM">
            <summary>
              Looks up a localized string similar to Row from.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ROWFROMRANGE">
            <summary>
              Looks up a localized string similar to The rowFrom argument must be less than the rowTo argument..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.ROWRANGE">
            <summary>
              Looks up a localized string similar to Row must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SFORMAT">
            <summary>
              Looks up a localized string similar to sFormat.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SFORMATCANNOTBENULL">
            <summary>
              Looks up a localized string similar to Argument sFormat cannot be null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SFORMATRANGE">
            <summary>
              Looks up a localized string similar to Format string too long. Must be less than 255 characters..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETCOLINFOERROR">
            <summary>
              Looks up a localized string similar to Error writing ColInfos records for sheet [{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETDRAWINGLINEERROR">
            <summary>
              Looks up a localized string similar to Error writing Master Header for drawings or lines for Sheet [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETINDEX">
            <summary>
              Looks up a localized string similar to sheetIndex.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETINDEXERROR">
            <summary>
              Looks up a localized string similar to Error writing INDEX record for sheet [{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETLINEERROR">
            <summary>
              Looks up a localized string similar to Error writing a line for sheet [{0}] to stream..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETNAME">
            <summary>
              Looks up a localized string similar to sheetName.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETNAMENOTFOUND">
            <summary>
              Looks up a localized string similar to Sheet name not found..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETNOTFOUND">
            <summary>
              Looks up a localized string similar to Sheet name not found..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SHEETPAGEBREAKERROR">
            <summary>
              Looks up a localized string similar to Error writing page break records for sheet [{0}].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SNAME">
            <summary>
              Looks up a localized string similar to sName.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.SPECIFYPAGEBREAKS">
            <summary>
              Looks up a localized string similar to Specify either BiffRecordID.VERTICALPAGEBREAKS or BiffRecordID.HORIZONTALPAGEBREAKS..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Standard10x11">
            <summary>
              Looks up a localized string similar to 10X11.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Standard10x14">
            <summary>
              Looks up a localized string similar to 10X14.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Standard11x17">
            <summary>
              Looks up a localized string similar to 11X17.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Standard12x11">
            <summary>
              Looks up a localized string similar to 12x11.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Standard15x11">
            <summary>
              Looks up a localized string similar to 15X11.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Standard9x11">
            <summary>
              Looks up a localized string similar to 9X11.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.STARTLENGTH">
            <summary>
              Looks up a localized string similar to startlength.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.STARTSTYLE">
            <summary>
              Looks up a localized string similar to startStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.STARTWIDTH">
            <summary>
              Looks up a localized string similar to startwidth.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Statement">
            <summary>
              Looks up a localized string similar to Statement.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.STGCREATEDOCFILEONILOCKBYTESFAILED">
            <summary>
              Looks up a localized string similar to StgCreateDocfileOnILockBytes caused a failure in unmanaged code..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.STREAMNAMECANNOTBEEMPTY">
            <summary>
              Looks up a localized string similar to streamName cannot be empty..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.STYLECONTENT">
            <summary>
              Looks up a localized string similar to styleContext.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.STYLEINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to style member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.Tabloid">
            <summary>
              Looks up a localized string similar to Tabloid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.TabloidExtra">
            <summary>
              Looks up a localized string similar to Tabloid Extra.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.TEXTANGLE">
            <summary>
              Looks up a localized string similar to TextAngle.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.TEXTANGLERANGE">
            <summary>
              Looks up a localized string similar to TextAngle value must be between 0 and 255..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.TEXTROTATIONINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to textRotation member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.THESTRING">
            <summary>
              Looks up a localized string similar to theString.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.TOOMANYMERGEAREAS">
            <summary>
              Looks up a localized string similar to Too many MergeAreas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.TOPBLSTYLEINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to topblStyle member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.TOPBORDERCOLORINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to topBorderColor member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.UNEXCEPTEDIMAGETYPE">
            <summary>
              Looks up a localized string similar to Unexpected ImageType encountered..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.UNEXPECTEDERROR">
            <summary>
              Looks up a localized string similar to Unexpected error creating Workbook Stream..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.UNEXPECTEDERRORBOFRECORD">
            <summary>
              Looks up a localized string similar to Unexpected error writing BOF record..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.UNEXPECTEDERRORWORKBOOKSTREAM">
            <summary>
              Looks up a localized string similar to Unexpected error creating Workbook Stream..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.UNKNOWNPROPERTYID">
            <summary>
              Looks up a localized string similar to Unknown property ID indicated..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.USStandardFanfold">
            <summary>
              Looks up a localized string similar to Fanfold US.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALIGNMENTINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to vAlignment member returned incorrect value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT12">
            <summary>
              Looks up a localized string similar to Value must fit into 12 bits (0-4095)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT14">
            <summary>
              Looks up a localized string similar to Value must fit into 14 bits (0-16383)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT1BYTE">
            <summary>
              Looks up a localized string similar to Value must fit into 1 byte..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT2">
            <summary>
              Looks up a localized string similar to Value must fit into 2 bits..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT3">
            <summary>
              Looks up a localized string similar to Value must fit into 3 bits (7dec or less)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT4">
            <summary>
              Looks up a localized string similar to Value must fit into 4 bits..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT6">
            <summary>
              Looks up a localized string similar to Value must fit into 6 bits..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIT7">
            <summary>
              Looks up a localized string similar to Value must fit into 7 bits (127dec or less)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VALUEMUSTFIX3">
            <summary>
              Looks up a localized string similar to Value must fit into 3 bits..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VER">
            <summary>
              Looks up a localized string similar to ver.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VERSIONNOTIMPLBIFFCELLBLANK">
            <summary>
              Looks up a localized string similar to BiffCellBlank does not support the specified version..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VERSIONNOTIMPLBIFFCELLLABEL">
            <summary>
              Looks up a localized string similar to BiffCellLabel.WriteToBiff(..)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VERTALIGNMENT">
            <summary>
              Looks up a localized string similar to VertAlignment.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.VERTTICALALIGNMENTRANGE">
            <summary>
              Looks up a localized string similar to Vertical Alignment value must be between 0 and 3..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.WIDTH">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.WIDTHTOOLARGE">
            <summary>
              Looks up a localized string similar to Specified value too large..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.AR.Resources.XFPARENTINCORRECTVALUE">
            <summary>
              Looks up a localized string similar to xfParent member returned incorrect value..
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources">
            <summary>
            Provides assembly resources to the containing assembly.
            </summary>
            <remarks>
            The most common use of this class is to provide localized string resources for exception messages and other messages displayed to the user.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.#ctor">
            <summary>
            Prevents external callers from creating instances of this class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey">
            <summary>
            Defines the keys used to return resources.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.InvalidStreamErrorMessage">
            <summary>
            Error message returned when a stream returned by the stream provider is null or not writable.
            No arguments.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.InvalidPrimaryStreamInfoErrorMessage">
            <summary>
            Error message returned when the primary stream cannot be retrieved.
            No arguments.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.MissingTemplateFileErrorFormat">
            <summary>
            Error message returned when the template file cannot be retrieved.
            Arguments: File name/path.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.Desc_Template">
            <summary>
            The Template property description.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.Desc_ReadOnlyRecommended">
            <summary>
            The ReadOnlyRecommended property description.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.Desc_ProtectWorkbookPassword">
            <summary>
            The ProtectWorkbookPassword property description.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.SaveDialogFilter">
            <summary>
            The filter for saving the Excel file.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.OpenTemplateDialogTitle">
            <summary>
            The title of the open template file dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey.OpenTemplateDialogFilter">
            <summary>
            The filter for opening the template file.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources._stringsManager">
            <summary>
            Use the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.StringsManager"/> property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.StringsManager">
            <summary>
            Returns the resource manager that string values are stored in.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.GetString(GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey)">
            <summary>
            Returns the string resource identified by the specified key.
            </summary>
            <param name="key">The <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey"/> to use to obtain the resource.</param>
            <returns>The string resource.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.GetString(GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey,System.Object[])">
            <summary>
            Returns the formatted string resource identified by the specified key.
            </summary>
            <param name="key">The <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.ResourceKey"/> to use to obtain the resource.</param>
            <param name="args">Any arguments that the string resource is expecting (resource string values should be fitted with one or more "{n}" format specifier place holder(s)).</param>
            <returns>The formatted string resource.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.InvalidStreamErrorMessage">
            <summary>
            Returns a string error message to use when a stream returned by the stream provider is null or not writable.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.InvalidPrimaryStreamInfoErrorMessage">
            <summary>
            Returns a string error message to use when unable to get a primary StreamInfo from the stream provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.MissingTemplateFileErrorFormat">
            <summary>
            Returns a string error message to use when unable to retrieve the template file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.SaveDialogFilter">
            <summary>
            Returns the filter of the Excel file save dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.OpenTemplateDialogFilter">
            <summary>
            Returns the filter of the template file open dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.OpenTemplateDialogTitle">
            <summary>
            Returns the title of the template file open dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.Resources.TooManyRowsMessage">
            <summary>
            Returns the title of the template file open dialog.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_FileFormat">
            <summary>
              Looks up a localized string similar to Indicates whether to use Biff or OpenXml format for the output file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_MultiSheet">
            <summary>
              Looks up a localized string similar to Indicates whether to generate single-sheet or multisheet document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_OpenXmlStandard">
            <summary>
              Looks up a localized string similar to Specifies the level of Open XML document conformance on exporting with Xlsx file format..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_PageOrientation">
            <summary>
              Looks up a localized string similar to Gets or sets the print orientation of Excel sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_PageSettings">
            <summary>
              Looks up a localized string similar to Settings of page size and orientation..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_Pagination">
            <summary>
              Looks up a localized string similar to Indicates whether to use the paginated or galley report layout..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_PaperHeight">
            <summary>
              Looks up a localized string similar to The height of the paper size that will be set for the output document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_PaperSize">
            <summary>
              Looks up a localized string similar to Gets or sets the print paper size of Excel sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_PaperWidth">
            <summary>
              Looks up a localized string similar to The width of the paper size that will be set for the output document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_Password">
            <summary>
              Looks up a localized string similar to Gets or sets the password which can be entered to permit to open Excel document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_ProtectedBy">
            <summary>
              Looks up a localized string similar to Gets or sets the User Name responsible to password protect the excel spreadsheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_ProtectWorkbookPassword">
            <summary>
              Looks up a localized string similar to When set, this password will be required to edit the workbook..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_ReadOnlyRecommended">
            <summary>
              Looks up a localized string similar to When set to true, Excel will recommend opening the workbook in read-only mode..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_Security">
            <summary>
              Looks up a localized string similar to Settings of document encryption and security..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_SheetName">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating the name of sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_Template">
            <summary>
              Looks up a localized string similar to Location of the Excel file to use as a template for rendering the report to Excel..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_UseCompression">
            <summary>
              Looks up a localized string similar to Indicates whether to use compression on exporting Xlsx file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_UseDefaultPalette">
            <summary>
              Looks up a localized string similar to Sets or returns whether export document with Excel default palette..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_WritePassword">
            <summary>
              Looks up a localized string similar to Gets or sets the write password of the Excel file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.Desc_XlsExport_UseDefaultPalette">
            <summary>
              Looks up a localized string similar to Sets or returns whether export document with Excel default palette..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.FileFormatName">
            <summary>
              Looks up a localized string similar to FileFormat.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.InvalidPrimaryStreamInfoErrorMessage">
            <summary>
              Looks up a localized string similar to Unable to get a primary StreamInfo from the stream provider..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.InvalidStreamErrorMessage">
            <summary>
              Looks up a localized string similar to Invalid stream returned by the stream provider. Streams must be writeable and not null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.MissingTemplateFileErrorFormat">
            <summary>
              Looks up a localized string similar to Template file &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.MultiSheetName">
            <summary>
              Looks up a localized string similar to MultiSheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.OpenTemplateDialogFilter">
            <summary>
              Looks up a localized string similar to Excel File (*.xls)|*.xls|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.OpenTemplateDialogTitle">
            <summary>
              Looks up a localized string similar to Select Template.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.OpenXmlStandardName">
            <summary>
              Looks up a localized string similar to OpenXmlStandard.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.PageOrientationName">
            <summary>
              Looks up a localized string similar to PageOrientation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.PageSettingsName">
            <summary>
              Looks up a localized string similar to PageSettings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.PaginationName">
            <summary>
              Looks up a localized string similar to Pagination.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.PaperHeightName">
            <summary>
              Looks up a localized string similar to PaperHeight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.PaperSizeName">
            <summary>
              Looks up a localized string similar to PaperSize.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.PaperWidthName">
            <summary>
              Looks up a localized string similar to PaperWidth.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.PasswordName">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.ProtectedByName">
            <summary>
              Looks up a localized string similar to ProtectedBy.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.ProtectWorkbookPasswordName">
            <summary>
              Looks up a localized string similar to ProtectWorkbookPassword.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.ReadOnlyRecommendedName">
            <summary>
              Looks up a localized string similar to ReadOnlyRecommended.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.SaveDialogFilter">
            <summary>
              Looks up a localized string similar to Excel files (*.xls)|*.xls|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.SecurityName">
            <summary>
              Looks up a localized string similar to Security.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.SheetNameName">
            <summary>
              Looks up a localized string similar to SheetName.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.TemplateName">
            <summary>
              Looks up a localized string similar to Template.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.TooManyRowsMessage">
            <summary>
              Looks up a localized string similar to The report output results in too many rows and reached the limits of Excel.  The report is incomplete..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.UseCompressionName">
            <summary>
              Looks up a localized string similar to UseCompression.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.UseDefaultPaletteName">
            <summary>
              Looks up a localized string similar to UseDefaultPalette.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.AssemblyResources.ExcelTdResources.WritePasswordName">
            <summary>
              Looks up a localized string similar to WritePassword.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.BandedListExcelRenderer">
            <summary>
            Renders <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IBandedList"/> to Excel
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext">
            <summary>
            Contains information about the excel document being rendered.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.#cctor">
            <summary>
            Initializes our intrinsic renderers.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.RenderReportItem(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea)">
            <summary>
            Provides a helper method to obtain a renderer and render the specified report item.
            <seealso cref="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemExcelRenderer.Render(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)"/>
            </summary>
            <param name="reportItem">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem"/> to be rendered.</param>
            <param name="componentRenderingArea">The <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea"/> that the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem"/> will
            be in if it exists.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.CreateBodyRenderingArea(GrapeCity.ActiveReports.PageReport)">
            <summary>
            Creates <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.BodyRenderingArea"/> based on the <see cref="T:GrapeCity.ActiveReports.PageReport"/> passed in.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.CreateStaticRenderingAreas(GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.BodyRenderingArea)">
            <summary>
            Creates rendering areas for non-template cells to allow them to be shifted correctly.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.CreateRenderingArea(GrapeCity.ActiveReports.PageReportModel.ReportItem,GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range)">
            <summary>
            Creates a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea"/> to allow rendering of the <see cref="T:GrapeCity.ActiveReports.PageReportModel.ReportItem"/> argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.FindChildRenderingArea(System.String,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea)">
            <summary>
            Searches the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea"/> argument to find the child of the name argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.FindChildRenderingArea(System.String)">
            <summary>
            Searches the root <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea"/> to find the child of the name argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.UnionRanges(System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea})">
            <summary>
            Unions all the ranges supplied into one range
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext.AdjustUnprocessedRows(System.Int32,System.Int32)">
            <summary>
            Changes underlying worksheet for rendering areas not yet created.
            </summary>
            <remarks>This handles case where matrix rendering area adds rows to the worksheet for
            subtotals and needs to push down controls below.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.FormattedTextExcelRenderer">
            <summary>
            Renders a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.ITextBox"/> to Excel.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.HttpUtility">
            <summary>
            Provides HTML helper methods for FormattedText Excel rendering.
            </summary>
            <remarks>
            Taken from System.Web.HttpUtility source.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.HttpUtility.HtmlDecode(System.String)">
            <summary> 
            HTML decodes a string and returns the decoded string.
            </summary>
            <remarks>
            Taken from System.Web.HttpUtility source.
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.Core.HttpUtility.s_entityEndingChars">
            <summary> 
            HTML decode a string and send the result to a TextWriter output stream.
            </summary>
            <remarks>
            Taken from System.Web.HttpUtility source.
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.HttpUtility.HtmlEntities">
            <summary>
            Helper class for lookup of HTML encoding entities.
            </summary>
            <remarks>
            Taken from System.Web.HttpUtility source.
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ImageExcelRenderer">
            <summary>
            Renders a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IImage"/> to Excel.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.LineExcelRenderer">
            <summary>
            Renders a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.ILine"/> to Excel.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ListExcelRenderer">
            <summary>
            Provides a renderer for List.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.MatrixExcelRenderer">
            <summary>
            Renders a Matrix to Excel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.MatrixExcelRenderer.RenderMatrixRowMemberCollection(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IItemCollection{GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrixMember},GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrix,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Recursively renders the specified collection, it's members, and all of the child members.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.MatrixExcelRenderer.RenderMatrixRowMember(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrix,GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrixMember,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,System.Boolean,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Renders the specified row member and it's descendents
            </summary>
            <param name="context">The XML rendering context.</param>
            <param name="matrix">Owner matrix.</param>
            <param name="member">The member to render.</param>
            <param name="matrixRenderingArea">The matrix rendering area.</param>
            <param name="parentRenderingArea">The rendering area to rendering the row to.</param>
            <param name="renderHeadings">Whether or not the headings should be rendered.</param>
            <param name="detailRowIndex">The index of the details that is being rendered.</param>
            <param name="renderingSubtotal">Whether or not a subtotal is being rendered.</param>
            <param name="groupDepth">The index of the group relative to it's depth as a sub group.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.MatrixExcelRenderer.RenderMatrixColumnMemberCollection(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IItemCollection{GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrixMember},System.Int32,System.Int32,GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrix,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Renders the column groupings, and the cells in each column grouping for the specified range of rows.
            </summary>
            <param name="columnMemberCollection">The collection of columns to render.</param>
            <param name="startRow">The starting row of cells that should be rendered for this grouping.</param>
            <param name="endRow">The end/last row of cells that should be rendered for this grouping.</param>
            <param name="context">The context, see <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext"/>.</param>
            <param name="matrix">The owner matrix.</param>
            <param name="matrixRenderingArea">The matrix rendering area.</param>
            <param name="parentRenderingArea">The rendering area to rendering the columns to.</param>
            <param name="renderHeadings">Whether or not the headings should be rendered.</param>
            <param name="detailRowIndex">The index of the details that is being rendered.</param>
            <param name="renderingColumnSubtotal">Whether or not a subtotal is being rendered.</param>
            <param name="groupDepth">The index of the group relative to it's depth as a sub group.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.MatrixExcelRenderer.RenderMatrixColumnMember(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrix,GrapeCity.ActiveReports.Extensibility.Rendering.Components.Matrix.IMatrixMember,System.Int32,System.Int32,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Renders the specified column member and it's descendents
            </summary>
            <param name="context">The XML rendering context.</param>
            <param name="matrix">Owner matrix.</param>
            <param name="member">The member to render.</param>
            <param name="startRow">The starting row of cells that should be rendered for this grouping.</param>
            <param name="endRow">The end/last row of cells that should be rendered for this grouping.</param>
            <param name="matrixRenderingArea">The matrix rendering area.</param>
            <param name="parentRenderingArea">The rendering area to rendering the column to.</param>
            <param name="renderHeadings">Whether or not the headings should be rendered.</param>
            <param name="detailRowIndex">The index of the details that is being rendered.</param>
            <param name="renderingColumnSubtotal">Whether or not a subtotal is being rendered.</param>
            <param name="groupDepth">The index of the group relative to it's depth as a sub group.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.BandedListRenderingArea">
            <summary>
            Contains information about the rendering area for a BandedList CRI and its children.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.BodyRenderingArea">
            <summary>
            Represents the root rendering area.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.BodyRenderingArea.Validate">
            <summary>
            Checks if all the rendering areas are valid.  If they are not an exception is thrown.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea">
            <summary>
            Represents a rendering area.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.Shift(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adjusts the location of this rendering area by shifting it down the amount of the offset argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.Shift(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adjusts the location of this rendering area by shifting it down the amount of the offset argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.Shift(System.Int32,System.Int32)">
            <summary>
            Adjusts the location of this rendering area by shifting it down the amount of the offset argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.CreateDuplicateRenderingArea(System.Int32,System.Int32)">
            <summary>
            Creates an exact clone of this rendering area except that it location is different.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.ReSize(System.Int32,System.Int32)">
            <summary>
            Modifies the size of this ComponentArea to the new size.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.MergeDown(System.Int32)">
            <summary>
            Merges cells into this range based on the number of cells below.
            </summary>
            <remarks>Since a cell is always 1x1, just ignore any calls.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.MergeRight(System.Int32)">
            <summary>
            Merges cells into this range based on the number of cells to the right.
            </summary>
            <remarks>Since a cell is always 1x1, just ignore any calls.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.Merge">
            <summary>
            Merges cells into this range.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.UnMerge">
            <summary>
            UnMerges cells into this range.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.Delete(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,System.Boolean)">
            <summary>
            Removes this rendering area from the excel doc.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.RemoveFromParent">
            <summary>
            Removes this rendering area from it's parent's Children collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea.Merged">
            <summary>
            Gets whether or not this rendering area is merged.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea">
            <summary>
            Represents a rendering area that contains child rendering areas.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.CreateDuplicateRenderingArea(System.Int32,System.Int32)">
            <summary>
            Creates an exact clone of this rendering area and its child rendering areas except that its location and its children's locations are different.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.CreateSiblingBelow(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext)">
            <summary>
            Creates a clone of this rendering area.  
            </summary>
            <remarks>The range of the cloned area will be directly below the range of this rendering
            area.  All rendering areas below this rendering area will be shifted down.  The cloned rendering area will be 
            accessible through the NextSibling property.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.CanGrowWithoutPushing(System.Int32,System.Int32)">
            <summary>
            Allows a container to specify that it can handle child growth at the current size.
            </summary>
            <remarks>Used by matrix detail to handle nested data regions.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.CreateSiblingBelow(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,System.Boolean,System.Boolean)">
            <summary>
            Creates a clone of this rendering area.  
            </summary>
            <remarks>The range of the cloned area will be directly below the range of this rendering
            area.  All rendering areas below this rendering area will be shifted down.  The cloned rendering area will be 
            accessible through the NextSibling property.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.CreateSiblingRight(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext)">
            <summary>
            Creates a clone of this rendering area.  
            </summary>
            <remarks>The range of the cloned area will be directly below the range of this rendering
            area.  All rendering areas below this rendering area will be shifted down.  The cloned rendering area will be 
            accessible through the NextSibling property.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.NextSibling">
            <summary>
            Returns the cloned rendering area or null if one does not exist.
            </summary>
            <remarks>If CreateSibling was called, this property contains the cloned sibling.  Otherwise it is null.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.NeedsShiftAdjacentStyles">
            <summary>
            Indicates whether child container growth should afect the styles of adjacent children.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.MergeDown(System.Int32)">
            <summary>
            Merges cells into this range based on the number of cells below.
            </summary>
            <remarks>Since a cell is always 1x1, just ignore any calls.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea.MergeRight(System.Int32)">
            <summary>
            Merges cells into this range based on the number of cells to the right.
            </summary>
            <remarks>Since a cell is always 1x1, just ignore any calls.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ImageRenderingArea">
            <summary>
            Represents a rendering area.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ImageRenderingArea.Shift(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adjusts the location of this rendering area by shifting it down the amount of the offset argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ImageRenderingArea.CreateDuplicateRenderingArea(System.Int32,System.Int32)">
            <summary>
            Creates an exact clone of this rendering area except that it location is different.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.InterlacedRenderingArea">
            <summary>
            Represents a rendering area where the children's siblings do not need to be adjacent.
            </summary>
            <remarks>This is needed for the Matrix where there are static rows and the detail area is split.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.InterlacedRenderingArea.GetNextDetail(System.Int32,System.Int32,System.Int32,GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext)">
            <summary>
            Returns the rendering area to use as the next detail.
            </summary>
            <param name="detailIndex">The index of the detail to be returned.</param>
            <param name="detailIndex">The number of instances of each detail.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ListRenderingArea">
            <summary>
            Represents a List.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ListRenderingArea.ListContentRenderingArea">
            <summary>
            Returns the rendering area that represents the list's contents.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixDetailRenderingArea">
            <summary>
            Represents a detail cell of a matrix.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixGroupingRenderingArea">
            <summary>
            Contains information about the rendering area of a matrix group.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixGroupingRenderingArea.HeadingRenderingArea">
            <summary>
            Returns the rendering area associated with the grouping's heading (title).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea">
            <summary>
            Contains information about the rendering area for a Matrix and its children.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea.CreatePartialMatrixRowTemplate(GrapeCity.ActiveReports.PageReportModel.MatrixRow,GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea,System.Int32,System.Boolean)">
            <summary>
            Adds only one MatrixCell from a MatrixRow to the container.
            </summary>
            <remarks>Needed when there are static columns and the detail area is split between multiple group rendering areas.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea.ExpandRangesForChildren(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea)">
            <summary>
            Adjusts a containers range to be large enough to encompass of child ranges.
            </summary>
            <remarks>This is needed since the rendering areas for groupings and details are dynamically created.  This should 
            not affected named ranges.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea.GetFlatListOfChildren(GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ContainerRenderingArea)">
            <summary>
            Helper method to return all children, child's children, etc in a single list.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.MatrixRenderingArea.DetailType">
            <summary>
            Defines the types of matrix details.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.SubreportRenderingArea">
            <summary>
            Represents a rendering area that contains child rendering areas.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.TableRenderingArea">
            <summary>
            Contains information about the rendering area for a Table and its children.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.TableRenderingArea.RemoveColumnRenderingArea(System.Int32)">
            <summary>
            Removes all the rendering areas contained in the table column from the table rendering area.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemContainerExcelRenderer">
            <summary>
            Provides a generic renderer for a report item that holds other report items.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemExcelRenderer">
            <summary>
            Defines the interface ReportItems can use to render Excel output.
            </summary>
            <remarks>
            ReportItem authors can specify their <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemExcelRenderer"/> implementation by returning an derrived implementation of <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemExcelRenderer"/> from <see cref="!:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem.GetRenderer"/>.
            Derrived classes must provide a default constructor that requires no arguments.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemExcelRenderer.#ctor">
            <summary>
            Allows derrived classes to initialize an instance of this class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemExcelRenderer.Render(GrapeCity.ActiveReports.Export.Excel.Page.Core.ExcelRenderingContext,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Renders the specified <paramref name="componentRenderingArea"/> to the specified <paramref name="context"/>.
            </summary>
            <param name="context">The context used for the current rendering process.</param>
            <param name="componentRenderingArea">Area to render at.</param>
            <param name="reportItem">The ReportItem to render.</param>
            <returns>A value indicating if, and in what form any content was rendered for the specified <paramref name="componentRenderingArea"/>.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.ReportItemImageExcelRenderer">
            <summary>
            Renders an image representation of an report item.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.SubreportExcelRenderer">
            <summary>
            Provides a generic renderer for a subreport report item
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.TableExcelRenderer">
            <summary>
            Renders a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.Table.ITable"/> to Excel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TableExcelRenderer.VisibleTableDetailCount(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IItemCollection{GrapeCity.ActiveReports.Extensibility.Rendering.Components.Table.ITableDetail},System.Boolean@,System.Boolean@)">
            <summary>
            Determines the number of table details that need to be rendered.
            </summary>
            <remarks>Table details that are visible or are hidden due to toggle need to be rendered.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer">
            <summary>
            Renders a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.ITextBox"/> to Excel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.ApplyStyleValue(System.String,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IStyle,GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Applies the single runtime style property to the specified cell.
            </summary>
            <param name="propertyName"></param>
            <param name="style"></param>
            <param name="range"></param>
            <param name="reportItem"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.ReplaceSingleQuotes(System.String)">
            <summary>
            Replaces single quotes marking literal text with double quotes.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.GenerateCurrencyFormat(System.Globalization.NumberFormatInfo)">
            <summary>
            Builds the positive and negative currency format based on NumberFormatInfo settings.
            </summary>
            <remarks>n represents the number, - represents the negative symbol, $ represents currency symbol in the patterns.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.GenerateNumberFormat(System.Globalization.NumberFormatInfo,System.String)">
            <summary>
            Builds the positive and negative number format based on NumberFormatInfo settings.
            </summary>
            <remarks>n represents the number, - represents the negative symbol in the patterns.
            The positive pattern is always "n"</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.ConvertToExcelFormat(System.String,System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.FormatReplacement},System.String)">
            <summary>
            Some of the dotnet date time format codes are not exact matches to excel format codes.  This returns the
            equivalent format string that is understood by excel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.GetLiteral(System.String)">
            <summary>
            Returns the literal portion from the beginning of the string.
            </summary>
            <remarks>A literal is either a double-quoted string that includes the quotes or 
            an escaped character that includes the escape character.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.TextBoxExcelRenderer.GetNonLiteral(System.String)">
            <summary>
            Returns the non-literal portion from the beginning of the string.
            </summary>
            <remarks>A non-literal is everything character that is not in double quotes and is not escaped.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils">
            <summary>
            Provider helper methods for Excel rendering.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.GetCultureForReportItem(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem,System.Boolean)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the report item's style, updated with report item's calendar.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.GetCultureWithCalendarForReportItem(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the report item's style, updated with report item's calendar.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.GetOptionalCalendar(System.Globalization.CultureInfo,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IStyle,System.Boolean@)">
            <summary>
            Retrieves a calendar that is consistent (optinal) for the specified Culture.
            according to the style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.NeedsConverted(System.Object)">
            <summary>
            Checks if the specified value data type needs converted if sharp cells cannot handle the type.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.IsNaNOrInfValue(System.Object)">
            <summary>
            Checks if the specified value is NaN or infinity
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.IsNumericValue(System.Object)">
            <summary>
            Checks if value is a numeric value.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.IsNumericType(System.Type)">
            <summary>
            Checks if type is a numeric type.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.GetCultureForReportItem(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the report item's style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.CultureFromLanguage(System.String)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the specified style
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.DeriveRomStyle(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IStyle)">
            <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.PageReportModel.Style"/> to represent the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IStyle"/> argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.ShiftRenderingAreasDown(GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea},System.Int32)">
            <summary>
            Shifts all rendering areas at or below the starting row of the origin rendering area argument.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.GetRenderingAreaSiblings(GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea)">
            <summary>
            Gets all siblings of a rendering area from all its parents.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.GetRenderingAreaSiblings(GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea)">
            <summary>
            Gets all siblings of a rendering area from all its parents up to parentRenderingArea.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.FindChildRenderingArea(System.String,GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea)">
            <summary>
            Returns the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea"/> matching the name argument or null if it does not exist.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Core.Utils.ShiftRenderingAreasRight(GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea,System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.Page.Core.RenderingAreas.ComponentRenderingArea},System.Int32)">
            <summary>
            Shifts all rendering areas at or to the right of the starting row of the origin rendering area argument.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.StyledItemExcelRenderer">
            <summary>
            Defines the interface ReportItems can use to render Excel output with style properties support.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.StyledItemExcelRenderer.ApplyStyle(System.String,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem,GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range)">
            <summary>
            Applies the runtime style to the specified cell.
            </summary>
            <param name="template"></param>
            <param name="reportItem"></param>
            <param name="range"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.StyledItemExcelRenderer.ApplyStyleValue(System.String,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IStyle,GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Applies the single runtime style property to the specified cell.
            </summary>
            <param name="propertyName"></param>
            <param name="style"></param>
            <param name="range"></param>
            <param name="reportItem"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Cell">
            <summary>
            Represents an Excel Cell.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Cell.Copy(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns a copy of this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Cell"/> with a location differing by the offset arguments.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range">
            <summary>
            Represents a range of Excel cells.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.DuplicateBelow(System.Boolean)">
            <summary>
            Duplicates this range and inserts it below.  Returns the resulting Range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.DuplicateRight(System.Boolean)">
            <summary>
            Duplicates this range and inserts it to the right.  Returns the resulting Range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.ExtendBelow(System.Double)">
            <summary>
            Extends this range below by one row of required size. Returns the resulting Range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.ExtendRight(System.Double)">
            <summary>
            Extends this range to the right by one column of required size. Returns the resulting Range.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.PointsHeight">
            <summary>
            Range height in points.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.PointsWidth">
            <summary>
            Range width in points.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.Copy(System.Int32,System.Int32)">
            <summary>
            Returns a copy of this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range"/> with a location differing by the offset arguments.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.CopyCells(System.Int32,System.Int32)">
            <summary>
            Returns a copy of this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Cell"/> with a location differing by the offset arguments.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.MoveCells(System.Int32,System.Int32)">
            <summary>
            Move this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Cell"/> to a location differing by the offset arguments.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.MergeDown(System.Int32)">
            <summary>
            Merges cells into this range based on the number of cells below.
            </summary>
            <param name="count">The number of cells that should be merged.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.MergeRight(System.Int32)">
            <summary>
            Merges cells into this range based on the number of cells to the right.
            </summary>
            <param name="count">The number of cells that should be merged.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.MergeStyles(GrapeCity.SharpCells.Range,System.Boolean)">
            <summary>
            Copies style values from the first cell for the entire range of merged cells.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Range.Delete(System.Boolean)">
            <summary>
            Removes the range from it's worksheet.
            </summary>
            <remarks>Since the rendering areas deal with removing/shifting the cell content all this
            method is concerned with is making sure the row info is properly removed/shifted.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Workbook">
            <summary>
            Represents an Excel workbook.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Worksheet">
            <summary>
            Represents an excel worksheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Worksheet.WorksheetRange">
            <summary>
            Returns range of all cells in worksheet
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Worksheet.PaperSize">
            <summary>
            Gets the paper size of the worksheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Worksheet.PageOrientation">
            <summary>
            Gets the page orientation of the worksheet.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Worksheet.RemoveInvalidRows">
            <summary>
            Removes any rows and row information that goes below the limit Excel has on
            rows in a document.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelGenerator.Worksheets">
            <summary>
            Represents a collection of Excel worksheets.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtension">
            <summary>
            Renders report layout to excel file. 
            </summary>
            <remarks>
            In comparison to <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTransformationDevice"/> it doesn't use templates and try to obtain layout, not plain data.
            In comparison to <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport"/> it doesn't use any intermediate formats, so output can be more WYSIWYG.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)">
            <summary>
            Renders the specified report.
            </summary>
            <param name="report">The report.</param>
            <param name="streams">The streams.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Renders the specified report.
            </summary>
            <param name="report">The report.</param>
            <param name="streamProvider">The stream provider.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtension.GetSupportedSettings">
            <summary>
            Gets the supported settings.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtension.GetSupportedSettings(System.Boolean)">
            <summary>
            Gets the supported settings.
            </summary>
            <param name="fpl">Is fixed page layout</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings">
            <summary>
            Encapsulates the information necessary to provide Xls document print settings.
            </summary>	
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.Orientation">
            <summary>
            Gets or sets the print orientation of Excel sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSize">
            <summary>
            Gets or sets the print paper size of Excel sheet.
            </summary>
            <remarks>
            Reset this property to use default AR document print paper size.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings"/> class with default paper size and page orientation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PageOrientation">
            <summary>
            Valid paper orientation values.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PageOrientation.Default">
            <summary>
            Default printer orientation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PageOrientation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes">
            <summary>
            Valid paper size values.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Default">
            <summary>
            The paper size is defined by the user.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Letter">
            <summary>
            Letter paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.LetterSmall">
            <summary>
            Letter small paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Tabloid">
            <summary>
            Tabloid paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Ledger">
            <summary>
            Ledger paper (17 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Legal">
            <summary>
            Legal paper (8.5 in. by 14 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Statement">
            <summary>
            Statement paper (5.5 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Executive">
            <summary>
            Executive paper (7.25 in. by 10.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A3">
            <summary>
            A3 paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A4">
            <summary>
            A4 paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A4Small">
            <summary>
            A4 small paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A5">
            <summary>
            A5 paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B4">
            <summary>
            B4 paper (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B5">
            <summary>
            B5 paper (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Folio">
            <summary>
            Folio paper (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Quarto">
            <summary>
            Quarto paper (215 mm by 275 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Standard10x14">
            <summary>
            Standard paper (10 in. by 14 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Standard11x17">
            <summary>
            Standard paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Note">
            <summary>
            Note paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Number9Envelope">
            <summary>
            #9 envelope (3.875 in. by 8.875 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Number10Envelope">
            <summary>
            #10 envelope (4.125 in. by 9.5 in.)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Number11Envelope">
            <summary>
            #11 envelope (4.5 in. by 10.375 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Number12Envelope">
            <summary>
            #12 envelope (4.75 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Number14Envelope">
            <summary>
            #14 envelope (5 in. by 11.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.CSheet">
            <summary>
            C paper (17 in. by 22 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.DSheet">
            <summary>
            D paper (22 in. by 34 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.ESheet">
            <summary>
            E paper (34 in. by 44 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.DLEnvelope">
            <summary>
            DL envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.C5Envelope">
            <summary>
            C5 envelope (162 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.C3Envelope">
            <summary>
            C3 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.C4Envelope">
            <summary>
            C4 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.C6Envelope">
            <summary>
            C6 envelope (114 mm by 162 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.C65Envelope">
            <summary>
            C65 envelope (114 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B4Envelope">
            <summary>
            B4 envelope (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B5Envelope">
            <summary>
            B5 envelope (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B6Envelope">
            <summary>
            B6 envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.ItalyEnvelope">
            <summary>
            Italy envelope (110 mm by 230 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.MonarchEnvelope">
            <summary>
            Monarch envelope (3.875 in. by 7.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PersonalEnvelope">
            <summary>
            6 3/4 envelope (3.625 in. by 6.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.USStandardFanfold">
            <summary>
            US standard fanfold (14.875 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.GermanStandardFanfold">
            <summary>
            German standard fanfold (8.5 in. by 12 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.GermanLegalFanfold">
            <summary>
            German legal fanfold (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.IsoB4">
            <summary>
            ISO B4 (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapanesePostcard">
            <summary>
            Japanese postcard (100 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Standard9x11">
            <summary>
            Standard paper (9 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Standard10x11">
            <summary>
            Standard paper (10 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Standard15x11">
            <summary>
            Standard paper (15 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.InviteEnvelope">
            <summary>
            Invitation envelope (220 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.LetterExtra">
            <summary>
            Letter extra paper (9.275 in. by 12 in.). This value is specific to the PostScript
            driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.LegalExtra">
            <summary>
            Legal extra paper (9.275 in. by 15 in.). This value is specific to the PostScript
            driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.TabloidExtra">
            <summary>
            Tabloid extra paper (11.69 in. by 18 in.). This value is specific to the
            PostScript driver and is used only by Linotronic printers in order to conserve
            paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A4Extra">
            <summary>
            A4 extra paper (236 mm by 322 mm). This value is specific to the PostScript
            driver and is used only by Linotronic printers to help save paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.LetterTransverse">
            <summary>
            Letter transverse paper (8.275 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A4Transverse">
            <summary>
            A4 transverse paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.LetterExtraTransverse">
            <summary>
            Letter extra transverse paper (9.275 in. by 12 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.APlus">
            <summary>
            SuperA/SuperA/A4 paper (227 mm by 356 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.BPlus">
            <summary>
            SuperB/SuperB/A3 paper (305 mm by 487 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.LetterPlus">
            <summary>
            Letter plus paper (8.5 in. by 12.69 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A4Plus">
            <summary>
            A4 plus paper (210 mm by 330 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A5Transverse">
            <summary>
            A5 transverse paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B5Transverse">
            <summary>
            JIS B5 transverse paper (182 mm by 257 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A3Extra">
            <summary>
            A3 extra paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A5Extra">
            <summary>
            A5 extra paper (174 mm by 235 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B5Extra">
            <summary>
            ISO B5 extra paper (201 mm by 276 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A2">
            <summary>
            A2 paper (420 mm by 594 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A3Transverse">
            <summary>
            A3 transverse paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A3ExtraTransverse">
            <summary>
            A3 extra transverse paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseDoublePostcard">
            <summary>
            Japanese double postcard (200 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A6">
            <summary>
            A6 paper (105 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeKakuNumber2">
            <summary>
            Japanese Kaku #2 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeKakuNumber3">
            <summary>
            Japanese Kaku #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeChouNumber3">
            <summary>
            Japanese Chou #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeChouNumber4">
            <summary>
            Japanese Chou #4 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.LetterRotated">
            <summary>
            Letter rotated paper (11 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A3Rotated">
            <summary>
            A3 rotated paper (420 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A4Rotated">
            <summary>
            A4 rotated paper (297 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A5Rotated">
            <summary>
            A5 rotated paper (210 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B4JisRotated">
            <summary>
            JIS B4 rotated paper (364 mm by 257 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B5JisRotated">
            <summary>
            JIS B5 rotated paper (257 mm by 182 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapanesePostcardRotated">
            <summary>
            Japanese rotated postcard (148 mm by 100 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseDoublePostcardRotated">
            <summary>
            Japanese rotated double postcard (148 mm by 200 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.A6Rotated">
            <summary>
            A6 rotated paper (148 mm by 105 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeKakuNumber2Rotated">
            <summary>
            Japanese rotated Kaku #2 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeKakuNumber3Rotated">
            <summary>
            Japanese rotated Kaku #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeChouNumber3Rotated">
            <summary>
            Japanese rotated Chou #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeChouNumber4Rotated">
            <summary>
            Japanese rotated Chou #4 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B6Jis">
            <summary>
            JIS B6 paper (128 mm by 182 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.B6JisRotated">
            <summary>
            JIS B6 rotated paper (182 mm by 128 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Standard12x11">
            <summary>
            Standard paper (12 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeYouNumber4">
            <summary>
            Japanese You #4 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.JapaneseEnvelopeYouNumber4Rotated">
            <summary>
            Japanese You #4 rotated envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Prc16K">
            <summary>
            People's Republic of China 16K paper (146 mm by 215 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Prc32K">
            <summary>
            People's Republic of China 32K paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Prc32KBig">
            <summary>
            People's Republic of China 32K big paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber1">
            <summary>
            People's Republic of China #1 envelope (102 mm by 165 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber2">
            <summary>
            People's Republic of China #2 envelope (102 mm by 176 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber3">
            <summary>
            People's Republic of China #3 envelope (125 mm by 176 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber4">
            <summary>
            People's Republic of China #4 envelope (110 mm by 208 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber5">
            <summary>
            People's Republic of China #5 envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber6">
            <summary>
            People's Republic of China #6 envelope (120 mm by 230 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber7">
            <summary>
            People's Republic of China #7 envelope (160 mm by 230 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber8">
            <summary>
            People's Republic of China #8 envelope (120 mm by 309 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber9">
            <summary>
            People's Republic of China #9 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber10">
            <summary>
            People's Republic of China #10 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Prc16KRotated">
            <summary>
            People's Republic of China 16K rotated paper (146 mm by 215 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Prc32KRotated">
            <summary>
            People's Republic of China 32K rotated paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.Prc32KBigRotated">
            <summary>
            People's Republic of China 32K big rotated paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber1Rotated">
            <summary>
            People's Republic of China #1 rotated envelope (165 mm by 102 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber2Rotated">
            <summary>
            People's Republic of China #2 rotated envelope (176 mm by 102 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber3Rotated">
            <summary>
            People's Republic of China #3 rotated envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber4Rotated">
            <summary>
            People's Republic of China #4 rotated envelope (208 mm by 110 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber5Rotated">
            <summary>
            People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber6Rotated">
            <summary>
            People's Republic of China #6 rotated envelope (230 mm by 120 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber7Rotated">
            <summary>
            People's Republic of China #7 rotated envelope (230 mm by 160 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber8Rotated">
            <summary>
            People's Republic of China #8 rotated envelope (309 mm by 120 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber9Rotated">
            <summary>
            People's Republic of China #9 rotated envelope (324 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings.PaperSizes.PrcEnvelopeNumber10Rotated">
            <summary>
            People's Republic of China #10 rotated envelope (458 mm by 324 mm).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ResourceDescriptionAttribute">
            <summary>
            A localizable description attribute.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity">
            <summary>
            Encapsulates the information necessary to provide excel document security and encryption.
            </summary>	
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity._writePassword">
            <summary>
            Represents WritePassword.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity._protectedBy">
            <summary>
            Represents the name of person who protect the workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity"/> class with the specified password and read only recommended.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity.ProtectedBy">
            <summary>
            Gets or sets the User Name responsible to password protect the excel spreadsheet.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity.WritePassword">
            <summary>
            Gets or sets the write password of the Excel file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity.Password">
            <summary>
            Gets or sets the password which can be entered to permit to open Excel document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity.ReadOnlyRecommended">
            <summary>
            Gets or sets the value to indicate if the Excel file was saved as read only recommended.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings">
            <summary>
            Settings class for <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtension"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.Pagination">
            <summary>
            Force paginated or galley report layout mode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.MultiSheet">
            <summary>
            Indicates whether to generate single-sheet or multisheet document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.SheetName">
            <summary>
             Sets or returns a value indicating the name of sheet. <b>Sheet</b> is default.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.FileFormat">
            <summary>
            Indicates whether to use Biff or OpenXml format for the output file. OpenXml is default.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.UseDefaultPalette">
            <summary>
            Sets or returns whether export document with Excel default palette.
            </summary>
            <remarks>
            Setting this value to true, application will use the color which is in default palette and is closest to pre-defined custom color of control's forecolor and backcolor.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.OpenXmlStandard">
            <summary>
            Open XML conformance level.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.UseCompression">
            <summary>
            Gets or sets the value indicating should compression be used on exporting with Xlsx file format. True by default.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.Security">
            <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSecurity"/> object for initializing document security.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.PageSettings">
            <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionPageSettings"/> object for initializing Excel file print setting.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.EnableToggles">
            <summary>
            Specifies whether to export toggles from table details or groups to collapsible rows.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.RightToLeft">
            <summary>
            Show sheets right to left. Content will not be mirrored.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.GetSettings">
            <summary>
            Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing the settings for the rendering extension.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.op_Implicit(GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings)~System.Collections.Specialized.NameValueCollection">
            <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Settings"/> to <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <param name="settings">The settings.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtensionSettings.ApplySettings(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Apply settings for the rendering extension.
            </summary>
            <param name="settings">Settings for the rendering extension.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_EnableToggles">
            <summary>
              Looks up a localized string similar to Specifies whether to export toggles from table details and row groups to collapsible rows..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_FileFormat">
            <summary>
              Looks up a localized string similar to Indicates whether to use Biff or OpenXml format for the output file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_MultiSheet">
            <summary>
              Looks up a localized string similar to Indicates whether to generate single-sheet or multisheet document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_OpenXmlStandard">
            <summary>
              Looks up a localized string similar to Specifies the level of Open XML document conformance on exporting with Xlsx file format..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_PageOrientation">
            <summary>
              Looks up a localized string similar to Gets or sets the print orientation of Excel sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_PageSettings">
            <summary>
              Looks up a localized string similar to Settings of page size and orientation..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_Pagination">
            <summary>
              Looks up a localized string similar to Indicates whether to use the paginated or galley report layout..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_PaperSize">
            <summary>
              Looks up a localized string similar to Gets or sets the print paper size of Excel sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_Password">
            <summary>
              Looks up a localized string similar to Gets or sets the password which can be entered to permit to open Excel document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_ProtectedBy">
            <summary>
              Looks up a localized string similar to Gets or sets the User Name responsible to password protect the excel spreadsheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_ReadOnlyRecommended">
            <summary>
              Looks up a localized string similar to When set to true, Excel will recommend opening the workbook in read-only mode..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_RightToLeft">
            <summary>
              Looks up a localized string similar to Show sheets right to left. Content will not be mirrored..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_Security">
            <summary>
              Looks up a localized string similar to Settings of document encryption and security..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_SheetName">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating the name of sheet..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_UseCompression">
            <summary>
              Looks up a localized string similar to Indicates whether to use compression on exporting Xlsx file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_UseDefaultPalette">
            <summary>
              Looks up a localized string similar to Sets or returns whether export document with Excel default palette..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.Desc_WritePassword">
            <summary>
              Looks up a localized string similar to Gets or sets the write password of the Excel file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.EnableTogglesName">
            <summary>
              Looks up a localized string similar to EnableToggles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.ExcelRE_PropertyLessThanOrEqual">
            <summary>
              Looks up a localized string similar to The length of property &apos;{0}&apos; must be less than or equal to {1}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.FileFormatName">
            <summary>
              Looks up a localized string similar to FileFormat.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.MultiSheetName">
            <summary>
              Looks up a localized string similar to MultiSheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.OpenXmlStandardName">
            <summary>
              Looks up a localized string similar to OpenXmlStandard.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.PageOrientationName">
            <summary>
              Looks up a localized string similar to PageOrientation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.PageSettingsName">
            <summary>
              Looks up a localized string similar to PageSettings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.PaginationName">
            <summary>
              Looks up a localized string similar to Pagination.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.PaperSizeName">
            <summary>
              Looks up a localized string similar to PaperSize.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.PasswordName">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.ProtectedByName">
            <summary>
              Looks up a localized string similar to ProtectedBy.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.ReadOnlyRecommendedName">
            <summary>
              Looks up a localized string similar to ReadOnlyRecommended.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.RightToLeftName">
            <summary>
              Looks up a localized string similar to RightToLeft.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.SecurityName">
            <summary>
              Looks up a localized string similar to Security.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.SheetNameName">
            <summary>
              Looks up a localized string similar to SheetName.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.UseCompressionName">
            <summary>
              Looks up a localized string similar to UseCompression.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.UseDefaultPaletteName">
            <summary>
              Looks up a localized string similar to UseDefaultPalette.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.WritePasswordName">
            <summary>
              Looks up a localized string similar to WritePassword.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.EmptyPropertyValueMessage">
            <summary>
              Looks up a localized string similar to {0} cannot be empty.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.LongSheetNameMessage">
            <summary>
              Looks up a localized string similar to {0} must be no longer than 31 characters.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.ForbiddenSheetNameCharactersMessage">
            <summary>
              Looks up a localized string similar to {0} should not contain any of the following characters:  : \\ / ? * [ or ].
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRe.ExcelREResources.SheetNameStartsWithQuoteMessage">
            <summary>
              Looks up a localized string similar to {0} should not start with " ' " character.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ExcelTemplateGenerator">
            <summary>
            Allows to generate Excel templates from the data dynamics reports definition.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ExcelTemplateGenerator.GenerateTemplate(GrapeCity.ActiveReports.PageReport,System.IO.FileInfo)">
            <summary>
            Generates and saves the excel template from the specified report definition.
            </summary>
            <param name="definition">ReportDefinition to generate the template from.</param>
            <param name="pathToSave">The path to save the template.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ExcelTemplateGenerator.GenerateTemplate(GrapeCity.ActiveReports.PageReport,System.IO.Stream)">
            <summary>
            Generates and saves the excel template from the specified report definition.
            </summary>
            <param name="definition">ReportDefinition to generate the template from.</param>
            <param name="streamToSave">The Stream to save the template.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ExcelTemplateGenerator.GenerateTemplate(GrapeCity.ActiveReports.PageReport,System.IO.Stream,System.Uri,System.Boolean,System.Boolean)">
            <summary>
            Generates and saves the excel template from the specified report definition.
            </summary>
            <param name="definition">ReportDefinition to generate the template from.</param>
            <param name="streamToSave">The Stream to save the template.</param>
            <param name="saveUri">The Uri of the output stream</param>
            <param name="useDefaultPalette"> </param>
            <param name="forceJpTemplate"> </param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ItemRegion">
            <summary>
            Represents the report item inside the excel document.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ItemRegion.#ctor(GrapeCity.ActiveReports.PageReportModel.ReportItem,GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.Region)">
            <summary>
            Initializes new instance of ItemRegion class.
            </summary>
            <param name="reportItem">ReportItem instance for which the region is created.</param>
            <param name="region">The region which holds the coordinates of region on excel worksheet.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ItemRegion.ReportItem">
            <summary>
            Gets ReportItem instance for which the region was created.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ItemRegion.Region">
            <summary>
            Gets the region which holds the coordinates of region on excel worksheet.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ItemRegion.Priority">
            <summary>
            Gets or sets the order of the region in the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.Region">
            <summary>
            Represents the region in the excel document.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.LineStyle">
            <summary>
            The internal representation of the <see cref="T:GrapeCity.SharpCells.Range" /> border line style.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.BorderIndex">
            <summary>
            The internal representation of the <see cref="T:GrapeCity.SharpCells.Range" /> border type.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.FontWeight">
            <summary>
            The copy of ROM FontWeight
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.Border">
            <summary>
            The internal representation of the some <see cref="T:GrapeCity.SharpCells.Range" /> border(left, top, right, bottom border).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.Borders">
            <summary>
            The internal representation of the some <see cref="T:GrapeCity.SharpCells.Range" /> borders.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.Style">
            <summary>
            The internal representation of the <see cref="T:GrapeCity.SharpCells.Range" /> style.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.ExcelStyleConverter">
            <summary>
            Allows to convert the style of Range to the internal representation and vice versa.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.StyleTransformer">
            <summary>
            Allows to transform ROM.Style to the internal Style representation.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.StyleTransformer.ResolveAngle(GrapeCity.Enterprise.Data.Expressions.ExpressionInfo)">
            <summary>
            Returns the Excel representation of the textbox angle.
            </summary>
            <remarks>Excel accepts an angle from -90 to 90. Any angle outside that range
            will be converted to layout at the proper angle, but the text will not be flipped.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.StyleTransformer.ResolveNumberFormat(GrapeCity.ActiveReports.PageReportModel.TextBox,System.Boolean@)">
            <summary>
            Returns the number format to use for the excel template cell.
            </summary>
            <remarks>It's not possible to properly convert the .net format string to an excel number format
            at this point.  If the textbox value is constant then we can set the number format to general.
            If the textbox value is not a contstant then it could possibly be a date or number. There are
            some .net formats that have different excel representations for date and number.  The type
            of the data needs to be known to properly convert and the type of the data will not be known
            until rendering.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.Template">
            <summary>
            Represents the template document.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplatePage">
            <summary>
            Represents the main template page.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext">
            <summary>
            Contains the information about environment in which the some template generation occurs.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext.#ctor(System.Int32,System.Int32,GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplatePage,GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorProcessor)">
            <summary>
            Initializes new instance of TemplateGeneratorContext class.
            </summary>
            <param name="startRow">The number of row from which the template starts.</param>
            <param name="startColumn">The number of column from which the template starts.</param>
            <param name="page">The target Excel worksheet of the template.</param>
            <param name="processor">The template generator processor to be used.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext.StartRow">
            <summary>
            Gets the number of row from which the template starts.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext.StartColumn">
            <summary>
            Gets the number of column from which the template starts.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext.EndRow">
            <summary>
            Gets the number of the end row.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext.EndColumn">
            <summary>
            Gets the number of the end column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext.Page">
            <summary>
            Gets the target Excel worksheet of the template.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorContext.Processor">
            <summary>
            Gets The template generator processor to be used.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorProcessor">
            <summary>
            Exposes the methods which generate excel templates for various entries.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorProcessor.#cctor">
            <summary>
            Initializes new instance of TemplateGeneratorProcessor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorProcessor.GetItemRegion(GrapeCity.ActiveReports.PageReportModel.ReportItem,GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplatePage,System.Int32,System.Int32)">
            <summary>
            Creates and returns the region for the specified Report Item.
            </summary>
            <param name="item"></param>
            <param name="page"></param>
            <param name="startRow"></param>
            <param name="startColumn"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGeneratorProcessor.GetItemCollectionRegion(GrapeCity.ActiveReports.PageReportModel.ReportItemCollection,GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplatePage,System.Int32,System.Int32)">
            <summary>
            Creates and returns the region for the specified report items collection.
            </summary>
            <param name="items"></param>
            <param name="targetPage"></param>
            <param name="startRow"></param>
            <param name="startColumn"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band">
            <summary>
            Base class for all bands in a <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> to inherit from.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band.#ctor(GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper,System.String)">
            <summary>
            Constructor for <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/> class
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band.Height">
            <summary>
            Sets or returns the height of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/> (Default: 0in).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band.ReportItems">
            <summary>
            The <see cref="T:GrapeCity.ActiveReports.PageReportModel.ReportItemCollection"/> of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band.ReadXmlProperty(System.Xml.XmlTextReader)">
            <summary>
            Attempts to read the current property in the <see cref="T:System.Xml.XmlTextReader"/> to see if it 
            applies to this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band.ReadXml(System.Xml.XmlTextReader)">
            <summary>
            Reads in the xml data for this band and assigns the values to this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band.ReadReportItems(System.Xml.XmlTextReader)">
            <summary>
            Reads in and stores the name of the report items on this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band.InitializeReportItems">
            <summary>
            Uses the list of report items on this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/> and locates and adds the actual
            report item to this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/>'s report item collection.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListConstants">
            <summary>
            Serves various constants used for banded list configuration reading.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListTemplateGenerator">
            <summary>
            Converts the banded list report item into excel template region.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapperPool">
            <summary>
            Set up correspondence between BandedList and its wrapper object
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper">
            <summary>
            Encapsulates the BandedList custom report item properties.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.#ctor(GrapeCity.ActiveReports.PageReportModel.CustomReportItem)">
            <summary>
            Constructor for the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.
            </summary>
            <param name="customReportItem">Name for the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.</param>
            <remarks>
            The <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control is an extension of the List control which allows for grouping of data.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Name">
            <summary>
            Sets or returns the name of the <see cref = "T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Top">
            <summary>
            Sets or returns the top position of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Left">
            <summary>
            Sets or returns the left position of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Height">
            <summary>
            Returns the height of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control as calculated by the height of each <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Band"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Width">
            <summary>
            Sets or returns the width of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Detail">
            <summary>
            The detail band of the <see cref = "T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.  This section fires once for each data row.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Header">
            <summary>
            The header band of the <see cref = "T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.  This closly resembles the report header section of banded report writers such as
            ActiveReports for .NET.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Footer">
            <summary>
            The footer band of the <see cref = "T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.  This closly resembles the report footer section of banded report writers such as
            ActiveReports for .NET.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.Groups">
            <summary>
            The grouping collection element of the <see cref = "T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> control.  This object manages the grouping for the control and contains the group header
            and group footer.  The first group in the collection is the outermost group.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.CustomReportItem">
            <summary>
            Gets the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.CustomReportItem"/> that this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> is based on.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.ReadInnerXml(System.String)">
            <summary>
            Loads band and group information from the xml string parameter.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.BuildBandedListWrapper">
            <summary>
            Builds the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper"/> and it's sub-components based on the existing
            <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.CustomReportItem"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.InitializeBands">
            <summary>
            Calls all bands and group bands to load their corresponding report items.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.FindReportItem(System.String)">
            <summary>
            Returns the <see cref="T:GrapeCity.ActiveReports.PageReportModel.ReportItem"/> with the name requested from the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.BandedListWrapper.CustomReportItem"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Group">
            <summary>
            Represents the banded list group.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Group.ReadXml(System.Xml.XmlTextReader)">
            <summary>
            Reads in the information about this group and applies it to this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Group"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Group.InitializeBands">
            <summary>
            Initializes any report items on the bands associated with this <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.BandedListTemplateGenerator.Group"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.ContainerTemplateGenerator">
            <summary>
            Represents the template generator for an IRdlContaner.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.CoordinatesResolver">
            <summary>
            Utility routines for resolving coordinates in Excel units
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.MatrixTemplateGenerator">
            <summary>
            The template generator for Matrix Report Item.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.MatrixTemplateGenerator.MatrixWrapperPool">
            <summary>
            Provide correspondence between matrix sub-items and their bounds
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.ReportItemCollectionTemplateGenerator">
            <summary>
            The template generator for the collection of report items. I.e. for the body report items.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.ReportItemTemplateGenerator">
            <summary>
            The base class for report items template generators.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.ReportTemplateGenerator">
            <summary>
            Generates the template for the report.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.SubreportTemplateGenerator">
            <summary>
            Represents the template generator for a Subreport.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.TableTemplateGenerator">
            <summary>
            Represents the template generator for Table report item.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.TableTemplateGenerator.GetHorizontalCoordinates(GrapeCity.ActiveReports.PageReportModel.ReportItem)">
            <summary>
            Returns the horizontal coordinates of the report items located in the table's cells.
            </summary>
            <remarks>The horizontal coordinates are built based on table's columns width.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.TableTemplateGenerator.GetVerticalCoordinates(GrapeCity.ActiveReports.PageReportModel.ReportItem)">
            <summary>
            Returns the vertical coordinates of the report items located in the table's cells.
            </summary>
            <remarks>The horizontal coordinates are built based on table's columns width.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTemplateGenerator.TemplateGenerators.Utils.GetPageSectionVerticalOffset(GrapeCity.ActiveReports.PageReportModel.ReportItem)">
            <summary>
            Returns the vertical offset of a report item based on which page section it resides in.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTransformationDevice">
            <summary>
            Allows for the creation of an excel spreadsheet containing rendered data from a report.
            </summary>
            <remarks>
            Works good with RDL reports, but not good with Page reports. 
            Use <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelRenderingExtension"/> or <see cref="T:GrapeCity.ActiveReports.Export.Excel.Section.XlsExport"/> to export Excel data.
            </remarks>
            <summary>
            Render FPL through RDF.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTransformationDevice.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)">
            <summary>
            Renders the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport" /> to the Excel file defined in streams with default settings.
            </summary>
            <param name="report">The report to render to Excel.</param>
            <param name="streams">The stream used to create the Excel output file.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTransformationDevice.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Renders the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport" /> to the Excel file defined in streams with the defined settings.
            </summary>
            <param name="report">The report to render to Excel.</param>
            <param name="streams">The stream used to create the Excel output file.</param>
            <param name="settings">The settings to use while creating the output file.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTransformationDevice.TemplateStream">
            <summary>
            Gets or sets the template as a <see cref="T:System.IO.Stream" /> to use for rendering.
            </summary>
            <remarks>The value of this property will override the Template setting if not null.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTransformationDevice.GetSupportedSettings">
            <summary>
            Gets the settings that are supported for rendering a report to Excel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTransformationDevice.GetSupportedSettings(System.Boolean)">
            <summary>
            Gets the settings that are supported for rendering a report to Excel.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.Settings">
            <summary>
            Contains the settings used for rendering reports to Excel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Settings.#ctor">
            <summary>
            Allows internal callers to create instances of this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.TemplatePropertyName">
            <summary>
            Specifies the full path and filename of a Template to use during the rendering process.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ReadOnlyRecommendedPropertyName">
            <summary>
            Specifies the value of ReadOnlyRecommended file sharing flag for the saved Excel file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.UseDefaultPalettePropertyName">
            <summary>
            Specifies the value of UseDefaultPalette
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ForceJpTemplatePropertyName">
            <summary>
            Specifies the value of ForceJpTemplate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ProtectWorkbookPasswordPropertyName">
            <summary>
            Specifies the value of write-protection passwordfor the saved Excel file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.SuggestedFileExtensionPropertyName">
            <summary>
            Used when a Template is used to determine the file type to use with the FileStreamProvider
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.Template">
            <summary>
            Gets or sets the path of the Template used during the rendering process.
            
            Doesn't work with Page reports, only with RDL reports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ReadOnlyRecommended">
            <summary>
            Gets or sets the value ReadOnlyRecommended file sharing flag for the saved Excel file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.UseDefaultPalette">
            <summary>
            Sets or returns whether export document with Excel default palette.
            </summary>
            <remarks>
            Setting this value to true, application will use the color which is in default palette and is closest to pre-defined custom color of control's forecolor and backcolor.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ProtectWorkbookPassword">
            <summary>
            Gets or sets the path of the ProtectWorkbookPassword used during the rendering process.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.PaperWidth">
            <summary>
            Gets or sets the width of the paper size that will be set for the output document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.PaperHeight">
            <summary>
            Gets or sets the height of the paper size that will be set for the output document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.SuggestedFileExtension">
            <summary>
            Gets or sets the filename provided by the Export Dialog
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ForceJpTemplate">
            <summary>
            Force JP template. Used for tests.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.TemplateDefaultValue">
            <summary>
            Specifies the default value for the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.Template"/> property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ReadOnlyRecommendedDefaultValue">
            <summary>
            Specifies the default value for the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ReadOnlyRecommended"/> property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.UseDefaultPaletteDefaultValue">
            <summary>
            Specifies the default value for the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.UseDefaultPalette"/> property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ForceJpTemplateDefaultValue">
            <summary>
            Specifies the default value for the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ForceJpTemplate"/> property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ProtectWorkbookPasswordDefaultValue">
            <summary>
            Specifies the default value for the <see cref="P:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ProtectWorkbookPassword"/> property.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ToBoolean(System.String)">
            <summary>
            Converts the specified string value to a boolean.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ApplySettings(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Applies any settings passed in the NameValueCollection settings parameters.
            </summary>
            <param name="settings">A <see cref="T:System.Collections.Specialized.NameValueCollection"/> containing new settings.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Settings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Settings.GetSettings">
            <summary>
            Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing the settings for the rendering extension.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.Settings.op_Implicit(GrapeCity.ActiveReports.Export.Excel.Page.Settings)~System.Collections.Specialized.NameValueCollection">
            <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.Settings"/> to <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <param name="settings">The rendering extention settings.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelTdResourceDescriptionAttribute">
            <summary>
            A localizable description attribute.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.ExcelRenderingExtension.ExcelRenderingExtensionSettingsConverter">
            <summary>
            Type converter for Excel settings. Shows\Hides various properties.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.ArgumentValidator">
            <summary>
            Provides some functions for simple argument validation.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ArgumentValidator.EnsurePostive(System.Int16,System.String,System.String)">
            <summary>
            Throws an ArgumentOutOfRangeException if the specified argumentValue is less than zero.
            </summary>
            <param name="argumentValue">The argument value that is supposed to be positive.</param>
            <param name="argumentName">The name of the argument.  This value is used to provide the name to the ArgumentOutOfRangeException instance that will be thrown in the event that the specified argumentValue is negative.</param>
            <param name="extendedMessage">Additional information that should be passed on to the exception</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ArgumentValidator.EnsurePostive(System.Int16,System.String)">
            <summary>
            Throws an ArgumentOutOfRangeException if the specified argumentValue is less than zero.
            </summary>
            <param name="argumentValue">The argument value that is supposed to be positive.</param>
            <param name="argumentName">The name of the argument.  This value is used to provide the name to the ArgumentOutOfRangeException instance that will be thrown in the event that the specified argumentValue is negative.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ArgumentValidator.EnsurePostive(System.Int32,System.String)">
            <summary>
            Throws an ArgumentOutOfRangeException if the specified argumentValue is less than zero.
            </summary>
            <param name="argumentValue">The argument value that is supposed to be positive.</param>
            <param name="argumentName">The name of the argument.  This value is used to provide the name to the ArgumentOutOfRangeException instance that will be thrown in the event that the specified argumentValue is negative.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ArgumentValidator.EnsurePostive(System.Int64,System.String)">
            <summary>
            Throws an ArgumentOutOfRangeException if the specified argumentValue is less than zero.
            </summary>
            <param name="argumentValue">The argument value that is supposed to be positive.</param>
            <param name="argumentName">The name of the argument.  This value is used to provide the name to the ArgumentOutOfRangeException instance that will be thrown in the event that the specified argumentValue is negative.</param>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Biff8StringWriter">
            <summary>
            Writes out BIFF8 "Compressed Format" Unicode Strings.  
            </summary>
            <remarks>
            See page 264 in the MS Excel 97 Developer's Kit.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8StringWriter.WriteBiff8UnicodeString(System.String,System.IO.BinaryWriter)">
            <summary>
            Writes out a Unicode string according to the BIFF8 Unicode String "compressed format".  
            See MS Excel Developer's Kit Page 264.
            </summary>
            <param name="theString">
            A System.String containing the string you want written to BIFF8 unicode.
            </param>
            <param name="binWriter">The BinaryWriter to be used to write out the specifie string.</param>
            <remarks>
            Basically we just always write the string out in full unicode uncompressed at this time.  
            This function is here though, so we can write compressed unicode later with minimal 
            code impact (strings are written all over the code using this technique).
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8StringWriter.GetBiff8UnicodeStringBytes(System.String)">
            <summary>
            Returns a byte array containg the special BIFF8 unicode string.
            </summary>
            <param name="theString"></param>
            <returns></returns>
            <remarks>
            The first byte of this array contains the 1 byte grbitOptionsFlag value.  
            The rest is the unicde string.
            In order to write a BIFF8 string out properly you'll have to write out the character count (cch) before writing out this byte array.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8StringWriter.GetBiff8UnicodeStringByteCount(System.String)">
            <summary>
            Returns the number of bytes the string will consume when it is written out in the BIFF8 Unicode String "compressed format".
            This is here so that when you write out the BIFF8 record length (for every record) you can call this to get a byte count quickly.
            </summary>
            <param name="??"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffColInfos">
            <summary>
            Collection for BiffColInfo class.  
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffColInfos.Compact(System.Collections.Generic.ICollection{GrapeCity.SpreadBuilder.BiffColInfo})">
            <summary>
            BiffColInfo's can specify a range for multiple columns instead of having to define a 
            single BiffColInfo for each column when multiple adjacent columns have the same 
            BiffColInfo information.  However, callers of SpreadBuilder can only add a 
            BiffColInfo for each column.  So before we save, we �compact� the BiffColInfo�s so 
            that multiple identical adjacent BiffColInfo�s are replaced by a single BiffColInfo 
            with multiple columns in it�s range.  The compacted array of BiffColInfo�s is 
            returned in pDest.
            </summary>
            <param name="pDest">
            The array to append this sheet's compacted BiffColInfo's to.
            </param>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffColInfo">
            <summary>
            Used with BiffColInfos.  Represents BIFF COLINFO records.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffColInfo.width">
            <summary>
            Column width in 1/256s of a character width.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.BiffColInfo.Grbit">
            <summary>
            Gets grbit field.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffRow">
            <summary>
            Represents a row that will be written to BIFF.  The reason we have a BiffRow is that BIFF stores cells by writing Row information followed by cells.  The BiffRow class mainly just holds all the cells in a particular row for a sheet.  Each cell contained in the BiffRow will be capable of writing itself directly to BIFF using the BiffCell.GetBiffBytes funciton.
            Row height is in 1/20ths of a point.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffRow.m_rowHeight">
            <summary>
            Row height in 1/20th of a point, Default is aprox 12.75.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffRow.#ctor(GrapeCity.SpreadBuilder.DDSheet,System.Int32)">
            <summary>
            The BiffRow constructor.  
            </summary>
            <param name="parentSheet">The sheet that this row is a member of.</param>
            <param name="iRow">The zero based row number that this BiffRow represents.</param>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffRow.m_parentSheet">
            <summary>
            Internal storage for the ParentSheet property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.BiffRow.ParentSheet">
            <summary>
            Sets/gets the parent DDSheet that this row is a member of.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffRow.m_row">
            <summary>
            Internal storage for the Row property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.BiffRow.Row">
            <summary>
            Sets/gets the zero based row number.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffRow.Clear">
            <summary>
            Removes all cells from this row.
            </summary>
            <remarks>Replaces Cleanup() in old code.</remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffCellTable">
            <summary>
            Provies the enumerable collection of cells for BiffRow.
            Basically a wrapper around a Hashtable.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffCellTable._cellsDic">
            <summary>
            Used to internally store the cells in this row (actually the parent row).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.BiffCellTable.Count">
            <summary>
            Returns the number of defined cells in this row.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.BiffCellTable.Item(System.Int32,System.Boolean)">
            <summary>
            Returns the BiffCellBase derivitive for the specified column.
            </summary>
            <param name="col">The zero based column you want a cell for.</param>
            <param name="bCreateIfNotExists">
            Will create a new BiffCellBlank (and add it to the collection so that future calls 
            to GetBiffCell will return the same cell) if one does not exist and you specify true 
            for the bCreateIfNeeded argument.
            </param>
            <returns>
            The cell for the specified column, or null if a cell does not exist for the specified 
            column and bCreateIfNotExists argument was false.
            BiffCellBlank will be the return type (which extends BiffCellBase) if a new cell is created.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.AddCell(System.Int32,GrapeCity.SpreadBuilder.Cells.CellBase)">
            <summary>
            Add cell to the OrderedDictionary, and the keys' order is ascending.
            Generally, the order of cells created by XlsExport always be ascending,
            so compare the key from last one.
            </summary>
            <param name="columnIndex">And integer indicates the column index which position need be added to.</param>
            <param name="c">The CellBase</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.SetCellBlank(System.Int32)">
            <summary>
            Gets the cell for the specified column, and converts it to a BiffCellBlank while preserving the 
            ParentRow, Column, and XFIndex values.  
            This function will create a new BiffCellBlank and add it into the collection if a cell does 
            not exist for the specified column.
            If the cell exists and is already the correct type, it will just be returned immediately.
            </summary>
            <param name="iColumn">The zero based column you need a cell object for.</param>
            <returns>
            The BiffCellBlank object for the specified column.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.SetCellNumber(System.Int32,System.Double)">
            <summary>
            Gets the cell for the specified column, and converts it to a BiffCellNumber while preserving the 
            ParentRow, Column, and XFIndex values.  
            This function will create a new BiffCellNumber and add it into the collection if a cell does 
            not exist for the specified column.
            If the cell exists and is already the correct type, it will just be returned immediately.
            </summary>
            <param name="iColumn">The zero based column you need a cell object for.</param>
            <param name="dblValue">The value for the new cell.</param>
            <returns>
            The BiffCellNumber object for the specified column.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.SetCellLabel(System.Int32,System.String)">
            <summary>
            Gets the cell for the specified column, and converts it to a BiffCellLabel while preserving the 
            ParentRow, Column, and XFIndex values.  
            This function will create a new BiffCellLabel and add it into the collection if a cell does 
            not exist for the specified column.
            If the cell exists and is already the correct type, it will just be returned immediately.
            </summary>
            <param name="iColumn">The zero based column you need a cell object for.</param>
            <param name="sValue">The value for the new cell.</param>
            <returns>
            The BiffCellLabel object for the specified column.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.SetCellBoolean(System.Int32,System.Boolean)">
            <summary>
            Gets the cell for the specified column, and converts it to a CellBool while preserving the 
            ParentRow, Column, and XFIndex values.  
            This function will create a new CellBool and add it into the collection if a cell does 
            not exist for the specified column.
            If the cell exists and is already the correct type, it will just be returned immediately.
            </summary>
            <param name="iColumn">The zero based column you need a cell object for.</param>
            <param name="theValue">The value for the new cell.</param>
            <returns>
            The CellBool object for the specified column.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.SetCellError(System.Int32,GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues)">
            <summary>
            Set an error value to cell.
            </summary>
            <param name="iColumn">The zero based column you need a cell object for.</param>
            <param name="theValue">The value for the new cell.</param>
            <returns>The CellError object for the specified column.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.GetFirstCol">
            <summary>
            Returns the lowest (first) column number in this collection of cells.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.GetLastCol">
            <summary>
            Returns the highest (last) column number in this collection of cells.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffCellTable.Remove(System.Int32)">
            <summary>
            Used to remove a BiffCellBase from the sheet.  Used for CellMerging; When a cell becomes part of a merged area, it should no longer exist in the sheet.
            </summary>
            <param name="column"></param>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellBase">
            <summary>
            The base class for the different cell types in BIFF (Blank, Boolean, Label, Number, etc...).
            Deriving classes will most likely be adding an additional member to hold the data that is specific to the cell type.
            For example, if the derived type is a BiffCellLabel the cell type specific data is a string.  If it's a BiffCellNumber 
            the cell type specific data is a double, etc...
            </summary>
            <remarks>*Note that since all BiffCell classes will be a member of a BiffRow class the cell does not store 
            it's row number, the parent BiffRow does.  To determine the row number, call BiffCell.ParentRow.Row.</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.CellBase.DEFAULT_CELL_XF">
            <summary>
            This is the default XF index for Cells in a biff document.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.CellBase.#ctor(GrapeCity.SpreadBuilder.BiffRow,System.Int32,System.Int32)">
            <summary>
            To construct an BiffCell or it's derivitives a parent BiffRow that will contain this cell must be supplied.
            Classes deriving BiffCellBase must provide a constructor with a BiffRow aregument and use 
            "constructor-initializer" "colon syntax" to call the BiffCellBase constructor providing the BiffRow argument 
            specified in the derived classes constructor.  This is necssary as the BiffCellBase's constructor stores the 
            the parent BiffRow for functions in the BiffCell base and it's derived classes functionality.
            </summary>
            <param name="parent">The parent <see cref="T:GrapeCity.SpreadBuilder.BiffRow"/> that this cell is on.</param>
            <param name="iColumn">The column index for the cell.</param>
            <param name="iXFIndex">The index into the XF record table that supplies this cell's formmating information.</param>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBase.ParentRow">
            <summary>
            Returns the parent BiffRow that this cell is a member of.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBase.Column">
            <summary>
            Sets/gets the zero based column index of this cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBase.XFIndex">
            <summary>
            Sets/gets the index to this cell's BIFF XF formatting record.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBase.CellType">
            <summary>
            This member will disclose the type of cell.  Must be implemented by derived classes should return the 
            appropate (BIFF) cell type that the derived class is representing.
            </summary>
            <remarks>
            This is here for essentally one reason.  You could loop through a BiffRow containing cell's deriving 
            from BiffCellBase and check the CellType property to determine what member should be called to obtain the cell's value.  For example:
            <code>
            foreach(BiffCellBase cellBase in BiffRow.Cells)
            {
            	switch (cellBase.CellType)
            	{
            	case DDBiffCellTypes.Number:
            		MessageBox.Show("CellValue == " + (double)((BiffCellNumber)(cellBase).Value).ToString());
            	break;
            	case DDBiffCellTypes.Label
            		MessageBox.Show("CellValue == " + (string)((BiffCellLabel)(cellBase).Text));
            	break;
            	etc...
            	
            	}
            }
            </code>
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBase.CellValueType">
            <summary>
            Gets the cell value's type.
            </summary>
            <remarks>
            This property for internal use. The best way is to public this. But we should consider the backward
            compatibility to keep CellType property and CellTypes enum.
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellNumber">
            <summary>
            Represents a cell of BIFF record type "NUMBER" (203h).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellNumber.CellType">
            <summary>
            Returns CellTypes.Number.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellNumber.CellValueType">
            <summary>
            Returns CellValues.Number.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellNumber.ValueNumber">
            <summary>
            Sets/gets the numeric (double) value for the cell.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellLabel">
            <summary>
            Represents a cell of BIFF type "LABELSST" might write BIFF LABEL for BIFF7.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellLabel.CellType">
            <summary>
            Returns CellTypes.Label.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellLabel.CellValueType">
            <summary>
            Returns CellValues.SharedString.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellLabel.ValueText">
            <summary>
            Returns this cell's textual value.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellLabel.ParentWorkbook">
            <summary>
            Used to access the parent Workbook of this cell.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellBlank">
            <summary>
            Represents a blank content value(a BIFF BLANK record (201h)).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBlank.CellType">
            <summary>
            Returns CellTypes.Blank.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBlank.CellValueType">
            <summary>
            Returns CellValues.Blank.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellError">
            <summary>
            Represents a cell whose value is a error(the BIFF BOOLERR record).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellError.CellType">
            <summary>
            Returns CellTypes.BoolErr.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellError.CellValueType">
            <summary>
            Returns CellValues.Error.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.CellError._error">
            <summary>
            Stores the value for the Error property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellError.ValueError">
            <summary>
            Holds the value for this cell.  
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellBool">
            <summary>
            Represents the BIFF BOOL record.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBool.CellType">
            <summary>
            Returns CellTypes.BoolErr.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBool.CellValueType">
            <summary>
            Returns CellValues.Boolean.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.CellBool._bool">
            <summary>
            Stores the value for the ValueBool property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.CellBool.ValueBool">
            <summary>
            Holds the value for this cell.  
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues">
            <summary>
            Possible values for the BiffCellBoolErr.ValueBoolErr property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.Null">
            <summary>
            "#NULL!" error value (when IsError is true).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.False">
            <summary>
            False value when IsError is false.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.True">
            <summary>
            True value when IsError is false.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.Div0">
            <summary>
            "#DIV/0!" error value (when IsError is true).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.Value">
            <summary>
            "#VALUE!" error value (when IsError is true).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.Ref">
            <summary>
            "#REF!" error value (when IsError is true).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.Name">
            <summary>
            "#NAME!" error value (when IsError is true).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.Num">
            <summary>
            "#NUM!" error value (when IsError is true).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues.NA">
            <summary>
            "#N/A" error value (when IsError is true).
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.DDCell">
            <summary>
            DDCell represents a single cell in a spreadsheet.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.#ctor(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32)">
            <summary>
            Internal constructor for DDCell that allows specification of this cell's parent spreadsheet.
            </summary>
            <param name="parentSheet">The parent sheet of this cell.</param>
            <param name="row">The row index of the cell that this cell object should represent.</param>
            <param name="column">The column index of the cell that this cell object should represent.</param>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.DDCell.m_parentSheet">
            <summary>
            Internal storage for the ParentSheet property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.ParentSheet">
            <summary>
            Sets/gets the DDSheet that this row is a member of.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.Type">
            <summary>
            The type of cell this DDCell object represents.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.SetValue(System.Double)">
            <summary>
            Sets the cell's type to DDCellType.Number, and stores the cell's current value becomes the specified numeric value.
            </summary>
            <param name="dblValue">The numeric value to store as this cell's current value.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.SetValue(System.String)">
            <summary>
            Sets the cell's type to DDCellType.Label, and stores the cell's current value becomes the specified string value.
            </summary>
            <param name="sValue">The string value to store as this cell's current value.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.SetValue(GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues)">
            <summary>
            Sets the cell's type to DDCellType.Boolean, and stores the cell's current value becomes the specified string value.
            </summary>
            <param name="bValue">The boolean value to store as this cell's current value.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.SetValueBlank">
            <summary>
            Sets the cell's type to DDCellType.Blank and clears any other current value.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.GetValue">
            <summary>
            Returns the cell's current value.
            </summary>
            <returns>
            Return type can be one of the following:
            A null reference (for a CellTypes.Blank cell type), System.String (for a CellTypes.Label cell type), 
            System.Double (for a CellTypes.Number cell type), or  one of the values in the BiffCellBoolErrValues enumeration (for CellTypes.BoolErr cell type). 
            Use the DDCell's Type property to determine the type of the cell before returning the value, 
            or check the type of the returned value.
            </returns>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.Alignment">
            <summary>
            Sets/gets the horizontal alignment value for the cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.VertAlignment">
            <summary>
            Sets/gets vertical alignment value for the cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.TextAngle">
            <summary>
            Gets/sets the text rotation for the cell, in degrees: 
            Values 0-90 is up 0-90 degrees, values 91-180 is down 1-90 degrees, and the value 255 
            is vertical.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderBottomStyle">
            <summary>
            Sets/gets the line style for the bottom portion of the cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderDiagonalStyle">
            <summary>
            Sets/gets the line style for the diagonal portion of the cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderDiagonalEnum">
            <summary>
            Sets/returns whether a diagonal border goes up or down, or both (which forms an "X" accross the cell).
            </summary>
            <remarks>
            If you do not set this property the DiagonalEnum=0, and will not show up.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderLeftStyle">
            <summary>
            Sets/gets the line style for the left portion of the cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderRightStyle">
            <summary>
            Sets/gets the line style for the right portion of the cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderTopStyle">
            <summary>
            Sets/gets the line style for the top portion of the cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderBottomColor">
            <summary>
            Sets/gets the color of the bottom border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderDiagonalColor">
            <summary>
            Sets/gets the color of the diagonal border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderLeftColor">
            <summary>
            Sets/gets the color of the left border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderRightColor">
            <summary>
            Sets/gets the color of the right border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.BorderTopColor">
            <summary>
            Sets/gets the color of the top border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.FillColor">
            <summary>
            Sets/gets the "fill color" ("background color") for the cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.ForeColor">
            <summary>
            Sets/gets the "fore color" ("text color") for the cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.FontName">
            <summary>
            Sets/gets the name of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.FontBold">
            <summary>
            Sets/gets the bold property of the cell's font.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.FontItalic">
            <summary>
            Sets/gets the italic property of the cell's font.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.FontSize">
            <summary>
            Sets/gets the size of the font in points.  It will round the number size specified to 
            the nearest half of a point.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.FontUnderlineStyle">
            <summary>
            Sets/gets the underline style for the cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.NumberFormat">
            <summary>
            Gets/sets an Excel style number format string.
            </summary>
            <remarks>
            For foreign currency symbols such as the Japanese Yen you can use a format such as: "[$�-0]#,##0.00".  Replace the Yen sign (�) with whatever currency symbol you want used there.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.WrapText">
            <summary>
            Gets/sets whether the cell's text can be wrapped or not.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.Hyperlink">
            <summary>
            Sets/gets a hyperlink for the cell that will automatically be launched by Excel when the cell is clicked.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.Merge(System.UInt16,System.UInt16)">
            <summary>
            Merges this cell with adjacent cells.
            </summary>
            <param name="numberOfColumnsToMerge">
            The number of columns accross to be merged. 1 means only the next cell will be merged.
            </param>
            <param name="numberOfRowsToMerge">
            The number of rows down to be merged. 1 means only the next cell (in the specified direction) will be merged.
            </param>
            <remarks>Do not merge a cell more than once.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.IsMerged">
            <summary>
            Returns true if this cell is in a merged group of cells.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCell.UnMerge">
            <summary>
            Will cause this cell and all cell's that are currently merged with this cell to be un-merged, and behave as independent cells with their own value and style.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.MergeArea">
            <summary>
            Returns a MergeArea object that represents the merged range containing this cell. 
            If this cell is not in a merged area, this property returns MergeArea.Empty. 
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCell.FontStrikeOut">
            <summary>
            Sets/gets the bold property of the cell's font.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellTypes">
            <summary>
            The different types of spreadsheet cells that SpreadBuilder supports.  This value is used with the DDCell class's Type property.
            </summary>
            <remarks>
            At this time Excel's file format supports more types of cells than DDCell.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.CellTypes.Blank">
            <summary>
            Blank
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.CellTypes.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.CellTypes.Number">
            <summary>
            Number
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.CellTypes.BoolErr">
            <summary>
            Bool
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.CellValueTypes">
            <summary>
            The different types of spreadsheet cells that SpreadBuilder supports.  This value is used with the DDCell class's CellValue property.
            </summary>
            <remarks>
            At this time Excel's file format supports more types of cells than DDCell.
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.DDCells">
            <summary>
            Provides public API for changing format settings for cells
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.Alignment">
            <summary>
            Sets the horizontal alignment value for all cells.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.VertAlignment">
            <summary>
            Sets vertical alignment value for all cells.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.TextAngle">
            <summary>
            Sets the text rotation for each cell, in degrees: 
            Values 0-90 is up 0-90 degrees, values 91-180 is down 1-90 degrees, and the value 255 
            is vertical.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderBottomStyle">
            <summary>
            Sets the line style for the bottom portion of each cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderDiagonalStyle">
            <summary>
            Sets/gets the line style for the diagonal portion of each cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderDiagonalEnum">
            <summary>
            Sets whether a diagonal border goes up or down, or both (which forms an "X" accross the cell).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderLeftStyle">
            <summary>
            Sets the line style for the left portion of each cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderRightStyle">
            <summary>
            Sets the line style for the right portion of each cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderTopStyle">
            <summary>
            Sets the line style for the top portion of each cell's border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderBottomColor">
            <summary>
            Sets the color of the bottom border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderDiagonalColor">
            <summary>
            Sets the color of the diagonal border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderLeftColor">
            <summary>
            Sets the color of the left border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderRightColor">
            <summary>
            Sets the color of the right border.
            </summary>
            <remarks>See BorderTopColor property for more comments in the implementation of these BorderColor props.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.BorderTopColor">
            <summary>
            Sets the color of the top border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.FillColor">
            <summary>
            Sets the "fill color" ("background color") for each cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.ForeColor">
            <summary>
            Sets the "fore color" ("text color") for each cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.FontName">
            <summary>
            Sets the name of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.FontBold">
            <summary>
            Sets the bold property of the cell's font.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.FontItalic">
            <summary>
            Sets the italic property of the cell's font.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.FontStrikeOut">
            <summary>
            Sets/gets the bold property of the cell's font.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.FontSize">
            <summary>
            Sets the size of the font in points.  It will round the number size specified to 
            the nearest half of a point.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.FontUnderlineStyle">
            <summary>
            Sets the underline style for the cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.NumberFormat">
            <summary>
            Sets an Excel style number format string.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.WrapText">
            <summary>
            Gets/sets whether the cell's text can be wrapped or not.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.DDCells.Count">
            <summary>
            Gets the number of cells contained in this collection
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCells.System#Collections#Generic#IEnumerable{GrapeCity#SpreadBuilder#Cells#DDCell}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.DDCells.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.MergeAreasRecord">
            <summary>
            Optional record defining a square area of cells to "merged" into one cell.  This record is outputted per worksheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.MergeAreasRecord.sid">
            <summary>
            Returns the MergeAreasRecord's record ID.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.MergeAreasRecord.Count">
            <summary>
            Returns the number of MergeAreas represented by this MergeAreasRecord instance.
            </summary>
            <remarks>
            If there are zero merged regions this record does not need to be written.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.MergeAreasRecord.AddNew(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Add a rectangular area to consider a merged cell. 
            </summary>
            <param name="rowFrom">The topmost row of the merged area.</param>
            <param name="rowTo">The lowest row of the merged area.</param>
            <param name="columnFrom">The leffmost row of the merged area.</param>
            <param name="columnTo">The rightmost row of the merged area.</param>
            <returns>The index the newly added region will be stored at in the merged area collection.  This index could be invalid if a MergeArea is removed.
            </returns>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.MergeAreasRecord.Item(System.Int32)">
            <summary>
            Returns the MergeArea at the specified index.
            </summary>
            <param name="index">The index of the MergeArea to return.</param>
            <returns>MergeArea at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.MergeAreasRecord.RemoveAt(System.Int32)">
            <summary>
            Removes the merged region at the specified index.
            </summary>
            <param name="index">The index to remove the region at.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.MergeAreasRecord.ToString">
            <summary>
            Overrides ToString and returns information about the instance suitable for debugging purposes.
            </summary>
            <returns>Debugging information.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.MergeArea">
            <summary>
            Rpresents a merged rectangular region of cells.  
            </summary>
            <remarks>
            This class is immutable, you cannot change the values once an instance has been initialized.  If you want to extend or truncate an existing MergeArea, you need to remove the existing one, and create and add a new one representing the extended or truncated region.
            </remarks>
            <internal>
            The MergeAreasRecord is actually a collection of these MergeArea records represent each rectangular area on the sheet that is merged.
            </internal>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.MergeArea.SizeOf">
            <summary>
            Returns the size of this data when written to BIFF.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.MergeArea.Empty">
            <summary>
            Represents an empty merge area.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.MergeArea.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes an instance of the MergeArea class with the specified cell coordinates.
            </summary>
            <param name="rowFrom">The top most row of the merged rectangular region.</param>
            <param name="rowTo">The bottom most row of the merged rectangular region.</param>
            <param name="columnFrom">The leftmost column of the merged rectangular region.</param>
            <param name="columnTo">The rightmost column of the merged rectangular region.</param>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.MergeArea.RowFrom">
            <summary>
            The upper row of the rectangular merged region.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.MergeArea.RowTo">
            <summary>
            The lower row of the rectangular merged region.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.MergeArea.ColumnFrom">
            <summary>
            The leftmost column of the rectangular merged region.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.MergeArea.ColumnTo">
            <summary>
            The rightmost column of the rectangular merged region.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.MergeArea.ContainsCell(System.Int32,System.Int32)">
            <summary>
            Returns true if this MergeArea contains the cell at the specified row &amp; column index.
            </summary>
            <param name="row">The row of the cell.</param>
            <param name="column">The column of the cell.</param>
            <returns>True if the MergeArea contains the specified cell.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Cells.SharedStrings">
            <summary>
            Contains all the unique strings of a the cells in a workbook.  
            Used for adding all strings to the table, as each cell is written.  Then this table is capable of writing the workbook global shared string table records (SST &amp; ExtSST).
            Once you add a string, it cannot be removed.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.SharedStrings.stringEntries">
            The list of entries in the order they will be written.
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Cells.SharedStrings.stringEntryToIndexMap">
            Maps a string to its index in the stringEntries list.  We use this to find duplicate strings.
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.SharedStrings.#ctor">
            <summary>
            Initializes a new instance of the SharedStrings class.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.SharedStrings.Add(System.String)">
            <summary>
            Adds the specified string to the string table.
            </summary>
            <param name="entry">The string entry to be added to the collection.</param>
            <returns>
            A unique code you can use to uniquely identify the specified string in this table.
            A string added more than once will return the same code.
            </returns>
            <exception cref="T:System.ArgumentNullException">If entry is null.</exception>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Cells.SharedStrings.Item(System.Int32)">
            <summary>
            Returns the string associated with the specified code.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.SharedStrings.Release(System.Int32)">
            <summary>
            Notifies the shared string table that it can release the specified code.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Cells.SharedStrings.MapCodeToIndex(System.Int32)">
            <summary>
            Maps the specified code used for the unique string to the index of the string in the SST record output.
            This table should not be changed after this entry is requested and before the cell is written.
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDColumn">
            <summary>
            Represents a column in a spreadsheet.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDColumn.#ctor(GrapeCity.SpreadBuilder.DDSheet,System.Int16)">
            <summary>
            Creates the column and stores the specified DDSheet as a parent, and the specified column 
            number.
            </summary>
            <param name="ownerSheet"></param>
            <param name="column"></param>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDColumn.m_column">
            <summary>
            Internal storage for the Column property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDColumn.Column">
            <summary>
            Returns the column number (zero based) that this object represents.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDColumn.m_ownerSheet">
            <summary>
            Internal storage for the OwnerSheet property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDColumn.OwnerSheet">
            <summary>
            Returns the sheet that this column is on.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDColumn.m_iWidth">
            <summary>
            Internal storage for the Width property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDColumn.Width">
            <summary>
            Sets/gets the width of the column in Twips.  
            </summary>
            <remarks>
            The value will be converted to excel's "1/256 character width" unit system.
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDRow">
            <summary>
            Represents a single row in a sheet.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDRow.#ctor(GrapeCity.SpreadBuilder.DDSheet,System.Int32)">
            <summary>
            Creates this DDRow with the specified sheet as a parent, and the specified row number 
            as the row this instance represent.
            </summary>
            <param name="parentSheet">The sheet this row is on.</param>
            <param name="row">The row number this instance represents (zero based).</param>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDRow.Height">
            <summary>
            Sets/gets the height for the row in 1/20th of point.
            SpreadBuilder will default rows to 12.75 points (or 255 in twips).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDRow.AutoSize">
            <summary>
            Sets or returns whether excel will will automatically determine the row's height based it's contents.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDSecurity">
            <summary>
            Encapsulates the information necessary to provide spreadsheet document security and encryption.
            </summary>
            <remarks>
            If a WritePassword or a Password is supplied the spreadsheet application will prompt for a write or open access password.
            If a WritePassword or a Password is not supplied no password will be requested to open the document.
            By correctly supplying the Password, the user will be able to open the document.
            By correctly supplying the WritePassword, the user will be able to write the document.
            If the read only recommended is set to true, the Excel application will prompt user whether to open document as read-only.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSecurity._writePassword">
            <summary>
            Represents WritePassword.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSecurity._password">
            <summary>
            Represents Password.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSecurity._protectedBy">
            <summary>
            Represents the name of person who protect the workbook.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSecurity._readOnlyRecommended">
            <summary>
            Represents ReadOnlyRecommended.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSecurity.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:GrapeCity.SpreadBuilder.DDSecurity"/> class with empty passwords, no read only recommended and specified owner.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSecurity.ProtectedBy">
            <summary>
            Gets or sets the User Name responsible to password protect the spreadsheet document.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSecurity.WritePassword">
            <summary>
            Gets or sets the write password of the spreadsheet document.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSecurity.Password">
            <summary>
            Gets or sets the password which can be entered to permit to open spreadsheet document.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSecurity.ReadOnlyRecommended">
            <summary>
            Gets or sets the value to indicate if the spreadsheet document was saved as read only recommended.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDSheet">
            <summary>
            Represents a WorkSheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSheet.m_parentSheets">
            <summary>
            Internal storage for the ParentSheets property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSheet.m_linelist">
            This list contains OBJ_line objects.
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.#ctor(GrapeCity.SpreadBuilder.DDSheets,System.String)">
            <summary>
            Constructor for DDSheet.
            </summary>
            <param name="parentSheets">
            The DDSheets collection that this DDSheet is a member of.
            </param>
            <param name="name">
            The new name of this DDSheet.
            </param>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.BWriteanIndexRecord">
            <summary>
            Gets m_bWriteanIndexRecord field.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.Window2">
            <summary>
            Gets and sets BIFF8 WINDOW2 record.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.PageBreaksHorizontal">
            <summary>
            Gets horizontal PageBreaks.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.PageBreaksVertical">
            <summary>
            Gets vertical PageBreaks.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.ParentSheets">
            <summary>
            Returns the DDSheets collection that this DDSheet is a member of.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSheet.m_name">
            <summary>
            Internal storage for the Name property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.Name">
            <summary>
            Sets/returns the name of this DDSheet.
            </summary>
            <remarks>
            May throw an ArgumentException if the specified name is already in use, or invalid (e.g. empty).
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.ColInfos">
            <summary>
            Returns the BiffColInfos which contains a collection of BiffColInfo objects for this sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.BiffRows">
            <summary>
            Returns the BiffRowTable collection containing the BiffRows contained in this sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.MergeAreasRecord">
            <summary>
            Returns the MergeAreas record that will be written when this sheet is serialized.  This is used to add or removed merged cells/areas.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.DisplayGridLines">
            <summary>
            Sets or returns the flag indicating if grid lines are displayed in the sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.PageSetup">
            <summary>
            Returns a PageSetup class representing current information about this sheet when printed.  This information is displayed in Excel in the page setup dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSheet.m_boundSheetOffset">
            <summary>
            Private storage for BoundSheetOffset property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.BoundSheetOffset">
            <summary>
            Sets/gets the file offset to this sheet's BOUNDSHEET record's lbPlyPos field.
            </summary>
            <remarks>
            It is necessary to store this postion because BOUNDSHEET is written in the Workbook 
            globals section and contains a field named lbPlyPos which contains the file offset of 
            the BOF for the actual sheet data.  So once the sheet data is written, sheets will 
            go back and enter the offset into each sheet's BOUNDSHEET.lbPlyPos field.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSheet.m_sheetOffset">
            <summary>
            Private storage for SheetOffset property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.SheetOffset">
            <summary>
            Sets/gets file offset to the BIFF BOF record for this sheet.
            </summary>
            <remarks>
            It is necessary to store this postion because BOUNDSHEET is written in the Workbook 
            globals section and contains a field named lbPlyPos which contains the file offset of 
            the BOF for the actual sheet data.  So once the sheet data is written, sheets will 
            go back and enter the offset into each sheet's BOUNDSHEET.lbPlyPos field.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSheet.m_indexRecordOffset">
            <summary>
            Private storage for IndexRecordOffset property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.IndexRecordOffset">
            <summary>
            Sets/gets the offset to the INDEX record's rgibRw array of DBCELL offsets.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.DDSheet._fixedMergedCells">
            <summary>
            Store the fixed MergedCells records. It will be set in PreExport.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.FixedMergedCells">
            <summary>
            Gets the fixed MergedCells records. It will be set in PreExport.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheet.Selected">
            <summary>
            Determines if this sheet is the selected sheet.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetCellValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the specified cell's value to the specified numeric value.
            </summary>
            <param name="iRow">The zero based row number of the cell.</param>
            <param name="iColumn">The zero based column number of the cell.</param>
            <param name="dblValue">The numeric value to set the cell to.</param>
            <remarks>Any existing formatting of the cell will be preserved.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetCellValue(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the specified cell's value to the specified string value.
            </summary>
            <param name="iRow">The zero based row number of the cell.</param>
            <param name="iColumn">The zero based column number of the cell.</param>
            <param name="sValue">The string value to set the cell to.</param>
            <remarks>Any existing formatting of the cell will be preserved.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetCellValue(System.Int32,System.Int32,GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues)">
            <summary>
            Sets the specified cell's value to the specified BiffCellBoolErrValues value.
            </summary>
            <param name="iRow">The zero based row number of the cell.</param>
            <param name="iColumn">The zero based column number of the cell.</param>
            <param name="sValue">The BiffCellBoolErrValues value to set the cell to.</param>
            <remarks>Any existing formatting of the cell will be preserved.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetCellValueBlank(System.Int32,System.Int32)">
            <summary>
            Sets the specified cell's value to a blank/empty value.
            </summary>
            <param name="iRow">The zero based row number of the cell.</param>
            <param name="iColumn">The zero based column number of the cell.</param>
            <remarks>Any existing formatting of the cell will be preserved.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetBiffCell(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the BiffCellBase derived class for the specified row and column.  Will create a new cell if one does not exists and caller specifies to do so (by setting bCreateIfNeeded = true).
            </summary>
            <param name="iRow">
            The zero based row number to retrive the cell for.
            </param>
            <param name="iColumn">
            The zero based column number to retrieve the cell for.
            </param>
            <param name="bCreateIfNeeded">
            If true, and a cell does not exist for the specified row and column, a new cell will be created and returned (BiffCellBlank).
            If false, and a cell does not exist for the specified row and column, null will be returned.  This can be used to check for the existance of a cell.
            </param>
            <returns>
            A BiffCellBase derived class representing the specified row and column, or null.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.RemoveBiffCell(System.Int32,System.Int32)">
            <summary>
            Removes a BiffCell from the sheet.
            </summary>
            <param name="row">
            The zero based row number to retrive the cell for.
            </param>
            <param name="column">
            The zero based column number to retrieve the cell for.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.Cell(System.Int32,System.Int32)">
            <summary>
            Returns the DDCell object for the specified row and column.
            </summary>
            <param name="iRow">The zero based row number of the cell.</param>
            <param name="iColumn">The zero based column number of the cell.</param>
            <returns>The DDCell object for the specified row and column.</returns>
            <remarks>
            This function could throw an ArgumentOutOfRangeException if the specified iRow or iColumn is not in the valid range.
            The minimum value for both the iRow and iColumn argument is 0.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.Cells(GrapeCity.SpreadBuilder.Cells.DDCell,GrapeCity.SpreadBuilder.Cells.DDCell)">
            <summary>
            Returns the DDCells between the specified DDCells.
            </summary>
            <param name="start">The start DDCell.</param>
            <param name="end">The end DDCell.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.Columns(System.Int16)">
            <summary>
            Returns the DDColumn object representing the specified column.
            </summary>
            <param name="column">The zero based non-negative column index.</param>
            <returns>
            The DDColumn object representing the specified column.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.FixMergedCells">
            <summary>
            1. Remove conflicting(overlapped) merged cells record.
            2. Visits each cell in a merged area an clears it to a BLANK cell, and then sets it's XF index to be the same as the upper left cell in the same merged area.
            </summary>
            <remarks>
            This must be done before writing out a sheet's rows &amp; cell records.
            If you don't do this step Borders will only apply to the upperleft cell in the merge area (actually all style only applies to that cell, but Borders are very noticable. Other style info is easily overlooked).
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetXFProp(System.Int32,System.Int32,GrapeCity.SpreadBuilder.Style.XFPropID,System.Int16)">
            <summary>
            Sets Horzontal Alignment, Vertical Alignment, or TextRotation on the specified Cell.
            </summary>
            <param name="row">The row of the cell (zero based).</param>
            <param name="col">The column of the cell (zero based).</param>
            <param name="propid">
            Should be XFPropID.ALIGNMENT, XFPropID.VERTALIGNMENT, or XFPropID.TEXTROTATION.
            </param>
            <param name="val">
            The value you want set to the specified property.
            </param>
            <remarks>
            It will eventually either find an existing, or create a new XF record for the cell 
            matching the combination of the cell's existing XF settings and the newly specified 
            setting.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetXFProp(System.Int32,System.Int32,GrapeCity.SpreadBuilder.Style.XFPropID)">
            <summary>
            Returns Horzontal Alignment, Vertical Alignment, or TextRotation on the specified Cell.
            </summary>
            <param name="row">The row of the cell (zero based).</param>
            <param name="col">The column of the cell (zero based).</param>
            <param name="propid">
            Should be XFPropID.ALIGNMENT, XFPropID.VERTALIGNMENT, or XFPropID.TEXTROTATION.
            </param>
            <returns>
            The value of the specified property for the specified cell.
            </returns>
            <remarks>
            GetXFProp will eventually find the cell's XF record and return the XF record's value for 
            the specified property.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetXFIndex(System.Int32,System.Int32)">
            <summary>
            Returns either the specified Cell's XF index or, if the cell does not exist, the default XF index for a cell.
            </summary>
            <param name="iRow"></param>
            <param name="iCol"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetCellXF(System.Int32,System.Int32)">
            <summary>
            Returns the XFRecord8 for the specified cell.  
            If the cell does not exist then the defualt cell XF record will be returned.
            </summary>
            <param name="iRow"></param>
            <param name="iCol"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetBorderColor(System.Int32,System.Int32,GrapeCity.SpreadBuilder.Style.COLORREF,GrapeCity.SpreadBuilder.WhichBorder)">
            <summary>
            Obtains the XF record for the specified cell.  Gets the current color of the specified 
            border, if it is the same as the specified color, the function returns immediately.  
            Otherwise, the color is retrieved from the custom palette, or added to it if it doesn't 
            exist, and the index of the color is saved in the XF.  The XF is mappped into 
            XFRecords, and the specified cell's XFIndex is reset.
            </summary>
            <param name="row">The row of the specified cell.</param>
            <param name="col">The col of the specified cell.</param>
            <param name="theBorder">Which border you want the color for.</param>
            <remarks>
            In debug mode this function calls GetBorderColor to double check that the proper color was set, and is returned.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetBorderColor(System.Int32,System.Int32,GrapeCity.SpreadBuilder.WhichBorder)">
            <summary>
            Retrieves the XF for the specified cell, obtains the color for the specified border (as a COLORREF) and returns it.
            </summary>
            <param name="row">The row of the specified cell.</param>
            <param name="col">The col of the specified cell.</param>
            <param name="theBorder">Which border you want the color for.</param>
            <returns>
            The COLORREF representing the color of the specified border.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetBorderDiagonalEnum(System.Int32,System.Int32,GrapeCity.SpreadBuilder.Style.BorderDiagonalStyles)">
            <summary>
            Sets the style of the diaganol border line for a cell.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="val"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetBorderDiagonalEnum(System.Int32,System.Int32)">
            <summary>
            Returns the style of the diaganol border line for a cell.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFillColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Used by DDCell.FillColor.set.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="netColor"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFillColor(System.Int32,System.Int32)">
            <summary>
            Used by DDCell.FillColor.get.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetTextColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Used by DDCell.ForeColor.set.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="netColor"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetTextColor(System.Int32,System.Int32)">
            <summary>
            Used by DDCell.ForeColor.get.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns>
            The ForeColor/TextColor for the specified cell.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFontName(System.Int32,System.Int32,System.String)">
            <summary>
            Used by DDCell to set it's font name.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="val"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFontName(System.Int32,System.Int32)">
            <summary>
            Used by DDCell to get it's font name.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFontBold(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Used by DDCell for FontBold.set property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="flag"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFontBold(System.Int32,System.Int32)">
            <summary>
            Used by DDCell for FontBold.get property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFontItalic(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Used by DDCell.FontItalic.set property to set it's XF record's font to italic.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="flag"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFontItalic(System.Int32,System.Int32)">
            <summary>
            Returns true if the font for the specified cell's XF record is italic.  False if the font is not italic.
            Ultimately used by DDCell for it's FontItalic.get property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns>
            True if the font for the specified cell's XF record is italic.  False if the font is not italic.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFontSize(System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Sets the font size on the cell at the specified row and column.  Adjusts the row height to 
            a larger value if specified.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="val"></param>
            <param name="adjustRowHeight"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFontSize(System.Int32,System.Int32)">
            <summary>
            Gets the size of the font for the XF record of the cell at the specified row and column.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFontUnderlineStyle(System.Int32,System.Int32,GrapeCity.SpreadBuilder.Style.FontUnderlineStyles)">
            <summary>
            Sets the font's underline style for the cell at the specified location to the specified underline style value.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="style"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFontUnderlineStyle(System.Int32,System.Int32)">
            <summary>
            Returns the font's underline style for the XF record of the cell at the specified location.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFormat(System.Int32,System.Int32,System.String)">
            <summary>
            Adds the specified numberformat string (sFormat) to the ExcelFormats collection and associates that format with the specified cell's XF record.
            Used by DDCell for it's NumberFormat.set property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="sFormat"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFormat(System.Int32,System.Int32)">
            <summary>
            Used by DDCell for it's NumberFormat.get property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetWrapText(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Obtains the XF for the cell at the specified row and column.  Then sets the bWrap member of the XF.
            Used by DDCell's WrapText.set property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="val"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetDimensions">
            <summary>
            Get dimensions of the sheet.
            </summary>
            <returns>Struct DDDimensions contains index of first and last row/column of the sheet.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetHyperlink(System.Int32,System.Int32,System.String)">
            <summary>
            Used by DDCell.HyperLink.set property
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="sLink"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetHyperlink(System.Int32,System.Int32)">
            <summary>
            Returns the hyperlink string if found.  Null if not found.  
            Sets the m_ihyperlink value ot the index of the hyperlink within m_hyperlinkStrings and the index for the row in m_hyperlinkrow &amp; the col in m_hyperlinkcol.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetWrapText(System.Int32,System.Int32)">
            <summary>
            Gets the XF for the cell at the specified row and column, and returns the XF.bWrap value.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.AddHorizontalPageBreak(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Adds a horizontal / row page break.
            </summary>
            <param name="row">The row of the break (1 based).</param>
            <param name="columnstart">The starting column for the break (1 based).</param>
            <param name="columnend">The ending column for the break (1 based).</param>
            <remarks>
            No two pagebreaks may overlap.  
            The break occurs after the row or column.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.AddVerticalPageBreak(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Adds a vertical / column page break.
            </summary>
            <param name="col">The column of the break (1 based).</param>
            <param name="rowstart">The starting row for the break (1 based).</param>
            <param name="rowend">The ending row for the break (1 based).</param>
            <remarks>
            No two pagebreaks may overlap.  
            The break occurs after the row or column.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.Clear">
            <summary>
            Deletes all properties and content, effectively creating a blank sheet."
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.ResetWindow2">
            <summary>
            Resets the m_window2 structure to its default state.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.CleanupImages">
            <summary>
            Removes all images and associated resources.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.CleanupLines">
            <summary>
            Removes all lines and any associated resources.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetRowHeight(System.Int32,System.Int16)">
            <summary>
            Sets the row height on the BiffRow object that represents the specified row number.
            Used by DDRow.Height.set property to set the row height.
            </summary>
            <param name="row">The row number to set the hieght on (zero based).</param>
            <param name="height">The height to set the row to in 1/20th of a point.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetRowHeight(System.Int32)">
            <summary>
            Returns the height of the specified row if the row exists.  If the row does not exist, the default row height for excel is returned.
            </summary>
            <param name="row">
            The row that the height will be returned for.
            </param>
            <returns>
            The height of the specified row (units?).
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetRowAutoSize(System.Int32,System.Boolean)">
            <summary>
            Sets the AutoSize property for the row.  If the value is false, the row height can 
            deviate from the font height.  If the value is true, the height of the row will be 
            directly based on the size of the text in the row.
            </summary>
            <param name="row"></param>
            <param name="flag"></param>
            <remarks>
            This function sets the fUnsynced bitflag for the Biff Row record.  This flag allows the row height to deviate from the font height.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetRowAutoSize(System.Int32)">
            <summary>
            Returns the weather the BiffRow for the specified row has it's ROWFLAG_UNSYNCH set.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.Rows(System.Int32)">
            <summary>
            Returns a DDRow instance for the specified row number.
            </summary>
            <param name="iRow">The row number the returned DDRow will represent (zero based).</param>
            <returns>A DDRow instance that represents the specified row number.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.AddImage(System.Drawing.Image,GrapeCity.SpreadBuilder.Imaging.ImageInfo,System.Drawing.Color,System.Drawing.Color,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.String)">
            <summary>
            Adds the specified image (currently stored as PNG format) to this sheet with the specified location, and settings.
            
            </summary>
            <param name="img">
            This is an image object that represents the image to be placed on the sheet.
            </param>
            <param name="imageOptions"></param>
            <param name="lineColor"></param>
            <param name="backColor"></param>
            <param name="colL">
            Column containing the upper-left corner of the object's bounding rectangle.
            </param>
            <param name="dxL">
            X (horizontal) position of the upper-left corner of the object's bounding rectangle, 
            relative to the left side of the underlying cell (specified in colL), expressed as 1/1024th of the cell's 
            width.
            </param>
            <param name="rwT">
            Row containing the upper-left corner of the object's bounding rectangle.
            </param>
            <param name="dyT">
            Y (vertical) position of the upper-left corner of the object's bounding rectangle, 
            relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.
            </param>
            <param name="colR">
            Column containing the lower-right corner of the object's bounding rectangle.
            </param>
            <param name="dxR">
            X (horizontal) position of the lower-right corner of the object's bounding rectangle, relative to the left side of the underlying cell, expressed as 1/1024th of the cell's width.
            </param>
            <param name="rwB">
            Row containing the lower-right corner of the object's bounding rectangle.
            </param>
            <param name="dyB">
            Y (vertical) position of the lower-right corner of the object's bounding rectangle, relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.
            </param>
            <param name="hyperlink">
            If you want the image to have a clickable hyperlink specify the URL here.  Otherwide use an empty string.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.AddImage(System.Drawing.Image,GrapeCity.SpreadBuilder.Imaging.ImageInfo,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int16,System.Int32,System.Int16,System.Int32,System.Int16,System.Int32,System.Int16,System.String)">
            <summary>
            Adds the specified image (currently stored as PNG format) to this sheet with the specified location, and settings.
            
            </summary>
            <param name="img">
            This is an image object that represents the image to be placed on the sheet.
            </param>
            <param name="imageOptions"></param>
            <param name="lineColor"></param>
            <param name="backColor"></param>
            <param name="columnLeft">
            Column containing the upper-left corner of the object's bounding rectangle.
            </param>
            <param name="dxL">
            X (horizontal) position of the upper-left corner of the object's bounding rectangle, 
            relative to the left side of the underlying cell (specified in colL), expressed as 1/1024th of the cell's 
            width.
            </param>
            <param name="rowTop">
            Row containing the upper-left corner of the object's bounding rectangle.
            </param>
            <param name="dyT">
            Y (vertical) position of the upper-left corner of the object's bounding rectangle, 
            relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.
            </param>
            <param name="columnRight">
            Column containing the lower-right corner of the object's bounding rectangle.
            </param>
            <param name="dxR">
            X (horizontal) position of the lower-right corner of the object's bounding rectangle, relative to the left side of the underlying cell, expressed as 1/1024th of the cell's width.
            </param>
            <param name="rowBottom">
            Row containing the lower-right corner of the object's bounding rectangle.
            </param>
            <param name="dyB">
            Y (vertical) position of the lower-right corner of the object's bounding rectangle, relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.
            </param>
            <param name="hyperlink">
            If you want the image to have a clickable hyperlink specify the URL here.  Otherwide use an empty string.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.AddLine(GrapeCity.SpreadBuilder.Imaging.LineInfo)">
            <summary>
            Adds one line with specified coordinates and properties.
            </summary>
            <param name="li">A LineInfo object with it's members set to the proper line configuration values.  See the LineInfo class for more information.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.CountMSOObj">
            <summary>
            Returns the count of the objects that must be written in Escher Records (lines &amp; metafiles).
            </summary>
            <returns>
            The count of the objects that must be written in Escher Records (lines &amp; metafiles).
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.pointstoBiff7lineweight(System.Int32)">
            <summary>
            Used by DDSheet.AddLine(..).
            </summary>
            <param name="points"></param>
            <returns>
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.MergeCells(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Used by DDCell.Merge.  Gets the specified cell's XF record, set's it up to indciate it is merged, and then sets that XF record to all cells that are to be merged together.
            </summary>
            <param name="row">
            The row of the Upper Left cell of the merged area.
            </param>
            <param name="column">
            The column of the Upper Left cell of the merged area.
            </param>
            <param name="numberOfColumnsToMerge">
            The number of columns accross to be merged. 1 means only the next cell will be merged.
            </param>
            <param name="numberOfRowsToMerge">
            The number of rows down to be merged. 1 means only the next cell (in the specified direction) will be merged.
            </param>
            <remarks>Do not merge a cell more than once.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.IsMerged(System.Int32,System.Int32)">
            <summary>
            Returns true if the specified cell's XFRecord has it's fMergeCell member is true.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.UnMergeCells(System.Int32,System.Int32)">
            <summary>
            Removes the MergeArea from the MergedAreas record for this sheet.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.SetFontStrikeOut(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Used by DDCell for FontStrikeOut.set property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="flag"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.GetFontStrikeOut(System.Int32,System.Int32)">
            <summary>
            Used by DDCell for FontStrikeOut.get property.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheet.VerifyName(System.String)">
            <summary>
            Verify whether sheet name is valid.(The rule is found when setting sheet name in Excel 2007/2003 app.)
            </summary>
            <param name="name">the sheet name</param>
            <returns>A bool indicates whether sheet name is valid.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffDimensions8">
            <summary>
            DIMENSIONS: Cell Table Size (0x200):
            The DIMENSIONS record contains the minimum and maximum bounds of the sheet. It provides a 
            concise indication of the sheet size.	Note that both the rwMac and colMac fields are 
            greater by 1 than the actual last row and column.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffDimensions8.firstRow">
            <summary>
            (rwMic) First defined row on the sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffDimensions8.lastRowPlus1">
            <summary>
            (rwMac) Last defined row on the sheet plus 1.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffDimensions8.firstCol">
            <summary>
            (colMic) First defined column on the sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffDimensions8.lastColPlus1">
            <summary>
            (colMac) Last defined column on the sheet plus 1.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffDimensions8.reserved">
            <summary>
            (Reserved) Reserved; must be 0 (zero).
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDDimensions">
            <summary>
            DDDimensions contains index of first and last row/column of the sheet.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Hyperlink">
            <summary>
            For Open Xml export
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffRowTable">
            <summary>
            Collection of BiffRow objects that internally uses a hashtable.  Allows for easy 
            enumeration of the *existing* BiffRows (as if a cell does not exist in a row, then we 
            don't have a BiffRow representing the cell).  Basically just a wrapper around a Hashtable 
            that returns BiffRow objects.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffRowTable.GetFirstRow">
            <summary>
            Returns the lowest rownumber defined on this sheet.  This needed for writing out BIFF 
            INDEX records where it requries the first row and last row fields.
            </summary>
            <returns>
            Positive int: Value indicates the row number of the lowest row number in the sheet.
            Negative int: Indicates there are no defined rows in this sheet.
            </returns>
            <remarks>
            If the returned value is postive you can pass it to the BiffRowTable indexer to get the actual BiffRow.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffRowTable.GetLastRow">
            <summary>
            Returns the highest rownumber defined on this sheet. This needed for writing out BIFF 
            INDEX records where it requries the first row and last row fields.
            </summary>
            <returns>
            Positive int: Value indicates the row number of the highest row number in the sheet.
            Negative int: Indicates there are no defined rows in this sheet.
            </returns>
            <remarks>
            If the returned value is postive you can pass it to the BiffRowTable indexer to get the actual BiffRow.
            </remarks>		
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffRowTable.GetFirstCol">
            <summary>
            Get the index of first column which has content.
            </summary>
            <returns>Get the index of first column which has content.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffRowTable.GetLastCol">
            <summary>
            Get the index of last column which has content.
            </summary>
            <returns>Get the index of last column which has content.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffRowTable.GetEnumerator">
            <summary>
            Provies foreach support.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.BiffRowTable.Item(System.Int32,System.Boolean)">
            <summary>
            Returns the BiffRow representing the specified row.  Creates a new row if necessary, 
            and specified to do so. And the new row will be inserted by ascending.
            </summary>
            <param name="iRow">The zero based row number you want the BiffRow for.</param>
            <param name="bCreateIfNotExists">
            If true, and a BiffRow does not yet exist for the specified row, a new BiffRow will be created for 
            the specified row, stored and returned.  The newly created BiffRow will be stored in the collection, 
            before returning it so that the next request for this row will not create a new row, but return 
            the existing one.  If false and no BiffRow exists for the specified row null will be returned.
            </param>
            <returns>The specified BiffRow, or null (see bCreateIfNeeded documentation above).</returns>
            <remarks>This replaces GetBiffRow(...)</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.BiffRowTable.Count">
            <summary>
            Returns the number of rows stored in this sheet.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Window2_BIFF8">
            <summary>
            Represents the BIFF8 WINDOW2 record.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Window2Flags">
            <summary>
            Flags/masks for the Window2_BIFF8 grbit field.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Window2Flags.IsSelectedInverse">
            <summary>
            Inverse/ bitwise ! (not) of ISSELECTED.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Window2Flags.IsPagedInverse">
            <summary>
            Inverse/ bitwise ! (not) of ISPAGED.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.WhichBorder">
            <summary>
            This is just used internally for DDSheet.Set/Get-BorderColor to determine which border to get/set color for.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDSheets">
            <summary>
            A collection of DDSheet objects.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheets.OwnerBook">
            <summary>
            Returns the parent/owner workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.#ctor(GrapeCity.SpreadBuilder.Workbook)">
            <summary>
            Internal constructor for DDSheets.
            </summary>
            <param name="ownerBook">
            The parent Workbook creating this sheets collection.  
            This workbook is used to access global book information such as XF records and the color palette.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.GetEnumerator">
            <summary>
            Returns an IEnumerator object for this collection allowing you to enumerate the DDSheet objects 
            contained in this collection.  
            Allows use of foreach statements with the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheets.Count">
            <summary>
            Gets the number of elements contained in this DDSheets collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheets.Item(System.Int32)">
            <summary>
            Gets the DDSheet at the specified index. 
            In C#, this property is an indexer for the DDSheets class.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheets.Item(System.String)">
            <summary>
            Gets the DDSheet with the specified name
            In C#, this property is an indexer for the DDSheets class.
            If a DDSheet with the specified name does not exist in the collection, null will be returned.
            </summary>
            <remarks>
            The sheetName argument is compared case insensitively.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.AddNew">
            <summary>
            Adds a new blank DDSheet object to the collection and returns a reference to it.
            </summary>
            <returns>
            The newly added DDSheet object.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.GetUniqueSheetName">
            <summary>
            Returns a new sheet name that is unique within this collection.
            </summary>
            <returns>
            The new sheet name.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.Add(GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Adds the specified DDSheet to the end of this collection.
            </summary>
            <param name="sheet">
            The DDSheet to add to the collection.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.UpdateKey(System.String,System.String)">
            <summary>
            Updates the key of the sheet in the dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.RemoveAt(System.Int32)">
            <summary>
            Removes the DDSheet at the specified index from this collection.
            </summary>
            <param name="iIndex">
            The zero based index of the DDSheet to be removed.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.Move(System.String,System.Int16)">
            <summary>
            Moves the sheet with the specfied name to the specified position.
            </summary>
            <param name="sName">The value of the DDSheet's Name property that you want to move.</param>
            <param name="newPosition">
            The new position you want to move the sheet to.
            If the new position is less than zero, the sheet will be moved to the begining of the collection (0).
            If the new position is greater than the upper bound of this collection, the sheet will be moved to the end of the collection.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.Move(System.Int16,System.Int16)">
            <summary>
            Moves the sheet at the specified position to the specified newposition.
            </summary>
            <param name="oldPosition">The current position (index) of the sheet you want to move.</param>
            <param name="newPosition">
            The new position you want to move the sheet to.
            If the new position is less than zero, the sheet will be moved to the begining of the collection (0).
            If the new position is greater than the upper bound of this collection, the sheet will be moved to the end of the collection.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.Clear">
            <summary>
            Removes all the DDSheet objects contained in this collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.Select(System.String)">
            <summary>
            Selects the sheet with the specified name, and unselects all other sheets.
            </summary>
            <param name="sheetName">
            The value of the Name property of the DDSheet object you want to be selected.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.Select(System.Int32)">
            <summary>
            Selects the sheet at the specified index, and unselects all other sheets.
            </summary>
            <param name="sheetIndex">
            The index to the sheet of which you want the tab to be selected.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.GetAndInitSelectedIndexes">
            <summary>
            Returns the selected DDSheets' indexes.
            </summary>
            <returns>An IList generics indicates the selected DDSheets' indexes.</returns>
            <remarks>
            If no worksheets are selected, will set the first worksheet be selected.
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDSheets.DDSheetsEnumerator">
            <summary>
            An Enumerator for the DDSheets collection.  Allows use of foreach statements.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.DDSheetsEnumerator.#ctor(GrapeCity.SpreadBuilder.DDSheets)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.SpreadBuilder.DDSheets.DDSheetsEnumerator"/> class.
            </summary>
            <param name="theCollection">The DDSheets collection.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.DDSheetsEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheets.DDSheetsEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.DDSheets.DDSheetsEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.ExcelBuiltInStyles">
            <summary>
            Collection for Excel's STYLE (293h) records.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ExcelBuiltInStyles.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.ExcelBuiltInStyles.Styles">
            <summary>
            Gets inner styles
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ExcelBuiltInStyles.AddRec(GrapeCity.SpreadBuilder.BiffStyle)">
            <summary>
            Adds the specified BiffStyle object to the collection.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ExcelBuiltInStyles.Clear">
            <summary>
            Removes all conatined BiffStyle records.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffStyle">
            <summary>
            Represents the BIFF STYLE (293h) record.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BuiltInStyleNo">
            <summary>
            Emun for istyBuiltIn of Style Information record.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.SpreadBuilderException">
            <summary>
            A general exception thrown for application errors in the GrapeCity.SpreadBuilder assembly.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadBuilderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SpreadBuilderException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadBuilderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SpreadBuilderException class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadBuilderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SpreadBuilderException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is necessary to properly support ASP.NET and .net remoting channels.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadBuilderException.#ctor">
            <summary>
            Initializes a new instance of the System.ApplicationException class.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.InvalidPasswordException">
            <summary>
            Thrown when the password is invalid in a specific excel format.(For example: the length of password is out of range.)
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.InvalidPasswordException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidPasswordException class with specific error message.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.InvalidPasswordException.#ctor">
            <summary>
            Initializes a new instance of the InvalidPasswordException class with default error message.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.InvalidPasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidPasswordException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is necessary to properly support ASP.NET and .net remoting channels.</remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.ColumnCountOutOfRangeException">
            <summary>
            Thrown when the columns' count is out of range in a specific excel format.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ColumnCountOutOfRangeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ColumnCountOutOfRangeException class with specific error message.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ColumnCountOutOfRangeException.#ctor">
            <summary>
            Initializes a new instance of the ColumnCountOutOfRangeException class with default error message.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.ColumnCountOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ColumnCountOutOfRangeException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is necessary to properly support ASP.NET and .net remoting channels.</remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.RowCountOutOfRangeException">
            <summary>
            Thrown when the rows' count is out of range in a specific excel format.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.RowCountOutOfRangeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RowCountOutOfRangeException class with specific error message.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.RowCountOutOfRangeException.#ctor">
            <summary>
            Initializes a new instance of the RowCountOutOfRangeException class with default error message.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.RowCountOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the RowCountOutOfRangeException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is necessary to properly support ASP.NET and .net remoting channels.</remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.NoDDSheetsException">
            <summary>
            Thrown when an operation is requested that requires at least one sheet in the Sheets collection (for example Saving the workbook).
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.NoDDSheetsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.SpreadBuilder.NoDDSheetsException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.NoDDSheetsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NoDDSheetsException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is necessary to properly support ASP.NET and .net remoting channels.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.NoDDSheetsException.Message">
            <summary>
            Returns a message that describes the error.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.VersionNotImplementedException">
            <summary>
            Indicates that a feature or features were not implemented for a particular version of the Exce./BIFF file format.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.VersionNotImplementedException.#ctor(System.String)">
            <summary>
            Initializes an instance of the VersionNotImplementedException class with the specified message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.VersionNotImplementedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an instance of the VersionNotImplementedException with the specified message and inner exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.VersionNotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the VersionNotImplementedException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is necessary to properly support ASP.NET and .net remoting channels.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.VersionNotImplementedException.Message">
            <summary>
            Returns a message that describes the error.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.CompressionException">
            <summary>
            Indicates that an error occured in the compression library most likely related to images.  
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.CompressionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.SpreadBuilder.CompressionException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.CompressionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.SpreadBuilder.CompressionException"/> class.
            </summary>
            <param name="sMessage">The exception message.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.CompressionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.SpreadBuilder.CompressionException"/> class.
            </summary>
            <param name="sMessage">The exception message.</param>
            <param name="oInnerException">The inner exception.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.CompressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CompressionException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>This constructor is necessary to properly support ASP.NET and .net remoting channels.</remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.DDSheetNameAlreadyExistsException">
            <exception cref="T:System.ArgumentException">
            Thrown when an attempt is made to add a sheet, or change a sheet's name, when another sheet in the DDSheets 
            collection with that name already exists.
            </exception>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.DDSheetNameAlreadyExistsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.SpreadBuilder.DDSheetNameAlreadyExistsException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.InvalidDDSheetNameException">
            <summary>
             Thrown when change a sheet's name to an invalid value. The name cannot be empty, cannot exceed 31 characters and cannot contain any of following characters: : \ / ? * [ or ]
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.InvalidDDSheetNameException.#ctor(System.String)">
            <summary>
            Create a InvalidDDSheetNameException instance with parameter name.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.InvalidDDSheetNameException.#ctor">
            <summary>
            Create a InvalidDDSheetNameException instance.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.Biff7PictureRecord">
            <summary>
            This class represents the binary representation of an OBJ record for BIFF7 Pictures.  
            The picture data will be saved as WMF or BMP depending on what is programmatically determined to be more appropriate.
            Essentially it will be stored as an OBJ record with some additional "subrecord" fields specific to pictures in BIFF7.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.Biff7PictureRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.SpreadBuilder.Imaging.Biff7PictureRecord"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.CMapCRC">
            <summary>
            Pass a CRC, get an index to a OBJ_metafile
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.CMapCRC.AddToMap(GrapeCity.SpreadBuilder.Imaging.OBJImage)">
            <summary>
            Calls GetCRC on the specified OBJ_png object, then add that CRC if not already in this classes' list of CRC's.
            </summary>
            <param name="pm">
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.CMapCRC.CompareBytes(System.Byte[],System.Byte[])">
            <summary>
            Compares the elemnts of two byte arrays by sequentially enumerating the two arrays and comparing each element.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>
            True if both arrays have the same length and have the same byte value at the same index.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.CMapCRC.map(System.Byte[])">
            <summary>
            Returns the index the specified CRC value is found at, or -1 if not found.
            </summary>
            <param name="pb">The byte array containing the CRC value.</param>
            <returns>The index the specified CRC value is found at, or -1 if not found.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.CMapCRC.Clear">
            <summary>
            Clears all contained CRC values, and OBJ_meta references.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.CMapCRC.GetSize">
            <summary>
            Returns the count of CRC values contained.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.CMapCRC.GetCRCAt(System.Int32)">
            <summary>
            Gets the CRC at the index specified in cnt.
            </summary>
            <param name="cnt">The index to get the CRC at.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.CMapCRC.GetImageAt(System.Int32)">
            <summary>
            Returns the OBJImage at the specified index.
            </summary>
            <param name="cnt"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.EscherGlobals.map_iqu_to_fFlipH(System.Byte)">
            <summary>
            Maps the OBJ record's iqu value to the Escher "msofbtSp" record's fFlipH value.
            </summary>
            <param name="iqu"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.EscherGlobals.map_iqu_to_fFlipV(System.Byte)">
            <summary>
            Maps the OBJ record's iqu value to the Escher "msofbtSp" record's fFlipV value.
            </summary>
            <param name="iqu"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.EscherGlobals.transform_fmove_tobiff8(GrapeCity.SpreadBuilder.Imaging.OBJImage)">
            <summary>
            BIFF 8 has custom value for move and size with cells. 
            This function transforms the bitmapped pre-8 value to a biff8 value.
            </summary>
            <param name="pmeta"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.EscherGlobals.transform_fmove_tobiff8(GrapeCity.SpreadBuilder.Imaging.OBJ_line)">
            <summary>
            BIFF 8 has custom value for move and size with cells. 
            This function transforms the bitmapped pre-8 value to a biff8 value.
            </summary>
            <param name="pline"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.OBJ_line">
            <summary>
            Represents a line in for BIFF5, BIFF7, and BIFF8.
            </summary>
            <remarks>
            To get BIFF8 formatted data (Escher) call make_msofbtOPT followed by a call to get_msofbtOPT.
            To get BIFF5 and BIFF7 formatted data call this object's write_to_stream method.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_line.m_pmsofbtOPT">
            <summary>
            Contains the BIFF8 data for this OBJ_line (accessble by calling 
            make_msofbtOPT followed by get_msofbtOPT).  
            </summary>
            <remarks>
            "MS Office 97 Drawing File Format" (a.k.a "Escher") documentation refers to this data's 
            output structre as "Shape Properties" and an "msofbtOPT structure".  First element in the 
            output is a MSOFBH (common header) struct, followed by several FOPTE structures.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.OBJ_line.#ctor">
            <summary>
            Initializes a new instance of OBJ_line.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.OBJ_line.MsofbtOPT">
            <summary>
            Gets and sets a byte array containing all record data.
            You must call MakeMsofbtOPT() before calling this method !
            Returns a byte array containing the binary data of the msofbtOPT struct for the line.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.OBJ_line.MsofbtOPTSize">
            <summary>
            Gets and sets m_lmsofbtOPT fields.
            Returns the size in bytes of the record data that will be returned when calling 
            get MsofbtOPT (except this returned value does not include the single MSOFBH record 
            (MSOFBH size is 8 bytes) that will be included when calling get_msofbtOPT).;
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:GrapeCity.SpreadBuilder.Imaging.OBJImage" -->
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.Top">
            <summary>
            The direction from cell's top to image's top. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.Left">
            <summary>
            The direction from cell's left to image's left. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.CropFromTop">
            <summary>
            A percent indicate the times of top crop part occupying the total image height.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.CropFromLeft">
            <summary>
            A percent indicate the times of left crop part occupying the total image width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.CropFromRight">
            <summary>
            A percent indicate the times of right crop part occupying the total image width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.CropFromBottom">
            <summary>
            A percent indicate the times of bottom crop part occupying the total image height.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.LineWidth">
            <summary>
            The line width of image outline. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.DisplayWidth">
            <summary>
            The display width of image object in excel. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.DisplayHeight">
            <summary>
            The display height of image object in excel. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.AnchorType">
            <summary>
            The type of the anchor for the image in excel. 
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.m_EMFextents">
            <summary>
            Contains the extent/bounds of the image, extracted from Image.GetBounds(..).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.OBJImage.ImageType">
            <summary>
            Returns the type of Image.  Could be EMF or PNG in BIFF8.  Biff7 looks like it will be WMF or BMP.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.OBJImage.#ctor(System.Drawing.Image,System.Byte[],System.Drawing.Size,System.Drawing.SizeF,GrapeCity.SpreadBuilder.Imaging.MSOBLIPTYPE)">
            <summary>
            Initializes an instance of OBJImage class with default property values based on excel's own output.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJImage.m_EMFextentsfilled">
            <summary>
            Returns true if hte extents/bounds of the image have been calculated.
            </summary>
            <remarks>
            This is essentially always true now, because we extract extents in the OBJ_meta constructor.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.OBJImage.GetCRC">
            <summary>
            Calcultes and returns this meta's 16 byte Adler CRC value and copies the data to 
            (pCRC), and to the end of pmf (the last 16 bytes of pmf will be the crc).
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <remarks>
            From MSDN Library - July 1999 topic "BStore Container msofbtBstoreContainer":
            Each BSE contains a 16-byte checksum that is used to quickly compare a BLIP with other 
            BLIPs in the store. Any algorithm could be used for this checksum. Escher uses the RSA 
            Data Security, Inc. MD4 Message-Digest Algorithm for the checksums of its BLIP types.
            
            We use Adler instead, but excel doesn't care so long as those 16 bytes are the same.  It's just a double check.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.OBJImage.MsofbtOPT">
            <summary>
            Gets and sets the array of to record data.  Must call MakeMsofbtOPT before calling this method.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.OBJImage.MsofbtOPTSize">
            <summary>
            Gets size of msofbtOPT recorddata.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.OBJImage.OriginalImageObject">
            <summary>
            Gets the original image object.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.OBJmetafiletail">
            <summary>
            Used by OBJ_meta for it's tail member.
            22 byte strcuture.
            </summary>
            <remarks>
            This structure appears to be part of the BIFF OBJ structure for Picture objects, 
            begining at offset 22h (26h for BIFF 5).
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.OBJ_MFtail_grbit">
            <summary>
            2 byte structure used by OBJ_metafiletail.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.OBJ_MFtail_grbit.Reserved2">
            <summary>
            Gets reserved2 field.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.OBJhead">
            <summary>
            Used by OBJ_line, OBJ_png, and OBJ_meta.
            </summary>
            <remarks>
            This appears to be based on the BIFF5 and BIFF7 documentation for the BIFF OBJ record.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.cObj">
            <summary>
            Number of objects (1 based, 4 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.OT">
            <summary>
            Object type (2 bytes)
            1 is line, 2 is rect, 3 is oval, 8 is picture, 9 is polygon.
            Up to 9 is common in all versions.  
            Up to 20 is defined in BIFF 8.  
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.id">
            <summary>
            Object ID number (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.grbit">
            <summary>
            Flags, (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.colL">
            <summary>
            Column containing upper left (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.dxL">
            <summary>
            X (horz) position of upper left corner, relative to the the left side of the underlying 
            cell, expressed as 1/1024th of the cell's width. (2 bytes)
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.rwT">
            <summary>
            Row containing upper-left corner of obj's bounding rect (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.dyT">
            <summary>
            Vert position like dxL, relative to top of underlying cell in 1/1024th's of the cells height (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.colR">
            <summary>
            col contatining lower right of OBR (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.dxR">
            <summary>
            X pos of lower right OBR, relative to left side of UC (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.rwB">
            <summary>
            row contatining lower right of OBR (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.dyB">
            <summary>
            Y pos of the lower right OBR relative to the top of UC in 1/1024th's of the underlying cells height (2 bytes).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJhead.cbMacro">
            <summary>
            Length of the FMLA structure that stores the definition of the attached macro (2 bytes).
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit">
            <summary>
            Flags for OBJ_line.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fSel">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fAutoSize">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fMove">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fLocked">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fGrouped">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fHidden">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fVisible">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJ_grbit.fPrint">
            <summary>
            1 Bit.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.OBJlinetail">
            <summary>
            This structure represents the BIFF5 &amp; BIFF7 format of OBJ / "Line Object" structure.  Use OBJ_line.write_to_stream for BIFF8 Escher formmated data.
            Used by OBJ_line.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJlinetail.icv">
            <summary>
            Index to color palette.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJlinetail.lns">
            <summary>
            Line style:
            Solid: lns = 0
            Dash: lns = 1
            Dot: lns = 2
            Dash-dot: lns = 3
            Dash-dot-dot: lns = 4
            Null (unused): lns = 5
            Dark gray: lns = 6
            Medium gray: lns = 7
            Light gray: lns = 8 
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJlinetail.lnw">
            <summary>
            Line weight:
            Hairline: lnw = 0
            Single: lnw = 1
            Double: lnw = 2
            Thick: lnw = 3
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJlinetail.fAuto">
            <summary>
            1 if automatic border is on.
            </summary>
            <remarks>
            BIFF5 &amp; BIFF7: Bit 0 = 1 if Automatic Border option is turned on (Format Object dialog box, Patterns tab). 
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJlinetail.es">
            <summary>
            End style structure, arrowhead style.
            </summary>
            <remarks>
            This is a bitmasked 2 byte value, documented in "MS Excel97 SDK" as follows:
            The end style structure (es) describes the arrowheads on the end point of the line. The structure contains four 4-bit fields, as described in the following table. 
            0		3�0	0Fh	sest	Arrowhead style:
            								None: sest = 0
            								Open: sest = 1
            								Filled: sest = 2
            								Double-ended open: sest = 3
            								Double-ended filled: sest = 4 
            7�4	F0h 	sesw			Arrowhead width:
            								Narrow: sesw = 0
            								Medium: sesw = 1
            								Wide: sesw = 2 
            1 	3�0 	0Fh	sesl	Arrowhead length:
            								Short: sesl = 0
            								Medium: sesl = 1
            								Long: sesl = 2 
            7�4 	F0h 	(Unused)		  
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.OBJlinetail.iqu">
            <summary>
            Quadrant Index: Describes the line from the starting position to the ending position.
            Lower Right to Upper Left = 0.
            Lower Left to Upper Right = 1
            Upper Left to Lower Right = 2
            Upper Right to Lower Left = 3
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.AHendstyles">
            <summary>
            Used by OBJ_line for "Arrow Head End Styles" for BIFF8 format.  Basically this struct is our own thing that stores the values for a few properties in the msofbtOPT array of FOPTE structs with prop info for the line object.  See OBJline.make_msofbtOPT.
            Representing the style of the arrows at each end of the line.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.AHendstyles.m_startstyle">
            <summary>
            Private storage for startStyle property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.AHendstyles.startstyle">
            <summary>
            startstyle member.
            </summary>
            <remarks>
            Has 3 bits for storage.
            </remarks>		
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.AHendstyles.m_endstyle">
            <summary>
            Private storage for endstyle property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.AHendstyles.endstyle">
            <summary>
            endstyle member.
            </summary>
            <remarks>
            Has 3 bits for storage.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.AHendstyles.startwidth">
            <summary>
            startwidth member.
            </summary>
            <remarks>Has 2 bits for storage.</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.AHendstyles.m_startlength">
            <summary>
            Private storage for startlength member.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.AHendstyles.startlength">
            <summary>
            startlength property.
            </summary>
            <remarks>Has 2 bits for storage.</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.AHendstyles.m_endwidth">
            <summary>
            Private storage for m_endwidth;
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.AHendstyles.endwidth">
            <summary>
            endwidth property.
            </summary>
            <remarks>Has 2 bits for storage.</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.AHendstyles.m_endlength">
            <summary>
            Private storage for endlength.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.AHendstyles.endlength">
            <summary>
            endlength member.
            </summary>
            <remarks>Has 2 bits for storage.</remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.FOPTE">
             <summary>
             This is a 16 bit structure used by OBJ_line.make_msofbtOPT.
             Its purpose is to hold a property ID/value pair for the BIFF8 formmated msofbtOPT/FOPTE property table.
             </summary>
             <remarks>
             Taken from the "Shape Properties msofbtOPT" topic in the "Microsoft Office 97 Drawing File Format" documentation:
             The first part of an OPT (such as msofbtOPT) record is an array of FOPTEs, 
             consisting of ID-value pairs tightly packed:
             <c>
             typedef struct _FOPTE
             {
            	struct
            	{
            		USHORT pid : 14;     // Property ID
            	 	USHORT fBid : 1;     // value is a blip ID � only valid if fComplex is FALSE
            	   USHORT fComplex : 1; // complex property, value is length
            	};
            	ULONG   op;					// Value
             } FOPTE;
            </c>
             </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FOPTE.m_pid">
            <summary>
            Private storage for pid property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.FOPTE.pid">
            <summary>
            Property ID.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FOPTE.fBid">
            <summary>
            Value is a blip ID � only valid if fComplex is FALSE
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FOPTE.fComplex">
            <summary>
            Complex property, value is length
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FOPTE.op">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOFBH">
            <summary>
            Common Header: 
            The common record header is an 8-byte structure defined in msodr.h as follows:
            <c>
            typedef struct MSOFBH
            {
            	struct
            {
            		ULONG ver : 4;
            		ULONG inst: 12;
            		ULONG fbt : 16;
            	};
            	ULONG     cbLength;
            } MSOFBH;
            </c>
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOFBH.m_ver">
            <summary>
            Private storage for ver.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.MSOFBH.ver">
            <summary>
            Record Version: (ver) Indicates the version if the record is an atom. If the record is a container, this field has a value of 0xFFFF.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOFBH.m_inst">
            <summary>
            Private storage for inst member.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.MSOFBH.inst">
            <summary>
            Record Instance: (inst) Differentiates atoms. Depending on the instance a record's contents it can have different meanings. For example a list container can store a list of slides or a list of fonts, and its instance would vary accordingly. The instance of a record is useful for differentiating atoms when there is more than one atom of the same type in a particular container
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOFBH.fbt">
            <summary>
            Record Type: (fbt) Indicates the signature or type of the record. 
            Each record has a symbolic and a numeric signature in msodr.h. 
            Escher uses values from 0xF000 to 0xFFFF. Clients may define their own records in other 
            ranges. A description of each of the different types can be found in the following sections.
            </summary> 
            <remarks>
            For msofbtBlip records fbt:
            If a delay stream is not used, then the BLIP data follows the BSE header in a separate 
            record.  The FBT of the BLIP record is the MSOBLIPTYPE plus msofbtBlipFirst (0xF018). (If a 
            delay stream is being used, the BLIP's record header and data are both written there instead.)
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOFBH.cbLength">
            <summary>
            Record Length: (cbLength) Stores the length of the record in bytes. If the record is an 
            atom, it refers to the length of the atom excluding the header. If the record is a 
            container, it refers to the sum of the lengths of the atoms inside it, plus the length 
            of the record headers.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOFBH.SizeOf">
            <summary>
            Returns the size of this struct in bytes.  This is the number of bytes WriteToBiff(..) would write out.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOPNGHeader">
            <summary>
            This is the header data that appears just before the raw PNG data in the output.  We write the raw data seperate from this header.  The raw PNG data is NOT part of this struct.
            </summary>
            <remarks>
            Taken straight out of the "BStore Container msofbtBstoreContainer" documentation in MSDN Library - July 1999.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOPNGHeader.SizeOf">
            <summary>
            The size of this record's output (when written with WriteToBiff) in bytes.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader">
            <summary>
            MSOMetaHeader is a very specific type of msofbt record for 
            storing metafiles in the "BStore Container (msofbtBstoreContainer)".
            </summary>
            <remarks>
            This structure comes striaght out of the "BStore Container msofbtBstoreContainer" topic 
            in the "Office 97 Drawing File Format" documentation in July 1999 MSDN Library.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader.m_rgbUid">
            <summary>
            The secondary, or data, UID - should always be set.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader.m_cb">
            <summary>
            Metafile Blip overhead = 34 bytes. m_cb gives the number of 
            bytes required to store an uncompressed version of the file, m_cbSave 
            is the compressed size.  m_mfBounds gives the boundary of all the 
            drawing calls within the metafile (this may just be the bounding box 
            or it may allow some whitespace, for a WMF this comes from the 
            SetWindowOrg and SetWindowExt records of the metafile).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader.m_rcBounds">
            <summary>
            Boundary of metafile drawing commands.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader.m_ptSize">
            <summary>
            Size of metafile in EMUs.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader.m_cbSave">
            <summary>
            Cache of saved size (size of m_pvBits)
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader.m_fCompression">
            <summary>
            MSOBLIPCOMPRESSION Value
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader.SizeOf">
            <summary>
            Returns the size of this struct in bytes.  This is the number of bytes WriteToBiff(..) would write out.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.ImageInfo">
            <summary>
            Used by DDSheet.AddImage to specify various options about the image.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._top">
            <summary>
            Represent Top property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.Top">
            <summary>
            The distance from cell's top to image's top. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._left">
            <summary>
            Represent Left property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.Left">
            <summary>
            The distance from cell's left to image's left. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._lineWidth">
            <summary>
            Represent LineWidth property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.LineWidth">
            <summary>
            The line width of image outline. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._displayWidth">
            <summary>
            Represent DisplayWidth property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.DisplayWidth">
            <summary>
            The display width of image object in excel. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._displayHeight">
            <summary>
            Represent DisplayHeight property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.DisplayHeight">
            <summary>
            The display height of image object in excel. The unit is pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._cropFromTop">
            <summary>
            Represent CropFromTop property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.CropFromTop">
            <summary>
            A percent indicate the times of top crop part occupying the total image height.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._cropFromLeft">
            <summary>
            Represent CropFromLeft property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.CropFromLeft">
            <summary>
            A percent indicate the times of left crop part occupying the total image width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._cropFromRight">
            <summary>
            Represent CropFromRight property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.CropFromRight">
            <summary>
            A percent indicate the times of right crop part occupying the total image width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo._cropFromBottom">
            <summary>
            Represent CropFromBottom property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.CropFromBottom">
            <summary>
            A percent indicate the times of bottom crop part occupying the total image height.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.MoveWithCells">
            <summary>
            True if the object moves with the cells (Format Object dialog box, Properties tab).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.AutoSize">
            <summary>
            True if the object moves and sizes with the cells.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo.lns">
            <summary>
            Private storage for Line style.  Values are:
            Solid: lns = 0
            Dash: lns = 1
            Dot: lns = 2
            Dash-dot: lns = 3
            Dash-dot-dot: lns = 4
            Null (unused): lns = 5
            Dark gray: lns = 6
            Medium gray: lns = 7
            Light gray: lns = 8 
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.LineStyle">
            <summary>
            Sets or returns the style of the line bounding an image.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo.lnw">
            <summary>
            Line weight:
            Hairline: lnw = 0
            Single: lnw = 1
            Double: lnw = 2
            Thick: lnw = 3
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.LineWeight">
            <summary>
            Indicates the weight of the line surouding an image.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.AutoFill">
            <summary>
            True if the Automatic Fill option is turned on (Format Object dialog box, Patterns tab). 
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.QuadrantIndex">
            <summary>
            Defines what direction the image begins and ends in.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageInfo.fls">
            <summary>
            Fill Pattern.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.ImageInfo.FillPattern">
            <summary>
            Sets or returns whether the background of the image is filled or not.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.FPSPLcustom">
            <summary>
            FPSPLcustom represents SQID, and MSOSPID as well.  In c++ these were typedefs to the same struct.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FPSPLcustom.ichild">
            <summary>
            A 10 bit unsigned integer.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FPSPLcustom.igroup">
            <summary>
            A 22 bit unsigned integer.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.FSP">
            <summary>
            Shape Record msofbtSp.
            The instance field of the record header contains the shape type; 
            the record itself contains the shape ID and a group of persistent flags:
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.spid">
            <summary>
            The shape ID.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fGroup">
            <summary>
            This shape is a group shape
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fChild">
            <summary>
            Not a top-level shape.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fPatriarch">
            <summary>
            This is the topmost group shape.
            </summary>
            <remarks>
            Exactly one of these per drawing. 
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fDeleted">
            <summary>
            The shape has been deleted.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fOleShape">
            <summary>
            The shape is an OLE object.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fHaveMaster">
            <summary>
            Shape has a hspMaster property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fFlipH">
            <summary>
            Shape is flipped horizontally
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fFlipV">
            <summary>
            Shape is flipped vertically
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fConnector">
            <summary>
            Connector type of shape.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fHaveAnchor">
            <summary>
            Shape has an anchor of some kind
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fBackground">
            <summary>
            Background shape
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.fHaveSpt">
            <summary>
            Shape has a shape type property
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FSP.reserved">
            <summary>
            20 bit unsigned integer.  Not yet used.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.gridratio">
            <summary>
            This structure represents a portion of the OBJ BIFF Record, begining with the colL member at offset 14dec, 
            and ending with the dyB member at offset 28dec.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.colL">
            <summary>
            Column containing upper left.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.dxL">
            <summary>
            X (horz) position of upper left corner, relative to the the left  side of the underlying cell, expressed as 1/1024th of the cell's width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.rwT">
            <summary>
            Row containing upper-left corner of obj's bounding rect.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.dyT">
            <summary>
            Vertical position (like dxL is to horizontal position), relative to top of underlying 
            cell in 1/1024th's of the cells height.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.colR">
            <summary>
            col contatining lower right of OBR
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.dxR">
            <summary>
            X pos of lower right OBR, relative to left side of UC.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.rwB">
            <summary>
            Row contatining lower right of OBR.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.gridratio.dyB">
            <summary>
            Y pos of the lower right OBR relative to the top of UC in 1/1024th's of the underlying cells height.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.FDGGcustom">
            <summary>
            This struct represents what Escher calls FDGG.  Except for possibly spidMax's type (SQID) this does not appear to be "customized" as the name implies.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FDGGcustom.spidMax">
            <summary>
            The current maximum shape ID.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.FBSE">
            <summary>
            FBSE - File Blip Store Entry.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.btWin32">
            <summary>
            Required type on Win32.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.btMacOS">
            <summary>
            Required type on Mac
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.rgbUid">
            <summary>
            Identifier of blip.
            </summary>
            <remarks>
            Found in "MSDN Library - July 1999" under topic "BStore Container msofbtBstoreContainer":
            Each BSE contains a 16-byte checksum that is used to quickly compare a BLIP with other BLIPs in the store. Any algorithm could be used for this checksum. Escher uses the RSA Data Security, Inc. MD4 Message-Digest Algorithm for the checksums of its BLIP types. 
            
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.tag">
            <summary>
            Currently unused.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.size">
            <summary>
            Blip size in stream.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.cRef">
            <summary>
            Reference count on the blip.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.foDelay">
            <summary>
            File offset in the delay stream.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.usage">
            <summary>
            How this blip is used (MSOBLIPUSAGE).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.cbName">
            <summary>
            length of the blip name.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.unused2">
            <summary>
            for the future.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.unused3">
            <summary>
            for the future.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.FBSE.SizeOf">
            <summary>
            Returns the size of this struct in bytes.  This is the number of bytes WriteToBiff(..) would write out.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOBLIPUSAGE">
            <summary>
            Used for FSBE.usage.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOBLIPUSAGE.msoblipUsageDefault">
            <summary>
            All non-texture fill blips get this.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.MSOBLIPUSAGE.msoblipUsageMax">
            <summary>
            Since this is stored in a byte.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOBLIPTYPE">
            <summary>
            Provides types for the BLIP Store Entry Record, msofbtBSE.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOBI">
            <summary>
            Blip signature as encoded in the MSOFBH.inst
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.LineInfo">
            <summary>
            Used with the Sheet.AddLine method to specify information about the line.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.LineInfo.#ctor(System.Int32,System.Int16,System.Int32,System.Int16,System.Int32,System.Int16,System.Int32,System.Int16,GrapeCity.SpreadBuilder.Imaging.ObjectDirection,System.Int32,GrapeCity.SpreadBuilder.Imaging.LineStyles,System.Drawing.Color,System.Boolean,GrapeCity.SpreadBuilder.Imaging.SBFloatingMoveType,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths)">
            <summary>
            Create a LineInfo class with setting all the fields and properties.
            </summary>
            <param name="columnLeft">The one-based column containing the upper-left corner of the line's bounding rectangle.</param>
            <param name="dxL">The X (horizontal) position of the upper-left corner of the object's bounding rectangle, relative to the left side of the underlying cell (specified in colL), expressed as 1/1024th of the cell's width.  </param>
            <param name="rowTop">The one-based row containing the upper-left corner of the line's bounding rectangle.</param>
            <param name="dyT">The Y (vertical) position of the upper-left corner of the object's bounding rectangle, relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.</param>
            <param name="columnRight">The one-based column containing the lower-right corner of the line's bounding rectangle.</param>
            <param name="dxR">The X (horizontal) position of the lower-right corner of the object's bounding rectangle, relative to the left side of the underlying cell, expressed as 1/1024th of the cell's width.</param>
            <param name="rowBottom">The one-based row containing the lower-right corner of the line's bounding rectangle.</param>
            <param name="dyB">The Y (vertical) position of the lower-right corner of the object's bounding rectangle, relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.</param>
            <param name="iQu">The direction of the line.  Use GrapeCity.SpreadBuilder.Escher.LineDirections constants to define the "quadrant index."</param>
            <param name="weight">The thickness of the line.</param>
            <param name="style">The style of the line.</param>
            <param name="netColor">The System.Drawing.Color for the line.</param>
            <param name="fAuto">Excel automatic border option.</param>
            <param name="MoveType">The options users will have for moving or resizing the line in the spreadsheet.</param>
            <param name="StartAHStyle">The style of the starting arrowhead.</param>
            <param name="StartAHWidth">The width of the starting arrowhead.</param>
            <param name="StartAHLength">The length of the starting arrowhead.</param>
            <param name="EndAHStyle">The style of the ending arrowhead.</param>
            <param name="EndAHWidth">The width of the ending arrowhead.</param>
            <param name="EndAHLength">The length of the ending arrowhead.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.LineInfo.#ctor(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,GrapeCity.SpreadBuilder.Imaging.ObjectDirection,System.Int32,GrapeCity.SpreadBuilder.Imaging.LineStyles,System.Drawing.Color,System.Boolean,GrapeCity.SpreadBuilder.Imaging.SBFloatingMoveType,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths,GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths)">
            <summary>
            Create a LineInfo class with setting all the fields and properties.
            </summary>
            <param name="colL">The one-based column containing the upper-left corner of the line's bounding rectangle.</param>
            <param name="dxL">The X (horizontal) position of the upper-left corner of the object's bounding rectangle, relative to the left side of the underlying cell (specified in colL), expressed as 1/1024th of the cell's width.  </param>
            <param name="rwT">The one-based row containing the upper-left corner of the line's bounding rectangle.</param>
            <param name="dyT">The Y (vertical) position of the upper-left corner of the object's bounding rectangle, relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.</param>
            <param name="colR">The one-based column containing the lower-right corner of the line's bounding rectangle.</param>
            <param name="dxR">The X (horizontal) position of the lower-right corner of the object's bounding rectangle, relative to the left side of the underlying cell, expressed as 1/1024th of the cell's width.</param>
            <param name="rwB">The one-based row containing the lower-right corner of the line's bounding rectangle.</param>
            <param name="dyB">The Y (vertical) position of the lower-right corner of the object's bounding rectangle, relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.</param>
            <param name="iQu">The direction of the line.  Use GrapeCity.SpreadBuilder.Escher.LineDirections constants to define the "quadrant index."</param>
            <param name="weight">The thickness of the line.</param>
            <param name="style">The style of the line.</param>
            <param name="netColor">The System.Drawing.Color for the line.</param>
            <param name="fAuto">Excel automatic border option.</param>
            <param name="MoveType">The options users will have for moving or resizing the line in the spreadsheet.</param>
            <param name="StartAHStyle">The style of the starting arrowhead.</param>
            <param name="StartAHWidth">The width of the starting arrowhead.</param>
            <param name="StartAHLength">The length of the starting arrowhead.</param>
            <param name="EndAHStyle">The style of the ending arrowhead.</param>
            <param name="EndAHWidth">The width of the ending arrowhead.</param>
            <param name="EndAHLength">The length of the ending arrowhead.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.LineInfo.#ctor">
            <summary>
            The default constructor for the LineInfo class.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.ColumnLeft">
            <summary>
            Column containing the upper-left corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.colL">
            <summary>
            Column containing the upper-left corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.RowTop">
            <summary>
            Row containing the upper-left corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.rwT">
            <summary>
            Row containing the upper-left corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.ColumnRight">
            <summary>
            Column containing the lower-right corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.colR">
            <summary>
            Column containing the lower-right corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.RowBottom">
            <summary>
            Row containing the lower-right corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Imaging.LineInfo.rwB">
            <summary>
            Row containing the lower-right corner of the object's bounding rectangle.
            </summary>
            <remarks>Cannot be negative.</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.dxL">
            <summary>
            X (horizontal) position of the upper-left corner of the object's bounding rectangle, 
            relative to the left side of the underlying cell (specified in colL), expressed as 1/1024th of the cell's 
            width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.dyT">
            <summary>
            Y (vertical) position of the upper-left corner of the object's bounding rectangle, 
            relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.dxR">
            <summary>
            X (horizontal) position of the lower-right corner of the object's bounding rectangle, relative to the left side of the underlying cell, expressed as 1/1024th of the cell's width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.dyB">
            <summary>
            Y (vertical) position of the lower-right corner of the object's bounding rectangle, relative to the top of the underlying cell, expressed as 1/1024th of the cell's height.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.iQu">
            <summary>
            Use GrapeCity.SpreadBuilder.Escher.LineDirections constants to define "quadrant index" (direction of line).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.Weight">
            <summary>
            Set to one of the Excel enumerated line weight values. 
            <c>
            Effect for Microsoft Excel 97 file format. (BIFF8) 
            Parameter will generate line with weight parameter as points.
            Effect for versions 3, 4, 5, and 7.  Version 2 does not support lines.
            0 Hairline		0 points
            1 Single 		.75 points
            2 Double 		1.35 points
            3 Thick 		1.95 points
            </c>
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.Style">
            <summary>
            <c>
            Set to one of the Excel enumerated line style values.
            Effect for Microsoft Excel 97 file format. (BIFF8) 
            
            0 Solid
            1 Small Dash (No Equivalent Menu for Excel 2000)
            2 Square Dot
            3 Small Dash, Square Dot (No Equivalent Menu for Excel 2000)
            4 Small Dash, Square Dot, Square Dot (No Equivalent Menu for Excel 2000)
            5 Loosely spaced Square Dot (No Equivalent Menu for Excel 2000)
            6 Dash
            7 Long Dash
            8 Dash Dot
            9 Long Dash Dot
            10 Long Dash Dot Dot
            11 Round Dot		
            
            Effect for versions 3, 4, 5, and 7.  Version 2 does not support lines.
            0 Solid
            1 Long Dash 
            2 Dash
            3 Long Dash Dot
            4 Long Dash Dot Dot
            5 Pattern 50% Solid (No Equivalent Menu for Excel 2000)
            6 Pattern 75% Solid (No Equivalent Menu for Excel 2000)
            7 Pattern 25% Solid (No Equivalent Menu for Excel 2000)
            15 Transparent (No Line)
            </c>
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.Color">
            <summary>
            The color the line should be as System.Drawing.Color.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.fAuto">
            <summary>
            Set fAuto to 1 if you want the Excel automatic border option turned on.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.MoveType">
            <summary>
            Set to one of the SBFloatingMoveType constants.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.StartAHStyle">
            <summary>
            Use the LineArrowHeadStyles enumeration to specify the style for the arrow head at the start of the line.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.StartAHWidth">
            <summary>
            The starting arrowhead width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.StartAHLength">
            <summary>
            The starting arrowhead length.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.EndAHStyle">
            <summary>
            Use the LineArrowHeadStyles enumeration to specify the style for the arrow head at the end of the line.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.EndAHWidth">
            <summary>
            The ending arrowhead width.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineInfo.EndAHLength">
            <summary>
            The ending arrowhead length.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOBLIPCOMPRESSION">
            <summary>
            "Compression Status" flags.
            </summary>
            <remarks>
            These values are used by our MSOMetaHeader struct's m_fComopression member.
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MSOBLIPFILTER">
            <summary>
            From MSODrawing Docs:
            Filter values that define pre-filtering of metafile data to give better compression. 
            Currently no pre-filtering is done (it is likely that filtering on a per-record basis will 
            give substantially better compression in the future).
            </summary>
            <remarks>
            These values are/would be used by our MSOMetaHeader struct's m_fFilter member.
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.ObjectDirection">
            <summary>
            Used by DDSheet.AddLine and DDSheet.AddImage to define line or image directions.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ObjectDirection.UpperLeftToLowerRight">
            <summary>
            Upper left to lower right.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ObjectDirection.UpperRightToLowerLeft">
            <summary>
            Upper right to lower left.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ObjectDirection.LowerRightToUpperLeft">
            <summary>
            Lower right to upper left.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ObjectDirection.LowerLeftToUpperRight">
            <summary>
            Lower left to upper right.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.SBFloatingMoveType">
            <summary>
            Used by DDSheet.AddLine(..) 
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.SBFloatingMoveType.MoveNoSize">
            <summary>
            Lines and Pictures move but do not size with cells.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.SBFloatingMoveType.MoveSize">
            <summary>
            Lines and Pictures move and size with cells.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.SBFloatingMoveType.NoMoveNoSize">
            <summary>
            Lines and Pictures do not move or size with cells.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.ImageLineWeight">
            <summary>
            Used with ImageInfo.LineWeight to specify the weight of a line bounding an image.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineWeight.Hairline">
            <summary>
            Hairline
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineWeight.Single">
            <summary>
            Single
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineWeight.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineWeight.Thick">
            <summary>
            Thick
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle">
            <summary>
            Used with ImageInfo.LineStyle to specify the style of the line bounding an image.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.Solid">
            <summary>
            Solid
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.Dash">
            <summary>
            Dash
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.Dot">
            <summary>
            Dot
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.DashDot">
            <summary>
            Dash dot
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.DashDotDot">
            <summary>
            Dash dot dot
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.Null">
            <summary>
            Null
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.DarkGray">
            <summary>
            Dark gray
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.MediumGray">
            <summary>
            Medium gray
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.ImageLineStyle.LightGray">
            <summary>
            Light gray
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.LineStyles">
            <summary>
            Contains the various line styles for several versions of BIFF.  Note that some values are not valid in some versions of the Excel BIFF file format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.Solid">
            <summary>
            Sold.  
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Solid.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.SmallDash">
            <summary>
            Small Dash (No Equivalent Menu for Excel 2000).
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Long Dash.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.SquareDot">
            <summary>
            Square Dot.
            </summary>
            <remarks>Effect for versions 3, 4, 5, and 7: Dash.</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.SmallDashSquareDot">
            <summary>
            Small Dash, Square Dot.
            </summary>
            <remarks>
            No Equivalent Menu for Excel 2000.
            Effect for versions 3, 4, 5, and 7: Long Dash Dot.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.SmallDashSquareDotSquareDot">
            <summary>
            Small Dash, Square Dot, Square Dot.
            </summary>
            <remarks>
            No Equivalent Menu for Excel 2000.
            Effect for versions 3, 4, 5, and 7: Long Dash Dot Dot.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.LooselySpacedSquareDot">
            <summary>
            Loosely spaced Square Dot.
            </summary>
            <remarks>
            No Equivalent Menu for Excel 2000.
            Effect for versions 3, 4, 5, and 7: Pattern 50% Solid (No Equivalent Menu for Excel 2000)
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.Dash">
            <summary>
            Dash.
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Pattern 75% Solid (No Equivalent Menu for Excel 2000).
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.LongDash">
            <summary>
            Long Dash.
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Pattern 25% Solid (No Equivalent Menu for Excel 2000).
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.DashDot">
            <summary>
            Dash Dot.
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Not Applicable.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.LongDashDot">
            <summary>
            Long Dash Dot.
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Not Applicable.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.LongDashDotDot">
            <summary>
            Long Dash Dot Dot.
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Not Applicable.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.RoundDot">
            <summary>
            Round Dot.
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Not Applicable.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineStyles.OldTransparent">
            <summary>
            Transparent (No Line), only effective in BIFF versions 3, 4, 5, and 7.
            </summary>
            <remarks>
            Effect for versions 3, 4, 5, and 7: Transparent (No Line).
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles">
            <summary>
            Excel enumerated type for arrowhead styles.
            </summary>
            <remarks>Used with DDSheet.AddLine(..).</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles.DoubleEndedOpen">
            <summary>
            Double ended open
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles.DoubleEndedFilled">
            <summary>
            Double ended filled
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths">
            <summary>
            Enumerated type for Excel arrowhead width. 
            </summary>
            <remarks>Used with DDSheet.AddLine(..).</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths.Narrow">
            <summary>
            Narrow
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadWidths.Wide">
            <summary>
            Wide
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths">
            <summary>
            Enumerated type for Excel arrowhead length.   
            </summary>
            <remarks>Used with DDSheet.AddLine(..).</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths.Short">
            <summary>
            Short
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.LineArrowHeadLengths.Long">
            <summary>
            Long
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.AnchorType">
            <summary>
            The type of the anchor for the image in excel. 
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.AnchorType.TwoCellAnchor">
            <summary>
            Anchor by the Left/Top point and Right/Bottom point.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Imaging.AnchorType.OneCellAnchor">
            <summary>
            Anchor by the Left/Top point and Width/Height size. 
            Only supported by OpenXml.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Imaging.MetafileSaver">
            <summary>
            Will save a System.Drawing.Image object to various metafile encodings to stream, or to file.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.GetWinMetaFileBitsExtern(System.IntPtr,System.UInt32,System.IntPtr,System.Int32,System.IntPtr)">
             <summary>
             The GetWinMetaFileBits function converts the enhanced-format records from a metafile into Windows-format records and stores the converted records in the specified buffer. 
             </summary>
             <param name="hemf">[in] Handle to the enhanced metafile.</param>
             <param name="cbBuffer">[in] Specifies the size, in bytes, of the buffer into which the converted records are to be copied.</param>
             <param name="lpBuffer">[out] Pointer to the buffer that receives the converted records. If lpbBuffer is NULL, GetWinMetaFileBits returns the number of bytes required to store the converted metafile records.</param>
             <param name="fnMapMode">[in] Specifies the mapping mode to use in the converted metafile.</param>
             <param name="hdcRef">[in] Handle to the reference device context.</param>
             <returns>
             If the function succeeds and the buffer pointer is NULL, the return value is the number of bytes required to store the converted records; if the function succeeds and the buffer pointer is a valid pointer, the return value is the size of the metafile data in bytes.
             If the function fails, the return value is zero.
             Windows NT/2000/XP: To get extended error information, call GetLastError.
             </returns>
             <remarks>
             ///From Platform SDK:
            UINT GetWinMetaFileBits(
            	HENHMETAFILE hemf, // handle to the enhanced metafile
            	UINT cbBuffer,     // buffer size
            	LPBYTE lpbBuffer,  // records buffer
            	INT fnMapMode,     // mapping mode
            	HDC hdcRef         // handle to reference DC
            	);
            	
             From Header file: WINGDIAPI UINT  WINAPI GetWinMetaFileBits( IN HENHMETAFILE, IN UINT, OUT LPBYTE, IN INT, IN HDC);
             </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.GlobalLockExtern(System.IntPtr)">
            <summary>
            The GlobalLock function locks a global memory object and returns a pointer to the first byte of the object's memory block (from Platform SDK Docs).
            </summary>
            <param name="hGlobal">[in] Handle to the global memory object. This handle is returned by either the GlobalAlloc or GlobalReAlloc function.</param>
            <returns>
            If the function succeeds, the return value is a pointer to the first byte of the memory block.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
            <remarks>
            The internal data structures for each memory object include a lock count that is initially zero. For movable memory objects, GlobalLock increments the count by one, and the GlobalUnlock function decrements the count by one. For each call that a process makes to GlobalLock for an object, it must eventually call GlobalUnlock. Locked memory will not be moved or discarded, unless the memory object is reallocated by using the GlobalReAlloc function. The memory block of a locked memory object remains locked until its lock count is decremented to zero, at which time it can be moved or discarded.
            Memory objects allocated with GMEM_FIXED always have a lock count of zero. For these objects, the value of the returned pointer is equal to the value of the specified handle.
            If the specified memory block has been discarded or if the memory block has a zero-byte size, this function returns NULL.
            Discarded objects always have a lock count of zero.
            
            Definition from Platform SDK Documentation:
            LPVOID GlobalLock(
             HGLOBAL hMem
            );
            
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.GlobalUnlockExtern(System.IntPtr)">
            <summary>
            The GlobalUnlock function decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE. This function has no effect on memory objects allocated with GMEM_FIXED.
            </summary>
            <param name="hMem">[in] Handle to the global memory object. This handle is returned by either the GlobalAlloc or GlobalReAlloc function.</param>
            <returns>
            If the memory object is still locked after decrementing the lock count, the return value is a nonzero value.
            If the function fails, the return value is zero. To get extended error information, call GetLastError. If GetLastError returns NO_ERROR, the memory object is unlocked.
            </returns>
            <remarks>
            The internal data structures for each memory object include a lock count that is initially zero. For movable memory objects, the GlobalLock function increments the count by one, and GlobalUnlock decrements the count by one. For each call that a process makes to GlobalLock for an object, it must eventually call GlobalUnlock. Locked memory will not be moved or discarded, unless the memory object is reallocated by using the GlobalReAlloc function. The memory block of a locked memory object remains locked until its lock count is decremented to zero, at which time it can be moved or discarded.
            Memory objects allocated with GMEM_FIXED always have a lock count of zero. If the specified memory block is fixed memory, this function returns TRUE.
            If the memory object is already unlocked, GlobalUnlock returns FALSE and GetLastError reports ERROR_NOT_LOCKED.
            A process should not rely on the return value to determine the number of times it must subsequently call GlobalUnlock for a memory object.
            
            
            Definition from Platform SDK: 
            BOOL GlobalUnlock(
            HGLOBAL hMem
            );
            
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.GetDCExtern(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a display device context (DC) for the client area of a specified window or for the entire screen. You can use the returned handle in subsequent GDI functions to draw in the DC. 
            </summary>
            <param name="hWnd">
            [in] Handle to the window whose DC is to be retrieved. If this value is NULL, GetDC retrieves the DC for the entire screen. 
            Windows 98/Me, Windows 2000/XP: To get the DC for a specific display monitor, use the EnumDisplayMonitors and CreateDC functions. 
            </param>
            <returns>If the function succeeds, the return value is a handle to the DC for the specified window's client area. 
            If the function fails, the return value is NULL.Windows NT/2000/XP: To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.StreamFromImage(System.Drawing.Image,System.Drawing.Imaging.EmfType,System.Drawing.Graphics)">
            <summary>
            Creates a MemoryStream containing the specified type of EMF data and returns that stream.  
            The resultant stream will contain only the metafile data.
            </summary>
            <param name="img"></param>
            <param name="metafileType">
            Use EmfType.EmfOnly for GDI or Win32 compatable metafile data.
            Other EmfTypes might only be decodable by GDI+ / .NET.
            </param>
            <param name="aGraphics">
            This is a graphics that will be used to construct a Metafile instance. 
            It will NOT be disposed.  
            Caller is responsable for calling the Dispose() method on the supplied graphics.
            </param>
            <returns>
            A memory Stream containing the graphics.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.UnmanagedWmfFromImage(System.Drawing.Image)">
            <summary>
            Converts an System.Drawing.Image derived object to a 16 bit compatable WMF image with no headers.  
            This is required with Excel 95's imaging implementation.
            </summary>
            <param name="image">The System.Drawing.Image object to be converted to a the old style WMF bytes.</param>
            <returns>A byte array containing the 16 bit wmf image data.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.StreamFromImage(System.Drawing.Image,System.Drawing.Imaging.EmfType)">
            <summary>
            This implementation does not require the caller to supply a Graphics.  
            A temporary Graphics object will be created from a temporary instance of System.Windows.Forms.Control.  
            The Graphics and Control will be Disposed.
            This function's implementation is for applications such as SpreadBuilder which have no UI.  
            If the caller can supply a Graphics that might be a good idea so the caller can have greater control over the Graphics's settings and resources.
            </summary>
            <param name="img"></param>
            <param name="metafileType"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.SaveToFile(System.Drawing.Image,System.String,System.Drawing.Imaging.EmfType)">
            <summary>
            Saves the specified Image object as a metafile to the specified filename.
            </summary>
            <param name="img"></param>
            <param name="sFileName"></param>
            <param name="metafileType">
            Use EmfType.EmfOnly for GDI or Win32 compatable metafile data.
            Other EmfTypes might only be decodable by GDI+ / .NET.
            </param>
            <remarks>
            Ensure that the file does not exist before calling this method.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Imaging.MetafileSaver.CreateFakeGraphics">
            <summary>
            Returns a Graphics object from nothing.  The call MUST DISPOSE THE RETURNED GRAPHICS.
            </summary>
            <returns>
            A Graphics object.  The call MUST DISPOSE THE RETURNED GRAPHICS.
            </returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.NativeMethods">
            <summary>
            Contains some native method wrappers used by SpreadBuilder.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.NativeMethods.GetACP">
             <summary>
             Wrapper for the Kernel32 WinAPI function GetACP().
             </summary>
             <returns>
             The following are the ANSI code-page identifiers: 
            Identifier	Meaning
            874			Thai
            932			Japan
            936			Chinese (PRC, Singapore)
            949			Korean
            950			Chinese (Taiwan; Hong Kong SAR, PRC) 
            1200			Unicode (BMP of ISO 10646)
            1250			Windows 3.1 Eastern European 
            1251			Windows 3.1 Cyrillic
            1252			Windows 3.1 Latin 1 (U.S., Western Europe)
            1253			Windows 3.1 Greek
            1254			Windows 3.1 Turkish
            1255			Hebrew
            1256			Arabic
            1257			Baltic
             </returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.NoRepeatList`1">
            <summary>
            A list which do not contain the object which is the same with one of list items.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.NoRepeatList`1._list">
            <summary>
            Represent the list which contains all items.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.NoRepeatList`1.#ctor">
            <summary>
            Create a NoRepeatList class.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.NoRepeatList`1.AddItem(`0)">
            <summary>
            Add a item to list and return the item's index. 
            If there is same one, it will return the same 
            one's index and do not perform the adding.
            </summary>
            <param name="obj">The object which is used to add.</param>
            <returns>Return the added item or the same item's index.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.PageBreaks">
            <summary>
            Collection of Horiz or vertical pagebreaks.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.PageBreaks.m_breaks">
            <summary>
            Contains the PageBreak structures.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.PageBreaks.Clear">
            <summary>
            Removes all PageBreak's from this collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.PageBreaks.AddPageBreak(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Adds a pagebreak to the collection with the specified information.
            </summary>
            <param name="pri">See PageBreak.Pri property.</param>
            <param name="secStart">See PageBreak.secStart property.</param>
            <param name="secEnd">See PageBreak.secEnd property.</param>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.PageBreaks.Items">
            <summary>
            Return the items of PageBreaks.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.PageBreaks.PageBreak">
            <summary>
            Excel97DevKit: 
            The cbrk field contains the number of page breaks. Each element of the rgbrk 
            structure contains three 2-byte integers: the first specifies the row (or col for vertical) of the break, 
            the second specifies the starting column (or row for vertical), and the third specifies the ending column (or row for vertical)
            for the break. All row and column numbers are 1-based, and the breaks occur after the 
            row or column. This array is sorted by row, and then by starting/ending column. No 
            two page breaks may overlap.
            </summary>
            <remarks>
            The secEnd and secStart memebers are only applicable in BIFF8.
            BIFF documentation refers to this as a brk structure.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.PageBreaks.PageBreak.pri">
            <summary>
            Specifies the *1 based* row (horizontal page break) or column (vertical page break) that the break appears after.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.PageBreaks.PageBreak.secStart">
            <summary>
            Specifies the *1 based* starting row (horizontal page break) or starting column (vertical page break) of the page break.
            </summary>
            <remarks>*Only applies to BIFF8.</remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.PageBreaks.PageBreak.secEnd">
            <summary>
            Specifies the *1 based* ending row (horizontal page break) or ending column (vertical page break) of the page break.
            </summary>
            <remarks>*Only applies to BIFF8.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.PageBreaks.PageBreak.#ctor(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Creates the pagebreak with the specified information.
            </summary>
            <param name="pri">See PageBreak.Pri property.</param>
            <param name="secStart">See PageBreak.secStart property.</param>
            <param name="secEnd">See PageBreak.secEnd property.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.PageBreaks.PageBreak.System#IComparable#CompareTo(System.Object)">
            <summary>
            Sorts by row (or column for vertical break), and then by starting/ending column (or row for vertical break).
            </summary>
            <param name="obj"></param>
            <returns>
            Less than zero: This instance is less than obj. 
            Zero: This instance is equal to obj. 
            Greater than zero: This instance is greater than obj. 
            </returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Printing.MarginRecord">
            <summary>
            Represents one of the followign BIFF margin records: LeftMargin, RightMargin, TopMargin, or BottomMargin.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.MarginRecord.recordID">
            <summary>
            Private storage for the RecordID property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.MarginRecord.value">
            <summary>
            Private storage for the value property.  Stored as an 8-byte IEEE floating point number (in inches).
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Printing.MarginRecord.#ctor(GrapeCity.SpreadBuilder.BiffRecordID)">
            <summary>
            Initializes an instance of the LeftMarginRecord class.
            </summary>
            <param name="marginRecordID">Must be either BiffRecordID.LeftMargin, BiffRecordID.RightMargin, BiffRecordID.TopMargin, or BiffRecordID.BottomMargin.  Otherwise an ArgumentException will be thrown.</param>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.MarginRecord.RecordID">
            <summary>
            Sets or returns this record's BIFF record ID.  
            Must be either BiffRecordID.LeftMargin, BiffRecordID.RightMargin, BiffRecordID.TopMargin, or BiffRecordID.BottomMargin.  Otherwise an ArgumentException will be thrown.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.MarginRecord.Value">
            <summary>
            The width or height of the left margin in inches.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Printing.PageSetup">
            <summary>
            Represents page setup information for a worksheet such as a margins, paper size, etc...
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.leftMargin">
            <summary>
            Private storage for the Left property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.LeftMarginDefaultValue">
            <summary>
            Default value for the left property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.rightMargin">
            <summary>
            Private storage for the RightMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.RightMarginDefaultValue">
            <summary>
            Default value for the RightMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.topMargin">
            <summary>
            Private storage for the TopMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.TopMarginDefaultValue">
            <summary>
            Default value for the TopMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.bottomMargin">
            <summary>
            Private storage for the BottomMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.BottomMarginDefaultValue">
            <summary>
            Default value for the BottomMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.blackAndWhite">
            <summary>
            Private storage for the BlackAndWhite property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.BlackAndWhiteDefaultValue">
            <summary>
            Default for BlackAndWhite property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.draft">
            <summary>
            Private storage for the Draft property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.DraftDefaultValue">
            <summary>
            Default value for Draft property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.firstPageNumber">
            <summary>
            Private storage for FirstPageNumber property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.FirstPageNumberAuto">
            <summary>
            Use this value with PageSetup.FirstPageNumber to specify that the first page number used should be determined automatically.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.FirstPageNumberDefaultValue">
            <summary>
            Default value for FirstPageNumber property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.fitToPagesTall">
            <summary>
            Private storage for the FitToPagesTall property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.FitToPagesTallDefaultValue">
            <summary>
            Default value for FitToPagesTall property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.fitToPagesWide">
            <summary>
            Private storage for the FitToPagesWide property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.FitToPagesWideDefaultValue">
            <summary>
            Default value for the FitToPagesWide property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.footerMargin">
            <summary>
            Private storage for FooterMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.FooterMarginDefaultValue">
            <summary>
            Default value for the FooterMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.headerMargin">
            <summary>
            Private storage for the HeaderMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.HeaderMarginDefaultValue">
            <summary>
            Default value for the HeaderMargin property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.order">
            <summary>
            Private storage for the Order property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.OrderDefaultValue">
            <summary>
            Default value for the Order property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.orientation">
            <summary>
            Private storage for Orientation property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.OrientationDefaultValue">
            <summary>
            Default value for the Orientation property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.paperSize">
            <summary>
            Private storage for the PaperSize property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.PaperSizeDefaultValue">
            <summary>
            Default value for PaperSize property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.printNotes">
            <summary>
            Private storage for the PrintNotes property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.PrintNotesDefaultValue">
            <summary>
            Default value for PrintNotes property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.zoom">
            <summary>
            Private storage for the Zoom property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.zoomDefaultValue">
            <summary>
            Default value for the Zoom property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PageSetup.fitToPage">
            <summary>
            Private flag used by the sheet to determine if FitToPagesWide/FitToPagesTall or Zoom was last set.  
            This is used by the Sheet's WSBOOL record to determine which option (scale/zoom or fit to page) should be the selected option.
            See the Zoom and FitToPagesWide and FitToPagesTall properties for usage.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Printing.PageSetup.#ctor">
            <summary>
            Initializes an instance of the PageSetup class.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.LeftMargin">
            <summary>
            Sets or returns the left margin value in points.
            </summary>
            <remarks>
            The value MUST be greater than or equal to 0 and less than 3528.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.RightMargin">
            <summary>
            Sets or returns the right margin value in points.
            </summary>
            <remarks>
            The value MUST be greater than or equal to 0 and less than 3528.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.TopMargin">
            <summary>
            Sets or returns the top margin value in points.
            </summary>
            <remarks>
            The value MUST be greater than or equal to 0 and less than 3528.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.BottomMargin">
            <summary>
            Sets or returns the bottom margin value in points.
            </summary>
            <remarks>
            The value MUST be greater than or equal to 0 and less than 3528.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.BlackAndWhite">
            <summary>
            True if elements of the document will be printed in black and white. Read/write Boolean.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.Draft">
            <summary>
            True if the sheet will be printed without graphics.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.FirstPageNumber">
            <summary>
            Returns or sets the first page number that will be used when this sheet is printed.
            If PageSetup.FirstPageNumberAuto is the value (default) then the first page number will be chosen automatically.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.FitToPagesTall">
            <summary>
            Returns or sets the number of pages tall the worksheet will be scaled to when it's printed.
            </summary>
            <remarks>If the Zoom property is True, the FitToPagesTall property is ignored.</remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.FitToPagesWide">
            <summary>
            Returns or sets the number of pages wide the worksheet will be scaled to when it's printed.
            If the Zoom property is True, the FitToPagesWide property is ignored.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.FitToPage">
            <summary>
            Returns whether the FitToPage option should be selected.
            </summary>
            <remarks>
            If FitToPagesWide or FitToPagesTall was set since the last Zoom this property will return true, to indicate the FitToPage option in the Page Setup dialog should be selected.
            If Zoom was set since FitToPagesWide or FitToPagesTall (or none of these properties were set at all) this property returns false indicating the zoom/percentage scaling option should be selected.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.FooterMargin">
            <summary>
            Returns or sets the distance from the bottom of the page to the footer, in points.
            </summary>
            <remarks>
            The value MUST be greater than or equal to 0 and less than 3528.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.HeaderMargin">
            <summary>
            Returns or sets the distance from the top of the page to the header, in points.
            </summary>
            <remarks>
            The value MUST be greater than or equal to 0 and less than 3528.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.Order">
            <summary>
            Returns or sets the order used to number pages when printing a large worksheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.Orientation">
            <summary>
            Sets or returns whether pages are printed in landscape or portrait.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.PaperSize">
            <summary>
            Sets or returns the size of the paper to be printed on.
            </summary>
            <remarks>Custom paper size is not fully implemented at this time.</remarks>
            <devDocs>To fully implement Custom Paper size we need to write the PLS record which is basically a dump of a DEVMODE record. But karl had to comment it out in c++ because it crashed the excel viewer.  So that will take some additional research.</devDocs>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.PrintNotes">
            <summary>
            True if cell notes are printed as end notes with the sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Printing.PageSetup.Zoom">
            <summary>
            Gets or sets the zoom level.
            </summary>
            <value>The zoom level.</value>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Printing.PageSetup.CheckMargin(System.String,System.Double)">
            <summary>
            Check whether the value margin property is valid or not.
            </summary>
            <param name="propName">the name of margin property</param>
            <param name="value">the value which need be checked</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Printing.PageSetup.AreMarginsDirty">
            <summary>
            Returns true if any of the margin values differ from their default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Printing.PageSetup.IsSetupRecordDirty">
            <summary>
            Returns true if one of the SETUP record properties has been set, regardless of their current value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Printing.PagePrintOrder">
            <summary>
            Used with the PageSetup.Order property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PagePrintOrder.DownThenOver">
            <summary>
            Down then over
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PagePrintOrder.OverThenDown">
            <summary>
            Oover then down
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Printing.PagePrintOrientation">
            <summary>
            Used with PageSetup.Orientation.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PagePrintOrientation.Portrait">
            <summary>
            Portrait. When the item is serialized out as xml, its value is "portrait".
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Printing.PagePrintOrientation.Landscape">
            <summary>
            Landscape. When the item is serialized out as xml, its value is "landscape".
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffExport">
            <summary>
            Export spreadsheet to xls file whose format is Biff.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.Init(GrapeCity.SpreadBuilder.Workbook)">
            <summary>
            Initial the fields.
            </summary>
            <param name="workbook">The SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.Export(GrapeCity.SpreadBuilder.Workbook,System.String)">
            <summary>
            Export excel to a file.
            </summary>
            <param name="workbook">The workbook of spreadsheet.</param>
            <param name="path">The export file path.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.Export(GrapeCity.SpreadBuilder.Workbook,System.IO.Stream)">
            <summary>
            Export excel to a stream.
            </summary>
            <param name="workbook">The workbook of spreadsheet.</param>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCore(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Export to IStorage.
            </summary>
            <param name="stg">An object who has IStorage interface.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCore2(System.IO.BinaryWriter)">
            <summary>
            Export to BinaryWriter.
            </summary>
            <param name="binWriter">The binWriter.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportBOF(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.BofTypes,GrapeCity.SpreadBuilder.FileFormat)">
            <summary>
            Writes the specified type of BOF record to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binWriter</param>
            <param name="bofType">BofTypes</param>
            <param name="fileVersion">The file version</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportEOF(System.IO.BinaryWriter)">
            <summary>
             Writes the BIFF EOF record.
            </summary>
            <param name="binWriter">
            The BinaryWriter to use to write the data.
            </param>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffExport.Excel_Hyperlink_Magic">
            <summary>
            When hyperlinks are written out (in DDSheet, and in metafiles), these "magic bytes" are written just before the hyperlink string.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffExport.HYPERLINK_DATALEN">
            <summary>
            This constant is the length of the excel_hyperlink_magic byte array.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffExport.excel_hyperlink_serialGUID">
            <summary>
            This is optional, refer to http://msdn.microsoft.com/en-us/library/dd906718,
            but if the hyperlink miss this record, binary file complies by office 2010 will fail.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffExport.excel_hyperlink_serialVersion">
            <summary>
            This is optional, refer to http://msdn.microsoft.com/en-us/library/dd906718
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffExport.excel_hyperlink_uriFlags">
            <summary>
            This is optional, refer to http://msdn.microsoft.com/en-us/library/dd906718
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportWorkBookGlobals(System.IO.BinaryWriter,System.Byte[]@)">
            <summary>
            Writes  out the data that applies to the workbook as a whole.
            </summary>
            <param name="binWriter">The BinaryWriter to use to write the data to.</param>
            <param name="salt">Output the salt of password</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportPassword(System.IO.BinaryWriter,System.String)">
            <summary>
            Export Password record.
            </summary>
            <param name="binWriter"></param>
            <param name="p">the password string</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportBOUNDSHEET(System.IO.BinaryWriter)">
            <summary>
            Writes the BIFF BOUNDSHEET record for each sheet.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportWINDOW1(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheets)">
            <summary>
            Writes the BIFF WINDOW1.
            </summary>
            <param name="binWriter">
            The BinaryWriter to use to write the record data.
            </param>
            <param name="sheets">DDSheets</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportPROTECT(System.IO.BinaryWriter,System.Boolean)">
            <summary>
            Writes the BIFF PROTECT 
            </summary>
            <param name="binWriter">The BinaryWriter to use to write the record data.</param>
            <param name="protectWorkBookStructure">A bool value indicate if protect Workbook</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportWINDOWPROTECT(System.IO.BinaryWriter,System.Boolean)">
            <summary>
            Writes the BIFF WINDOWPROTECT record uses the ProtectWorkbookWindows property to determine record value.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="protectWorkbookWindows">A bool value indicate if protect Workbook window</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportTABID(System.IO.BinaryWriter,System.Int32)">
            <summary>
            Writes the BIFF TABID record out if Biff version > 7 and there is more than one sheet.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="sheetsCount">The sheets count.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportDSF(System.IO.BinaryWriter,System.Boolean)">
            <summary>
            Writes out the BIFF DSF record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="binWriter">If true a BIFF DSF record will be written. If false the record will not be written.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCODEPAGE(System.IO.BinaryWriter)">
            <summary>
            Writes out the BIFF CODEPAGE record.
            </summary>
            <param name="binWriter">
            The binary writer to write to.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFileSharing(System.IO.BinaryWriter,System.String,System.Boolean,System.String)">
            <summary>
            Export FileSharing record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="writePassword">A string indicates Workbook's WritePassword property.</param>
            <param name="readOnlyRecommended">A bool value indicates Workbook's ReadOnlyRecommended property.</param>
            <param name="protectedBy">A string indicates who protects this workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportWRITEACCESS(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes the BIFF Workbook Global WRITEACCESS record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="author">A string indicates the Workbook's Author.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFilePass(System.IO.BinaryWriter,System.String,System.Byte[]@)">
            <summary>
            Export FilePass record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="password">A string indicates Workbook's Password property.</param>
            <param name="salt">Output a byte array indicates the salt of password.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportSst(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.SharedStrings)">
            <summary>
            Handles the writing of the SST record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="sharedStrings"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExporteExtSst(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.SharedStrings,System.Int64)">
            <summary>
            Writes the EXTSST record.
            </summary>
            <param name="binWriter">The BinaryWriter to write the data to.</param>
            <param name="sstStreamPosition">The stream position of SST record.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportSharedStrings(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.SharedStrings)">
            <summary>
            Writes the BIFF SST and EXTSST records to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="sharedStrings">A SharedStrings in SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportExcelBuiltInStyles(System.IO.BinaryWriter,System.Collections.IEnumerable)">
            <summary>
            Writes out all the BiffStyle objects as BIFF STYLE (293h) records to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="ExcelBuiltInStyles">Collection of workbook global style.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportXFRecord8(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Writes out this object's data acording to the BIFF XF record format.
            </summary>
            <param name="binWriter">The BinaryWriter who's write method will be used to write out the data.</param>
            <param name="xf">The xf record which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportXFRecords(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Style.XFRecords)">
            <summary>
            Writes all the contained XF records to BIFF format.
            </summary>
            <param name="binWriter">
            The binary writer that should be used to write out the BIFF data.
            </param>
            <param name="cellXfs">
            The XFRecords which need be exported.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportNumberFormats(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Style.NumberFormats)">
            <summary>
            Enumerates each of the number format strings in this collection and writes them out as 
            BIFF FORMAT records.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="formats">The NumberFormats which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportBiffFont(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Style.BiffFont)">
            <summary>
            Export one font.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="bf">The BiffFont which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFont(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Style.ExcelFont)">
            <summary>
            First converts ExcelFont to BiffFont. Then calls ExportBiffFont.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="iaColorMappings">The ExcelFont which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFonts(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Style.ExcelFonts)">
            <summary>
            Enumerates all ExcelFont objects and calls ExportFont.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="fonts">The ExcelFonts which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportPALETTE(System.IO.BinaryWriter,System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Style.COLORREF})">
            <summary>
            Writes the BIFF PALETTE record if there are colors in the m_paletteColors (custom colors).
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="paletteColors">The palette colors which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportWorksheets(System.IO.BinaryWriter)">
            <summary>
            Export all sheets in workbook.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportWorksheet(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Writes this sheet's data (from BOF to EOF) to the specified BinaryWriter.
            </summary>
            <param name="biffWriter">The binary writer that should be used to write out the data.</param>
            <param name="sheet">The sheet which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMergeAreasRecord(System.IO.BinaryWriter,System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Cells.MergeArea})">
            <summary>
            Export the MergedAreas record to the specified BinaryWriter according to the BIFF format.
            </summary>
            <param name="biffWriter">The BinaryWriter to write the data to.</param>
            <param name="areas">The MergeAreasRecord which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMergeArea(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.MergeArea)">
            <summary>
            Export MergeArea record to the specified binary writer according to BIFF format.
            </summary>
            <param name="writer">The BinaryWriter to write this record's data to.</param>
            <param name="ms">The MergeArea which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportHyperlinkRecords(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Export hyperlinks when the version is Biff8.
            </summary>
            <param name="binWriter">The BinaryWriter to write this record's data to.</param>
            <param name="sheet">The sheet which contains the hyperlinks which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.GetDimensions(GrapeCity.SpreadBuilder.DDDimensions)">
            <summary>
            Get BiffDimensions8 which convert from DDDimensions.
            </summary>
            <param name="dimensions">The DDDimensions.</param>
            <returns>Struct BiffDimensions8.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportSheetData(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Writes the data portion of a sheet.  Called from the ExportSheet method to primarily write out the following BIFF records: ROW, DBCELL, and the various "cell records".
            </summary>
            <param name="binWriter">The binary writer to write the data to.</param>
            <param name="sheet">The sheet which contained the sheet data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportRow(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.BiffRow)">
            <summary>
            Export a row.
            </summary>
            <param name="binWriter">The binary writer to write the data to.</param>
            <param name="pRow">The BiffRow which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportDBCell(System.IO.BinaryWriter,System.Collections.Generic.ICollection{System.UInt32},System.UInt16[],System.Int32)">
            <summary>
            Export a BIFF DBCELL record with the specified information.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="indexPatch">
            WriteDBCELL will add the position of this DBCELL record tothe indexPatch arraylist.  
            This is needed because the INDEX record contains an array of offsets to each DBCELL record.
            </param>
            <param name="rowStreamOffsets"></param>
            <param name="iRowCountInThisBlock"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCells(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.BiffCellTable,System.Int32)">
            <summary>
            Exported the cells in a row.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="cells">A BiffCellTable instance which need be exported.</param>
            <param name="rowIndex">An int indicates the index of the row which contains the cells.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCell(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.CellBase,System.Int32)">
            <summary>
            Must be implemented by a derived class.  Uses the specified BinaryWriter to write out the cell's BIFF record begining with teh the record code (or record ID), and including the entire record's data.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="cell">A CellBase instance which need be exported.</param>
            <param name="rowIndex">An int indicates the index of the row which contains the cell.</param>
            <returns>
            Record DATA Length (lenght of data only, not including 2 byte rec code, and 2 byte reclen) in Bytes.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCellLabel(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.CellLabel,System.Int32)">
            <summary>
            Export a BIFF LABEL record (204h) containg the data represented by this object.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="cellLabel">A CellLabel instance which need be exported.</param>
            <param name="rowIndex">An int indicates the index of the row which contains the label cell.</param>
            <returns>
            Record DATA LENGTH (value will not include the 2byte rec code, and 2 byte recsize in bytes.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCellNumber(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.CellNumber,System.Int32)">
            <summary>
            Writes the NUMBER cell value record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="cellNumber">A CellNumber instance which need be exported.</param>
            <param name="rowIndex">An int indicates the index of the row which contains the number cell.</param>
            <returns>Record *data* size in bytes.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCellError(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.CellError,System.Int32)">
            <summary>
            Writes the error cell value record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="cellError">A CellError instance which need be exported.</param>
            <param name="rowIndex">An int indicates the index of the row which contains the error cell.</param>
            <returns>Record *data* size in bytes.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCellBool(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.CellBool,System.Int32)">
            <summary>
            Writes the bool cell value record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="cellBool">A CellBool instance which need be exported.</param>
            <param name="rowIndex">An int indicates the index of the row which contains the bool cell.</param>
            <returns>Record *data* size in bytes.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportCellBlank(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Cells.CellBlank,System.Int32)">
            <summary>
            Writes the data contained by this object in  BIFF BLANK (201h) record format.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="cellBlank">A CellBlank instance which need be exported.</param>
            <param name="rowIndex">An int indicates the index of the row which contains the blank cell.</param>
            <returns>
            The record *DATA* size in bytes.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportDimensions(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.BiffDimensions8)">
            <summary>
            Writes a Biff Dimensions.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="dim">The BiffDimensions8 which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportColInfos(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.BiffColInfos)">
            <summary>
            Writes out a BIFF COLINFO record for each BiffColInfo contained by this sheet.
            The BiffColInfos (BiffColInfo's collection) is compacted first with it's Compact method.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="colInfos">The BiffColInfos which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportColInfo(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.BiffColInfo)">
            <summary>
            Writes this BiffColInfo's data to  BIFF COLINFO record using the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="oColInfo">The BiffColInfo which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportPageSetup(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Printing.PageSetup)">
            <summary>
            Writes the LEFTMARGIN, RIHGTMARGIN, TOPMARGIN, BOTTOMMARGIN records and the SETUP record.
            All the margin records are only written if their value differs from the default.
            The SETUP record is only written if one of the SETUP properties (any property on this class except the margins) were set (regardless of their current value).
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="pageSetup">The PageSetup which need be exported. </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMarginRecord(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Printing.MarginRecord)">
            <summary>
            Serializes this record to the specified BinaryWriter according to the BIFF format.
            </summary>
            <param name="binWriter">The BinaryWriter to serialize this record to.</param>
            <param name="mr">The MarginRecord which need be exported.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportWsBool(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Writes the WSBOOL record.  Mostly default values, but fitToPage option flag for Page Setup dialog is written here.
            </summary>
            <param name="biffWriter">The BinaryWriter to serialize this record to.</param>
            <param name="sheet">The sheet which contains fitToPage value.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportPageBreaks(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.PageBreaks,GrapeCity.SpreadBuilder.BiffRecordID)">
            <summary>
            Writes out the "HORIZONTALPAGEBREAKS" or "VERTICALPAGEBREAKS" record if ncessary.  
            If there are no page breaks then the record is not written.
            </summary>
            <param name="binWriter">
            The BinaryWriter to write data to.
            </param>
            <param name="pageBreaks">
            The PageBreaks which need be exported.
            </param>
            <param name="recHorizontalOrVertical">
            Specify either BiffRecordID.VERTICALPAGEBREAKS or BiffRecordID.HORIZONTALPAGEBREAKS.  Any other record type will cause an ArgumentException to be thrown.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportINDEX(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Writes the BIFF INDEX record.
            </summary>
            <param name="binWriter">
            The BinaryWriter to write to.
            </param>
            <param name="sheet">The DDSheet.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMSODRAWINGGROUP(System.IO.BinaryWriter)">
            <summary>
            Writes the MSODRAWINGGROUP record.  This record should appear in the workbook globals.
            </summary>
            <param name="binWriter">
            The BinaryWriter to write to.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMSODRAWING(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheet,System.Int32)">
            <summary>
            Writes an MSODRAWING record for this sheet to the specified BinaryWriter.
            </summary>
            <param name="binWriter">
            The BinaryWriter to write to.
            </param>
            <param name="sheet">The sheet which contains the images and lines.</param>
            <param name="cnt">The index of image and line array.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMSODRAWINGMasterHeader(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Writes MSODRAWING record (a.k.a. "Drawing Container msofbtDgContainer" in the "MS Office Drawing File Format" Docs).  
            </summary>
            <param name="binWriter">
            The BinaryWriter to write to.
            </param>
            <param name="sheet">The sheet which contains the images and lines.</param>
            <remarks>
            The only way I've ever been able to figure this out is to use BIFF utilities to read teh records, and compare our ouptut to it.  
            Then use the "Microsoft Office 97 Drawing File Format" documentation contained in the "July 1999 MSDN Library" to understand what the heck excel wrote out.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportImageObj(System.IO.BinaryWriter,System.UInt16)">
            <summary>
            Write the image obj record.(BIFF8)
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="objid">The BiffRecordID.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportLineObj(System.IO.BinaryWriter,System.UInt16)">
            <summary>
            Write the line obj record.(BIFF8)
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="objid">The BiffRecordID.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportLines(System.IO.BinaryWriter,System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Imaging.OBJ_line},GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Writes the OBJ_line objects on this sheet to the specified BinaryWriter with the OBJ_line.write_to_stream method.
            </summary>
            <param name="binWriter">The BinaryWriter to write the data to.</param>
            <param name="lines">The lines array.</param>
            <param name="lines">The sheet which contains lines.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportImagesForBiff7(System.IO.BinaryWriter,System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Imaging.OBJImage})">
            <summary>
            Writes the OBJ_meta objects on this sheet to the specified BinaryWriter with the OBJ_meta.write_to_stream method.
            </summary>
            <param name="binWriter">The BinaryWriter to write the data to.</param>
            <param name="imagesList">The image list.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFtEnd(System.IO.BinaryWriter)">
            <summary>
            Write ftEnd subRecord of obj record.
            </summary>
            <param name="binWriter">The BinaryWriter to write the data to.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFtCF(System.IO.BinaryWriter)">
            <summary>
            Write ftCF subRecord of obj record. (image only)
            </summary>
            <param name="binWriter">The BinaryWriter to write the data to.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFtPioGrbit(System.IO.BinaryWriter)">
            <summary>
            Write ftPioGrbit subRecord of obj record. (image only)
            </summary>
            <param name="binWriter">The BinaryWriter to write the data to.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFtCmo(System.IO.BinaryWriter,System.UInt16,System.UInt16)">
            <summary>
            Write ftCmo subRecord of obj record.
            </summary>
            <param name="binWriter">The BinaryWriter to write the data to.</param>
            <param name="objType">obj type id</param>
            <param name="objid">obj id</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFBSE(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.FBSE)">
            <summary>
            Writes this structure's 36 byte's of data to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFDGGcustom(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.FDGGcustom)">
            <summary>
            Writes this structs data to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFPSPLcustom(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.FPSPLcustom)">
            <summary>
            Writes out this strcutures 32 bits of data.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFOPTE(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.FOPTE)">
            <summary>
            Stuffs the values of the members of FOPTE into the bits of a ushort, and a uint and 
            writes out the data.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportFSP(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.FSP)">
            <summary>
            Writes this struct's data to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportGridratio(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.gridratio)">
            <summary>
            Writes this structure's data to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMSOFBH(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.MSOFBH)">
            <summary>
            Stuffs the members of MSOFBH (8 bytes) into two uint's and writes out the data.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMSOMetaHeader(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.MSOMetaHeader)">
            <summary>
            Writes this struct's 50 bytes of data to the specified binary writer.
            </summary>
            <param name="binWriter">
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportMSOPNGHeader(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.MSOPNGHeader)">
            <summary>
            Writes this structs 17 bytes to the specified BinaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportOBJhead(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.OBJhead)">
            <summary>
            Writes the Offset 4 (cObj) to offset 32 of the OBJ record.  
            This is the common OBJ record data, regardless what the OBJ record represents this HEAD data is always present.
            
            </summary>
            <param name="binWriter">
            The BinaryWriter to write the data to.
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportOBJ_grbit(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.OBJ_grbit)">
            <summary>
            Writes this structures 2 bytes of data to the specified binaryWriter.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportOBJ_line(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.OBJ_line,System.UInt32)">
            <summary>
            This override simply calls the other write_to_stream function with objectID set to objectNumber.
            </summary>
            <param name="biffVer">
            Inidcates the version of BIFF this output should be compatable with.
            </param>
            <param name="binWriter">
            The BinaryWriter to use to write out the data.
            </param>
            <param name="objectNumber">
            
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.MakeMsofbtOPT(GrapeCity.SpreadBuilder.Imaging.OBJImage,System.UInt32)">
            <summary>
            Creates a msofbtOPT property table array containing the image data for BIFF8 
            "MS Office 97 Drawing Format"/"Escher".  
            You can access the property table (which is actually a byte array of output data) by calling get_msofbtOPT.
            </summary>
            <param name="cnt">
            This indicates "the blip to display" by an ID/index into a global list of shapes or images.  
            This will be the value of the MSO Drawing Shape Property "pib" (260dec), 
            described as "blib to display".
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.MakeMsofbtOPT(GrapeCity.SpreadBuilder.Imaging.OBJ_line)">
            <summary>
            msofbtOPT creates a "Property Table Record" as a byte array that is accessable by 
            calling get_msofbtOPT().  This creates BIFF8 style Escher data, although the OBJ_line.WriteToBiff(..) creates BIFF 5 &amp; 7 style data.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportOBJlinetail(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.OBJlinetail)">
            <summary>
            Writes out this structs BIFF5 &amp; BIFF7 8 bytes of formatted data.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportOBJImage(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.OBJImage,System.UInt32,System.UInt16)">
            <summary>
            Writes out image for BIFF7, with OBJ, IMDATA and CONTINUE records.
            The resulting output will be BMP/DIB or WMF.
            You can make objectID the same as objectNumber if you don't know what else to do, thats what CPP code did.
            </summary>
            <param name="biffVer"></param>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
            <param name="objectNumber"></param>
            <param name="objectID"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.BiffExport.ExportOBJmetafiletail(System.IO.BinaryWriter,GrapeCity.SpreadBuilder.Imaging.OBJmetafiletail)">
            <summary>
            Writes out the "Picture Object Fields" portion of the OBJ record.  This should come after the common object data of the OBJ record.
            </summary>
            <param name="binWriter">The binary writer that should be used to write out the data.</param>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BofTypes">
            <summary>
            Different types of BIFF BOF records.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools">
            <summary>
            The tool class for encrypting OpenXml format and exporting it. Can find the spec in [MS-OFFCRYPTO].
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.Export(System.IO.Stream,System.String,System.String)">
            <summary>
            Export the inputStream with encryption to a file.
            </summary>
            <param name="inputStream">An input stream which is a OpenXml format document.</param>
            <param name="path">The output file path.</param>
            <param name="password">The password</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.Export(System.IO.Stream,System.IO.Stream,System.String)">
            <summary>
            Export the inputStream with encryption to an outputstream.
            </summary>
            <param name="inputStream">An input stream which is a OpenXml format document.</param>
            <param name="outputStream">The output stream.</param>
            <param name="password">The password</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.ExportCore(System.IO.Stream,DataDynamics.StructuredStorage.IStorage,System.String)">
            <summary>
            Export the inputStream with encryption to an IStorage.
            </summary>
            <param name="inputStream">An input stream which is a OpenXml format document.</param>
            <param name="stg">IStorage instance.</param>
            <param name="password">The password</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateDataSpaces(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create DataSpaces IStorage.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateVersion(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create Version IStream.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateTransformInfo(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create TransformInfo IStorage.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateStrongEncryptionTransform(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create StrongEncryptionTransform IStorage.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreatePrimary(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create Primary IStream.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateDataSpaceInfo(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create DataSpaceInfo IStorage.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateStrongEncryptionDataSpace(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create StrongEncryptionDataSpace IStream.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateDataSpaceMap(DataDynamics.StructuredStorage.IStorage)">
            <summary>
            Create DataSpaceMap IStream.
            </summary>
            <param name="stg">The parent IStorage.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateUNICODELPP4(System.String,System.IO.BinaryWriter)">
            <summary>
            Make a string convert to UNICODELPP4.
            </summary>
            <param name="p">The string which need be converted.</param>
            <param name="binWriter">The BinaryWriter which trite UNICODELPP4 to.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateStringData(System.String,System.IO.BinaryWriter)">
            <summary>
            Write the string to BinaryWriter.
            </summary>
            <param name="p">The string.</param>
            <param name="binWriter">The BinaryWriter.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateEncryptionInfo(DataDynamics.StructuredStorage.IStorage,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Create EncryptionInfo IStream.
            </summary>
            <param name="stg">The parent IStorage.</param>
            <param name="salt">The salt of the password.</param>
            <param name="pwv">EncryptedVerifier (16 bytes)</param>
            <param name="pwvh">EncryptedVerifierHash (variable)</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptedOpenXmlTools.CreateEncryptedPackage(DataDynamics.StructuredStorage.IStorage,System.Byte[],System.Int64)">
            <summary>
            Create EncryptionInfo IStream.
            </summary>
            <param name="stg">The parent IStorage.</param>
            <param name="encrypted">The encrypted input stream</param>
            <param name="length">The length of input stream</param>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.IExport">
            <summary>
            The interface for spreadsheet export.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.IExport.Export(GrapeCity.SpreadBuilder.Workbook,System.String)">
            <summary>
            Export excel to a file.
            </summary>
            <param name="workbook">The workbook of spreadsheet.</param>
            <param name="path">The export file path.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.IExport.Export(GrapeCity.SpreadBuilder.Workbook,System.IO.Stream)">
            <summary>
            Export excel to a stream.
            </summary>
            <param name="workbook">The workbook of spreadsheet.</param>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.OpenXmlExport">
            <summary>
            This class make SpreadBuilder Workbook export into OpenXmlSDK's SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.OpenXmlExport.OpenXmlStandard">
            <summary>
            Gets or sets the level of Open XML document conformance on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.Export(GrapeCity.SpreadBuilder.Workbook,System.String)">
            <summary>
            Export excel to a file.
            </summary>
            <param name="workbook">The workbook of spreadsheet.</param>
            <param name="path">The export file path.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.Export(GrapeCity.SpreadBuilder.Workbook,System.IO.Stream)">
            <summary>
            Export excel to a stream.
            </summary>
            <param name="workbook">The workbook of spreadsheet.</param>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportToStream(System.IO.Stream)">
            <summary>
            Export excel to a stream.
            </summary>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportCore(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument)">
            <summary>
            Export to SpreadsheetDocument.
            </summary>
            <param name="doc">The SpreadsheetDocument instance.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.CreateUri(System.String)">
            <summary>
            Create Uri according to a string.
            </summary>
            <param name="uriStr">The string used to convert.</param>
            <returns>A Uri instance.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.GetColor(System.UInt16)">
            <summary>
            Get color according to Workbook's color list.
            </summary>
            <param name="index">The color index.</param>
            <returns>The Color</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.GetXfIndex(System.Int32)">
            <summary>
            Get the unique Xf record index.
            </summary>
            <param name="originXfIndex">The original Xf record index.</param>
            <returns>The unique Xf record index.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.SetColorRgb(DocumentFormat.OpenXml.Spreadsheet.ColorType,System.UInt16)">
            <summary>
            Set ColorType.Rgb.
            </summary>
            <param name="colorType">The ColorType whose Rgb property need be set.</param>
            <param name="index">The index of the color in Workbook's color list.</param>
            <returns>The ColorType whose Rgb property is set.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.GetReferenceString(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get Reference string according.
            </summary>
            <param name="colIndex1">The first column index.</param>
            <param name="rowIndex1">The first row index.</param>
            <param name="colIndex2">The second column index.</param>
            <param name="rowIndex2">The second row index.</param>
            <returns>The string represents Reference.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.GetCellReferenceString(System.Int32,System.Int32)">
            <summary>
            Get CellReference string according.
            </summary>
            <param name="colIndex">The column index.</param>
            <param name="rowIndex">The row index.</param>
            <returns>The string represents CellReference.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportWorkbook(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument)">
            <summary>
            Export WorkbookPart of SpreadsheetDocument.
            </summary>
            <param name="doc">The SpreadsheetDocument instance.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportWorkbookProtection(DocumentFormat.OpenXml.Spreadsheet.Workbook,System.Boolean,System.Boolean)">
            <summary>
            Export WorkbookProtection of WorkbookPart.
            </summary>
            <param name="workbookDoc">The WorkbookPart of SpreadsheetDocument</param>
            <param name="lockStructure">A bool indicates whether protect workbook structure.</param>
            <param name="lockWindows">A bool indicates whether lock the workbook window.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportBookViews(DocumentFormat.OpenXml.Spreadsheet.Workbook,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Export BookViews of WorkbookPart.
            </summary>
            <param name="workbookDoc">The WorkbookPart of SpreadsheetDocument</param>
            <param name="selectedIndexes">An IList generics indicates the selected DDSheets' indexes.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportFileSharing(DocumentFormat.OpenXml.Spreadsheet.Workbook,System.Boolean,System.String,System.String)">
            <summary>
            Export FileSharing of WorkbookPart.
            </summary>
            <param name="workbookDoc">The WorkbookPart of SpreadsheetDocument</param>
            <param name="readOnlyRecommended">A bool value indicates readOnlyRecommended.</param>
            <param name="wpw">A string indicates WritePassword.</param>
            <param name="protectedBy">A string indicates the person who protects the spreadsheet.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportStyles(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument)">
            <summary>
            Export WorkbookStylesPart of SpreadsheetDocument.
            </summary>
            <param name="doc">The SpreadsheetDocument instance.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportNumberingFormats(DocumentFormat.OpenXml.Spreadsheet.Stylesheet,GrapeCity.SpreadBuilder.Style.NumberFormats)">
            <summary>
            Export NumberingFormats of Stylesheet.
            </summary>
            <param name="sse">The Stylesheet of WorkbookStylesPart.</param>
            <param name="numberFormats">The NumberFormats of SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportDefaultCellStyleFormats(DocumentFormat.OpenXml.Spreadsheet.Stylesheet)">
            <summary>
            Export the master formatting records which define the formatting for all named cell styles in this workbook
            </summary>
            <param name="sse">The Stylesheet of WorkbookStylesPart.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportCellFormats(DocumentFormat.OpenXml.Spreadsheet.Stylesheet,GrapeCity.SpreadBuilder.Style.XFRecords)">
            <summary>
            Export the master formatting records which define the formatting applied to cells in this workbook.
            </summary>
            <param name="sse">The Stylesheet of WorkbookStylesPart.</param>
            <param name="cellXfs">The XFRecords instance indicates to cell styles in SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportCellFormat(DocumentFormat.OpenXml.OpenXmlElement,GrapeCity.SpreadBuilder.Style.XFRecord8,System.Boolean)">
            <summary>
            Export the master formatting record.
            </summary>
            <param name="parent">An OpenXmlElement instance indicates parent element.</param>
            <param name="xf">The cell style which need be exported.</param>
            <param name="forCellStyle">A bool value indicate if the parent element is CellStyleFormats.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportFonts(DocumentFormat.OpenXml.Spreadsheet.Stylesheet,GrapeCity.SpreadBuilder.Style.ExcelFonts)">
            <summary>
            Export fonts.
            </summary>
            <param name="sse">The Stylesheet of WorkbookStylesPart.</param>
            <param name="fonts">The fonts of SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportFills(DocumentFormat.OpenXml.Spreadsheet.Stylesheet,GrapeCity.SpreadBuilder.INoRepeatList{GrapeCity.SpreadBuilder.Style.Fill})">
            <summary>
            Export Fills of Stylesheet. The Fills represents the background of cell.
            </summary>
            <param name="sse">The Stylesheet of WorkbookStylesPart.</param>
            <param name="fills">The fills in SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportBorders(DocumentFormat.OpenXml.Spreadsheet.Stylesheet,GrapeCity.SpreadBuilder.INoRepeatList{GrapeCity.SpreadBuilder.Style.CellBorder})">
            <summary>
            Export border styles of cell.
            </summary>
            <param name="sse">The Stylesheet of WorkbookStylesPart.</param>
            <param name="borders">The borders in SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportSharedStrings(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,GrapeCity.SpreadBuilder.Cells.SharedStrings)">
            <summary>
            Export SharedStringTablePart of SpreadsheetDocument.
            </summary>
            <param name="doc">The SpreadsheetDocument instance.</param>
            <param name="sharedStrings">The SharedStrings in SpreadBuilder Wordbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportWorksheets(DocumentFormat.OpenXml.Packaging.SpreadsheetDocument,GrapeCity.SpreadBuilder.DDSheets)">
            <summary>
            Export the sheets.
            </summary>
            <param name="doc">The SpreadsheetDocument instance.</param>
            <param name="ddsheets">A DDSheets instance indicates the sheets in SpreadBuilder.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportWorksheet(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.String,DocumentFormat.OpenXml.Packaging.SpreadsheetDocument)">
            <summary>
            Export sheet includes WorksheetPart, Worksheet of WorkbookPart and related DrawingsPart.
            </summary>
            <param name="sheet">A DDSheet instance.</param>
            <param name="doc">The SpreadsheetDocument.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportSheetFormatPr(DocumentFormat.OpenXml.OpenXmlWriter)">
            <summary>
            Export sheet formatting properties.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportSheetPr(DocumentFormat.OpenXml.OpenXmlWriter,System.Boolean)">
            <summary>
            Export Sheet-level properties includes page setup properties of the worksheet.
            </summary>
            <param name="fitToPage">A bool value indicate fitToPage of PageSetup.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportSheetViews(DocumentFormat.OpenXml.OpenXmlWriter,System.Boolean,System.Boolean)">
            <summary>
            Export Worksheet views collection.
            </summary>
            <param name="showGridLines">A bool value indicates showGridLines.</param>
            <param name="isSelected">A bool value indicates DDSheet.Selected.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportHyperlinks(DocumentFormat.OpenXml.OpenXmlWriter,DocumentFormat.OpenXml.Packaging.WorksheetPart,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Export Hyperlinks of WorksheetPart.
            </summary>
            <param name="worksheetPart">The WorksheetPart.</param>
            <param name="sheet">A DDSheet instance of SpreadBuilder Workbook.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportPageSetup(DocumentFormat.OpenXml.OpenXmlWriter,GrapeCity.SpreadBuilder.Printing.PageSetup)">
            <summary>
            Export Page setup settings for the worksheet.
            </summary>
            <param name="pageSetup">The PageSetup setting of DDSheet.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportPageMargins(DocumentFormat.OpenXml.OpenXmlWriter,GrapeCity.SpreadBuilder.Printing.PageSetup)">
            <summary>
            Export Page margins for a sheet or a custom sheet view.
            </summary>
            <param name="pageSetup">The PageSetup setting of DDSheet.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportSheetData(DocumentFormat.OpenXml.OpenXmlWriter,GrapeCity.SpreadBuilder.BiffRowTable)">
            <summary>
            Export SheetData element.
            </summary>
            <param name="biffRowTable">The rows in DDSheet.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportColInfos(DocumentFormat.OpenXml.OpenXmlWriter,GrapeCity.SpreadBuilder.BiffColInfos)">
            <summary>
            Export Columns element.
            </summary>
            <param name="biffColInfos">A BiffColInfos instance in DDSheet.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportMergeCells(DocumentFormat.OpenXml.OpenXmlWriter,System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Cells.MergeArea})">
            <summary>
            Export MergeCells element of WorksheetPart.
            </summary>
            <param name="mergeAreasRecord">A MergeAreasRecord instance in DDSheet.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportPageBreaks(DocumentFormat.OpenXml.OpenXmlWriter,GrapeCity.SpreadBuilder.PageBreaks,System.Boolean)">
            <summary>
            Export RowBreaks or ColumnBreaks element of WorksheetPart.
            </summary>
            <param name="pageBreaks">A PageBreaks instance indicates m_pageBreaksHorizontal or m_pageBreaksVertical in DDSheet.</param>
            <param name="isRow">A bool value indicates whether the PageBreaks is for creating RowBreaks or ColumnBreaks.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportCell(DocumentFormat.OpenXml.OpenXmlWriter,GrapeCity.SpreadBuilder.Cells.CellBase,DocumentFormat.OpenXml.Spreadsheet.Cell)">
            <summary>
            Export Cell element.
            </summary>
            <param name="cell">A CellBase instance in SpreadBuilder BiffRow.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportDrawing(DocumentFormat.OpenXml.OpenXmlWriter,DocumentFormat.OpenXml.Packaging.WorksheetPart,System.Int32,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Export DrawingsPart includes adding DrawingsPart, adding Drawing element and adding Image part.
            </summary>
            <param name="worksheetPart"></param>
            <param name="sheetId"></param>
            <param name="sheet"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportLines(DocumentFormat.OpenXml.Drawing.Spreadsheet.WorksheetDrawing,System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Imaging.OBJ_line},GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Export lines.
            </summary>
            <param name="wsd">WorksheetDrawing</param>
            <param name="linesList">A list of lines.</param>
            <param name="sheet">DDSheet</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportImages(DocumentFormat.OpenXml.Packaging.DrawingsPart,DocumentFormat.OpenXml.Drawing.Spreadsheet.WorksheetDrawing,System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Imaging.OBJImage},System.Int32,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Export images.
            </summary>
            <param name="drawingsPart">DrawingsPart</param>
            <param name="worksheetDrawing">WorksheetDrawing</param>
            <param name="imagesList">A list of images.</param>
            <param name="sheetId">The sheet's id</param>
            <param name="sheet">DDSheet</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportImageLineStyle(DocumentFormat.OpenXml.Drawing.Spreadsheet.ShapeProperties,GrapeCity.SpreadBuilder.Imaging.OBJImage)">
            <summary>
            Export image's LineStyle.
            </summary>
            <param name="sp">ShapeProperties</param>
            <param name="oImage">OBJImage</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportImageFillStyle(DocumentFormat.OpenXml.Drawing.Spreadsheet.ShapeProperties,GrapeCity.SpreadBuilder.Imaging.OBJImage)">
            <summary>
            Export image's FillStyle.
            </summary>
            <param name="sp">ShapeProperties</param>
            <param name="oImage">OBJImage</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportImageSourceRectangle(DocumentFormat.OpenXml.Drawing.Spreadsheet.BlipFill,GrapeCity.SpreadBuilder.Imaging.OBJImage)">
            <summary>
            Export SourceRectangle.
            </summary>
            <param name="blipFill">BlipFill</param>
            <param name="oImage">OBJImage</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.ExportHyperlinkOnClick(DocumentFormat.OpenXml.Drawing.Spreadsheet.NonVisualDrawingProperties,DocumentFormat.OpenXml.Packaging.DrawingsPart,GrapeCity.SpreadBuilder.Imaging.OBJImage,System.Int32)">
            <summary>
            Export HyperlinkOnClick element of DrawingsPart.
            </summary>
            <param name="nvdp">The NonVisualDrawingProperties instance who is HyperlinkOnClick's parent element.</param>
            <param name="drawingsPart">The DrawingsPart.</param>
            <param name="oImage">An OBJImage instance.</param>
            <param name="cnt">The image's index.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.GetColumnOffset(System.Int32,System.Int32,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            ColumnOffset of xls format transform into ColumnOffset of xlsx format and return ColumnOffset string.
            </summary>
            <param name="columnIndex">The column index.</param>
            <param name="xlsColOffset">The ColumnOffset of xls format.</param>
            <param name="sheet">The DDSheet.</param>
            <returns>A string indicates ColumnOffset of xlsx format.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.OpenXmlExport.GetRowOffset(System.Int32,System.Int32,GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            RowOffset of xls format transform into RowOffset of xlsx format and return RowOffset string.
            </summary>
            <param name="rowIndex">The row index</param>
            <param name="xlsRowOffset">The RowOffset of xls format.</param>
            <param name="sheet">The DDSheet.</param>
            <returns>A string indicates RowOffset of xlsx format.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.StandardEncryption">
            <summary>
            This approach utilizes a binary EncryptionInfo structure, 
            uses Advanced Encryption Standard (AES) as an encryption 
            algorithm, and SHA-1 as a hashing algorithm.
            Can find the spec in [MS-OFFCRYPTO].
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.StandardEncryption.H(System.Byte[],System.Byte[])">
            <summary>
            Perform SHA1Managed hash.
            </summary>
            <param name="b1">The first bytes array.</param>
            <param name="b2">The second bytes array.</param>
            <returns>The hashed bytes array.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.StandardEncryption.GenerateRandomBytes(System.Int32)">
            <summary>
            Get a random bytes.
            </summary>
            <param name="length">The length of the random bytes.</param>
            <returns>The random bytes.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.StandardEncryption.EncryptToBytes(System.IO.Stream,System.String,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Encrypt stream to bytes with AES encryption, and output the salt, 
            encrypted verifier and encrypted verifier hash.
            </summary>
            <param name="inputStream">The input stream.</param>
            <param name="password">The password.</param>
            <param name="salt">Outputed salt.</param>
            <param name="encryptedVerifier">Outputed encrypted verifier.</param>
            <param name="encryptedVerifierHash">Outputed encrypted verifier hash.</param>
            <returns>Return encrypted bytes.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SheetLayout.IsCellMergedInRow(GrapeCity.SpreadBuilder.Cells.DDCell)">
            <summary>
            Gets whether the cell is merged in multiple rows.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.SpreadUtility">
            <summary>
            This class contains generic BIFF related functions that have little or no depdendencies 
            on other classes, or that are used from multiple classes such as WriteBOF and WriteEOF 
            functions.  As WriteBOF/EOF is used from DDSheet, Workbook, etc...
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.DEFAULT_BUILTINSTYLES_FORMATINDEXES">
            <summary>
            Format indexes for default BuiltInStyles.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.DEFAULT_BUILTINSTYLES_FORMATINDEXES_JP">
            <summary>
            Format indexes for default BuiltInStyles when local culture is Japanese.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.DEFAULT_BUILTINSTYLES">
            <summary>
            Stores the default BuiltInStyles.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.JAPANESE_LCID">
            <summary>
            Japanese local culture identifier
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.DEFAULT_AUTHOR">
            <summary>
            The default author.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.DEFAULT_PROTECTEDBY">
            <summary>
            The default name of person who protect the workbook.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.EMUS_PER_INCH">
            <summary>
            The integer represents EMUs per inch.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.EMUS_PER_POINT">
            <summary>
            The integer represents EMUs per point.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLS_MAX_COLUMN_COUNT">
            <summary>
            The max colum count that an Excel sheet can have in xls format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLSX_MAX_COLUMN_COUNT">
            <summary>
            The max colum count that an Excel sheet can have in xlsx format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLS_MAX_ROW_COUNT">
            <summary>
            The max row count that an Excel sheet can have in xls format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLSX_MAX_ROW_COUNT">
            <summary>
            The max row count that an Excel sheet can have in xlsx format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLS_MAX_HPB_COUNT">
            <summary>
            The max HorizontalPageBreaks count that an Excel sheet can have in xls format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLSX_MAX_HPB_COUNT">
            <summary>
            The max HorizontalPageBreaks count that an Excel sheet can have in xlsx format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLS_MAX_VPB_COUNT">
            <summary>
            The max VerticalPageBreaks count that an Excel sheet can have in xls format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLSX_MAX_VPB_COUNT">
            <summary>
            The max VerticalPageBreaks count that an Excel sheet can have in xlsx format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLS_MAX_PASSWORD_LENGTH">
            <summary>
            The max length of Password/ProtectWorkbookPassword that workbook can have in xls format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.XLSX_MAX_PASSWORD_LENGTH">
            <summary>
            The max length of Password/ProtectWorkbookPassword that workbook can have in xlsx format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility._dpiX">
            <summary>
            Represent the DpiX.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility._pixelsPerChar">
            <summary>
            Represent the pixels of a char.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.SpreadUtility.DefaultRowHeight">
            <summary>
            The default row height depends on default font. 
            The default font is "Arial" and the size is 10.
            Please refer to Workbook.DefaultFontName and DefaultFontSizeInPoints.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.SpreadUtility.DpiX">
            <summary>
            Get DpiX.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.SpreadUtility.PixelsPerChar">
            <summary>
            Get pixels of per char.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.FileFormatString(GrapeCity.SpreadBuilder.FileFormat)">
            <summary>
            Convert file version to string.
            </summary>
            <param name="version">FileFormat</param>
            <returns>A string indicates the file version.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.GetMaxPasswordLength(GrapeCity.SpreadBuilder.FileFormat)">
            <summary>
            The max length of password/ProtectWorkbookPassword that the workbook can have in special Excel format.
            </summary>
            <param name="version">FileFormat</param>
            <returns>A integer indicates the max length of password.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.GetMaxColumnCount(GrapeCity.SpreadBuilder.FileFormat)">
            <summary>
            The max colum count that an Excel sheet can have in special Excel format.
            </summary>
            <param name="version">FileFormat</param>
            <returns>A integer indicates The max colum count that an Excel 
            sheet can have in special Excel format.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.GetMaxRowCount(GrapeCity.SpreadBuilder.FileFormat)">
            <summary>
            The max row count that an Excel sheet can have in special Excel format.
            </summary>
            <param name="version">FileFormat</param>
            <returns>A integer indicates The max colum count that an Excel 
            sheet can have in special Excel format.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.GetMaxHorizontalPageBreaksCount(GrapeCity.SpreadBuilder.FileFormat)">
            <summary>
            The max HorizontalPageBreaks count that an Excel sheet can have in special Excel format.
            </summary>
            <param name="version">FileFormat</param>
            <returns>A integer indicates The max HorizontalPageBreaks count that an Excel 
            sheet can have in special Excel format.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.GetMaxVerticalPageBreaksCount(GrapeCity.SpreadBuilder.FileFormat)">
            <summary>
            The max VerticalPageBreaks count that an Excel sheet can have in special Excel format.
            </summary>
            <param name="version">FileFormat</param>
            <returns>A integer indicates The max VerticalPageBreaks count that an Excel 
            sheet can have in special Excel format.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ColumnWidthToPixel(System.Int32)">
            <summary>
            Transform the Excel column width to pixel.
            </summary>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.RowHeightToPixel(System.Int32)">
            <summary>
            Convert Excel Row Height to pixel
            </summary>
            <param name="height">Row Height</param>
            <returns>A float</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ColumnWidthToEMUs(System.Int32)">
            <summary>
            Convert Excel Column Width to EMUs.
            </summary>
            <param name="value">Excel Column Width</param>
            <returns>A float indicates EMUs</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.RowHeightToEMUs(System.Int32)">
            <summary>
            Convert Excel Row Height to EMUs.
            </summary>
            <param name="value">pixel</param>
            <returns>A float indicates EMUs</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.PixelToEMUs(System.Int32)">
            <summary>
            Convert pixel to EMUs.
            </summary>
            <param name="value">an integer indicates a pixel value</param>
            <returns>A float indicates EMUs</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.PixelToEMUs(System.Single)">
            <summary>
            Convert pixel to EMUs.
            </summary>
            <param name="value">a float indicates a pixel value</param>
            <returns>A float indicates EMUs</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.BytesToString(System.Byte[],System.String)">
            <summary>
            Transform bytes to string with special seperator.
            </summary>
            <param name="bytes">The bytes which need be transformed.</param>
            <param name="seperator">A string indicates the seperator.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.InchesToExcelWidth(System.Single)">
            <summary>
            Excel's width unit is defined as 1/256 of a character's width. 
            There is a very complex way to accurately determine this value, which is initialized once, and used by this function.
            </summary>
            <param name="inches"></param>
            <returns></returns>
            <remarks>
            - The primary source of information on how this conversion is done is from a MS KB article titled "XL2000: How Column Widths Are Determined in Excel" with article number "214123" or "Q214123".  
            Some very relevant info is below.
            
            -Excel begins with a default width of 8 characters and translates this into a given number of pixels, 
            depending on the Normal style font. 
            -It then rounds this number up to the nearest multiple of 8 pixels.
            -The number that you see in the Column Width dialog box is the pixel width retranslated into character units.
            -Numbers are fixed-spaced with most proportional fonts.
            - Spreadbuilder's default font is the proportional (not-fixed width) Arial 10.
            
            The saved value in Excel an integer which is actually 1/256 of a character width
            
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.CalcCharactersPerInchX">
            <summary>
            Used to determine how many pixels wide the default character in excel is.  This is used to determine how to convert inches to and from the "Excel Width Unit".
            Called by InitStatics().
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.InchesToExcelHeight(System.Single)">
            <summary>
            Excel's row height is specified in 1/20th of a point.
            </summary>
            <param name="inches"></param>
            <returns>The height in 1/20th of a point rounded down to the nearest inch.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.BorderStyleToBiff7BorderStyle(GrapeCity.SpreadBuilder.Style.BorderLineStyle)">
            <summary>
            Converts a standard border style value (BIFF8) to a BIFF7 border style value.
            </summary>
            <param name="biff8BorderStyle">The BIFF8 border style value (dgTop, dgLeft, etc..).</param>
            <returns>The closest match in BIFF7.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ToUnderlineValues(GrapeCity.SpreadBuilder.Style.FontUnderlineStyles)">
            <summary>
            Convert FontUnderlineStyles to OpenXml UnderlineValues.
            </summary>
            <param name="style">FontUnderlineStyles</param>
            <returns>UnderlineValues</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.MSOBLIPTYPEToImagePartType(GrapeCity.SpreadBuilder.Imaging.MSOBLIPTYPE)">
            <summary>
            Convert MSOBLIPTYPE to ImagePartType.
            </summary>
            <param name="type">MSOBLIPTYPE</param>
            <returns>ImagePartType</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ErrorValueToString(GrapeCity.SpreadBuilder.Cells.BiffCellBoolErrValues)">
            <summary>
            Get error string according to BiffCellErrorValues.
            </summary>
            <param name="value">BiffCellErrorValues</param>
            <returns>return the error string.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ToPresetLineDashValues(GrapeCity.SpreadBuilder.Imaging.LineStyles)">
            <summary>
            Convert LineStyles to PresetLineDashValues.
            </summary>
            <param name="style">LineStyles</param>
            <returns>PresetLineDashValues</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ToLineEndValues(GrapeCity.SpreadBuilder.Imaging.LineArrowHeadStyles)">
            <summary>
            Convert LineArrowHeadStyles to LineEndValues.
            </summary>
            <param name="style">LineArrowHeadStyles</param>
            <returns>LineEndValues</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ToPresetLineDashValues(GrapeCity.SpreadBuilder.Imaging.ImageLineStyle)">
            <summary>
            Convert ImageLineStyle to PresetLineDashValues.
            </summary>
            <param name="style">ImageLineStyle</param>
            <returns>PresetLineDashValues</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.CreateFixedPoint(System.Single)">
            <summary>
            http://msdn.microsoft.com/en-us/library/dd910765
            Specifies an approximation of a real number, where the 
            approximation has a fixed number of digits after the radix point.
            Value of the real number = Integral + (Fractional / 65536.0)
            </summary>
            <param name="f"></param>
            <returns>A byte array of FixedPoint.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.ColumnNumToLetter(System.Int32)">
            <summary>
            Convert column number to column letter.
            </summary>
            <param name="colNum">colNum is column index plus 1</param>
            <returns>Return the letter.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.GetStartOffset(GrapeCity.SpreadBuilder.DDSheet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the start offset for a shape or image.
            </summary>
            <param name="sheet">The DDSheet</param>
            <param name="startIndex">The start row/column's index</param>
            <param name="startPixel">The start position and the unit is pixel.</param>
            <param name="isRow">Whether it is for a row offset.</param>
            <returns>The start position and the unit is excel's unit(1/256 or 1/1024).</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.SpreadUtility.CalculateEndIndexAndOffset(GrapeCity.SpreadBuilder.SheetLayout,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Calculate image object's end anchor's index and offset.
            </summary>
            <param name="sheetLayout">The SheetLayout</param>
            <param name="startIndex">The start anchor's index</param>
            <param name="startOffset">The start anchor's offset</param>
            <param name="imageSize">The image's height or width and the unit is pixel</param>
            <param name="isRow">A boolean indicates whether calculate the value for row or column direction</param>
            <param name="endIndex">Output the end anchor's index</param>
            <param name="endOffset">Output the end anchor's offset</param>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffVersion">
            <summary>
            Different versions of BIFF.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffVersion.V7">
            <summary>
            Version 7 of the Excel File format is used to support Excel 95.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.BiffVersion.V8">
            <summary>
            Version 8 of the Excel File format supports Excel 97-Excel 2002.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.FileFormat">
            <summary>
            Specifies the file format that the outputted file should support.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.FileFormat.Xls97Plus">
            <summary>
            Optimized for Microsoft Excel 97 and newer versions.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.FileFormat.Xls95">
            <summary>
            Microsoft Excel 95 format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.FileFormat.Xlsx">
            <summary>
            Microsoft Excel OpenXml format.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.CellBorder">
            <summary>
            This class is for Open Xml.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.CellBorder._diagonalDown">
            <summary>
            Represent whether show DiagonalDown border.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.CellBorder._diagonalUp">
            <summary>
            Represent whether show DiagonalUp border.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.CellBorder._left">
            <summary>
            Represent the left BorderStyle.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.CellBorder._top">
            <summary>
            Represent the top BorderStyle.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.CellBorder._right">
            <summary>
            Represent the right BorderStyle.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.CellBorder._bottom">
            <summary>
            Represent the bottom BorderStyle.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.CellBorder._diagonal">
            <summary>
            Represent the diagonal BorderStyle.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.CellBorder.#ctor">
            <summary>
            Create CellBorder instance.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.CellBorder.DiagonalDown">
            <summary>
            Gets and sets whether show DiagonalDown border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.CellBorder.DiagonalUp">
            <summary>
            Gets and sets whether show DiagonalUp border.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.CellBorder.Left">
            <summary>
            Gets left BorderStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.CellBorder.Top">
            <summary>
            Gets top BorderStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.CellBorder.Right">
            <summary>
            Gets right BorderStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.CellBorder.Bottom">
            <summary>
            Gets bottom BorderStyle.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.CellBorder.Diagonal">
            <summary>
            Gets diagonal BorderStyle.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.CellBorder.Equals(System.Object)">
            <summary>
            Compare with other CellBorder.
            </summary>
            <param name="obj">The other CellBorder.</param>
            <returns>A bool value indicates if they have the same properies' value.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.CellBorder.GetHashCode">
            <summary>
            Returns the hash code for the value of this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BorderStyle">
            <summary>
            This class is for Open Xml.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderStyle.Color">
            <summary>
            Gets and sets the color of the border.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderStyle.Style">
            <summary>
            Gets and sets BorderLineStyle.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.BorderStyle.Equals(System.Object)">
            <summary>
            Compare with other BorderStyle.
            </summary>
            <param name="obj">The other CellBorder.</param>
            <returns>A bool value indicates if they have the same properies' value.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.BorderStyle.GetHashCode">
            <summary>
            Returns the hash code for the value of this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.ColorStuff">
            <summary>
            Generic miscellaneous utilities for dealing with colors in spreadbuilder.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ColorStuff.GetRValue(GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Returns the Red value of the specified COLORREFF rgb value.
            </summary>
            <param name="rgb"></param>
            <returns></returns>
            <remarks>COLORREF format is 0x00bbggrr == bits:0000 0000 bbbb bbbb gggg gggg rrrr rrrr</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ColorStuff.GetGValue(GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Returns the Green value of the specified COLORREFF rgb value.
            </summary>
            <param name="rgb"></param>
            <returns></returns>
            <remarks>COLORREF format is 0x00bbggrr == bits:0000 0000 bbbb bbbb gggg gggg rrrr rrrr</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ColorStuff.GetBValue(GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Returns the blue value of the specified COLORREFF rgb value.
            </summary>
            <param name="rgb"></param>
            <returns></returns>
            <remarks>COLORREF format is 0x00bbggrr == bits:0000 0000 bbbb bbbb gggg gggg rrrr rrrr</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ColorStuff.GetHLSFromRGB(GrapeCity.SpreadBuilder.Style.COLORREF,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the HLS values for the specified RGB color in COLORREF format.
            </summary>
            <param name="color"></param>
            <param name="H">REF/OUT, is where the H value of an HLS color will be returned.</param>
            <param name="L">REF/OUT, is where the L value of an HLS color will be returned.</param>
            <param name="S">REF/OUT, is where the S value of an HLS color will be returned.</param>
            <remarks>COLORREF format is 0x00bbggrr == bits:0000 0000 bbbb bbbb gggg gggg rrrr rrrr</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ColorStuff.GetLabFromRGB(GrapeCity.SpreadBuilder.Style.COLORREF,System.Double@,System.Double@,System.Double@)">
            <summary>
            Returns the Lab values for the specified RGB color in COLORREF format.
            </summary>
            <param name="color"></param>
            <param name="L">REF/OUT, is where the L value of an Lab color will be returned.</param>
            <param name="A">REF/OUT, is where the A value of an Lab color will be returned.</param>
            <param name="B">REF/OUT, is where the B value of an Lab color will be returned.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ColorStuff.ColorDifference(System.Double,System.Double,System.Double,GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            CIE76 color difference algorithm.
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.ColorStuff.STDCOLOR_COUNT">
            <summary>
            A 56 color palette is always written to the BIFF file except in versions 2 and 3 where zero and 16 colors are written repectively.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.ColorStuff.biff8ColorPalette">
            <summary>
            The biff8ColorPalette is used to fill palettes of less than 56 colors
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.HSV">
            <summary>
            Used by MakeColorTranslationTable(...).
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.COLORREF">
            <summary>
            Represent's the Win32 COLORREF data type.
            </summary>
            <remarks>
            The COLORREF value is a 32-bit value used to specify an RGB color.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.COLORREF.val">
            <summary>
            The UInt32 that actually holds the win32 COLORREF value.
            This UInt32 should have the COLOREF format of 0x00bbggrr.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.#ctor(System.UInt32)">
            <summary>
            Uses the specified UInt32 value as the RGB color value according to Win32 PSDK's COLORREF documentation.
            </summary>
            <param name="colorInt">The 32 bit value representing an RGB color.  See remarks section.</param>
            <remarks>
            When specifying an explicit RGB color, the COLORREF value has the following hexadecimal form: 0x00bbggrr .
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.op_Implicit(GrapeCity.SpreadBuilder.Style.COLORREF)~System.UInt32">
            <summary>
            Provides an implicit conversion FROM COLORREF  TO  System.UInt32.  The UInt32 should have the COLOREF format of 0x00bbggrr.
            </summary>
            <param name="cRef"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.op_Implicit(System.UInt32)~GrapeCity.SpreadBuilder.Style.COLORREF">
            <summary>
            Provides an implcicit conversion TO COLORREF FROM System.UInt32.  The UInt32 should have the COLOREF format of 0x00bbggrr.
            </summary>
            <param name="iColor"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.op_Implicit(System.Drawing.Color)~GrapeCity.SpreadBuilder.Style.COLORREF">
            <summary>
            Provides an implicit conversion TO COLORREF FROM System.Drawing.Color, using System.Drawing.ColorTranslator.
            </summary>
            <param name="oColor"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.op_Implicit(GrapeCity.SpreadBuilder.Style.COLORREF)~System.Drawing.Color">
            <summary>
            Provides an implicit conversion TO System.Drawing.Color FROM COLORREF, using System.Drawing.ColorTranslator.
            </summary>
            <param name="cRef"></param>
            <returns></returns>
            <remarks>COLORREF format is 0x00bbggrr == bits:0000 0000 bbbb bbbb gggg gggg rrrr rrrr</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.op_Equality(GrapeCity.SpreadBuilder.Style.COLORREF,GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Implementation of the == comparison operator for comparing two COLORREF values.
            </summary>
            <param name="colA"></param>
            <param name="colB"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.op_Inequality(GrapeCity.SpreadBuilder.Style.COLORREF,GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Implementation of the != comparison operator for comparing two COLORREF values.
            </summary>
            <param name="colA"></param>
            <param name="colB"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.Equals(System.Object)">
            <summary>
            Implementation of the Equals method for comparing two COLORREF values.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.COLORREF.GetHashCode">
            <summary>
            Returns a hashcode based on the integral value of the COLORREF.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.Fill">
            <summary>
            The fill class is for Open Xml.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.PatternFill">
            <summary>
            The PatternFill class is for Open Xml.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.PatternFill._backColor">
            <summary>
            Represents the back color.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.PatternFill._foreColor">
            <summary>
            Represents the fore color of the fill.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.PatternFill._patternType">
            <summary>
            Represents the pattern typer of the fill.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.PatternFill.BackColor">
            <summary>
            Gets and sets the back color.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.PatternFill.ForeColor">
            <summary>
            Gets and sets the fore color.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.PatternFill.PatternType">
            <summary>
            Gets and sets the pattern type.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.PatternFill.Equals(System.Object)">
            <summary>
            Compare to other whether they have the same properties' value.
            </summary>
            <param name="obj">The other PatternFill.</param>
            <returns>A bool value indicates if they have the same properties' value.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.PatternFill.GetHashCode">
            <summary>
            Returns the hash code for the value of this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.ExcelFonts">
            <summary>
            ExcelFonts contains the fonts that will eventually be written out to BIFF as BIffFonts.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.Init">
            <summary>
            Fills the collection with the default font's required by every biff file. 
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.GetColorIndex(System.UInt16)">
            <summary>
            Returns the colorIndex property value of the ExcelFont at the specified index.
            </summary>
            <param name="fontIndex">The index of the ExcelFont you want the colorIndex property value for.</param>
            <returns>
            The colorIndex property value of the ExcelFont at the specified index.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.Trans_ColorIndex(System.UInt16,System.UInt16)">
            <summary>
            Returns either an existing font record with the new colorindex, or creates and returns a new font record.
            </summary>
            <param name="fontIndex"></param>
            <param name="colorIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.MapFont(GrapeCity.SpreadBuilder.Style.ExcelFont)">
            <summary>
            Seaches for a font in this collection that is the same as the specified font.  If found returns an index to that font.  If not found a font matching the specified font is created, added to this collection, and the index to the newly created font is returned.
            </summary>
            <param name="pFont"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.get_FontName(System.UInt16)">
            <summary>
            Returns the font name of the font at the specified index in this collection.
            </summary>
            <param name="fontIndex"></param>
            <param name="sVal"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.Trans_FontBold(System.UInt16,System.Boolean)">
            <summary>
            Sets the lfWeight (boldness) of the font at the specified index to the specified value (flag).
            </summary>
            <param name="fontIndex"></param>
            <param name="flag">True to set the font to bold, false to set the font to not bold.</param>
            <remarks>Font index of hte font.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.get_FontBold(System.UInt16)">
            <summary>
            Returns true if the lfWeight property of the ExcelFont object at the specified index has a value of LogFontWeights.FW_BOLD.
            </summary>
            <param name="fontIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.Trans_FontStrikeOut(System.UInt16,System.Boolean)">
            <summary>
            Returns an index to a font that meets the settings of the font at the specified index, and the specified strikeout setting.
            </summary>
            <param name="fontIndex">
            The index to the font that you want to be strike-out
            </param>
            <param name="flag">True if the font should be strikeout, false if it should not be strikeout.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.get_FontStrikeOut(System.UInt16)">
            <summary>
            Returns true if the lfWeight property of the ExcelFont object at the specified index has a value of strikeout setting.
            </summary>
            <param name="fontIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.Trans_FontItalic(System.UInt16,System.Boolean)">
            <summary>
            Returns an index to a font that meets the settings of the font at the specified index, and the specified italic setting.
            </summary>
            <param name="fontIndex">
            The index to the font that you want to be italicized.
            </param>
            <param name="flag">True if the font should be italic, false if it should not be italic.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.get_FontItalic(System.UInt16)">
            <summary>
            Returns true if the font at the specified index is italic.  Returns false if it is not italic.
            Ultimately used by DDCell for it's FontItalic.get property.
            </summary>
            <param name="fontIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.Trans_FontSize(System.UInt16,System.Double)">
            <summary>
            Finds an existing, or creates a new font meeting the properties of the font at the 
            specified index but with the specified size.
            Returns the index to the font that was found or created.
            </summary>
            <param name="fontIndex"></param>
            <param name="val">Height of the font in points.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.get_FontSize(System.UInt16)">
            <summary>
            Returns the height/size of the font in Points.
            </summary>
            <param name="fontIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.Trans_FontUnderlineStyle(System.UInt16,GrapeCity.SpreadBuilder.Style.FontUnderlineStyles)">
            <summary>
            Finds an existing, or creates a new font meeting the properties of the font at the 
            specified index but with the specified underline style.
            </summary>
            <param name="fontIndex"></param>
            <param name="style"></param>
            <returns>Returns the index to the font that was found or created.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.get_FontUnderlineStyle(System.UInt16)">
            <summary>
            Returns the FontUnderlineStyles value for the font at the specified index.
            </summary>
            <param name="fontIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFonts.FindItem(GrapeCity.SpreadBuilder.Style.ExcelFont)">
            <summary>
            searches ExcelFonts::m_list(FArray ExcelFont) for for a font identical to its argument.  \
            </summary>
            <param name="pFind"></param>
            <returns>
            If found, it returns an index, if not, it returns -1.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFont.Equals(System.Object)">
            <summary>
            OVERRIDE of object.Equals.  This method will compare the data stored by the two instances of ExcelFont.
            </summary>
            <param name="obj">The ExcelFont object to be compared to this instance.</param>
            <returns>
            If the data is equal, true will be returned.  
            If the data is not equal, false will be returned.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFont.op_Equality(GrapeCity.SpreadBuilder.Style.ExcelFont,GrapeCity.SpreadBuilder.Style.ExcelFont)">
            <summary>
            This method will compare the data stored by the two instances of ExcelFont.
            </summary>
            <param name="valA">
            An ExcelFont instance to be compared to the ExcelFont instance in valB.
            </param>
            <param name="valB">
            An ExcelFont instance to be compared to the ExcelFont instance in valA.
            </param>
            <returns>True if the two object's values are equal.  Otherwise false.</returns>
            <remarks>Will call this.Equals if both arguments are not null.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFont.op_Inequality(GrapeCity.SpreadBuilder.Style.ExcelFont,GrapeCity.SpreadBuilder.Style.ExcelFont)">
            <summary>
            This method will compare the data stored by the two instances of ExcelFont.
            </summary>
            <param name="valA">An ExcelFont instance to be compared to the ExcelFont instance in valB.</param>
            <param name="valB">An ExcelFont instance to be compared to the ExcelFont instance in valA.</param>
            <returns>False if both arguments are equal.  Otherwide true.</returns>
            <remarks>Will call this.Equals if both arguments are not null.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.ExcelFont.GetHashCode">
            <summary>
            Provides a hashcode by xor-ing each the values stored by this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BiffFont">
            <summary>
            This struct contains the font data as it will be written to BIFF (version 8).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.dyHeight">
            <summary>
            Height of the font (in units of 1/20th of a point).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.grbit">
            <summary>
            Font attributes (see the following table).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.icv">
            <summary>
            Index to the color palette.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.bls">
            <summary>
            Bold style; a number from 100dec to 1000dec (64h to 3E8h) that indicates the character weight ("boldness"). 
            The default values are 190h for normal text and 2BCh for bold text.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.sss">
            <summary>
            Superscript/subscript.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.bFamily">
            <summary>
            The proper value for bFamily can be obtained by using the Boolean OR operator to join 
            one BiffFont_Pitches value with one BiffFont_Families constant. 
            </summary>
            <remarks>
            For now we're using <code>(byte)(BiffFont_Families.DontCare | BiffFont_Pitches.Default)</code>.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.bCharSet">
            <summary>
            Character set, as defined by the Windows API LOGFONT structure. 
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.reserved">
            <summary>
            Reserved, must be zero.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.cch">
            <summary>
            Number of *characters* (not bytes) in the font name.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont.rgch_FontName">
            <summary>
            The font name.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BiffFont_ScriptStyles">
            <summary>
            Used for BiffFont.sss
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BiffFont_UnderlineStyles">
            <summary>
            Used for BiffFont.uls
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BiffFont_Families">
            <summary>
            Used for BiffFont.bFamily.
            These values were taken from VC++ include file wingdi.h.
            They are actually the LOGFONT's lfPitchAndFamily's "Family" values.
            The bFamily value of BiffFont should be one of these values or'd together 
            with a BiffFont_Pitches value to form an actual bFamily value.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_Families.DontCare">
            <summary>
            Don't care or don't know.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_Families.Romain">
            <summary>
            Variable stroke width, serifed.
            Times Roman, Century Schoolbook, etc.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_Families.Swiss">
            <summary>
            Variable stroke width, sans-serifed.
            Helvetica, Swiss, etc.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_Families.Modern">
            <summary>
            Constant stroke width, serifed or sans-serifed.
            Pica, Elite, Courier, etc.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_Families.Script">
            <summary>
            Cursive, etc.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_Families.Decorative">
            <summary>
            Old English, etc.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BiffFont_Pitches">
            <summary>
            Used for BiffFont.bFamily.
            These values were taken from VC++ include file wingdi.h.
            They are actually the LOGFONT's lfPitchAndFamily's "Pitch" values.
            The bFamily value of BiffFont should be one of these values or'd together 
            with a BiffFont_Families value to form an actual bFamily value.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BiffFont_CharSets">
            <summary>
            Used for BiffFont.bCharSet.
            LOGFONT's lfCharSet values from VC++ include file wingdi.h.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.LogFontWeights">
            <summary>
            For LOGFONT taken from VC++ include file wingdi.h
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BiffFont_grbits">
            <summary>
            Font Attributes for BiffFont.grbit.  These values are masks, and should be OR'd together to form the grbit value.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_grbits.fItalic">
            <summary>
            Bit = 1,
            Mask = 0x02,
            Value = 1 if the font is italic.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_grbits.fStrikeout">
            <summary>
            Bit = 3,
            Mask = 0x08,
            Value = 1 if the font is struck out.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_grbits.fOutline">
            <summary>
            Bit = 4,
            Mask = 0x10,
            Value = 1 if the font is outline style (Macintosh only).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BiffFont_grbits.fShadow">
            <summary>
            Bit = 5,
            Mask = 0x20,
            Value = 1 if the font is shadow style (Macintosh only).
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.NumberFormats">
            <summary>
            Contains a collection of number format strings for the workbook.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.NumberFormats.m_formatStrings">
            <summary>
            List of the actual format strings.  There are 8 built in formats.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.NumberFormats.m_ids">
            <summary>
            List of "ifmt" format ids at the same index as the associated formatString in m_formatStrings.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.NumberFormats.BUILTINFORMATCOUNT">
            <summary>
            Number of built in number formats in every workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.NumberFormats.#ctor">
            <summary>
            Constructor for Numberformats.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.NumberFormats.FormatStrings">
            <summary>
            Gets list of the actual format strings.  There are 8 built in formats.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.NumberFormats.Ids">
            <summary>
            Gets list of "ifmt" format ids at the same index as the associated formatString in m_formatStrings.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.NumberFormats.Count">
            <summary>
            Returns the number of format strings currently in this collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.NumberFormats.Init">
            <summary>
            Adds the default "built in" numberformat strings for the workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.NumberFormats.Add(System.String)">
            <summary>
            Adds the specified number format string to the collection, generates an "ifmt" identifer for the specified number format and returns the generated id.
            </summary>
            <param name="sNumberFormat">
            The number format string to be added to the collection.  This string will be saved out to the BIFF file.
            </param>
            <returns>
            The newly generated "ifmt" ID (can be used with XF records) for the specified sNumberFormat.
            </returns>
            <remarks>
            <para>
            For foreign currency symbols such as the Japanese Yen you can use a format such as: "[$�-0]#,##0.00".  Replace the Yen sign (�) with whatever currency symbol you want used there.
            </para>
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.NumberFormats.GetFormatById(System.UInt16)">
            <summary>
            Searches the collection for a number format with the specified "ifmt" id value.  
            </summary>
            <param name="ifmt">
            The ifmt ID you want to find the associated number format string for. This value can be taken directly from the ifmt field of an XF record.
            </param>
            <returns>
            The number format string associated with the ID or null if the id is not found.
            </returns>
            <remarks>
            This is the fastest way to lookup a numberformat (verses GetIdFromFormat).
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.NumberFormats.GetIdFromFormat(System.String)">
            <summary>
            Returns the "ifmt" id associated with the specified number format string.  
            If the format string does not already exist, it will be added and the ID for the newly added item will be returned.
            </summary>
            <param name="sNumberFormat">
            The number format in this collection that you want the "ifmt" id for.
            </param>
            <returns>
            The ifmt id for the specified number format string.
            </returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.HorzAlignments">
            <summary>
            Different types of horizontal alignments.  Used by DDCell.Alignment.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.HorzAlignments.General">
            <summary>
            General
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.HorzAlignments.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.HorzAlignments.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.HorzAlignments.Right">
            <summary>
            Rright
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.HorzAlignments.Fill">
            <summary>
            Fill
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.HorzAlignments.Justify">
            <summary>
            Justify
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.HorzAlignments.CenterAcrossSelection">
            <summary>
            Center across selection
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.VertAlignments">
            <summary>
            Difference types of vertical alignments.  Used by DDCell.VertAlignment.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.VertAlignments.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.VertAlignments.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.VertAlignments.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.VertAlignments.Justify">
            <summary>
            Justify
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BorderLineStyle">
            <summary>
            Border line styles.  Used for DDCell.BorderTopStyle, .BorderBottomStyle, etc...
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.Thin">
            <summary>
            Thin
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.Dashed">
            <summary>
            Dashed
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.Dotted">
            <summary>
            Dotted
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.Thick">
            <summary>
            Thick
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.Hair">
            <summary>
            Hair
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.MediumDashed">
            <remarks>
            Not supported in BIFF7 and earlier.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.DashDot">
            <remarks>
            Not supported in BIFF7 and earlier.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.MediumDashDot">
            <remarks>
            Not supported in BIFF7 and earlier.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.DashDotDot">
            <remarks>
            Not supported in BIFF7 and earlier.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.MediumDashDotDot">
            <remarks>
            Not supported in BIFF7 and earlier.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderLineStyle.SlantedDashDot">
            <remarks>
            Not supported in BIFF7 and earlier.
            </remarks>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.BorderDiagonalStyles">
            <summary>
            For DDCell's BorderDiagonalEnum property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderDiagonalStyles.None">
            <summary>
            No diagonal border will be drawn.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderDiagonalStyles.Down">
            <summary>
            Starts in the upper left corner, and goes down to the lower right corner.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderDiagonalStyles.Up">
            <summary>
            Starts in the bottom left corner, and goes up to the upper right corner.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.BorderDiagonalStyles.Both">
            <summary>
            Includes both Up &amp; Down styles, forming an X accross the cell.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.FontUnderlineStyles">
            <summary>
            Underline styles for DDCell.FontUnderlineStyle
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.FontUnderlineStyles.None">
            <summary>
            No underline.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.FontUnderlineStyles.Single">
            <summary>
            Single underline.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.FontUnderlineStyles.Double">
            <summary>
            Double underline.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.FontUnderlineStyles.SingleAcc">
            <summary>
            Single accounting underline.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.FontUnderlineStyles.DoubleAcc">
            <summary>
            Double accounting underline.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.XFRecord8">
            <summary>
            This class represents an BIFF XF record.  The XF record represents formmating information on a SpreadBuilder cell.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecord8.Clone">
            <summary>
            Creates a new XFRecord8 object that has the same values as this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecord8.Equals(System.Object)">
            <summary>
            OVERRIDE of object.Equals.  This method will compare the data stored by the two instances of XFRecord8.
            </summary>
            <param name="obj">The XFRecord8 object to be compared to this instance.</param>
            <returns>If the data is equal, true will be returned.  If the data is not equal, false will be returned.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecord8.op_Equality(GrapeCity.SpreadBuilder.Style.XFRecord8,GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Checks both arguments for null, if a single argument, or both arguments are not null, then the result of XFRecord8.Equals(...) is returned.
            If both arguments are null, they are considered equal.
            </summary>
            <param name="lhs">An XFRecord8 instance to be compared to the XFRecord8 instance in rhs.</param>
            <param name="rhs">An XFRecord8 instance to be compared to the XFRecord8 instance in lhs.</param>
            <returns>True if the two object's values are equal.  Otherwise false.</returns>
            <remarks>May call this.Equals if an argument is not null.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecord8.op_Inequality(GrapeCity.SpreadBuilder.Style.XFRecord8,GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Checks both arguments for null, if a single argument, or both arguments are not null, then the NOT'ed result of XFRecord8.Equals(...) is returned.
            If both arguments are null, they are considered equal thus, this method will return false.
            </summary>
            <param name="valA">An XFRecord8 instance to be compared to the XFRecord8 instance in valB.</param>
            <param name="valB">An XFRecord8 instance to be compared to the XFRecord8 instance in valA.</param>
            <returns>False if both arguments are equal.  Otherwide true.</returns>
            <remarks>May call this.Equals if an argument is not null.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecord8.GetHashCode">
            <summary>
            Returns a hash code based on the internally stored *values* of the class.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.XFRecord8.xfParent">
            <summary>
            Index to the XF record of the parent style. Every cell XF must have a parent style XF, 
            which is usually ixfeNormal = 0.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.XFRecord8.dgDiag">
            <summary>
            Border line style (see the table in Excel File Format Doc).
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.XFRecord8.fillForeColor">
            <summary>
            aka icvFore: Index to the color palette for the forground color of the fill pattern. Apparently this is what is used as the "background color" (no pattern, just a backcolor) for a cell.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.XFRecord8.fillBackColor">
            <summary>
            aka icvBack: Index to the color palette for the background color of the fill pattern.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.XFRecord8_hAlignments">
            <summary>
            Values for the XFRecord8.hAlignment property.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.XFRecord8_vAlignments">
            <summary>
            Values for the XFRecord8.vAlignment property.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.XFRecords">
            <summary>
            XFRecords is a collection of the BIFF XF records.  This class is used to manage the XF records, as well as serialize/save them in the proper BIFF format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.XFRecords.FXINDEX_NORMAL">
            <summary>
            Index with in the XFRecords collection to the "Normal" Style XF record.
            BIFF documentation calls this value "ixfeNormal".
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.XFRecords.m_list">
            <summary>
            Contains the actual full collection of XFRecord8 objects.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Style.XFRecords.m_flatList">
            <summary>
            m_flatList contains only the unique XFRecords in the m_list array.  
            It's kind of a compacted form of m_list, where "compacting" is done by 
            XFRecords just before saving to BIFF to minimize the number of records persisted.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.#ctor(GrapeCity.SpreadBuilder.Workbook)">
            <summary>
            Initializes an instance of hte XFRecords class. with the specified owner workbook.
            </summary>
            <param name="ownerBook">The workbook that this XFRecords collection is a member of.</param>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.XFRecords.OwnerWorkbook">
            <summary>
            The workbook that this XFRecords collection is an instance of.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.AddDefaults">
            <summary>
            Sets up the default collection of workbook global XF records.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.AddRec(GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Adds an XFRecord8 to the collection.
            </summary>
            <param name="item">The XFRecord8 instance to add to this collection.</param>
            <returns>The zero based index at which the specified XFRecord has been added.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.GetRec(System.Int32)">
            <summary>
            Returns the XFRecord8 found at the specified index.
            </summary>
            <param name="index">A zero based index of the XFRecord.</param>
            <returns>The XFRecord found at the specified index or </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.FillDefault(GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Sets the values of the memebers of an XFRecord8 object to their "default" values.
            </summary>
            <param name="item">The XFRecord8 object to be setup.  If this variable is null, it will set to a newly created instance of an XFRecord8.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.ClearRecords">
            <summary>
            Removes all references to the items contained with in this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Style.XFRecords.Count">
            <summary>
            Returns the total number of items in this collection that can be accessed with AddRec/GetRec.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.FixInheritanceFlags(GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Verifies and fixes (if necessary) all "fAtr" fields (inheritance indication fields) in a version 8 BIFF XF record.
            </summary>
            <param name="rec">An XF8Record with a valid xfParent field who's inheritance flags should be "fixed".</param>
            <remarks>May throw an ArgumentException if the xfParent indicated by rec cannot be found.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.MapXFRecord(GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Searches this existing XFRecords collection for an XFrecord identical to the one 
            specified.  If found, it returns the index to the found XF record.  If it is not found, 
            the specified XF is added, and the index to the newly added XF is returned.
            </summary>
            <param name="rec"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.CompareXFRecord8(GrapeCity.SpreadBuilder.Style.XFRecord8,GrapeCity.SpreadBuilder.Style.XFRecord8)">
            <summary>
            Compares the specified XFRecord instances and returns a weighting indicating how similar the two records are.
            </summary>
            <param name="one"></param>
            <param name="two"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.CompactAndPatchForBiff(System.UInt16[])">
            <summary>
            Compacts the XFRecords �expanded list� into a �compacted list�.  And the specified iaPatchIndex array is filled with �XF index patches� (see remarks).
            </summary>
            <param name="iaPatchedIndexes">
            This is an array of int that you put the old XFIndex in, and it returns the new 
            remapped XFIndex for that XFRecord.
            </param>
            <remarks>
            �XF index patches� (the iaPatchIndex array) is an array the same size as the �expanded list� of XFRecords.   You use an original SpreadBuilder object�s (such as a cell�s) XFRecord index as an index in this array and it will return the equivalent index for the �compacted list�.
            The �compacted list� is what is actually saved to the file format.  This step should not be performed until just before saving and after the point when any SpreadBuilder objects (e.g. cells, rows) will be modified.  Since SpreadBuilder objects are saved with only an index to their XFRecord, their index needs patched just before saving, and that is the purpose of the iaPatchIndex array.
            In step 1 XFRecords are compacted according to these rules:
            1.	Only one XFRecord will be added for any identical XFRecords in the �expanded list�.  Thus if there are two XFRecords exactly the same, then one will not be added to the �compacted list�.
            2.	Any XFRecords that are not referenced by some SpreadBuilder object (such as a cell, column, or row) are also not added to the compacted array.
            3.	If the compacted XFRecords collection grows larger than what the file format can support then the remaining XFRecords are removed from the compacted list.  Each of the XFRecord�s that are removed will be �patched� to their closest match.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Style.XFRecords.CompColors(System.UInt16,System.UInt16)">
            <summary>
            Compares two colors, 0 is perfect match, higher less so, up to max of 10^7.2.  
            </summary>
            <param name="idxLcolor">
            An index to a color in the Workbook.m_customColors array.
            </param>
            <param name="idxRcolor">
            An index to a color in the Workbook.m_customColors array.
            </param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Style.XFPropID">
            <summary>
            Used internally for Get/SetXFPropID &amp; XFTRans_SetProperty(...)
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Tools.DDMath">
            <summary>
            Contains methods that are generic, and don't really have a better place to go.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Tools.DDMath.MulDiv(System.Int32,System.Int32,System.Int32)">
            <summary>
            This is my own port of the Win32 Platform SDK function MulDiv.  The Platform SDK MSDN 
            documentation documented the function as follows:
            "The MulDiv function multiplies two 32-bit values and then divides the 64-bit result 
            by a third 32-bit value. The return value is rounded up or down to the nearest integer."
            </summary>
            <param name="nNumber">Specifies the multiplicand.</param>
            <param name="nNumerator">Specifies the multiplier.</param>
            <param name="nDenominator">Specifies the number by which the result of the multiplication (nNumber * nNumerator) is to be divided.</param>
            <returns>
            If the function succeeds, the return value is the result of the multiplication 
            and division. 
            If either an overflow occurred or nDenominator was 0, the return value is –1.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Tools.DDMath.RoundNear(System.Double,System.Double)">
            <summary>
            Rounds varnumber to the nearest fraction equal 
            </summary>
            <param name="dNum">Number to round.</param>
            <param name="dDelta">Fraction used as a measure of rounding.</param>
            <returns>dNum rounded to nearest multiple of dDelta.</returns>
            <example>
            RoundNear(53,6) == 54;
            RoundNear(1.16,0.25) == 1.25;
            RoundNear(1.12,0.25) == 1.00;
            RoundNear(1.125,0.25) == 1.25;
            </example>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Tools.BitTools.TrimBits(System.UInt16,System.Byte)">
            <summary>
            Makes sure that the specified value will fit into the specified number of bits.
            </summary>
            <param name="theValue"></param>
            <param name="numberOfBits"></param>
            <returns>
            If theValue will fit into the specified number of bits, the value is returned.
            If theValue is too large to fit into the specified number of bits, the highest value that 
            will fit into the specified number of bits is returned.
            If theValue is too small (less than zero) to fit into the specified number of bits, zero will be returned.
            </returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Workbook">
            <summary>
            Represents a spreadsheet workbook  that contains spreadsheets.  This object will represent information that is relevant to all spreadsheets in the workbook (e.g. Author, BIFF/file version, etc...).
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_customColors">
            <summary>
            Contains COLORREF objects.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_paletteColors">
            <summary>
            Contains COLORREF objects.
            </summary> 
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_fonts">
            <summary>
            Collection of workbook global FONT records.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_formats">
            <summary>
            Collection of workbook global FORMAT records.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_xfRecords">
            <summary>
            Collection of workbook global XF records.
            The c++ code called this m_cellXF
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_builtInStyles">
            <summary>
            Collection of workbook global STYLE records.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.sharedStrings">
            <summary>
            Private storage for the SharedStrings property.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_WriteDoubleStreamFileRec">
            <summary>
            If true a BIFF DSF record will be written.   If false the record will not be written.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.mapCRC">
            <summary>
            Used to hold/map CRC values for metafiles.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._biffExport">
            <summary>
            The exporter which is used to export biff format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._openXmlExport">
            <summary>
            The exporter which is used to export OpenXml format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._uniqueXFIndexList">
            <summary>
            The array store the compacted and patched xf index list.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._colorTranslationTable">
            <summary>
            Color index mapping array.  This is necessary as the color array 
            is compacted before saving to reduce size and remove duplicates.  
            Use the old index as the index to this array, 
            and the array should return the new for that color index.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._maxColumnCount">
            <summary>
            The max column count that this workbook can include. Will be set when saving.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._maxRowCount">
            <summary>
            The row row count that this workbook can include. Will be set when saving.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.WriteDoubleStreamFileRec">
            <summary>
            Gets m_WriteDoubleStreamFileRec field indicates whether write a BIFF DSF record.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.ExportHandler">
            <summary>
            Get IExport according to file version.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._useDefaultPalette">
            <summary>
            Represents whether export document with Excel default palette.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.UseDefaultPalette">
            <summary>
            Sets or returns whether export document with Excel default palette.
            </summary>
            <remarks>
            Setting this value to true, application will use the color which is in default palette and is closest to pre-defined custom color of control's forecolor and backcolor.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._sheetName">
            <summary>
            Represents whether the name of sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.SheetName">
            <summary>
            Sets or returns a value indicating the name of sheet. <b>Sheet</b> is default.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.DefaultFontName">
            <summary>
            Returns the name of the default font.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.DefaultFontSizeInPoints">
            <summary>
            Returns the size of the default font in points.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.TraceVerbose(System.String)">
            <summary>
            Provides tracing when defined appropriately in an application configuration file.
            </summary>
            <param name="message">The trace message to be written to a trace listener.</param>
            <remarks>
            This could be used with support and an appropriate app.config file to implement tracing when output is messed up for unknown reasons.
            I've applied these debugger attributes to it to attempt to keep it out of call stacks and debuggers stepping though it.
            If this method is found to be a sevear performance hinderence (presumably via profiling), then we should be able to uncomment the ConditionalAttribute below and only have it included in DEBUG builds only.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.TraceVerbose(System.String,System.Object[])">
            <summary>
            Provides tracing with string.format like capabilities.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.#ctor">
            <summary>
            The default constructor for Workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.Clear">
            <summary>
            Removes all sheets, creates a fresh instance of all member class variables and 
            initializes all member data variables to their default value.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.AddDefaultFills">
            <summary>
            Add default Fills for OpenXml format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_sheets">
            <summary>
            Internal storage for the DDSheets property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.Sheets">
            <summary>
            Returns the collection of shsets as a DDSheets collection object.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_author">
            <summary>
            Internal storage for the Author property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.Author">
            <summary>
            Sets/returns the Author that will be written to the workbook.  
            </summary>
            <remarks>
            When MS Excel writes a workbook this is the user name, which is the name you entered
            when you installed MS Excel.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_fileVersion">
            <summary>
            Internal storage for the FileVersion property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.FileVersion">
            <summary>
            Sets/gets the file version that the spreadsheet will be saved in.
            </summary>
            <remarks>
            After set FileFormat property to Xlsx, this property will keep original value.
            </remarks>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._fileFormat">
            <summary>
            Internal storage for the FileFormat property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.FileFormat">
            <summary>
            Sets/gets the file format that the spreadsheet will be saved in.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.OpenXmlStandard">
            <summary>
            Gets or sets the level of Open XML document conformance on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.UseCompression">
            <summary>
            Gets or sets the value indicating should compression be used on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_ProtectWorkBookStructure">
            <summary>
            Internal storage for ProtectWorkBookStructure property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.ProtectWorkBookStructure">
            <summary>
             Sets/gets the protection state for a sheet or workbook.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook.m_ProtectWorkbookWindows">
            <summary>
            Internal storage for ProtectWorkbookWindows property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.ProtectWorkbookWindows">
            <summary>
            Sets/gets an option from the Protect Workbook dialog box.  If this property is set to 
            true, Excel will not let the user add, delete, reorder, or rename sheets in the workbook.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._protectWorkbookPassword">
            <summary>
            Internal storage for ProtectWorkbookPassword property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.ProtectWorkbookPassword">
            <summary>
            Sets/gets the password for protecting the elements in workbook.
            </summary>
            <remarks>
            The password will take effect when one of ProtectWorkbookWindows and ProtectWorkBookStructure
            property is true.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.SharedStrings">
            <summary>
            The SharedString collection.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Workbook._security">
            <summary>
            Represents Security property.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.Security">
            <summary>
            Returns a <see cref="T:GrapeCity.SpreadBuilder.DDSecurity"/> object for initializing document security.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.Save(System.IO.Stream)">
            <summary>
            Saves the current spreadsheet workbook to the specified Stream.
            </summary>
            <param name="outputStream">
            The output stream to save the workbook data to. The stream might be a MemoryStream, or HttpResponse.OutputStream (for example).
            </param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.Save(System.String)">
            <summary>
            Saves the current spreadsheet data to the specified stream.
            </summary>
            <param name="sFileName">A valid filename.</param>
            <remarks>
            Permissions to write to the specified file are Demanded.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.PreExport">
            <summary>
            This method will be invoke before exporting.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.VerifyPasswordLength">
            <summary>
            Verify the password's size according current file version.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.VerifyProtectWorkbookPasswordLength">
            <summary>
            Verify the ProtectWorkbookPassword's size according current file version.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.VerifyWorksheets">
            <summary>
            Verify the each worksheet according current file version.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.VerifyWorksheetImages(System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Imaging.OBJImage})">
            <summary>
            Verify the worksheet's images according current file version.
            </summary>
            <param name="arrayList">the images</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.VerifyWorksheetLines(System.Collections.Generic.IList{GrapeCity.SpreadBuilder.Imaging.OBJ_line})">
            <summary>
            Verify the worksheet's lines according current file version.
            </summary>
            <param name="arrayList">the lines</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.VerifyWorksheetSize(GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Verify the worksheet's size according current file version.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetGroupIDFromSheetPtr(GrapeCity.SpreadBuilder.DDSheet)">
            <summary>
            Returns the the Group id from the specified sheet.
            That is, the specified sheet is which Sheet number in the set of DDSheets
            which contain at least one OBJ_meta or OBJ_line.
            </summary>
            <param name="psheet"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetRefCount(System.Byte[])">
            <summary>
            Gets reference count for particular unique image identified by CRC
            </summary>
            <param name="crc"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetOBJImageAt(System.Int32)">
            <summary>
            Map Images in all sheets into an accessible list.
            </summary>
            <param name="cmeta"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetCountofSheetswithOBJ_metasorOBJ_lines">
            <summary>
            Returns the number of DDSheet's that have at least one metafile or line in it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetSheetslinemetaCount">
            <summary>
            Returns the total count of metafiles and lines that are contained in all of the sheets 
            in the Sheets collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetSheetsmetaCount">
            <summary>
            Returns the total count of metafiles that are contained in all of the sheets in the Sheets collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.getNumberofOBJ_metasandOBJ_linesOnLastSheetWithOBJ_metasandOBJ_lines">
            <summary>
            This is just some really goofy function from c++ that returns 
            the value of CountMSOObj() from the last sheet in the collection that has a nonzero 
            value for CountMSOObj().
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetChildSpidFromGroupSpid(System.Int32)">
             <summary>
            consider the set of sheets that contain metafiles and lines.  the nth sheet of this set 
            has how many metafiles and lines??  this will return that value, add 1 to obtain the
            table transform for the FDGG record.
             </summary>
             <param name="dgid"></param>
             <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetColor(System.UInt16)">
            <summary>
            Takes color index, returns COLORREF Color.
            </summary>
            <param name="colorIndex"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.ColorTranslationTable">
            <summary>
            Color index mapping array.  This is necessary as the color array 
            is compacted before saving to reduce size and remove duplicates.  
            Use the old index as the index to this array, 
            and the array should return the new for that color index.
            </summary>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.UniqueXfIndexList">
            <summary>
            The array store the compacted and patched xf index list.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.MakeColorTranslationTableSimple">
            <summary>
            First, to understand this function it is important that you understand colors are 
            stored and accessed in BIFF.  All colors in BIFF are stored a single time in a global �
            color palette array� and the user�s of the color (mostly on XF records, which is XFRecord8 
            in this source) only stores an index to the color in this �color palette array�.  At 
            runtime, before saving, we build this palette in the �m_customColors� array.  
            Just before saving due to limitations in the BIFF format MakeColorTanslationTable will 
            take colors that exceed the maximum color count and find their closest match, and put 
            the new index to the color in the iaColorTranslations array.
            The absolute maximum color count in BIFF 7-8 is 119 as the XF record structure has only 
            7 bits to store the color index in and all Color idnexes must have 8 added to them 
            before saving (done in XFRecords.WriteToBiff).  In BIFF versions 2-4 the maximum is 16.
            </summary>
            <returns>
            The returned array works as follows:  You use the index of the color in the custom 
            colors array (the index determined at runtime as the spreadsheet is built) as the index 
            to the iaColorTranslation array.  The ushort value at this index in iaColorTranslations 
            will be the index to the color in the new �color palette array� that is saved to the 
            BIFF output.
            </returns>
            <remarks>
            This function is a simplified version of MakeColorTranslationTableComplex that may through assertions (not exceptions) if the color palette contains more colors than the BIFF format supports.  It will through assertions and just remove any color that does not fit in the color palette.  This is going to yield odd colors in a sheet when this occurs.  We need to fix it to find the closest match and reindex iaColorTanslations with that. Right now the lost colors will be reindexed with 0, which is always black.
            We could also improve this function by enumerating XF records and finding which colors are not in use anywhere, and remove those.  We do this with CompactAndPatch on XFRecords.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.MakeColorTranslationTableComplex">
            <summary>
            </summary>
            <param name="iaColorTranlations">
            iaColorTranslations works as follows:  You use the index of the color in the custom 
            colors array (the index determined at runtime as the spreadsheet is built) as the index 
            to the iaColorTranslation array.  The ushort value at this index in iaColorTranslations 
            will be the index to the color in the new �color palette array� that is saved to the 
            BIFF output.
            </param>
            <remarks>
            *This function is broken !!* 
            Even with a small list of colors (e.g. 5 colors) this 
            function doesn't properly map the indexes.  I spent to many days trying to fix it, so I 
            just rewrote my own simplified version named MakeColorTranslationTableSimple and it 
            worked, so I moved on.  Plan on getting back to this function with Ferhat sometime to 
            fix it.
            </remarks>
        </member>
        <member name="P:GrapeCity.SpreadBuilder.Workbook.XFRecords">
            <summary>
            Returns the XFRecords collection for the workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetProperty(System.UInt16,GrapeCity.SpreadBuilder.Style.XFPropID,System.Int16)">
            <summary>
            Set Horzontal Alignment, Vertical Alignment, TextRotation with XFRecords.
            </summary>
            <param name="baseXF"></param>
            <param name="propid"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetProperty(System.UInt16,GrapeCity.SpreadBuilder.Style.XFPropID)">
            <summary>
            Returns the value of the specified property on the specified XF record.
            Works with hAlighment, vAlighment, and TextRotation properties.
            </summary>
            <param name="xfIndex"></param>
            <param name="propid">
            Should be XFPropID.ALIGNMENT, XFPropID.VERTALIGNMENT, or XFPropID.TEXTROTATION.
            </param>
            <returns>
            The actual value of the specified property on the XF record.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetColorIndexFromColor(GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Searches the m_customColors array for the specified color.  If color is found, the 
            index to that color is returned.  If color is not found, it is added and the index of the 
            newly added color is returned.
            </summary>
            <param name="color">The color you want an index for.</param>
            <returns>The index to that color in the custom color array.</returns>
            <remarks>
            Note that the only difference between GetColorIndexFromColor, and GetColorIndexFromColor7Bit is that GetColorIndexFromColor7Bit will force the max color count to be less than 128 by finding the closest matching color.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.GetColorIndexFromColor7Bit(GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Searches the m_customColors array for the specified color.  If color is found, the 
            index to that color is returned.  If color is not found and there are less than 128 
            colors, the specified color is added and the index of the newly added color is 
            returned.  If there are already 128 or more colors, then the closest match to the 
            specified color is found, and the index to that closest matching color is returned.
            </summary>
            <param name="color">The color you want an index for.</param>
            <returns>The index to that color in the custom color array.</returns>
            <remarks>
            Note that the only difference between GetColorIndexFromColor, and GetColorIndexFromColor7Bit is that GetColorIndexFromColor7Bit will force the max color count to be less than 128 by finding the closest matching color.
            </remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetFillForeColor(System.UInt16,System.Drawing.Color)">
            <summary>
            Sets the fillforecolor on the XF record at the specified index.  May create a new XF record.
            </summary>
            <param name="baseXF"></param>
            <param name="color"></param>
            <returns>
            The index to the XF record that has the properties of both the XF record at the specified index (baseXF), except with the specified fillforecolor.
            </returns>
            <remarks>Color.Transparent or Color.Empty can be used to turn the color off.</remarks>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetFillColor(System.UInt16)">
            <summary>
            Gets the FillColor for the XF record at the specified index.
            </summary>
            <param name="xfIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetTextColor(System.UInt16,GrapeCity.SpreadBuilder.Style.COLORREF)">
            <summary>
            Ultimiately used by DDCell.ForeColor.set.
            </summary>
            <param name="baseXF"></param>
            <param name="color"></param>
            <returns>
            The index to the XF record (used with WorkBook.XFRecords.GetRec) that has the 
            properties of the baseXF, as well as the specified TextColor/ForeColor.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetTextColor(System.UInt16)">
            <summary>
            Ultimately used by DDCell.ForeColor.get.
            </summary>
            <param name="xfIndex"></param>
            <returns>
            The TextColor/ForeColor on the specified XFIndex.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_GetFontIndexByXFIndex(System.UInt16)">
            <summary>
            Ultimately this is used by DDCell.FillColor.set.
            </summary>
            <param name="baseXF"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetFontName(System.UInt16,System.String)">
            <summary>
            Ultimately used by DDCell to set a FontName.
            </summary>
            <param name="baseXF"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetFontName(System.UInt16)">
            <summary>
            Ultimately used by DDCell to retrieve a font name.
            Gets a the XFRecord at the specified XF index, calls ExcelFonts.get_FontName to return the font at the font index found on the XF.
            </summary>
            <param name="baseXF"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetFontBold(System.UInt16,System.Boolean)">
            <summary>
            Gets the XFRecord at the specified index.  
            Uses ExcelFonts.Trans_FontBold to properly set the bold/lfWeight of the ExcelFont used by the specified XF record.
            </summary>
            <param name="baseXF"></param>
            <param name="flag"></param>
            <returns>The index to the XF Record with the settings of the specified XF record and bold value.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_MapFontXF(GrapeCity.SpreadBuilder.Style.XFRecord8,System.UInt16)">
            <summary>
            Creates a new XFRecord, set's it's fontIndex property, uses XFRecords.MapXFRecord to properly obtain/create the XF record with the specified font.
            </summary>
            <param name="prevXF"></param>
            <param name="newFontIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetFontBold(System.UInt16)">
            <summary>
            Uses ExcelFonts.get_FontBold to determine if the font used by the XF at the specifed index is bold.
            </summary>
            <param name="baseXF"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetFontItalic(System.UInt16,System.Boolean)">
            <summary>
            Returns an index to an XF record that has the properties of the specified baseXF, and the specified font italic setting.
            </summary>
            <param name="baseXF"></param>
            <param name="flag"></param>
            <returns>
            Returns an index to an XF record that has the properties of the specified baseXF, and the specified font italic setting.
            </returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetFontItalic(System.UInt16)">
            <summary>
            Retrieves the font for the XF record at the specified index, and returns the value of that font's member property.
            Ultimately used by DDCell for it's FontItalic.get property.
            </summary>
            <param name="baseXF"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetFontSize(System.UInt16,System.Double)">
            <summary>
            Sets font size/height in points.  Accurate to the nearest half of a point.
            </summary>
            <param name="baseXF"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetFontSize(System.UInt16)">
            <summary>
            Returns the font size in points.  Accurate to the nearest half of a point.
            </summary>
            <param name="baseXF"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetFontUnderlineStyle(System.UInt16,GrapeCity.SpreadBuilder.Style.FontUnderlineStyles)">
            <summary>
            Uses XLFonts.Trans_FontUnderlineStyle to setup a font with the properties of the font for the specified XF record, but with the specified underline style.
            </summary>
            <param name="baseXF"></param>
            <param name="style"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetFontUnderlineStyle(System.UInt16)">
            <summary>
            Uses ExcelFonts.get_FontUnderlineStyle to retrieve the underline style of the font used by the specified XF record.
            </summary>
            <param name="baseXF"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XFTrans_SetFontStrikeOut(System.UInt16,System.Boolean)">
            <summary>
            Uses XLFonts.Trans_FontStrikeOut to setup a font with the properties of the font for the specified XF record, but with the specified underline style.
            </summary>
            <param name="baseXF"></param>
            <param name="style"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Workbook.XF_GetFontStrikeOut(System.UInt16)">
            <summary>
            Uses ExcelFonts.get_FontStrikeOut to retrieve the underline style of the font used by the specified XF record.
            </summary>
            <param name="baseXF"></param>
            <returns></returns>
        </member>
        <member name="T:AssemblyNames">
            <summary>
            Contains strong assembly names and such
            </summary>
        </member>
    </members>
</doc>
