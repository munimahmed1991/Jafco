<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrapeCity.ActiveReports</name>
    </assembly>
    <members>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Adapter.RdfBrush">
            <summary>
            Solid color brush implementation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Adapter.RdfCanvasAdapter">
            <summary>
            Adapter to <see cref="T:GrapeCity.ActiveReports.Drawing.IDrawingCanvas" />. It supports simple use-cases only.
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Adapter.RdfCanvasAdapter.#ctor(GrapeCity.ActiveReports.Document.Section.DrawCanvas,GrapeCity.ActiveReports.IDrawingFactory)">
            <summary>
            Creates new adapter. For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Adapter.RdfImage">
            <summary>
            Image wrapper implementation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Adapter.RdfPen">
            <summary>
            Pen wrapper implementation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.PageDocument">
            <summary>
            Provides the capabilities necessary for processing a report.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.PageDocument.Data">
            <summary>
            Gets or sets data to be used during build of <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport"/> instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.#ctor(GrapeCity.ActiveReports.PageReport)">
            <summary>
            Initializes a new instance of <see cref="T:GrapeCity.ActiveReports.Document.PageDocument"/> Class. 
            </summary>
            <param name="pageReport"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)">
            <summary>
            Provides the output of the report to the specified rendering extension.  
            </summary>
            <param name="renderingExtension">Rendering extension to use to render a report.</param>
            <param name="streams">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"/> that is to store the rendered report output.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Provides the output of the report to the specified rendering extension with the specified values. 
            </summary>
            <param name="renderingExtension">Rendering extension to use to render a report.</param>
            <param name="streams">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"/> that is to store the rendered report output.</param>
            <param name="settings">The <see cref="T:System.Collections.Specialized.NameValueCollection"/> that contains the settings for the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension"/>.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            Provides the output of this report to the specified rendering extension with the specified values and refreshed data. 
            </summary>
            <param name="renderingExtension">Rendering extension to use to render a report.</param>
            <param name="streams">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"/> that is to store the rendered report output.</param>
            <param name="settings">The <see cref="T:System.Collections.Specialized.NameValueCollection"/> that contains the settings for the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension"/>.</param>
            <param name="forceDataRefresh">Set to <c>True</c> to force a refresh or requery of the data even if the DataMap has already retrieved the necessary data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Boolean)">
            <summary>
            Provides the output of this report to the specified rendering extension with the specified values and refreshed data. 
            </summary>
            <param name="renderingExtension">Rendering extension to use to render a report.</param>
            <param name="streams">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"/> that is to store the rendered report output.</param>
            <param name="settings">The <see cref="T:System.Collections.Specialized.NameValueCollection"/> that contains the settings for the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension"/>.</param>
            <param name="forceDataRefresh">Set to <c>True</c> to force a refresh or requery of the data even if the DataMap has already retrieved the necessary data.</param>
            <param name="forceParameterDataRefresh">Set to True to force a refresh or requery of the parameter data.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Provides the output of this report to the specified rendering extension with the specified values and refreshed data.
            </summary>
            <param name="renderer">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension" /> that is to render the report output.</param>
            <param name="streams">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider" /> that is to store the rendered report output.</param>
            <param name="settings">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the settings for the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension" />.</param>
            <param name="forceDataRefresh">Set to True to force a refresh or requery of the data even if the DataMap has already retrieved the necessary data.</param>
            <param name="forceParameterDataRefresh">Set to True to force a refresh or requery of the parameter data.</param>
            <param name="token">Allows to stop rendering</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="renderingExtension"/> or <paramref name="streams"/> is null.</exception>
            <exception cref="T:GrapeCity.ActiveReports.ReportException">A report specific error occured.</exception>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.ApplyInteractivity(GrapeCity.ActiveReports.Document.InteractiveActions)">
            <summary>
            Interactivity actions to be applied to report instance next during rendering.
            </summary>
            <param name="actions">The interactive actions to be applied.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.SaveSnapshot(System.IO.FileInfo,System.Boolean)">
            <summary>
            For internal use only. Save document snapshot to the specified file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.SaveSnapshot(System.IO.Stream,System.Boolean)">
            <summary>
            For internal use only. Save document snapshot to the specified stream
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.SetEvaluationMessage(System.String)">
            <summary>
            For internal use only (ARS).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.LoadSnapshot(System.IO.FileInfo)">
            <summary>
            For internal use only. Load page document from snapshot file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.LoadSnapshot(System.IO.Stream,GrapeCity.ActiveReports.ResourceLocator)">
            <summary>
            For internal use only. Load page document from stream.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.PageDocument.LocateDataSource">
            <summary>
            Occurs when the report needs to locate a data source with from the calling application.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.PageDocument.LocateCredentials">
            <summary>
            Occurs when the report needs to obtain data source credentials from the calling application.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.PageDocument.RecordProcessed">
            <summary>
            Occurs when record was processed and allows to cancel following record processing.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.OnRecordProcessed">
            <summary>
            Allows internal callers to raise <see cref="E:GrapeCity.ActiveReports.Document.PageDocument.RecordProcessed"/> event.
            </summary>
            <returns>true if record processing should continue; false to cancel.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.GetRenderableReport(System.Boolean,System.Boolean)">
            <summary>
            For internal use only.
            Allows internal callers to get the report to execute it's queries and get all of it's data without rendering.
            </summary>
            <param name="forceDataRefresh">True to force re-processing of the report.</param>
            <remarks>Also used internally by subreports.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.GetRenderableReport(System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Allows internal callers to get the report to execute it's queries and get all of it's data without rendering.
            </summary>
            <param name="forceDataRefresh">True to force re-processing of the report.</param>
            <param name="forceParameterDataRefresh">True to force re-processing of the data used by the parameters.</param>
            <param name="skipValidation">True to skip parameters validation. False by default.</param>
            <remarks>Also used internally by subreports.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.PageDocument.Parameters">
            <summary>
            Gets the parameters for the report.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.PageDocument.PageReport">
            <summary>
            Gets the ReportDefinition for the report.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.PageDocument.LocateDataSourceFn">
            <summary>
            Gets the data source locator
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.InitializeReportHandlers(GrapeCity.ActiveReports.Document.PageDocument)">
            <summary>
            Sets the handlers to document
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.PageDocument.ResolveCredentialsFn">
            <summary>
            Gets the credentials locator
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Dispose">
            <summary>
            Performs tasks associated with freeing and releasing resources. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:GrapeCity.ActiveReports.Document.PageDocument"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.PageDocument.PrepareReportDefinition(GrapeCity.ActiveReports.PageReport)">
            <summary>
            Performs merging with master report if MasterReport property is specified.
            If merging is performed than new PageReport object is returned
            </summary>
            <param name="pageReport">the <see cref="P:GrapeCity.ActiveReports.Document.PageDocument.PageReport"/></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.PageDocument.IsEmpty">
            <summary>
            Returns <c>True</c> if the report contains no data.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.BarCodes.Drawing.PageDrawingDevice">
            <summary>
            Page drawing device
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.BarCodes.Drawing.PageImageDrawingDevice">
            <summary>
            Page drawing device
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_BadValue">
            <summary>
              Looks up a localized string similar to Invalid barcode data.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_Code128Selector">
            <summary>
              Looks up a localized string similar to Invalid Code128 selector.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_Code49GroupNo">
            <summary>
              Looks up a localized string similar to Code49 group number is out of range (should be between 0 and 8).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_DataMatrixFileIdentifier">
            <summary>
              Looks up a localized string similar to DataMatrix file identifier is out of range (should be between 0 and 254).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_DataMatrixStructureNumber">
            <summary>
              Looks up a localized string similar to DataMatrix structure number is out of range (should be between 0 and 15).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_HaveNoValue">
            <summary>
              Looks up a localized string similar to Have no value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_IncorrectValueLength">
            <summary>
              Looks up a localized string similar to Incorrect data length.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_MicroPDF417CompactionMode">
            <summary>
              Looks up a localized string similar to Invalid value for current encoding mode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_MicroPDF417FileID">
            <summary>
              Looks up a localized string similar to Invalid FileID Value, FileID should be from 0 to 899.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_MicroPDF417SegmentCount">
            <summary>
              Looks up a localized string similar to Invalid SegmentCount Value, SegmentCount should be from 0 to 99999.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_MicroPDF417SegmentIndex">
            <summary>
              Looks up a localized string similar to Invalid SegmentIndex Value, SegmentIndex should be from 0 to 99998.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_MicroPDF417SegmentIndexCount">
            <summary>
              Looks up a localized string similar to SegmentIndex should not bigger than SegmentCount.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_NoMoreConnection">
            <summary>
              Looks up a localized string similar to No more connection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_NoMoreGroup">
            <summary>
              Looks up a localized string similar to No more groups there.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_OverConnection">
            <summary>
              Looks up a localized string similar to Over connection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_ParameterError">
            <summary>
              Looks up a localized string similar to Barcode parameter error.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_PDF417Col">
            <summary>
              Looks up a localized string similar to PDF417 columns is out of range (should be -1 or between 1 and 30).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_PDF417ErrorLevel">
            <summary>
              Looks up a localized string similar to PDF417 error level is out of range (should be -1 or between 0 and 8).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_PDF417Row">
            <summary>
              Looks up a localized string similar to PDF417 rows is out of range (should be -1 or between 3 and 90).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_QRCodeConnectionNo">
            <summary>
              Looks up a localized string similar to QRCode connection number is out of range (should be between 0 and 15).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_QRCodeModel1Version">
            <summary>
              Looks up a localized string similar to QRCode version is invalid for QRCode Model1 (should be -1 or between 1 and 14).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_QRCodeModel2Version">
            <summary>
              Looks up a localized string similar to QRCode version is invalid for QRCode Model2 (should be -1 or between 1 and 40).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_RSSExpandedStackedCount">
            <summary>
              Looks up a localized string similar to RSSExpandedStacked rows count is out of range (should be between 1 and 11).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.Error_TooBigValue">
            <summary>
              Looks up a localized string similar to Incorrect data length.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.BarCodes.Resources.Resources.ForceEan13BarcodeChecksumCaption">
            <summary>
              Looks up a localized string similar to false.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.AR.CSS.CSSResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Default_FontFamily">
            <summary>
              Looks up a localized string similar to Arial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Default_FontSize">
            <summary>
              Looks up a localized string similar to 10.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading1Style_FontFamily">
            <summary>
              Looks up a localized string similar to Arial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading1Style_FontSize">
            <summary>
              Looks up a localized string similar to 16.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading1Style_FontStyle">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading1Style_FontWeight">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading1Style_Name">
            <summary>
              Looks up a localized string similar to Heading1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading2Style_FontFamily">
            <summary>
              Looks up a localized string similar to Times New Roman.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading2Style_FontSize">
            <summary>
              Looks up a localized string similar to 14.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading2Style_FontStyle">
            <summary>
              Looks up a localized string similar to Italic.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading2Style_FontWeight">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading2Style_Name">
            <summary>
              Looks up a localized string similar to Heading2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading3Style_FontFamily">
            <summary>
              Looks up a localized string similar to Arial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading3Style_FontSize">
            <summary>
              Looks up a localized string similar to 13.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading3Style_FontStyle">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading3Style_FontWeight">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.Heading3Style_Name">
            <summary>
              Looks up a localized string similar to Heading3.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_BackColor">
            <summary>
              Looks up a localized string similar to Transparent.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_FontDecoration">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_FontFamily">
            <summary>
              Looks up a localized string similar to Arial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_FontSize">
            <summary>
              Looks up a localized string similar to 10.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_FontStyle">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_FontWeight">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_ForeColor">
            <summary>
              Looks up a localized string similar to Black.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_GdiCharSet">
            <summary>
              Looks up a localized string similar to 1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_Name">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_TextAlignment">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.AR.CSS.CSSResources.NormalStyle_VerticalAlignment">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Barcode">
            <summary>
            Barcode control.
            </summary>
            
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException">
            <summary>
            Represents the barcode data exception.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException" /> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.ForceEan13BarcodeChecksumCaption">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.IsVertical">
            <summary>
            True if barcode is vertical (based on rotation value).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.CaptionGrouping">
            <summary>
            Gets or sets a value indicating whether to add spaces between groups of characters in the caption to make long numbers easier to read. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.CaptionPosition">
            <summary>
            Gets or sets the caption's vertical position relative to the barcode symbol.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.GetCaptionAdjustment(GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition,GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition)">
            <summary>
            Returns 0 if no adjustement needed.
            Returns 1 if size of the control should be increased.
            Returns -1 if size of the control should be _de_creased.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.CaptionSize">
            <summary>
            Returns size of the caption.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.BackColor">
            <summary>
            Gets or sets the barcode's background color or fill color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.ForeColor">
            <summary>
            Gets or returns the foreground color of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Text">
            <summary>
            Gets or sets the barcode text value to be printed as a barcode symbol and caption of the barcode in applicable symbologies.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.ValueBinary">
            <summary>
            Special property to pass binary data to barcode. Exists primary for QR Code barcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.TextToRender">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.DataField">
            <summary>
            Overridden. Gets or sets the name of the field used to bind the data source records.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.AutoSize">
            <summary>
            Gets or sets whether the barcode automatically stretches to fit the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.CheckSumEnabled">
            <summary>
            Determines whether a checksum of the barcode will be computed and included in the barcode when applicable.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Style">
            <summary>
            Gets or sets the barcode symbology used to render the barcode text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Direction">
            <summary>
            Gets or sets the barcode's direction, horizontally or vertically.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Rotation">
            <summary>
            Gets or sets the angle the barcode should be rotated to.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.NWRatio">
            <summary>
            NW Ratio
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarWidth">
            <summary>
            Sets or returns the width, in inches, for the barcode's narrow bars. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.NarrowBarWidth">
            <summary>
            Also known as the X dimension, this is a value defining the width of the narrowest part of the barcode. 
            Before using an extremely small value for this width, ensure that the scanner can read it.
            This value is in pixel for SectionReports and in point/inch/cm for PageReports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarHeight">
            <summary>
            Height of a bar.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Alignment">
            <summary>
            Gets or sets the horizontal alignment of the caption in the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Font">
            <summary>
            Gets or returns the font object used to print the control's caption.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneTop">
            <summary>
            Gets or sets the top quiet zone of the barcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneBottom">
            <summary>
            Gets or sets the bottom quiet zone of the barcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneLeft">
            <summary>
            Gets or sets the left quiet zone of the barcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneRight">
            <summary>
            Gets or sets the right quiet zone of the barcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementBarHeight">
            <summary>
            The height of a bar in the supplement barcode.
            </summary>
            <remarks>
            Supplement is 2/5-digit addons for EAN/UPC symbologies.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementCaptionPosition">
            <summary>
            Defines how to display the barcode caption.
            </summary>
            <remarks>
            Supplement is 2/5-digit addons for EAN/UPC symbologies.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementText">
            <summary>
            The supplement for barcode data.
            </summary>
            <remarks>
            Supplement is 2/5-digit addons for EAN/UPC symbologies.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementDataField">
            <summary>
            The supplement for barcode data.
            </summary>
            <remarks>
            Supplement is 2/5-digit addons for EAN/UPC symbologies.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementSpacing">
            <summary>
            The spacing between main and supplement barcodes.
            </summary>
            <remarks>
            Supplement is 2/5-digit addons for EAN/UPC symbologies.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code49">
            <summary>
            Gets or sets the Code49Options for the barcode control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code49Options">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QRCode">
            <summary>
            Gets or sets the QRCodeOptions for the barcode control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QRCodeOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroQRCode">
            <summary>
            Gets or sets the MicroQRCodeOptions for the barcode control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroQRCodeOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.PDF417">
            <summary>
            Gets or sets the PDF417Options for the barcode control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.PDF417Options">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroPDF417">
            <summary>
            Gets or sets the MicroPDF417Options for the barcode control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroPDF417Options">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.GS1Composite">
            <summary>
            Gets or sets the GS1CompositeOptions for the barcode control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.GS1CompositeOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code128">
            <summary>
            Gets or sets the Code128Options for the barcode control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code128Options">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.RssExpandedStacked">
            <summary>
            When you set the Barcode Style property to RssExpandedStacked, this property allows you to control, via the RowCount property,
            the number of stacks of segments in which to display the code. You can specify two to eleven rows. 
            Displaying an RSS Expanded barcode in stacks may be more appropriate for certain packaging requirements, as it reduces the length of a barcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.RssExpandedStackedOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.DataMatrix">
            <summary>
            DataMatrix options include EccMode, Ecc200SymbolSize, Ecc200EncodingMode, Ecc000_140SymbolSize, StructuredAppend, StructureNumber, FileIdentifier, and Encoding. 
            Select from supplied values, or enter a number for the StructureNumber and FileIdentifier.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.DataMatrixOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MaxiCode">
            <summary>
            MaxiCode options.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MaxiCodeOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.SplitBarcodesBounds(System.String,System.String,System.Drawing.RectangleF,System.Drawing.RectangleF@,System.Drawing.RectangleF@)">
            <summary>
            Deterimines the optimal size for 2 barcodes (main and supplement) in a report item 
            content area.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.GetBarEngineDependent">
            <summary>
            Gets the engine of dependent barcode for the composite barcode.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.RenderImpl(System.Drawing.RectangleF,System.Func{System.Drawing.RectangleF,GrapeCity.ActiveReports.Extensibility.Rendering.Components.Barcode.IDrawingDevice},System.Action)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.GetBarcodeBounds">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.GetBgBounds">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.AllowsSupplementBarcode(GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle)">
            <summary>
            Returns true if a <see cref="T:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle"/> can have a supplement barcode, otherwise returns false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition">
            <summary>
            Specifies position for barcode caption
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition.Above">
            <summary>
            The above
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition.Below">
            <summary>
            The below
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle">
            <summary>
            Type of code, or symbology, the barcode control will use to generate the barcode.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.None">
            <summary>
            None.	
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Ansi39">
            <summary>
            ANSI 3 of 9 (Code 39) uses upper case, numbers, - , * $ / + %.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Ansi39x">
            <summary>
            ANSI Extended 3 of 9 (Extended Code 39) uses the complete ASCII character set.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_2_of_5">
            <summary>
            Code 2 of 5 uses only numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code25intlv">
            <summary>
            Interleaved 2 of 5 uses only numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code25mat">
            <summary>
            Code25mat
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Matrix_2_of_5">
            <summary>
            Matrix 2 of 5 is a higher density barcode consisting of 3 black bars and 2 white bars. Matrix_2_of_5 uses only numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code39">
            <summary>
            Code 39 uses numbers,  % * $ /. , - +, and upper case.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code39x">
            <summary>
            Extended Code 39 uses the complete ASCII character set.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128_A">
            <summary>
            Code 128 A uses control characters, numbers, punctuation, and upper case.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128_B">
            <summary>
            Code 128 B uses punctuation, numbers, upper case and lower case.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128_C">
            <summary>
            Code 128 C uses only numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128auto">
            <summary>
            Code 128 Auto
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_93">
            <summary>
            Code 93 uses the complete ASCII character set.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code93x">
            <summary>
            Extended Code 93 uses the complete ASCII character set.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MSI">
            <summary>
            MSI Code uses only numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.PostNet">
            <summary>
            PostNet uses only numbers with a check digit.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Codabar">
            <summary>
            Codabar uses A B C D + - : , / and numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.EAN_8">
            <summary>
            EAN-8 uses only numbers (7 numbers and a check digit).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.EAN_13">
            <summary>
            EAN-13 uses only numbers (12 numbers and a check digit). 
            If there are only 12 numbers in the string, it calculates a checksum and adds it to the thirteenth position. 
            If there are 13, it validates the checksum and throws an error if it is incorrect.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UPC_A">
            <summary>
            UPC-A uses only numbers (11 numbers and a check digit).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UPC_E0">
            <summary>
            UPC-E0 uses only numbers. Used for zero-compression UPC symbols. 
            For the Caption property, you may enter either a six-digit UPC-E code or a complete 11-digit (includes code type, which must be 0 (zero)) UPC-A code.
            If an 11-digit code is entered, the Barcode control will convert it to a six-digit UPC-E code, if possible.
            If it is not possible to convert from the 11-digit code to the six-digit code, nothing is displayed.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UPC_E1">
            <summary>
            UPC-E1 uses only numbers.  Used typically for shelf labeling in the retail environment.  The length of the input string for U.P.C. E1 is six numeric characters.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RM4SCC">
            <summary>
            Royal Mail RM4SCC uses only letters and numbers (with a check digit).  This is the barcode used by the Royal Mail in the United Kingdom.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UCCEAN128">
            <summary>
            UCC/EAN –128 uses the complete ASCII character Set.  This is a special version of Code 128 used in HIBC applications.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.QRCode">
            <summary>
            QRCode is a 2D symbology that is capable of handling numeric, alphanumeric and byte data as well as Japanese kanji and kana characters. This symbology can encode up to 7,366 characters.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code49">
            <summary>
            Code 49 is a 2D high-density stacked barcode. Encodes the complete ASCII character set. 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.JapanesePostal">
            <summary>
            This is the barcode used by the Japanese Postal system. Encodes alpha and numeric characters consisting of 18 digits including a 7-digit postal code number,
            optionally followed by block and house number information. The data to be encoded can include hyphens.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Pdf417">
            <summary>
            Pdf417 is a popular high-density 2-dimensional symbology that encodes up to 1108 bytes of information. 
            This barcode consists of a stacked set of smaller barcodes. Encodes the full ASCII character set. Capable of encoding as many as 2725 data characters.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.EAN128FNC1">
            <summary>
            EAN-128 is an alphanumeric one-dimensional representation of Application Identifier data. It is not meant for point-of-sales use, but for marking containers in the shipping industry.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14">
            <summary>
            RSS14 is a Reduced Space Symbology that encodes Composite Component (CC) extended EAN and UPC information in less space. 
            This version is a 14-digit EAN.UCC item identification for use with omnidirectional point-of-sale scanners.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14Truncated">
            <summary>
            RSS14Truncated is a Reduced Space Symbology that encodes Composite Component (CC) extended EAN and UPC information in less space. 
            This version is a 14-digit EAN.UCC item identification plus Indicator digits for use on small items, not for point-of-sale scanners.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14Stacked">
            <summary>
            RSS14Stacked is a Reduced Space Symbology that encodes Composite Component (CC) extended EAN and UPC information in less space. 
            This version is the same as RSS14Truncated, but stacked in two rows when RSS14Truncated is too wide.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14StackedOmnidirectional">
            <summary>
            RSS14StackedOmnidirectional is a Reduced Space Symbology that encodes Composite Component (CC) extended EAN and UPC information in less space. 
            This version is the same as RSS14, but stacked in two rows when RSS14 is too wide.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSSExpanded">
            <summary>
            RSSExpanded is a Reduced Space Symbology that encodes Composite Component (CC) extended EAN and UPC information in less space. 
            This version is a 14-digit EAN.UCC item identification plus AI element strings (expiration date, weight, etc.) for use with omnidirectional point-of-sale scanners.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSSExpandedStacked">
            <summary>
            RSSExpandedStacked is a Reduced Space Symbology that encodes Composite Component (CC) extended EAN and UPC information in less space. 
            This version is the same as RSSExpanded, but stacked in two rows when RSSExpanded is too wide.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSSLimited">
            <summary>
            RSS Limited is a Reduced Space Symbology that encodes Composite Component (CC) extended EAN and UPC information in less space.
            This version is a 14-digit EAN.UCC item identification with indicator digits of 0 or 1 in a small symbol that is not scanned by point-of-sale scanners.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.DataMatrix">
            <summary>
            Data Matrix is a high density, two-dimensional barcode with square modules arranged in a square or rectangular matrix pattern.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MicroPDF417">
            <summary>
            MicroPDF417 is two-dimensional (2D), multi-row symbology, derived from PDF417. 
            Micro-PDF417 is designed for applications that need to encode data in a two-dimensional (2D) symbol (up to 150 bytes, 
            250 alphanumeric characters, or 366 numeric digits) with the minimal symbol size.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MicroQRCode">
            <summary>
            Micro QR Code is a variant of QR Code, with reduced barcode size. It has only one position detection pattern.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MaxiCode">
            <summary>
            MaxiCode is special polar barcode.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.GS1QRCode">
            <summary>
            GS1 QRCode
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.IntelligentMail">
            <summary>
            Intelligent Mail, formerly known as the 4-State Customer Barcode, is a 65-bar code used for domestic mail in the U.S.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ITF14">
            <summary>
            Interleaved Two of Five. This code is used to mark cartons and palettes that are including goods with an EAN-13 code. 
            One digit is added in front of the EAN-13 code to mark the packing variant.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_11">
            <summary>
            Encodes the numbers 0 through 9, the hyphen (-), and start/stop characters. It is primarily used in labeling telecommunications equipment.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.SSCC_18">
            <summary>
            SSCC_18 is an 18-digit Serial Shipping Container Code. It is used to identify individual shipping containers for tracking purposes.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Telepen">
            <summary>
            Telepen has 2 different modes - alphanumeric-only and numeric-only. Both modes require a start character, a check digit, and a stop character. 
            It is mainly used in manufacturing industries.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Pharmacode">
            <summary>
            Pharmacode represents only numeric data from 3 to 131070. It is a barcode standard used in the pharmaceutical industry for packaging. It is designed to be readable despite printing errors.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.PZN">
            <summary>
            PZN Pharmaceutical Central/General Number uses the same encoding algorithm as Code 39 but can carry only digits – 0123456789. The number of digits supported for encoding are 6 or 7.
            The letters 'PZN' and checksum digit are automatically added. It is mainly used to identify medicine and health-care products in Germany and other German-speaking countries.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.HIBCCode128">
            <summary>
            HIBCCode128 barcode uses the Code128 symbology. It encodes 'Primary Data' and 'Secondary Data' using slash (/) as delimiter.
            It is used in the health care products industry for identification purpose.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.HIBCCode39">
            <summary>
            HIBCCode39 barcode uses the Code39 symbology, with Code39OptionalCheckDigit property set to True. It encodes 'Primary Data' and 'Secondary Data' using slash (/) as delimiter.
            It is used in the health care products industry for identification purpose.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ISBN">
            <summary>
            International Standard Book Number barcode is a special form of the EAN-13 code and is used as a unique 9-digit commercial book identifier.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ISSN">
            <summary>
            International Standard Serial Number barcode is a special form of the EAN-13 code.
            It is used to identify serial publications, publications that are issued in numerical order, such as the volumes of a magazine.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ISMN">
            <summary>
            Internationally Standard Music Number barcode is a special form of the EAN-13 code. It is used for marking printed musical publications.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.IATA_2_of_5">
            <summary>
            IATA_2_of_5 is a variant of Code_2_of_5 and uses only numbers with a check digit.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.BC412">
            <summary>
            Data BC412 uses 35 characters, 0 - 9 and A - Z. It is designed for semiconductor wafer identification.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Plessey">
            <summary>
            Plessey uses hexadecimal digits to encode. It is a one-dimensional barcode used mainly in libraries.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.IntelligentMailPackage">
            <summary>
            IntelligentMailPackage is more efficient in terms of processing and tracking mails than Intelligent Mail barcode.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection">
            <summary>
            Specifies the print direction of the barcode symbol.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.LeftToRight">
            <summary>
            The barcode symbol is printed left to right (default).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.RightToLeft">
            <summary>
            The barcode symbol is printed right to left.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.TopToBottom">
            <summary>
            The barcode symbol is printed top to bottom.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.BottomToTop">
            <summary>
            The barcode symbol is printed bottom to top.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Rotation">
            <summary>
            Defines the orientation of the bars in the barcode.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.Rotate90Degrees">
            <summary>
            90 degrees
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.Rotate180Degrees">
            <summary>
            180 degrees
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.Rotate270Degrees">
            <summary>
            270 degrees
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ChartControl">
            <summary>
            Wraps the SharpGraph as a ChartControl.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ChartControl.SetDirtyFired">
            <summary>
            SetDirtyFired - Internal Event for use in the ActiveReports 6 Designer
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ChartControl"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Parameters">
            <summary>
            Parameters - Internal property for use in the ActiveReports 6 Designer
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ImageType">
            <summary>
            Sets or returns the type of image to which the chart will be rendered on the report.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.DataField">
            <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Culture">
            <summary>
            Gets or sets the culture for the chart control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.DataSource">
            <summary>
            Gets or sets the global data source for the chart.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.WriteXMLDataSource(System.Xml.XmlElement)">
            <summary>
            Writes the graph datasource.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes graph layout to rpx
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ReadXml(System.Xml.XmlNode)">
            <summary>
            Read the graph layout from rpx
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Quick Save
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Quick load
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.QuickSaveDataSource(System.IO.BinaryWriter)">
            <summary>
            Quick sabve when the report is processing data
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.QuickLoadDataSource(System.IO.BinaryReader)">
            <summary>
            Quick load when the report is processing data
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GrapeCity#ActiveReports#Controls#IControlInternal#Render(GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Chart Rendering at run time on a metafile/graphics.
            when it shows up on canvas it is an image.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Chart rendering at design time and run time.
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GrapeCity#ActiveReports#Controls#IControlInternal#SupportsFlexSize">
            <summary>
            this one has to return true, with (CalcCut true, pos =0) and CanCut (false)
            aint that interesting
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GetCompatibleDatasource(System.Object,System.Boolean)">
            <summary>
            Converts given datasource to one
            </summary>
            <remarks>
            Used explicit argument for test purposes
            </remarks>
            <param name="source">Datasource to convert</param>
            <returns>Converted datasource</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.SetChartDataSource">
            <summary>
            This should set the chart datasource as one of sqlCommands at design time only
            Run time it should be null
            This is the only place where it is being done
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GetDataSource(System.Object)">
            <summary>
            Returns the Graph DataSource from sqlCommand to one of dd datasource.(sqlDb, oledb, xml)
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.IsChartDataSourceUpdated">
            <summary>
            Updates the parameters with the values from teh fields collection before the 
            query is passed on to the chart.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.UpdateChartDataSource">
            <summary>
            Update only the sql of chart
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.UpdateParameterValues">
            <summary>
            Called from binding layer to update the chart parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.CreateChart">
            <summary>
            Initializes an instance of chart; and sets the design mode and attaches the 
            dirty event
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Restart">
            <summary>
            Resets the chart data source and restarts chart processing. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Load(System.String)">
            <summary>
            Loads the chart from an xml file
            </summary>
            <param name="filename">xml file containg graph layout information.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Save(System.String)">
            <summary>
            Saves the graph layout to a xml file.
            The layout is inserted between "Sharpgrah" nodes.
            </summary>
            <param name="filename">xml file for the layout to be saved to.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.FillChart">
            <summary>
            Fills Chart's series with datapoints at run time
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GetDataTableFromCommand(System.Data.IDbCommand)">
            <summary>
            Populates a DataTable from Reader
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.OnSeriesChange(System.Object,GrapeCity.ActiveReports.Chart.XYVAlueChangedEventArgs)">
            <summary>
            To handle Run time change in series valueMembersX and ValueMembersY only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.SaveDataSourceCredentials(System.String,System.String)">
            <summary>
            For internal use only!
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.CoreChart">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.BlackAndWhiteMode">
            <summary>
            Gets or sets a value indicating whether the chart will be drawn in black and white using hatch patterns and line dashing to designate colors. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Backdrop">
            <summary>
            Main chart's backdrop, spans all chart control area
            </summary>		
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.BackdropOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ChartBorder">
            <summary>
            Main chart's border, spans all chart control area
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ChartBorderOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GridLayout">
            <summary>
            Gets or sets the GridLayout object for the chart. 
            </summary>
            <value>The grid layout.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GridLayoutOptions">
            <summary>
            Design-time support, for internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Legends">
            <summary>
            Gets the legend object for the chart control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ChartAreas">
            <summary>
            A collection of ChartArea objects drawn in the chart control.
            </summary>
            <value>The chart areas.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Series">
            <summary>
            Where chart gets it's data to display
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Titles">
            <summary>
            Gets the titles collection for the SharpGraph object. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.AutoRefresh">
            <summary>
            Gets or sets a value indicating whether the chart will be automatically refreshed (redrawn) for every property change.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ColorPalette">
            <summary>
            Gets or sets the color palette enumeration used for the series.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.UIOptions">
            <summary>
            Gets or sets specific user interface features for the chart.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ChartDataAdapter">
            <summary>
            Our own inmplementation of chart data adapter;
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.CheckBox">
            <summary>
            Summary description for Checkbox.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.CheckBox"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Padding">
            <summary>
            Determaines the padding in points
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Text">
            <summary>
            Gets or sets the printed caption of the checkbox.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Checked">
            <summary>
            Gets or sets a value indicating the state of the checkbox.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.ClassName">
            <summary>
            Gets or sets a style rule class name.  The style rule is used to format the control.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.RefreshStyles">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Style">
            <summary>
            Gets or sets a style string for the checkbox. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.ForeColor">
            <summary>
            Gets/sets control's ForeColor style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.BackColor">
            <summary>
            Sets/gets controls BackColor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Font">
            <summary>
            Sets/gets control's font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.WordWrap">
            <summary>
            Sets/gets control's wordwrap using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.WrapMode">
            <summary>
            Sets/gets control's wrap mode using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.CheckAlignment">
            <summary>
            Gets or sets the alignment of the checkbox text within the control drawing area.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.CalcContentAlignment(System.Drawing.RectangleF,System.Drawing.ContentAlignment,System.Drawing.SizeF,System.Single,System.Drawing.RectangleF@,System.Drawing.RectangleF@)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Kinsoku">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ImageTypes">
            <summary>
            Enum ImageTypes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ImageTypes.Metafile">
            <summary>
            Metafile
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ImageTypes.PNG">
            <summary>
            PNG
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ARControl">
            <summary>
            Summary description for Control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ARControl.BOUNDSCONSTRAINTS">
            <summary>
            Bounds constraints
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ARControl.PADDING">
            <summary>
            Constant for padding
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ARControl.xMultiplier">
            <summary>
            X (width) Multiplier for Border offset
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ARControl.yMultiplier">
            <summary>
            Y (height) multiplier for border
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ARControl.INCHTOPOINT">
            <summary>
            INCHTOPOINT const = 72.0f
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ARControl"/> class.
            </summary>
            <param name="size">The size of the control.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="bdisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.RefreshStyles">
            <summary>
            for internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.CompensateForBorder(System.Single@,System.Single@)">
            <summary>
            For internal use only (testing).
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.ARControl.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed" /> event of a component.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Parent">
            <summary>
            Gets a reference to the parent section of the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.IncrementallyNameItem(System.String,System.Collections.ArrayList)">
            <summary>
            AM: CR 25701 helper method
            names item incrementally using counter until item is not in passed names list
             </summary>
            <param name="nameBase">base value for naming, will be used as [base]+index</param>
            <param name="namesList">lowercased existing names</param>
            <returns>new name</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.ParseAndCorrectName(System.String)">
            <summary>
            parses and corrects specified string to be a valid identifier
            in a specific manner
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Name">
            <summary>
            Gets or sets the name of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Visible">
            <summary>
            Sets or returns a value indicating whether the control will be printed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Bounds">
            <summary>
            Sets or returns a rectangle that defines the location and size of the control in inches.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Location">
            <summary>
            Gets or sets the location of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Size">
            <summary>
            Gets or sets the size of the control in inches. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Left">
            <summary>
            Gets or sets the left position of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Top">
            <summary>
            Gets or sets, in inches, the top position of the control relative to the section that contains it.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Width">
            <summary>
            Gets or sets the width of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Height">
            <summary>
            Gets or sets the height of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.DataField">
            <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Border">
            <summary>
            Gets a border object that defines the border style for each edge of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Tag">
            <summary>
            Gets or sets user-defined information to be persisted with the control. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.GrapeCity#ActiveReports#Controls#IControlInternal#CompensateForBorder">
            <summary>
            CompensateForBorder - internal method to compensate for Border settings on Draw and Render
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.GetBounds">
            <summary>
            Returns the bounds of the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.SetBounds(System.Drawing.RectangleF)">
            <summary>
            Sets the bounds of the control to the specified rectangle.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.NormalizeLineFeeds(System.String)">
            <summary>
            Normalizes line-feed characters to unified presentation with \n as line delimiter
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.WriteBounds(System.IO.BinaryWriter)">
            <summary>
            Writes the bounds to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.GrapeCity#ActiveReports#Controls#IControlInternal#QuickLoad(System.IO.BinaryReader)">
            TODO: implement QuickSave and QuickLoad for all controls
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.ReadBounds(System.IO.BinaryReader)">
            <summary>
            Reads the control bounds from specified binary reader.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.WriteBounds(System.Xml.XmlElement)">
            <summary>
            Writes bounds of the control
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.ReadBounds(System.Xml.XmlNode)">
            <summary>
            Read bounds of the control 
            </summary>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.RaiseOnComponentChanging">
            <summary>
            Raises IComponentChangeService.OnComponentChanging
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.RaiseOnComponentChanged">
            <summary>
            IComponentChangeService.OnComponentChanged
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.LogStr(System.String)">
            <summary>
            debug logger. use C:\\tmp\\logControls.txt
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.LogStr(System.String,System.String)">
            <summary>
            debug logger
            </summary>
            <param name="str"></param>
            <param name="filename"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.CalcLineHeight(System.Drawing.Font,System.Single)">
            <summary>
            CalcLineHeight
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.AlignCSSToCanvas(DDCssLib.ddTextAlignTypes)">
            <summary>
            Used for Label, Field, and Checkbox on Alignment property.
            </summary>
            <param name="tAlign"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.AlignCanvasToCSS(GrapeCity.ActiveReports.Document.Section.TextAlignment)">
            <summary>
            Used for Lable, Field and Checkbox on Alignment property.
            </summary>
            <param name="tAlign"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.VAlignCSSToCanvas(DDCssLib.ddVerticalAlignTypes)">
            <summary>
            Used for Label and Field on VerticalAlignment property.
            </summary>
            <param name="vAlign"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.VAlignCanvasToCSS(GrapeCity.ActiveReports.Document.Section.VerticalTextAlignment)">
            <summary>
            Used for Label and Field on VerticalAlignment property.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.BringToFront">
            <summary>
            Brings the control to the front of the z-order.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.SendToBack">
            <summary>
            Sends the control to the back of the z-order.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ControlCollection">
            <summary>
            Summary description for ControlCollection.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Changed">
            <summary>
            Raised when an ARControl is added to or removed from the collection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.#ctor(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ControlCollection"/> class.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Contains(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Determines whether the specified control is a member of the collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.AddWithoutNameCheck(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Adds control to collection without name check
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.AddInternal(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Adds the control to the list
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.AddInternal(System.Int32,GrapeCity.ActiveReports.SectionReportModel.ARControl,System.Boolean)">
            <summary>
            Adds the control to the list.
            if index == -1, Add is called.
            else insert is called.
            
            Doing this to avoid redundancy for public method Insert(int, ARControl) that needs to go through the same validation as Add.
            </summary>
            <param name="index"></param>
            <param name="control"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Add(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Adds the specified control to the control collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.AddRange(GrapeCity.ActiveReports.SectionReportModel.ARControl[])">
            <summary>
            Adds an array of ARControl objects to the collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Remove(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Removes the specified control from the control collection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.RemoveNoDestroy(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Removes control from the collection but does not destroy the control, used for communicating between designer/engine (moving controls across sections)
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.RemoveAt(System.Int32)">
            <summary>
            Removes control at specifed index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Item(System.Int32)">
            <summary>
            Returns a control in the collection at the specified index.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Item(System.String)">
            <summary>
            Returns a control in the collection with a specified name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Clear">
            <summary>
            Removes all controls which were added to the collection using the Add method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.CopyTo(GrapeCity.ActiveReports.SectionReportModel.ARControl[],System.Int32)">
            <summary>
            Copies the controls collection from the specified report to a controls collection at the specified index.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Insert(System.Int32,GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Inserts ArControl at the specified Index in ControlCollection of a Section.
            </summary>
            <param name="index">Index at which the control will be inserted.</param>
            <param name="control">ARControl to insert</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.IndexOf(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Retrieves the index of the specified control in the control collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            OnInsertComplete
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.WriteXml(System.Xml.XmlElement)">
            <summary>
            
            </summary>
            <param name="sectionNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.ReadXml(System.Xml.XmlNode,GrapeCity.ActiveReports.SectionReport)">
            <summary>
            
            </summary>
            <param name="sectionNode"></param>
            <param name="report"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.MigrateAR2DataSources(System.String,System.Xml.XmlNode,GrapeCity.ActiveReports.SectionReport)">
            <summary>
            
            </summary>
            <param name="controlType"></param>
            <param name="controlNode"></param>
            <param name="report"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.SetReport">
            <summary>
            Set ARControl.m_theReport = parent report
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.DestroyComponents(System.ComponentModel.Design.IDesignerHost)">
            <summary>
            All the existin components needs to be desrtoyed on LoadLayout call
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.DestroyComponent(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Removes the component from the container.  Implemented only for EUD.
            </summary>
            <param name="control">ARControl to be removed.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox">
            <summary>
            Cross Section Box control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.Radius">
            <summary>
            Gets or sets Radius of each corner separately.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.BackColor">
            <summary>
            Sets or Gets the background color of the control
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.CloseBorder">
            <summary>
            Sets or Gets the state borders
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.Border">
            <summary>
            Gets a border object that defines the border style for each edge of the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.GetDoubleRadius">
            <summary>
            Gets actual radius width (double radius) in inches.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBoxConverter">
            <summary>
             For internal use.
             Filter properties
             </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBoxConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">An System.Object that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type System.Attribute that will be used as a filter.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for the component.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl">
            <summary>
            Base interface for cross-section controls
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.VerifyPositions">
            <summary>
            verifies that Start.X is less than End.x
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Size">
            <summary>
            Overridden Size to hide in design time
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Width">
            <summary>
            Gets or sets the width of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Left">
            <summary>
            Gets or sets the left position of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Top">
            <summary>
            Gets or sets, in inches, the top position of the control relative to the section that contains it.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Location">
            <summary>
            Overridden Location to hide in design time
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.DataField">
            <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Right">
            <summary>
            The right bound position.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Bottom">
            <summary>
            The bottom bound position.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Start">
            <summary>
            Gets or sets Start position within starting section
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.End">
            <summary>
            Gets or sets End position within the ending section
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.LineWeight">
            <summary>
            Gets or sets the pen width of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.LineStyle">
            <summary>
            Gets or sets the pen style used to draw the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.LineColor">
            <summary>
            Gets or sets the color of the line control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.SetStartImpl(System.Drawing.PointF)">
            <summary>
            Applies Start point
            </summary>
            <param name="start"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.SetEndImpl(System.Drawing.PointF)">
            <summary>
            Applied End point
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.WriteBounds(System.Xml.XmlElement)">
            <summary>
            Writes bounds of the control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.ReadBounds(System.Xml.XmlNode)">
            <summary>
            Read bounds of the control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.WriteBounds(System.IO.BinaryWriter)">
            <summary>
            Writes the bounds to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.ReadBounds(System.IO.BinaryReader)">
            <summary>
            Reads the control bounds from specified binary reader.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine">
            <summary>
            Cross Section Line control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine.SetStartImpl(System.Drawing.PointF)">
            <summary>
            Applies Start point
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine.SetEndImpl(System.Drawing.PointF)">
            <summary>
            Applied End point
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine.Border">
            <summary>
            Gets a border object that defines the border style for each edge of the control.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.CustomControl">
            <summary>
            Control, which hosts user's controls
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.CustomControl"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.CustomControl"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.Type">
            <summary>
            Gets or sets the control type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.TypeName">
            <summary>
            The type name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.ShouldSerializeTypeName">
            <summary>
            True if should serialize type name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.TypeAssemblyName">
            <summary>
            The type assembly name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.ShouldSerializeTypeAssemblyName">
            <summary>
            True if should serialize type assembly name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.Control">
            <summary>
            Gets the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.ImageType">
            <summary>
            Gets or sets the type of the image.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.DrawControlOnImage(System.Object,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Label">
            <summary>
            Summary description for Label.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Label"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.GrapeCity#ActiveReports#Controls#IControlInternal#CanCut(System.Single)">
            <summary>
            CanCut
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.GrapeCity#ActiveReports#Controls#IControlInternal#CalcCut(System.Single@)">
            <summary>
            CalcCut
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.CharacterSpacing">
            <summary>
            Determines the distance in points between two characters.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.LineSpacing">
            <summary>
             Determines the spacing in points between text lines		
            </summary>
            
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Value">
            <summary>
            Gets or sets the current Value of the Label control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.VerticalText">
            <summary>
            Gets or sets whether label should be rendered according to vertical layout rules
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Padding">
            <summary>
            Determaines the padding in points
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Text">
            <summary>
            Gets or sets the text of the label to be printed. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.HyperLink">
            <summary>
            Gets or sets a URL address that can be used in the viewer's HyperLink event to navigate to the specified location.
            The URL is automatically converted into an anchor tag or a hyperlink in HTML and PDF exports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.MultiLine">
            <summary>
            Gets or sets a value indicating whether this is a multi-line label control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Angle">
            <summary>
            Gets or sets the angle (slope) of the text within the control area. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.ClassName">
            <summary>
            Gets or sets a style rule class name.  The style rule is used to format the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.RefreshStyles">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Style">
            <summary>
            Gets or sets a style string for the label.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.ForeColor">
            <summary>
            Gets/sets control's ForeColor style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.BackColor">
            <summary>
            Sets/gets controls BackColor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Font">
            <summary>
            Sets/gets control's font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.WordWrap">
            <summary>
            Sets/gets control's wordwrap using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.WrapMode">
            <summary>
            Sets/gets control's wrap mode using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.VerticalAlignment">
            <summary>
            Gets or sets the position of the label's text vertically within the bounds of the control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Alignment">
            <summary>
            Gets or sets the alignment of text within the bounds of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.TextJustify">
            <summary>
            Gets or sets the type of justification to use when the Alignment property is set to Justify.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.RightToLeft">
            <summary>
            Sets or returns a value indicating whether control's elements are aligned to support locales using right-to-left fonts.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.ShrinkToFit">
            <summary>
            Gets ot sets the value indicating whether the label should decrease the font size in order to fit the content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.MinCondenseRate">
            <summary>
            Gets ot sets the value indicating the minimal value to which the label should condense its characters horizontally in order to fit the content.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
            <param name="controlNode">The control node.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Kinsoku">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Line">
            <summary>
            Summary description for Line.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Line"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.LineStyle">
            <summary>
            Gets or sets the pen style used to draw the line. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.LineColor">
            <summary>
            Gets or sets the color of the line control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.LineWeight">
            <summary>
            Gets or sets the pen width of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.AnchorBottom">
            <summary>
            Anchors the line to the bottom of the containing section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.X1">
            <summary>
            Gets or sets the horizontal coordinate of the line's starting point.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Y1">
            <summary>
            Gets or sets the vertical coordinate of the line's starting point.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.X2">
            <summary>
            Gets or sets the horizontal coordinate of the line's end point.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Y2">
            <summary>
            Gets or sets the vertical coordinate of the line's end point.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.WriteBounds(System.Xml.XmlElement)">
            <summary>
            Writes bounds of the control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.ReadBounds(System.Xml.XmlNode)">
            <summary>
            Read bounds of the control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.WriteBounds(System.IO.BinaryWriter)">
            <summary>
            Writes the bounds to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.ReadBounds(System.IO.BinaryReader)">
            <summary>
            Reads the control bounds from specified binary reader.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Location">
            <summary>
            Gets or sets the location of the control in inches. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.DataField">
            <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Border">
            <summary>
            Gets a border object that defines the border style for each edge of the control.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.OleObject">
            <summary>
            Summary description for OleObject.
            </summary>
            
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.OleObject"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.SizeMode">
            <summary>
            Gets or sets a value that determines how the image is sized to fit the OleObject control area.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.HyperLink">
            <summary>
            Gets or sets a URL address that can be used in the viewer's HyperLink event to navigate to the specified location.
            The URL is automatically converted into an anchor tag or a hyperlink in HTML and PDF exports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.Class">
            <summary>
            Specifies the class name of the Ole object. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.DataValue">
            <summary>
            Gets or sets the data value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.BackColor">
            <summary>
            Gets or sets the background color of the control area. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.CreateEmbedded">
            <summary>
            Creates an Ole Object to embed in the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.CreateFrom(System.String)">
            <summary>
            Creates an Ole Object to embed in the control from the specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.CanEdit">
            <summary>
            Gets a value indicating whether this instance can edit.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.Edit(System.Object)">
            <summary>
            Invokes the Ole server to edit the current embedded instance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.ContentSize">
            <summary>
            Gets the size of the content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.PictureAlignment">
            <summary>
            Gets or sets the position of the object's content within the control area. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="bdisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.OleHandler">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.OleThread">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.OleContext">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.PageBreak">
            <summary>
            Summary description for PageBreak.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageBreak.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.PageBreak"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Enabled">
            <summary>
            Determines whether the PageBreak is currently enabled.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageBreak.WriteBounds(System.Xml.XmlElement)">
            <summary>
            Writes bounds of the control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageBreak.ReadBounds(System.Xml.XmlNode)">
            <summary>
            Read bounds of the control
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageBreak.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageBreak.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Size">
            <summary>
            Gets or sets the size of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Location">
            <summary>
            Gets or sets the location of the control in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.DataField">
            <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Border">
            <summary>
            Gets a border object that defines the border style for each edge of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Visible">
            <summary>
            Sets or returns a value indicating whether the control will be printed.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment">
            <summary>
            Determines the position of the picture within the control area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.TopLeft">
            <summary>
            The picture will print in the top left corner of the control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.TopRight">
            <summary>
            The picture will print in the top right corner of the control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.Center">
            <summary>
            The picture will be centered within the control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.BottomLeft">
            <summary>
            The picture will print in the bottom left corner of the control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.BottomRight">
            <summary>
            The picture will print in the bottom right corner of the control.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.SizeModes">
            <summary>
            Determines how a picture should be sized within the control area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SizeModes.Clip">
            <summary>
            The image is clipped to fit within the control area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SizeModes.Stretch">
            <summary>
            The image is stretched to fit the control area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SizeModes.Zoom">
            <summary>
            The image is scaled until it fits horizontally and vertically within the control area.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Picture">
            <summary>
            Represents image
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:GrapeCity.ActiveReports.SectionReportModel.Picture._image" -->
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Picture._initialized">
            <summary>
            To support ISupportInitialize
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Picture"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.BackColor">
            <summary>
            Gets or sets the background color of the control area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.LineStyle">
            <summary>
            Gets or sets the pen style used to paint the border around the picture control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.LineColor">
            <summary>
            Gets or sets the border line color around the picture control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.LineWeight">
            <summary>
            Gets or sets the pen width of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.Title">
            <summary>
            Gets or sets the title text.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.Description">
            <summary>
            Gets or sets the alternate description for the picture.  Used in the Html Export for the "alt" img tag property. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.HyperLink">
            <summary>
            Gets or sets a URL address that can be used in the viewer's HyperLink event to navigate to the specified location.
            The URL is automatically converted into an anchor tag or a hyperlink in HTML and PDF exports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.SizeMode">
            <summary>
            Gets or sets a value that determines how the image is sized to fit the Picture control area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.PictureAlignment">
            <summary>
            Gets or sets the position of the image within the control area.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.Image">
            <summary>
            Gets or sets the image.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.ImageData">
            <summary>
            Gets or sets the image data.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.ImageBytes">
            <summary>
            Gets or sets the image data.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.DrawContent(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.System#ComponentModel#ISupportInitialize#BeginInit">
            <summary>
            Not being used
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.System#ComponentModel#ISupportInitialize#EndInit">
            <summary>
            Not being used.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="bdisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.ResetImage">
            <summary>
            Sets the current image to null.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.LoadFrom(System.String,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.ImageEquals(GrapeCity.ActiveReports.Controls.Image,GrapeCity.ActiveReports.Controls.Image)">
            <summary>
            Determines whether two Images are same.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ReportInfo">
            <summary>
            ReportInfo control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ReportInfo"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Text">
            <summary>
            Returns the FormatString format associated with the control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.FormatString">
            <summary>
            Gets or sets the mask string used to format the text property before placing it in the Text property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.MultiLine">
            <summary>
            Gets or sets a value indicating whether the ReportInfo control is multiline enabled. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.RightToLeft">
            <summary>
            Determines whether text will be displayed in right-to-left order for this control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.CanGrow">
            <summary>
            Determines whether ActiveReports should increase the height of the control based on its content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.CanShrink">
            <summary>
            Determines whether ActiveReports should increase the height of the control based on its content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SummaryType">
            <summary>
            Marked internal because they are same for both N and M part of "Page N of M"
            Used in Aggregator = SummaryType.PageCount
            </summary>		
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SummaryFunc">
            <summary>
            Marked internal because they are same for both N and M part of "Page N of M"
            Used in Aggregator = SummaryFunc.Sum
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SummaryRunning">
            <summary>
            Gets or sets a value that determines whether the data field summary value will be accumulated or reset for each level (detail, group or page).  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SummaryGroup">
            <summary>
            Gets or sets the name of the group header section that is used to reset the summary value when calculating subtotals.
            </summary>
            <value>The summary group.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SimRunDateTime(System.Text.RegularExpressions.Match)">
            <summary>
            Simulate the actual RunDateTime with format.
            e.g.
            {RunDateTime} -> 2011/10/11 12:34:56
            {RunDateTime:M/d} -> 2/21
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.GrapeCity#ActiveReports#Controls#IControlInternal#FlexSize(System.Drawing.SizeF@)">
            <summary>
            internal call for flex size
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.ClassName">
            <summary>
            Gets or sets a style rule class name. The style rule is used to format the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.RefreshStyles">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.GrapeCity#ActiveReports#Controls#IControlInternal#SetDefaultBoundValue(System.Object)">
            <summary>
            Called from aggregator to set the text value up
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Style">
            <summary>
            Gets or sets a style string for the ReportInfo control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.ForeColor">
            <summary>
            Gets/sets control's ForeColor style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.BackColor">
            <summary>
            Sets/gets controls BackColor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Font">
            <summary>
            Sets/gets control's font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.WordWrap">
            <summary>
            Sets/gets control's wordwrap using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.WrapMode">
            <summary>
            Sets/gets control's wrap mode using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.VerticalAlignment">
            <summary>
            Gets or sets the position of the control's text vertically within the bounds of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Alignment">
            <summary>
            Gets or sets the alignment of text within the bounds of the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SetPageMValue(System.Object)">
            <summary>
            called from aggregator to update the M part of the "page N of M" value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SetPageNValue(System.Object)">
            <summary>
            called from CommitPageCounts()
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Calendar">
            <summary>
            Gets or sets calendar to use for formatting dates
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Culture">
            <summary>
            Gets or sets the culture for the text control. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.HasPageNString">
            <summary>
            Some additional checks if this control should be added as part of Aggregator
            Aggregator.cs PrepareTotalsArrayItem()
            for N part of Page N of M 
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.HasPageMString">
            <summary>
            Some additional checks if this control should be added as part of Aggregator
            Aggregator.cs PrepareTotalsArrayItem()
            for M part of Page N of M 
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SetDateField">
            <summary>
            Sets the date part of the string
            Called when page n ofm is updated, in support flex size and in render
            called only once
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Kinsoku">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Reset">
            <summary>
            Use only at design time
            or when report has been Canceled
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextBox">
            <summary>
            RichTextBox control.
            </summary>
            <summary>
            Design-time related things.
            </summary>
            <summary>
            Obsoleted public stuff (should be for internal use only or removed).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.RichTextBox"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.DDWord">
            <summary>
            For tests only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RtfRenderingType">
            <summary>
            Gets or sets target rendering type of RTF (not HTML). As legacy RTF or as WordPad-like image (metafile or raster image).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.AutoReplaceFields">
            <summary>
            Gets or sets a value that indicates whether ActiveReports should automatically replace fields in the RichTextBox with matching fields in the data source.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Text">
            <summary>
            Gets or sets the current text in the RichTextBox. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RTF">
            <summary>
            Gets or sets the rich text content of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Html">
            <summary>
            Sets or returns the hypertext to be rendered in the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.CanGrow">
            <summary>
            Determines whether ActiveReports should increase the height of the control based on its content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.CanShrink">
            <summary>
            Determines whether ActiveReports should decrease the height of the field based on its value.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Init">
            <summary>
            Should be called first during rendering.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.UpdateFieldsValues(GrapeCity.ActiveReports.Data.FieldCollection)">
            <summary>
            Update rtf fields for automatic rtf field binding
            </summary>
            <param name="fCol"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.PointF)">
            <summary>
            For internal use only.
            </summary>
            <param name="g"></param>
            <param name="devRect"></param>
            <param name="location"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="bdisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Load(System.IO.Stream,GrapeCity.ActiveReports.SectionReportModel.RichTextType)">
            <summary>
            Loads a stream of Rtf, Text or Html file.
            </summary>
            <param name="stream">Stream with content</param>
            <param name="type">RichText type; one of rtf, html or text</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Clear">
            <summary>
            Clears the content of the RichTextBox control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.BackColor">
            <summary>
            Gets or sets the control's background color or fill color. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.ForeColor">
            <summary>
            Gets or sets the foreground selection color of the control. For design time use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Font">
            <summary>
            Gets or returns the font object used to print the control text. For design time use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.BulletIndent">
            <summary>
            Gets or sets the indentation used in the control when the bullet style is applied to the text. For design time use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters in the control. For design time use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.DesignTarget">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.DetectType(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions">
            <summary>
            Enum FindOptions
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.MatchCase">
            <summary>
            Match case
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.Reverse">
            <summary>
            Reverse
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.WholeWord">
            <summary>
            Whole word
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType">
            <summary>
            Enum RichTextStreamType
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType.PlainText">
            <summary>
            Plain text
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType.UnicodePlainText">
            <summary>
            Unicode plain text
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType.RichText">
            <summary>
            Rich text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionAlignment">
            <summary>
            Gets or sets the alignment to apply to the current selection or insertion point.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Multiline">
            <summary>
            Gets or sets a value that determines whether the RichTextBox prints multiple lines or single line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionBullet">
            <summary>
            Gets or sets a value indicating whether the bullet style is applied to the current selection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionCharOffset">
            <summary>
            Gets or sets a value indicating where text in the control appears on the baseline, as a superscript or as a subscript below the baseline.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionColor">
            <summary>
            Gets or sets the text color of the current text selection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionBackColor">
            <summary>
            Gets or sets the background color of the current text selection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionProtected">
            <summary>
            True if selection is protected.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionFont">
            <summary>
            Gets or sets the font of the current text selection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionStart">
            <summary>
            Gets or sets the starting point of text selected in the text box.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionLength">
            <summary>
            Gets or sets the number of characters selected in control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionIndent">
            <summary>
            Gets or sets the distance in inches between the left edge of the RichTextBox and the left edge of the current text selection. 
            Renders the selected text the specified number of inches to the right of the RichTextBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionRightIndent">
            <summary>
            The distance (in inches) between the right edge of the RichTextBox control and the right edge of the text that is selected.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionHangingIndent">
            <summary>
            Gets or sets the distance between the left edge of the first line of text in the selected paragraph and the left edge of subsequent lines in the same paragraph.
            Renders the selected text the specified number of inches to the left of the RichTextBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectedText">
            <summary>
            Gets or sets the current selected text in the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.LoadFile(System.String)">
            <summary>
            Loads an HTML or RTF file. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.LoadFile(System.IO.Stream)">
            <summary>
            Loads an HTML or RTF file. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.InsertField(System.String)">
            <summary>
            Inserts a RichTextBox merge field into the current location in the text.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.ReplaceField(System.String,System.String)">
            <summary>
            Merges the contents of the RTF stream with the field values specified.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.Char[])">
            <summary>
            Searches the text of a RichTextBox control for the first instance of a character from a list of characters.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.String)">
            <summary>
            Searches the text of the RichTextBox control for a string. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.String,System.Int32)">
            <summary>
            Searches the text in the RichTextBox control for a specified string starting at a specified location. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.String,System.Int32,GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions)">
            <summary>
            Searches the text in the RichTextBox control for a specified string starting at a specified location and with specific options applied to the search.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType">
            <summary>
            Enum for RichTextRenderingType.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType.RTF">
            <summary>
            RTF
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType.Metafile">
            <summary>
            HTML
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType.PNG">
            <summary>
            Text
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextType">
            <summary>
            Enum for RichTextType.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextType.Rtf">
            <summary>
            RTF
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextType.Html">
            <summary>
            HTML
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.LineStyle">
            <summary>
            Specifies the pen style used to draw a line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Transparent">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Solid">
            <summary>
            Solid line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Dash">
            <summary>
            Dashes.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Dot">
            <summary>
            Dots.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.DashDot">
            <summary>
            Alternating dashes and dots.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.DashDotDot">
            <summary>
            Alternating dashes and two dots.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Double">
            <summary>
            Double line.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ShapeType">
            <summary>
            Specifies the type of shape that the shape control should print.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ShapeType.Rectangle">
            <summary>
            Print a rectangular shape.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ShapeType.Ellipse">
            <summary>
            Print an elliptical shape.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ShapeType.RoundRect">
            <summary>
            Print a rounded rectangular shape.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle">
            <summary>
            Specifies the style used to draw the background of an object.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle.Solid">
            <summary>
            A solid fill is used for the background.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle.Gradient">
            <summary>
            A gradient fill is used for the background.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle.Pattern">
            <summary>
            A pattern fill is used for the background.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.GradientStyle">
            <summary>
            Specifies the type of gradient to draw. 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.Horizontal">
            <summary>
            A horizontal gradient is drawn.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.Vertical">
            <summary>
            A vertical gradient is drawn.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.DiagonalUp">
            <summary>
            The gradient is drawn from bottom left to top right.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.DiagonalDown">
            <summary>
            The gradient is drawn from top left to bottom right.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.FromCenter">
            <summary>
            A radial gradient is drawn from the center.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.FromCorner">
            <summary>
            A radial gradient is drawn to the center.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Shape">
            <summary>
            Summary description for Shape.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Shape"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.RoundingRadius">
            <summary>
            Gets or sets the radius as a percentage value for each corner of the RoundRect shape control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackColor">
            <summary>
            Gets or sets the background color of the control area.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackColor2">
            <summary>
            Gets or sets the background color of the control area.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackgroundStyle">
            <summary>
            Gets or sets the background style. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.GradientStyle">
            <summary>
            Gets or sets the gradient style. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackgroundPattern">
            <summary>
            Gets or sets the background pattern to hatch style
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.LineStyle">
            <summary>
            Gets or sets the pen style used to draw the line. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.LineColor">
            <summary>
            Gets or sets the color of the shape's lines.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.LineWeight">
            <summary>
            Gets or sets the pen width used to draw the shape.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.Style">
            <summary>
            Gets or sets the shape type to be printed.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.DataField">
            <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ShapeConverter">
            <summary>
            For internal use.
            Filter properties depending on the BackgroundStyle
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ShapeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            For internal use. Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">An System.Object that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type System.Attribute that will be used as a filter.</param>
            <returns>>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for the component.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.SubReport">
            <summary>
            Prints a linked report object as part of the current report. Subreports are linked using the Report property.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.SubReport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.SubReport"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.CanGrow">
            <summary>
            Determines whether ActiveReports should increase the height of the control based on its content.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.CanShrink">
            <summary>
            Determines whether ActiveReports should decrease the height of the field based on its value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.ReportName">
            <summary>
            Specifies the name of the subreport.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.Report">
            <summary>
            Gets or sets a reference to the instance of the report that this control will embed and render as part of the containing section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.CloseBorder">
            <summary>
            Determines whether or not subreport borders will be closed on every page on which the subreport is rendered.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.DataField">
            <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
            <value>The data field.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.SubReport.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.SubReport.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.SubReport.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.SummaryType">
            <summary>
            Determines the type of field summary.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.None">
            <summary>
            No summarization.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.GrandTotal">
            <summary>
            Evaluate the specified summary function for all records in the report.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.PageTotal">
            <summary>
            Evaluate the specified summary function for all records on each page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.SubTotal">
            <summary>
            Evaluate the specified summary function for all records in each group level.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.PageCount">
            <summary>
            Print the page count or page number.  Use with SummaryRunning set to All to print the page number.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc">
            <summary>
            Determines the summary calculation function performed on the  field value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Sum">
            <summary>
            Calculates the total of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Avg">
            <summary>
            Calculates the average of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Count">
            <summary>
            Calculates the count of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Min">
            <summary>
            Calculates the minimum of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Max">
            <summary>
            Calculates the maximum of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Var">
            <summary>
            Calculates the variance of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.VarP">
            <summary>
            Calculates the population variance of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.StdDev">
            <summary>
            Calculates the standard deviation of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.StdDevP">
            <summary>
            Calculates the population standard deviation of all values within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DSum">
            <summary>
            Calculates the total based on the distinct values of another field within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DAvg">
            <summary>
            Calculates the average based on the distinct values of another field within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DCount">
            <summary>
            Calculates the distinct count based on the distinct values of another field within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DVar">
            <summary>
            Calculates the variance based on the distinct values of another field within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DVarP">
            <summary>
            Calculates the population distinct variance based on the distinct values of another field within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DStdDev">
            <summary>
            Calculates the standard deviation based on the distinct values of another field within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DStdDevP">
            <summary>
            Calculates the population standard deviation based on the distinct values of another field within the specified summary region (group, page or report).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning">
            <summary>
            Determines whether summary values will be accumulated or reset based on the specified level.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning.None">
            <summary>
            Summary values are not accumulated.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning.Group">
            <summary>
            Calculates a running summary (each value is the sum of the current value and all preceding values) within the same group level.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning.All">
            <summary>
            Calculates a running summary for all values.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.TextBox">
            <summary>
            Prints a formatted text value, bound or unbound.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.TextBox._cultureInfo">
            <summary>
            null means: "take a current culture from thread when requested"
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.TextBox"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CharacterSpacing">
            <summary>
            Determines the distance in points between two characters.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.MinCondenseRate">
            <summary>
            Gets ot sets the value indicating the minimal value to which the label should condense its characters horizontally in order to fit the content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.LineSpacing">
            <summary>
             Determines the spacing in points between text lines		
            </summary>
            
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Padding">
            <summary>
            Determaines the padding in points
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Text">
            <summary>
            Gets or sets the formatted text value to be rendered in the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.HyperLink">
            <summary>
            Gets or sets a hyperlink for the text control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CountNullValues">
            <summary>
            Determines whether DBNull values should be included as zeroes in summary fields.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.OutputFormat">
            <summary>
            Gets or sets the mask string used to format the Value property before placing it in the Text property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.MultiLine">
            <summary>
            Gets or sets a value indicating whether this is a multiline textbox control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.RightToLeft">
            <summary>
            Sets or returns a value indicating whether control's elements are aligned to support locales using right-to-left fonts.
            </summary>
            <value><c>true</c> if [right to left]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CanGrow">
            <summary>
            Determines whether ActiveReports should increase the height of the control based on its content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CanShrink">
            <summary>
            Determines whether ActiveReports should decrease the height of the field based on its value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.ShrinkToFit">
            <summary>
            Gets ot sets the value indicating whether the TextBox should decrease the font size in order to fit the content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryType">
            <summary>
            Gets or sets a value that determines the summary type to be performed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryFunc">
            <summary>
            Gets or sets the summary function type used to process the DataField values.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryRunning">
            <summary>
            Gets or sets a value that determines whether the data field summary value will be accumulated or reset for each level (detail, group or page).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryGroup">
            <summary>
            Gets or sets the name of the group header section that is used to reset the summary value when calculating subtotals.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.DistinctField">
            <summary>
            Gets or sets the name of the data field used in a distinct summary function.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Style">
            <summary>
            Gets or sets a style string for the textbox.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.ForeColor">
            <summary>
            Gets/sets control's ForeColor style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.BackColor">
            <summary>
            Sets/gets controls BackColor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Font">
            <summary>
            Sets/gets control's font.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.VerticalText">
            <summary>
            Gets or sets whether text should be rendered according to vertical layout rules
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.WordWrap">
            <summary>
            Sets/gets control's wordwrap using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.WrapMode">
            <summary>
            Sets/gets control's wrap mode using CSS.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.VerticalAlignment">
            <summary>
            Gets or sets the position of the control's text vertically within the bounds of the control.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Alignment">
            <summary>
            Gets or sets the alignment of text within the bounds of the control.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.TextJustify">
            <summary>
            Gets or sets the type of justification to use when the Alignment property is set to Justify.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GrapeCity#ActiveReports#Controls#IControlInternal#FlexSize(System.Drawing.SizeF@)">
            <summary>
            Returns true if size has been updated due to cangrow/canshrink
            </summary>
            <param name="cache"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.ClassName">
            <summary>
            Gets or sets a style rule class name.  The style rule is used to format the control. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.RefreshStyles">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Value">
            <summary>
            Gets or sets the value of the control before formatting.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Saves the control to the specified binary writer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.QuickLoad(System.IO.BinaryReader)">
            <summary>
            Loads the control from specified binary reader.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GetTextRect(System.Drawing.RectangleF)">
            <summary>
            Returns the Rectangle for the text without padding and borders
            </summary>
            <param name="outRect">Control rect</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GrapeCity#ActiveReports#Controls#IControlInternal#CalcCut(System.Single@)">
            <summary>
            CalcCut
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GrapeCity#ActiveReports#Controls#IControlInternal#CanCut(System.Single)">
            <summary>
            CanCut
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GrapeCity#ActiveReports#Controls#IControlInternal#Render(GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Render on canvas; Runtime rendering
            </summary>
            <param name="page"></param>
            <param name="pageOffset"></param>
            <param name="startPos"></param>
            <param name="endPos"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GetTextRectWithSkipCode(System.String[],System.String[],System.Single,System.Drawing.RectangleF)">
             <summary>
             Adjust text rectangle according to the skipped characters.
             Currently, just support when the skipped characters are at 
             the two sides of the text.
            
             For internal use only.
             </summary>
             <param name="lines">The text lines.</param>
             <param name="rectF">Text rectangle.</param>
             <returns>Processed text rectangle.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GetCharPlaces(System.String)">
            <summary>
            Get Char Places.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GetCharSpaceCount(System.String)">
            <summary>
            Get the count of char space.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.WriteXml(System.Xml.XmlElement)">
            <summary>
            Write To Xml
            </summary>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.ReadXml(System.Xml.XmlNode)">
            <summary>
            Read from Xml
            </summary>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Culture">
            <summary>
            Gets or sets the culture for the text control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Calendar">
            <summary>
            Gets or sets calendar to use for formatting dates
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CurrencyCulture">
            <summary>
            This property is for internal use only.
            Used to store the currency's culture name if user select a currency type OutputFormat.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GetCurrentCulture">
            <summary>
            Returns either preset Culture or current thread's.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Kinsoku">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Parameter">
            <summary>
            A Parameter is used to substitute values for parameter placeholders in the report's data source SQL query text.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType">
            <summary>
            Represents the parameter's data type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType.Boolean">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Parameter"/> class.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.Parameter.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed" /> event of a component.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="bdisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Key">
            <summary>
            Gets or sets the unique name of the parameter.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Type">
            <summary>
            Gets or sets a value that determines the type of input control to be created to collect the parameter value from the user.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Prompt">
            <summary>
            Parameter caption used in the parameters input dialog to prompt the user to input a parameter value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.PromptUser">
            <summary>
            Determines whether to prompt the user to input a parameter value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Value">
            <summary>
            Gets or sets the value of the parameter to be used in parameter placeholder substitution.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.DefaultValue">
            <summary>
            Gets or sets a value to be used as the default value in the parameters input dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Tag">
            <summary>
            User-defined value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.QueryCreated">
            <summary>
            Determines whether the query is created from the data source query string or user created.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the XML.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the XML.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs.QueryCreatedModified">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection">
            <summary>
            Summary description for ParameterCollection.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Modified">
            <summary>
            Occurs when Parameter collection is modified.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Loaded">
            <summary>
            Occurs when Parameter collection is loaded.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Cleared">
            <summary>
            Occurs when Parameter collection is cleared.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode">
            <summary>
            Enum ParseResultCode
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode.MissingCloseParam">
            <summary>
            Missing close parameter
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode.MissingParamName">
            <summary>
            Missing parameter name
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResult">
            <summary>
            Returns the results of parsing the report's parameter values.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Parameter"/> with the specified key.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Add(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
            <summary>
            Adds a Parameter object to the Parameter collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AddRange(GrapeCity.ActiveReports.SectionReportModel.Parameter[])">
            <summary>
            Adds a range of Parameter objects to the Parameter collection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AddRange(GrapeCity.ActiveReports.SectionReportModel.ParameterCollection)">
            <summary>
            Adds a range of Parameter objects to the Parameter collection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Remove(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
            <summary>
            Removes a parameter from the collection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Insert(System.Int32,GrapeCity.ActiveReports.SectionReportModel.Parameter)">
            <summary>
            Inserts a Parameter object into the collection at the specified index. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Contains(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
            <summary>
            Determines whether the collection contains the specified parameter.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.IndexOf(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
            <summary>
            Returns the index of the specified Parameter object in the collection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ClearQueryCreated">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Parse(System.String)">
            <summary>
            Add to Collection a parameters from query
            It is recommended to use with caution
            </summary>
            <param name="query">sql</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AtLeastOneNeedsPrompt">
            <summary>
            Determine if prompt is needed.
            Goes thru all the parameters and even if one of them has 
            DontPrompt = false, returns.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AtLeastOneQueryCreated">
            <summary>
            Determine if prompt is needed.
            Goes thru all the parameters and even if one of them has 
            DontPrompt = false, returns.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.SetParameterQueryAsCustom">
            <summary>
            Make the query-created parameter use properties of parameter in ReportExplorer.
            Notice:If user wants to use this kind of parameter, a prefix 'param:' must be added
            into query like "select * from customer where country='&lt;%param:parameter1%&gt;' "
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.SetParameterQueryAsCustom(GrapeCity.ActiveReports.SectionReportModel.ParameterCollection)">
            <summary>
            Make the query-created parameter use properties of parameter in ReportExplorer.
            Notice:If user wants to use this kind of parameter, a prefix 'param:' must be added
            into query like "select * from customer where country='&lt;%param:parameter1%&gt;' "
            </summary>
            <param name="parameterCollection">Report explorer related parameters collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.DestroyComponents">
            <summary>
            DestroyComponents
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.NeedsPrompt">
            <summary>
            Used internally incases wheere ds is null or ds is not oledb/sqldb
            is set to true by default;
            once the prompt has been done, we dont have to do it again
            based on single run of report
            done in rpt.ProcessInit();rpt.ReStart() and ParamQuery.Build()
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterTypeConverter">
            <summary>
            Represents the parameter type converter.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ColumnDirection">
            <summary>
            Specifies the direction of columns in a multi-column report.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ColumnDirection.DownAcross">
            <summary>
            Prints a column of details down the first column before moving on to the next column to its right.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.ColumnDirection.AcrossDown">
            <summary>
            Print a row of details across all the columns before beginning a second row below it, and so on.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether">
            <summary>
            GroupKeepTogether applies to a group and has similar to the KeepTogether meaning, but for the whole group. 
            It indicates whether the rendering engine should try to render the whole group on a single page, 
            the group header plus the first detail on a single page, or leave the group flow as it is. 
            If GroupKeepTogether is set to FirstDetail - the group header and at least one detail in this group should be on the same page; 
            if set to All - the whole group should be on a single page. 
            The following rule applies: the rendering engine will try to render the group as specified, 
            but if there is not enough space on the current page, the group is moved to the next page and it continues as long as it needs. 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether.None">
            <summary>
            The rendering engine will leave the group flow as it is. 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether.FirstDetail">
            <summary>
            The rendering engine should try to keep the group header and at least 1 detail on the same page. 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether.All">
            <summary>
            The rendering engine should try to keep the whole group on the same page. 
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle">
            <summary>
            Specifies whether a group header section will be repeated with subsequent detail pages.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.None">
            <summary>
            The group header will not be repeated when the associated detail sections print on a new page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.OnPage">
            <summary>
            Repeat the group header section with every new page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.OnColumn">
            <summary>
            Repeat the group header section with every new column.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.All">
            <summary>
            Repeat the group header section on every page or column.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.OnPageIncludeNoDetail">
            <summary>
            Repeat the group header section on every page that includes an associated detail section or a group footer section.  This setting prevents orphaned group footer sections.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.NewPage">
            <summary>
            Specifies whether a new page will be started before or after a section.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.None">
            <summary>
            Sections will continue printing on the same page until they've run out of space.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.Before">
            <summary>
            The report will break to a new page before each instance of the section.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.After">
            <summary>
            The report will break to a new page after each instance of the section.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.BeforeAfter">
            <summary>
            The report will break to a new page before and after each instance of the section.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.NewColumn">
            <summary>
            Specifies whether a new column will be started before or after a section.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.None">
            <summary>
            Sections will continue printing in the same column until they've run out of space.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.Before">
            <summary>
            The report will break to a new column before each instance of the section.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.After">
            <summary>
            The report will break to a new column after each instance of the section.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.BeforeAfter">
            <summary>
            The report will break to a new column before and after each instance of the section.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs">
            <summary>
            ARControlEventArgs
            For Internal Use Only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs.#ctor(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            ARControlEventArgs Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs.Control">
            <summary>
            Control
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.IPersistSection">
            <summary>
            Interface IPersistSection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.IPersistSection.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.IPersistSection.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the XML from specified XML node.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ARControlEventHandler">
            <summary>
            For Internal Use Only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Section">
            <summary>
            Summary description for Section.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Section"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Site">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.ComponentModel.IComponent" />.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.IsRepeated">
            <summary>
            Gets a value indicating whether this section is repeated.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed" /> event of a component.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.Format">
            <summary>
            Occurs after the section's data is loaded and bound to the section's controls, but before the section is rendered to the canvas.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.BeforePrint">
            <summary>
            Occurs immediately before the section is rendered to the page.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.AfterPrint">
            <summary>
            Occurs after the section has been rendered to the page.  
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.ControlAdded">
            <summary>
            Raised when control was added to section.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.ControlRemoved">
            <summary>
            Raised when control was removed from section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Name">
            <summary>
            Gets or sets the name of the section.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Type">
            <summary>
            Gets the section's type.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Visible">
            <summary>
            Specifies whether the section should be printed or not.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Section.m_height">
            The height of the section
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Height">
            <summary>
            Gets or sets the height of the section.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.CurrentLocation">
            <summary>
            Gets the current location of the control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Section._repeatToFill">
            <summary>
            The repeat to fill flag
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.BackColor">
            <summary>
            Gets or sets the background color of the section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.CanGrow">
            <summary>
            Indicates whether the section height should grow when its controls extend beyond its original height.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.CanShrink">
            <summary>
            Indicates whether the section height should be adjusted to the exact total height of its controls.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Controls">
            <summary>
            Gets a collection of all controls contained in the section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.EngineControls">
            <summary>
            its a summary of Controls and virtual controls
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.SizeToFit">
            <summary>
            Sizes the section to fit the contained controls.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.SizeToFit(System.Boolean)">
            <summary>
            Sizes the section to fit the contained controls and optionally allows the section to shrink to fit the contained controls.  
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Section.m_spanList">
            <summary>
            PrepareSpanList
            This creates a list of spans that are used to decide if a span of controls needs to be
             cut on a page boundary. This is used to precalculate so that CalcSplitPoint works faster
            This functions is called from ProcessReport.FormatSection after each section is formatted
            </summary>
            
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.GetBorderBounds(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
            <summary>
            Gets control boundaries taking border outer extent into account
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.AnchorLines(System.Single)">
            <summary>
            Called to set the height of the line control the same as "height" that the section has grown to.
            </summary>
            <param name="height">Run time height of the section</param>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReportModel.Section.CoordCompareSensitivity">
            <summary>
            Coordinates comparizon sensitivity in inches.
            Two coordinates with diff in specified range are treated as equal.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.CompareCoordinate(System.Single,System.Single)">
            <summary>
            Compares two coordinate values (in designer/report units) with roundation rules in mind
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.AddBookmark(System.String)">
            <summary>
            Adds a bookmark in the report's table of contents. 
            The bookmark will position the view at the start of the section if the bookmark is added in the section's Format event.
            Bookmark text to be displayed in the table of contents treeview.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.GetBookmarkCount(System.Int32@)">
            <summary>
            Used for a unittest CR#25606
            </summary>
            <param name="ctr">returns count</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Identity">
            <summary>
            represents int unique identifier
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.Render(GrapeCity.ActiveReports.Document.Section.Page,GrapeCity.ActiveReports.LayoutDrawingLog,System.Drawing.PointF,System.Single,System.Single,System.Single)">
            <summary>
            Renders a section into a Page object
            </summary>
            <param name="page"></param>
            <param name="pageOffset">Offset of section on physical page</param>
            <param name="pageWidth">Width of section on output</param>
            <param name="drawStartPos">Relative position to start render</param>
            <param name="drawEndPos">Relative position to stop render .-1 means render all </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.GetDataFieldExpressionString(GrapeCity.ActiveReports.SectionReport,System.String,System.Boolean@)">
            <summary>
            Sorts out the actual field expression
            </summary>
            <param name="report"></param>
            <param name="dataField"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ReportHeader">
            <summary>
            The ReportHeader section is printed once at the beginning of the report.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ReportHeader"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportHeader.NewPage">
            <summary>
            Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportHeader.Height">
            <summary>
            Gets ot sets the height of the report header section. 
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.ReportFooter">
            <summary>
            The ReportFooter section prints once at the end of the report.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ReportFooter"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.NewPage">
            <summary>
            Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.PrintAtBottom">
            <summary>
            Gets or sets a value that specifies whether the section should be printed at the bottom of the page immediately before any page footer section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.KeepTogether">
            <summary>
            Gets or sets a value that determines whether the section should be printed on a single page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.Height">
            <summary>
            Gets ot sets the height of the report footer section.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.GroupHeader">
            <summary>
            The GroupHeader section prints once for every data group defined using the field specified in DataField property.  A GroupHeader section requires a matching GroupFooter section.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.GroupHeader"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.NewPage">
            <summary>
            Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.GroupKeepTogether">
            <summary>
            Gets or sets a value that specifies whether the section and its footer will print as a single block on the same page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.ColumnGroupKeepTogether">
            <summary>
            Gets or sets a value that specifies whether the group will print as a single block in the same column.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.NewColumn">
            <summary>
            Gets or sets a value that determines whether a new column (in a multi-column report) should be started before and/or after printing the section.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.RepeatStyle">
            <summary>
            Gets or sets a value that specifies whether the section should print with every column or page on which the Detail section or associated footer is printed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.IsRepeating">
            <summary>
            Gets a value indicating whether this instance is repeating.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.DataField">
            <summary>
            Gets or sets the name of the field used to group the data source records.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.UnderlayNext">
            <summary>
            Gets or sets a value that specifies whether the section should print underneath the following section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.ColumnLayout">
            <summary>
            Gets or sets a value to determine whether the section should use the same column layout as its detail section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.KeepTogether">
            <summary>
            Gets or sets a value that determines whether the section should be printed on a single page. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.Height">
            <summary>
            Gets or sets the height of the group header.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.GroupFooter">
            <summary>
            The GroupFooter section is directly related to the Detail section and its matching group header.
            It prints once each time a group of similar records (as defined in the GroupHeader.DataField property) ends.
            A GroupFooter section cannot exist without a matching GroupHeader section.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.GroupFooter" /> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.NewPage">
            <summary>
            Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.NewColumn">
            <summary>
            Gets or sets a value that determines whether a new column should be started before and/or after printing the section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.PrintAtBottom">
            <summary>
            Gets or sets a value that specifies whether the section should be printed at the bottom of the page immediately before any page footer section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.ColumnLayout">
            <summary>
            Gets or sets a value to determine whether the section should use the same column layout of its detail section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.KeepTogether">
            <summary>
            Gets or sets a value that determines whether the section should be printed on a single page.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.Height">
            <summary>
            Gets or sets the height of the group footer.  
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.PageHeader">
            <summary>
            The PageHeader section prints once at the top of every page in the report. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.PageHeader"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageHeader.Height">
            <summary>
            Gets or sets the height of the page header.  
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.PageFooter">
            <summary>
            The PageFooter section prints once at the bottom of every page in the report.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageFooter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.PageFooter"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageFooter.Height">
            <summary>
            Gets or sets the height of the page footer.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Detail">
            <summary>
            Detail section is the main section in a report.  It is printed once for each record in the data source.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.Detail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Detail"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.KeepTogether">
            <summary>
            Gets or sets a value that determines whether the section should be printed on a single page.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.RepeatToFill">
            <summary>
            Gets or sets a value that determines whether the section's formatting should print to fill the page when there is not enough data to fill it.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.NewPage">
            <summary>
            Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.NewColumn">
            <summary>
            Gets or sets a value that determines whether a new column should be started before and/or after printing the section. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.ColumnCount">
            <summary>
            Gets or sets a value that specifies the number of newspaper columns in the report.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.ColumnDirection">
            <summary>
            Determines how ActiveReports should print the detail section in a multi-column report. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.ColumnSpacing">
            <summary>
            Sets or returns the space between columns in a multi-column report.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.Style">
            <summary>
            Represents the formatting properties of a control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Parent">
            <summary>
            Gets the parent style. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Name">
            <summary>
            Gets the unique name of the style.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Value">
            <summary>
            Gets or sets a Cascading Style Sheets (CSS) string representation of the Style properties.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontName">
            <summary>
            Gets or sets the Font.Name property of the control.  Null if the property is inherited from the Style parent or not to be set on the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontSize">
            <summary>
            Gets or sets the size of the font used to render the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontBold">
            <summary>
            Gets or sets the Font.Bold property of the control. Null if the property is inherited from the Style parent or not to be set on the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontItalic">
            <summary>
            Gets or sets the Font.Italic property of the control. Null if the property is inherited from the Style parent or not to be set on the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontUnderline">
            <summary>
            Gets or sets the Font.Underline property of the control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontStrikeThrough">
            <summary>
            Gets or sets the Font.StrikeThrough property of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontVertical">
            <summary>
            Gets or sets the Font.Vertical property of the control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.BackColor">
            <summary>
            Gets or sets the background color of the control.  Null if the property is inherited from the Style parent or not to be set on the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.ForeColor">
            <summary>
            Gets or sets the text color of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Alignment">
            <summary>
            Gets or sets the horizontal text alignment of the control to which the style is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of text within the bounds of the control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.CharacterSet">
            <summary>
            Gets or sets the CharacterSet of the control. The value must be cast as a byte.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReportModel.StyleSheet">
            <summary>
            Summary description for Styles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Item(System.Int32)">
            <summary>
            Gets the StyleSheet object at the specified indexed location in the StyleSheetCollection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Item(System.String)">
            <summary>
            Gets the StyleSheet object with the specified name in the StyleSheetCollection.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes an item.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <value><c>true</c> if this instance is fixed size; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <value><c>true</c> if this instance is synchronized; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <value>The synchronize root.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Changed">
            <summary>
            Occurs when the members of the StyleSheet have changed. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Remove(System.Int32)">
            <summary>
            Removes the Style object at the specified index. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Remove(System.String)">
            <summary>
            Removes the Style object with the specified name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Add(System.String)">
            <summary>
            Adds a new Style object with the specified name to the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Add(System.String,System.String)">
            <summary>
            Adds a new Style object to the collection and sets its parent style to the specified parent Style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Add(DDCssLib.StyleSheetRule)">
            <summary>
            Adds the specified Style object to the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute">
            <summary>
            Represents the default size attribute.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute.Size">
            <summary>
            Gets or sets the size value.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Design.IPersistControl">
            <summary>
            Interface IPersistControl
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.IPersistControl.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.IPersistControl.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Design.IARControlSite">
            <summary>
            Used for design time painting, coordinate translation
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.IARControlSite.ToDeviceF(System.Drawing.SizeF)">
            <summary>
            Transforms the control coordinates
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.IARControlSite.ToDevice(System.Drawing.RectangleF)">
            <summary>
            Transforms the control's coordinates and size
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.IARControlSite.ToDeviceF(System.Drawing.RectangleF)">
            <summary>
            Transforms the control's coordinates and size
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Design.PointFConverter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Controls.Design.PointFConverter"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Design.SizeFConverter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Controls.Design.SizeFConverter"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
            <returns>An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget">
            <summary>
            IRichEditDesignTarget to bind with designer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.BackColor">
            <summary>
            Gets or sets the control's background color or fill color. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.ForeColor">
            <summary>
            Gets or returns the foreground (font) color of the control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionFont">
            <summary>
            Gets or sets the font of the current text selection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.RTF">
            <summary>
            Gets or sets the rich text content of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectedText">
            <summary>
            Gets or sets the current selected text in the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionAlignment">
            <summary>
            Gets or sets the alignment to apply to the current selection or insertion point.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionBullet">
            <summary>
            Gets or sets a value indicating whether the bullet style is applied to the current selection. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionCharOffset">
            <summary>
            Gets or sets a value indicating where text in the control appears on the baseline, as a superscript or as a subscript below the baseline.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionHangingIndent">
            <summary>
            Gets or sets the distance between the left edge of the first line of text in the selected paragraph and the left edge of subsequent lines in the same paragraph.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionIndent">
            <summary>
            Gets or sets the distance in inches between the left edge of the RichTextBox and the left edge of the current text selection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionRightIndent">
            <summary>
            The distance (in inches) between the right edge of the RichTextBox control and the right edge of the text that is selected. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionLength">
            <summary>
            Gets or sets the number of characters selected in control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionProtected">
            <summary>
            True if selection is protected.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionStart">
            <summary>
            Gets or sets the starting point of text selected in the control. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionBackColor">
            <summary>
            Gets or sets the background color of the current text selection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.Text">
            <summary>
            Gets or sets the current text in the control.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.Html">
            <summary>
            Gets or sets the HTML content of the control.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.Clear">
            <summary>
            Clears the control's content.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.LoadFile(System.IO.Stream,GrapeCity.ActiveReports.SectionReportModel.RichTextType)">
            <summary>
            Loads the file from specified stream.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.CornersRadius">
            <summary>
            This structure represents radiuses of rectangle's corners in percents.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.Default">
            <summary>
            Default corner radius, if radius of a specified corner doesn't set, this value will be used instead.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.TopLeft">
            <summary>
            Radius of the top left corner
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.TopRight">
            <summary>
            Radius of the top right corner
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.BottomRight">
            <summary>
            Radius of the bottom right corner
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.BottomLeft">
            <summary>
            Radius of the bottom left corner
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.#ctor(System.Nullable{System.Single})">
            <summary>
            Creates new structure initialized with specified values.
            </summary>
            <param name="Default">Default radius.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.#ctor(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Creates new structure initialized with specified values.
            </summary>
            <param name="Default">Default radius.</param>
            <param name="TopLeft">Radius of the top left corner</param>
            <param name="TopRight">Radius of the top right corner</param>
            <param name="BottomLeft">Radius of the bottom left corner</param>
            <param name="BottomRight">Radius of the bottom right corner</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Implicit(System.Single)~GrapeCity.ActiveReports.Controls.CornersRadius">
            <summary>
            Convert float to new corner type.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Implicit(System.Int32)~GrapeCity.ActiveReports.Controls.CornersRadius">
            <summary>
            Convert int to new corner type.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.IsInRange(System.Single,System.Single)">
            <summary>
            Returns flag which indicates if all radiuses of structure are in a specified range.
            </summary>
            <param name="minValue">Minimum value</param>
            <param name="maxValue">Maximum value</param>
            <returns>True if all radiuses are in the range, otherwise - false</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Multiply(System.Single,GrapeCity.ActiveReports.Controls.CornersRadius)">
            <summary>
            Implements the *.
            </summary>
            <param name="multiplier">The multiplier.</param>
            <param name="radiuses">The radiuses.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Multiply(GrapeCity.ActiveReports.Controls.CornersRadius,System.Single)">
            <summary>
            Implements the *.
            </summary>
            <param name="radiuses">The radiuses.</param>
            <param name="multiplier">The multiplier.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.CrossSectionControlBase">
            <summary>
            Class that implements common proccessing on instances
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.#ctor(GrapeCity.ActiveReports.Controls.CrossSectionCoordinate,GrapeCity.ActiveReports.Controls.CrossSectionCoordinate,System.Single,GrapeCity.ActiveReports.SectionReportModel.LineStyle,System.Drawing.Color)">
            <summary>
            Constructor that takes CrossSectionCoordinates as Start and End Positions and line parameters.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.Identity">
            <summary>
            represents int unique identifier
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.Start">
            <summary>
            Starting position of CrossSectionControl
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.End">
            <summary>
            Ending position of CrossSectionControl
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.Render(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Core.Document.DeviceInfo,GrapeCity.ActiveReports.Core.Document.ITextLayoutService,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,GrapeCity.ActiveReports.LayoutDrawingLog,System.Collections.Generic.ICollection{GrapeCity.ActiveReports.Document.Section.CanvasItem})">
            <summary>
            Renders on a Page using LayoutDrawingLog
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.ClearDrawInstances">
            <summary>
            clears array of finished DrawInstances and update states of Continued and UnFinished instances.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.CalcUpperBound(System.Collections.Generic.IList{GrapeCity.ActiveReports.SectionDrawContext})">
            <summary>
            Calculates upper bound within region of SectionDrawContexts
            </summary>
            <param name="contexts"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.CalcBottomBound(System.Collections.Generic.IList{GrapeCity.ActiveReports.SectionDrawContext})">
            <summary>
            Calculates lower bound within region of SectionDrawContexts
            </summary>
            <param name="contexts"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.CalculateBounds(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.LayoutDrawingLog)">
            <summary>
            Calculates max possible bounds of CrossSectionControl
            </summary>
            <param name="page"></param>
            <param name="drawingLog"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.ProcessDrawContext(GrapeCity.ActiveReports.SectionDrawContext)">
            <summary>
            Process SectionDrawContext. Begins or ends it mainly.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.IndexOf(System.Int32)">
            <summary>
            Calculates index of the Section in sections structure referenced by identity. 
            </summary>
            <param name="value"> section identitty</param>
            <returns> -1 if failed to find </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.IfForcedEnding(GrapeCity.ActiveReports.SectionDrawContext)">
            <summary>
            Check whether this section should be force ending. Note that Start section would be always force ending.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.ProcessStartContext(GrapeCity.ActiveReports.SectionDrawContext)">
            <summary>
            Creates DrawInstance according to the SectionDrawContext
            </summary>
            <param name="start"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.EndInstance(GrapeCity.ActiveReports.Controls.DrawInstance,System.Single)">
            <summary>
            Ends instance according to it's end position. Ignores all instances except with states={Started,Continued}.
            </summary>
            <param name="instance"></param>
            <param name="endPosition"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.ProcessEndContext(GrapeCity.ActiveReports.SectionDrawContext)">
            <summary>
            Ends DrawInstance according to the SectionDrawContext
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.EndRunningInstances(GrapeCity.ActiveReports.SectionDrawContext)">
            <summary>
            Ends all running instances before the pointed context
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionControlBase.CreateDrawInstances(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.LayoutDrawingLog)">
            <summary>
            Creates DrawInstances of CrossSectionControl
            </summary>
            <param name="page"></param>
            <param name="drawingLog"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.DrawInstanceState">
            <summary>
            States of DrawInstance
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.DrawInstance">
            <summary>
            Instance of CrossSectionControl. Contains general draw information. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.DrawInstance.Start">
            <summary>
            Starting point specified by float position on a page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.DrawInstance.End">
            <summary>
            Ending point specified by float position on a page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.DrawInstance.X">
            <summary>
            Horizontal offset
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.DrawInstance.State">
            <summary>
            State of this Instance.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.CrossSectionCoordinate">
            <summary>
            Represets coordinates of CrossSectionControl
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.CrossSectionCoordinate.#ctor(System.Int32,GrapeCity.ActiveReports.Document.Section.SectionType)">
            <summary>
            Constructor that takes Section's name, position on that Section and it's Type as parameters
            </summary>
            <param name="point"></param>
            <param name="sectionName"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CrossSectionCoordinate.SectionIdentity">
            <summary>
            Represents identity of the section
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.CrossSectionCoordinate.SectionType">
            <summary>
            Section Type. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.EngineCrossSectionBox.Render(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Core.Document.DeviceInfo,GrapeCity.ActiveReports.Core.Document.ITextLayoutService,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,GrapeCity.ActiveReports.LayoutDrawingLog,System.Collections.Generic.ICollection{GrapeCity.ActiveReports.Document.Section.CanvasItem})">
            <summary>
            Renders on a Page using LayoutDrawingLog
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.EngineCrossSectionBox.IsAlmostEqual(System.Single,System.Single,System.Single)">
            <summary>
            Compares two values with specified precision.
            </summary>
            <param name="precision">precision</param>
            <param name="value1">first value to compare</param>
            <param name="value2">second value to compare</param>
            <returns>true if both inequations are satisfied: value1 &gt; value2 - precision and value1 &lt; value2 + precision</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.EngineCrossSectionBox.IsAlmostEqual(System.Single,System.Single,System.Single,System.Single[])">
            <summary>
            Compares set of values with specified precision.
            </summary>
            <param name="precision">precision</param>
            <param name="value1">first value to compare</param>
            <param name="value2">second value to compare</param>
            <param name="values">additional values</param>
            <returns>true if all inequations are satisfied: value1 &gt; value<sub>n</sub> - precision and value1 &lt; value<sub>n</sub> + precision</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.EngineCrossSectionLine.Render(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Core.Document.DeviceInfo,GrapeCity.ActiveReports.Core.Document.ITextLayoutService,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,GrapeCity.ActiveReports.LayoutDrawingLog,System.Collections.Generic.ICollection{GrapeCity.ActiveReports.Document.Section.CanvasItem})">
            <summary>
            Renders on a Page using LayoutDrawingLog
            </summary>
            <param name="page"></param>
            <param name="drawingLog"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Image">
            <summary>
            Wrapper on the System.Drawing.Image, stores internal image (_image) data as MemoryStream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Image.#ctor(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,System.IO.MemoryStream,System.Drawing.Image)">
            <summary>
            For internal use only!
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Image.FromStream(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,System.IO.Stream)">
            <summary>
            Loads System.Drawing.Image from stream, not ActiveReports.Image. Format byte is not expected!
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Controls.Image.ImageHash">
            <summary>
            Gets the md5 string of the data that describes this Image object.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.TextControlHelper">
            <summary>
            Internal class that implements common functionality for text-based controls.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.TextControlHelper.WritePaddingBinary(System.IO.BinaryWriter,GrapeCity.ActiveReports.PaddingEx)">
            <summary>
            Writes padding in binary format
            </summary>
            <param name="binWriter"></param>
            <param name="padding"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.TextControlHelper.WritePaddingXml(System.Xml.XmlElement,GrapeCity.ActiveReports.PaddingEx)">
            <summary>
            Writes padding in xml format
            </summary>
            <param name="controlNode"></param>
            <param name="padding"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.TextControlHelper.ReadPadding(System.IO.BinaryReader)">
            <summary>
            Reads padding using BinaryReader
            </summary>
            <param name="binReader"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.TextControlHelper.ReadPadding(System.Xml.XmlNode)">
            <summary>
            Reads padding from xml node
            </summary>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.TextFormat">
            <summary>
            Utilities class to parse named formats. For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.TextFormat.FormatNamed(System.Object,System.String,System.Globalization.CultureInfo,System.String@,System.Object@,System.String@)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.TextFormat.Format(System.Object,System.String,System.Globalization.CultureInfo,System.Collections.Generic.IDictionary{System.Int32,System.String}@)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Controls.Table.PagesRenderContext">
            <summary>
            PagesRenderContext
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Controls.Table.PagesRenderContext.#ctor(GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Drawing.PointF,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>
            PagesRenderContext Constructor
            </summary>
            <param name="page">Is the ActiveReports page object</param>
            <param name="pageOffset">Offset of section on physical page</param>
            <param name="startPos">0 if the control is not split</param>
            <param name="endPos">Is less then the height of the control if it is being split</param>
            <param name="bounds">the bounds of the control offset by pageOffset</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.GraphicsExtensions">
            <summary>
            Provides the extensions for GDI+ drawing surface implementation.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.DrawDoubleLine(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a double line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the line.</param>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.DrawRoundWithDoubleLine(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a round rectangle using a double line.
            </summary>
            <param name="graphics">The graphics to draw on.</param>
            <param name="rect"><see cref="T:System.Drawing.Rectangle"/> structure that defines the boundaries of the round rectangle.</param>
            <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the line.</param>
            <param name="style">The style of double line.</param>
            <param name="tl">The top left rounding radius.</param>
            <param name="tr">The top right rounding radius.</param>
            <param name="br">The bottom right rounding radius.</param>
            <param name="bl">The bottom left rounding radius.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.FillRound(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills the round rectangle.
            </summary>
            <param name="graphics">The graphics to draw on.</param>
            <param name="rect"><see cref="T:System.Drawing.Rectangle"/> structure that defines the boundaries of the round rectangle.</param>
            <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.</param>
            <param name="tl">The top left rounding radius.</param>
            <param name="tr">The top right rounding radius.</param>
            <param name="br">The bottom right rounding radius.</param>
            <param name="bl">The bottom left rounding radius.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.DrawEllipseDoubleLine(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32)">
            <summary>
            Draws an ellipse specified by a bounding System.Drawing.Rectangle structure.
            </summary>
            <param name="graphics">The graphics to draw on.</param>
            <param name="rect"><see cref="T:System.Drawing.Rectangle"/> structure that defines the boundaries of the ellipse.</param>
            <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the ellipse.</param>
            <param name="style">The style of double line.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.CreateGradientBrush(System.Drawing.Graphics,System.Drawing.RectangleF,GrapeCity.ActiveReports.SectionReportModel.GradientStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
             Creates a new gradient brush based on a rectangle, starting and ending colors, and an orientation mode.
            </summary>
            <param name="graphics">The graphics to draw on.</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure that specifies the bounds of the linear gradient.</param>
            <param name="gradientStyle">The style of the gradient.</param>
            <param name="firstColor">A <see cref="T:System.Drawing.Color"/> structure that represents the starting color for the gradient.</param>
            <param name="secondColor">A <see cref="T:System.Drawing.Color"/> structure that represents the ending color for the gradient.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.CreateBrush(System.Drawing.Graphics,GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle,System.Drawing.Drawing2D.HatchStyle,GrapeCity.ActiveReports.SectionReportModel.GradientStyle,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates new brush depending of specified background style.
            </summary>
            <param name="graphics">The graphics to draw on.</param>
            <param name="backgroundStyle">The style of the background.</param>
            <param name="hatchStyle">One of the <see cref="T:System.Drawing.Drawing2D.HatchStyle"/> values that represents the pattern drawn by this brush.</param>
            <param name="gradientStyle">One of the <see cref="T:GrapeCity.ActiveReports.SectionReportModel.GradientStyle"/> values the defines the gradient style.</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure that specifies the bounds of the linear gradient.</param>
            <param name="firstColor">A <see cref="T:System.Drawing.Color"/> structure that represents the first color.</param>
            <param name="secondColor">A <see cref="T:System.Drawing.Color"/> structure that represents the second color.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.BindingLayer">
            <summary>
            Summary description for BindingLayer.
            
            There are 4 kinds of data binding
            	1- Section GroupValue binding , basically Section.DataField updated section.groupvalue for grouping
            	2- Control.DataField , control's default property is bound to a field in the datalayer
            	3- Control.SummaryDistinctField , which is used to calculate distinct summaries of data
            	4- Hierarchical binding of subreports using DataField
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.CryptoProvider">
            <summary>
            Provides helper methods for encryption/decryption
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CryptoProvider.Encrypt(GrapeCity.ActiveReports.Data.CryptoMode,System.String)">
            <summary>
            Encrypts given string and returns result as base 64 string
            </summary>
            <param name="mode">Algorithm which used for encryption</param>
            <param name="text">Text to encrypt</param>
            <returns>Base 64 string containing encrypted text</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CryptoProvider.Decrypt(GrapeCity.ActiveReports.Data.CryptoMode,System.String)">
            <summary>
            Decrypts given string.
            </summary>
            <param name="mode">Decryption algorithm</param>
            <param name="text">Base 64 String to decrypt</param>
            <returns>Encrypted string</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CryptoProvider.CreateAlgorithm(GrapeCity.ActiveReports.Data.CryptoMode)">
            <summary>
            Creates specific encryption algorithm, based on given crypto mode
            </summary>
            <param name="mode">Encryption mode</param>
            <returns>Created algorithm</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.CryptoMode">
            <summary>
            Specifies cyrpto algorithm
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.CryptoMode.Rijndael">
            <summary>
            Old algorithm, non-fips compliant
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.CryptoMode.TripleDes">
            <summary>
            Fips compliant algorithm
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.CSV.CsvCommand">
            <summary>
            Provides the implementation of <see cref="T:System.Data.IDbCommand"/> for the .NET Framework CSV Data Provider.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CSV.CsvCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Executes the <see cref="P:System.Data.IDbCommand.CommandText"></see> against the <see cref="P:System.Data.IDbCommand.Connection"></see>, and builds an <see cref="T:System.Data.IDataReader"></see> using one of the <see cref="T:System.Data.CommandBehavior"></see> values.
            </summary>
            
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> object.
            </returns>
            
            <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"></see> values. </param><filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.CSV.CsvCommand.Connection">
            <summary>
            Gets or sets the <see cref="T:System.Data.IDbConnection"></see> used by this instance of the <see cref="T:System.Data.IDbCommand"></see>.
            </summary>
            <returns>
            The connection to the data source.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CSV.CsvCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.CSV.CsvConnection">
            <summary>
            Provides the implementation of <see cref="T:System.Data.IDbConnection"/> for the .NET Framework CSV Data Provider.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CSV.CsvConnection.CreateCommand">
            <summary>
            Creates and returns a Command object associated with the connection.
            </summary>
            <returns>
            A Command object associated with the connection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.CSV.CsvConnection.ConnectionString">
            <summary>
            Gets or sets the string used to open a database.
            </summary>
            <returns>
            A string containing connection settings.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.CSV.CsvConnection.ConnectionTimeout">
            <summary>
            Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.
            </summary>
            <returns>
            The time (in seconds) to wait for a connection to open. The default value is 15 seconds.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.CSV.CsvConnection.Database">
            <summary>
            Gets the name of the current database or the database to be used after a connection is opened.
            </summary>
            <returns>
            The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.CSV.CsvConnection.State">
            <summary>
            Gets the current state of the connection.
            </summary>
            <returns>
            One of the <see cref="T:System.Data.ConnectionState"></see> values.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CSV.CsvConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.CSV.CsvDataReaderAdapter">
            <summary>
            Provides the implementation of <see cref="T:System.Data.IDataReader"/> for the .NET Framework CSV Data Provider.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.DataLayer">
            <summary>
            Implementation of data fields access interface. For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.DataLayer.DataMember">
            <summary>
            The data member
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.DataLayer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.DataLayer.DuplicateFieldNames">
            <summary>
            Returns HashSet with duplicated field names. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.DataLayer.Open(System.String,System.String)">
            <summary>
            Opens this data layer.
            </summary>
            <param name="credentials">The instance of <see cref="!:DataSourceCredentials"/> class containing credentials for data source.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.DataLayer.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.DataLayer.GetFieldValue(System.String,System.Int32)">
            <summary>
            Used only for Ilist 
            </summary>
            <param name="fieldName">Filed Name</param>
            <param name="cookie">will always be -1</param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.DataLayer.RecordsCount">
            <summary>
            Returns amount of records in the data source
            Not valid for the DataReader(returns -1)
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.DataLayer.GetFieldValue1(System.String)">
            <summary>
            used for RSupdateTotals/rsundoupdatetotals and subreport datasource in binding layer.cs
            default is true
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.DataLayer.Fields">
            <summary>
            Gets the fields collection. For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.DataLayer.GetFields(System.String,System.String)">
            <summary>
            Gets the fields collection. For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.DataLayer.IsListDataSourceNull">
            <summary>
            Need separation from dataview that also implements IList
            used in BindingLayer
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.IDataProvider">
            <summary>
            Contains data specific methods
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.IDataProvider.CreateConnection">
            <summary>
            Used to create connection to this provider
            </summary>
            <returns>Returns newly created method</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.IDataProvider.ConnectionString">
            <summary>
            Gets connection string
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.IDataProvider.CommandText">
            <summary>
            Gets command text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.IDataProvider.CommandTimeout">
            <summary>
            Gets/sets command timeout
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.IDataProvider.SetCredentials(System.String,System.String,System.String)">
            <summary>
            Changes credentials for the connection string
            </summary>
            <param name="connectionString"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.OleDBDataSource">
            <summary>
            Ole DB data source - allows to connect through Ole DB driver.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.OleDBDataSource.#ctor">
            <summary>
            Default ctor. By default, connection string and command text are empty strings, 
            and command timeout is DefaultTimeout
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.OleDBDataSource.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.OleDBDataSource"/> class.
            </summary>
            <param name="connectionString">The string used to open a connection to the data source using the OleDb data provider.</param>
            <param name="sql">The SQL statement used to retrieve records from the data source. </param>
            <param name="timeout">The amount of time to wait while executing a command before terminating the attempt and generating an error.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.OleDBDataSource.#ctor(System.Data.IDbCommand)">
            <summary>
            Creates datasource from given command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.OleDBDataSource.ConnectionString">
            <summary>
            Specifies the string used to open a connection to the data source using the OleDb data provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.OleDBDataSource.CommandTimeout">
            <summary>
            Sets or returns the amount of time to wait while executing a command before terminating the attempt and generating an error.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.OleDBDataSource.SQL">
            <summary>
            Specifies a valid SQL statement used to retrieve records from the data source.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.OleDBDataSource.GrapeCity#ActiveReports#Data#IDataProvider#CreateConnection">
            <summary>
            Creates OleDbConnection
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.OdbcDataSource">
            <summary>
            ODBC data source - allows to connect through ODBC driver.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.OdbcDataSource.#ctor">
            <summary>
            Default ctor. By default, connection string and command text are empty strings, 
            and command timeout is DefaultTimeout
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.OdbcDataSource.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.OdbcDataSource"/> class.
            </summary>
            <param name="connectionString ">The connection string.</param>
            <param name="sql">The current command text.</param>
            <param name="timeout">The command timeout.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.OdbcDataSource.ConnectionString">
            <summary>
            Gets or sets connection string.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.OdbcDataSource.CommandTimeout">
            <summary>
            Gets or sets current commant timeout.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.OdbcDataSource.SQL">
            <summary>
            Gets or sets current command text
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.SqlDBDataSource">
            <summary>
            Represents a section report data source based on the SqlDB ADO.NET data provider.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.SqlDBDataSource.DefaultTimeout">
            <summary>
            The number of seconds to wait for a connection to open, before canceling the attempt and generate an error. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.SqlDBDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.SqlDBDataSource"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.SqlDBDataSource.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.SqlDBDataSource"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.SqlDBDataSource.#ctor(System.Data.IDbCommand)">
            <summary>
            Creates datasource from given command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.SqlDBDataSource.ConnectionString">
            <summary>
            Specifies the string used to open a connection to the data source using the SqlDb data provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.SqlDBDataSource.CommandTimeout">
            <summary>
            Sets or returns the amount of time to wait while executing a command before terminating the attempt and generating an error.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.SqlDBDataSource.SQL">
            <summary>
            Specifies a valid SQL statement used to retrieve records from the data source. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.SqlDBDataSource.GrapeCity#ActiveReports#Data#IDataProvider#CreateConnection">
            <summary>
            Creates SqlConnection command
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.XMLDataSource">
            <summary>
            Represents a section report data source based on an XML document and an XPath pattern to select the XML nodes used as records in the data source.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Data.XMLDataSource.Changed">
            <summary>
            Occurs when data source fields is changed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.XMLDataSource"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.XMLDataSource"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.FileURL">
            <summary>
            Gets or sets the file name or url used to retrieve the XML document to be used as a data source.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.RecordsetPattern">
            <summary>
            Gets or sets a valid XPath pattern used to select the data source nodes to be printed in the report.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.ValidateOnParse">
            <summary>
            Gets or sets a value that determines whether the retrieved XmlDocument should be validated while parsing.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.Document">
            <summary>
            Returns a reference to the loaded XmlDocument that is used as the data source. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.NodeList">
            <summary>
            Gets or sets a reference to the XmlNodeList object that is the result of applying the XPath pattern provided in the RecordsetPattern property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.Count">
            <summary>
            Gets the number of nodes (records) in the node list.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.CurrentPosition">
            <summary>
            Gets the index of the current node in the NodeList.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.EOF">
            <summary>
            Determines whether the CurrentPosition is at the end of the NodeList.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.BOF">
            <summary>
            Determines whether the CurrentPosition is at the first node in the NodeList.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.Load">
            <summary>
            Made internal for tests purposes
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.LoadXML(System.String)">
            <summary>
            Loads an XML fragment from a string.  
            </summary>
            <param name="xmlFragment">The XML fragment.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.EnsureNodeListAvailable">
            <summary>
            made internal for test purposes
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.MoveFirst">
            <summary>
            Moves the current position to the first node in the NodeList. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.MoveNext">
            <summary>
            Moves the CurrentPosition to the next node in the NodeList. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.Field(System.String,System.Boolean)">
            <summary>
            Returns the XML node or nodelist using the specified XPath pattern relative to the current node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.Field(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the XML node or nodelist using the specified XPath pattern relative to the current node. The isOutputformatNull flag specifies whether to use the text of the current node.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.CsvDataSource">
            <summary>
            Represents a section report data source based on an CSV document.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GrapeCity.ActiveReports.Data.CsvDataSource.#ctor" -->
        <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Load(System.Func{System.String,System.IO.Stream})">
            <summary>
            Loads the csv data from the source specified in connection string.
            </summary>
            <param name="getStream">The stream getter.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.CsvDataSource.EOF">
            <summary>
            Determines whether the CurrentPosition is at the end of the NodeList.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.MoveFirst(GrapeCity.ActiveReports.ResourceLocator)">
            <summary>
            Moves the current position to the first data record. 
            </summary>
            <param name="reportResourceLocator"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.MoveNext">
            <summary>
            Moves the current position to the next data record. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Field(System.String)">
            <summary>
            Returns the value of the field with the specified name.
            </summary>
            <param name="name">The name of the field.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.GetColumns">
            <summary>
            Returns the list of the csv columns names.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.CsvDataSource.ConnectionString">
            <summary>
            Specifies the string used to load the data from the csv file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Dispose">
            <summary>
            Releases the resources used by the <see cref="T:GrapeCity.ActiveReports.Data.CsvDataSource"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:GrapeCity.ActiveReports.Data.CsvDataSource"/>
            </summary>
            <param name="disposing">true if this method is called from Dispose()</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.ProviderSerializer">
            <summary>
            Used to serialize/deserialize data sources. Internal uses only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ProviderSerializer.ToStream(System.Object)">
            <summary>
            Internal uses only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ProviderSerializer.FromStream(System.IO.Stream)">
            <summary>
            Internal uses only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.FieldTypeEnum">
            <summary>
            Provides a set of values for use with the FieldType property of the Field class.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.None">
            <summary>
            No type is specified for the data value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.String">
            <summary>
            Specifies that the field contains a string value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Date">
            <summary>
            Specifies that the field contains a date value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Int32">
            <summary>
            Specifies that the field contains an integer value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Float">
            <summary>
            Specifies that the field contains a float value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Double">
            <summary>
            Specifies that the field contains a double value.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Boolean">
            <summary>
            Specifies that the field contains a Boolean value.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.Field">
            <summary>
            Field
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.#ctor(GrapeCity.ActiveReports.Data.DataLayer,System.String)">
            <summary>
            Constructor, is called internally for Datasource field
            </summary>
            <param name="dataLayer"></param>
            <param name="Name"></param>
        </member>
        <member name="E:GrapeCity.ActiveReports.Data.Field.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed" /> event of a component.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="bdisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.Field.Name">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.Field.Value">
            <summary>
            Value of field
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.Field.Tag">
            <summary>
            Field Tag
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.Field.formula">
            <summary>
            Field Value, used for unbound fields, this can be a formula or a static value
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.Field.Formula">
            <summary>
            Field Value, used for unbound fields, this can be a formula or a static value
            Formaula can be combination of any number of other bound or unbound fields. 
            eg. 
            1. Field3.Formula = field1 + field2; (where field1 = Field1.Name and field2 = Field2.Name)
            2. field1.Formula = "\"Hello : \" + CustomerID";
            3. field1.Formula = "2 + 4 / 6"
            
            Value of Field is based on FieldType which is used to evaluate as the type and the result
            is set to Field.Value
            Order of Evaluation:
            	1. Field.Formula, 
            	2. If Field.Formula is null, Field.DefaultValue is used.
            	3. If Field.DefaultValue is null, Field.Value is used, which may or may not be null.
            	   Field.Value can also be set at run time.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Data.Field.fieldType">
            <summary>
            
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.Field.FieldType">
            <summary>
            Type associated withthe field; make it Enum
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.Field.DefaultValue">
            <summary>
            Type associated withthe field; make it Enum
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.WriteXml(System.Xml.XmlElement)">
            <summary>
            Writes the control as XML to specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.ReadXml(System.Xml.XmlNode)">
            <summary>
            Reads the control from specified XML node.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.GetFieldTypeEnumFromString(System.String)">
            <summary>
            Gets the FieldTypeEnum  from string; iused in load layout
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.Field.SetValue(System.Object)">
            <summary>
            Set value based on FieldType		
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.FieldCollection">
            <summary>
            Summary description for FieldCollection.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Data.FieldCollection.Modified">
            <summary>
            Occurs when collection is modified.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Data.FieldCollection.Cleared">
            <summary>
            Occurs when collection is cleared.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Data.FieldCollection.Loaded">
            <summary>
            Occurs when collection is loaded.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.#ctor(GrapeCity.ActiveReports.Data.DataLayer)">
            <summary>
            For the data connection fields list
            </summary>
            <param name="dataLayer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.FieldCollection"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.FieldCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Insert(System.Int32,GrapeCity.ActiveReports.Data.Field)">
            <summary>
            Inserts an existing field in the fields collection at the specified location.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.CopyTo(GrapeCity.ActiveReports.Data.Field[],System.Int32)">
            <summary>
            Copies fields from the collection to an array, starting at a particular array index.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.FieldCollection.DuplicateNames">
            <summary>
            Returns HashSet with duplicated field names. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.IndexOf(System.String)">
            <summary>
            Finds the index number of the field with specified name in the collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.IndexOf(GrapeCity.ActiveReports.Data.Field)">
            <summary>
            Finds the index number of the specified field in the collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Contains(System.String)">
            <summary>
            Returns a value indicating whether the field collection contains a field with the specified name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Contains(GrapeCity.ActiveReports.Data.Field)">
            <summary>
            Returns a value indicating whether the field collection contains the specified field.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.FieldCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.Data.Field"/> with the specified field name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Remove(GrapeCity.ActiveReports.Data.Field)">
            <summary>
            Removes the specified field from the collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Add(System.String)">
            <summary>
            Adds a new field to the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Add(GrapeCity.ActiveReports.Data.Field)">
            <summary>
            Adds the specified field to the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Remove(System.String)">
            <summary>
            Removes a field with the specified name from the collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Remove(System.Int32)">
            <summary>
            Removes a field with the specified index from the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
            <param name="newValue">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.ListDataSource">
            <summary>
            Summary description for ListDataSource.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Data.ListDataSource"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.List">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Init">
            <summary>
            
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.EOF">
            <summary>
            Returns true if end of Ilist has been reached.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.PopulateSchemaTable">
            <summary>
            Populates teh schemaTable with Public properties from the IList
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bdisposing"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            See Documentation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch SQL statements
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Close">
            <summary>
            Closes the IDataReader object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Read">
            <summary>
            TODO:
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row
            Retruns Depth == 0
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetSchemaTable">
            <summary>
            Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.
            </summary>
            <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The 32-bit signed integer value of the specified field.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.Item(System.String)">
            <summary>
            Gets the column with the specified name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetValue(System.Int32)">
            <summary>
            Returns the value at given index for the property.		
            </summary>
            <param name="i">Index of property in the field collection</param>
            <returns>Value of teh property at the specified index</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetValue(System.String,System.Int32)">
            <summary>
            Gets Value for data fields for .Notations
            </summary>
            <param name="fieldName">Field Name of teh format Field1.Field2 and so on</param>
            <param name="iDontUseThisOne">Not Used</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetTargetObject(System.Object,System.String,System.Int32)">
            <summary>
            Gets the targetObject based on teh name in the .notation of the data field
            </summary>
            <param name="target"></param>
            <param name="splitString"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>true if the specified field is set to null; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the field from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The 8-bit unsigned integer value of the specified column.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetFieldType(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The fixed-position numeric value of the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetValues(System.Object[])">
            <summary>
            Populates an array of objects with the column values of the current record.
            </summary>
            <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute fields into.</param>
            <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The name of the field or the empty string (""), if there is no value to return.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.FieldCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetInt64(System.Int32)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The 64-bit signed integer value of the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDouble(System.Int32)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The double-precision floating point number of the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The GUID value of the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDateTime(System.Int32)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The date and time data value of the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetOrdinal(System.String)">
            <summary>
            Return the index of the named field.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>The index of the named field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDataTypeName(System.Int32)">
            <summary>
            Gets the data type information for the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The data type information for the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetFloat(System.Int32)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The single-precision floating point number of the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetData(System.Int32)">
            <summary>
            Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>An <see cref="T:System.Data.IDataReader" />.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldoffset">The index within the row from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The string value of the specified field.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The character value of the specified column.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The 16-bit signed integer value of the specified field.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.PageBindingCache">
            <summary>
            Summary description for PageBindingCache.
            This class is used to cache field values for page headers and footers that don't have summarization
            The pageheader should always bind to first detail record's values, the pagefooter to the last details
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.PageBindingCache.Update(GrapeCity.ActiveReports.SectionReport)">
            <summary>
            Update Cache
            </summary>
            <param name="report"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.PageBindingCache.GetFieldValue(System.String)">
            <summary>
            GetFieldValue
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.Prepare">
            <summary>
            Creates a prepared (or compiled) version of the command on the data source.
            </summary>
            
            <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection"></see> is not set.-or- The <see cref="P:System.Data.OleDb.OleDbCommand.Connection"></see> is not <see cref="!:System.Data.OleDb.OleDbConnection.Open"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.Cancel">
            <summary>
            Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand"></see>.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.CreateParameter">
            <summary>
            Creates a new instance of an <see cref="T:System.Data.IDbDataParameter"></see> object.
            </summary>
            
            <returns>
            An IDbDataParameter object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.ExecuteNonQuery">
            <summary>
            Executes an SQL statement against the Connection object of a .NET Framework data provider, and returns the number of rows affected.
            </summary>
            
            <returns>
            The number of rows affected.
            </returns>
            
            <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.ExecuteReader">
            <summary>
            Executes the <see cref="P:System.Data.IDbCommand.CommandText"></see> against the <see cref="P:System.Data.IDbCommand.Connection"></see> and builds an <see cref="T:System.Data.IDataReader"></see>.
            </summary>
            
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Executes the <see cref="P:System.Data.IDbCommand.CommandText"></see> against the <see cref="P:System.Data.IDbCommand.Connection"></see>, and builds an <see cref="T:System.Data.IDataReader"></see> using one of the <see cref="T:System.Data.CommandBehavior"></see> values.
            </summary>
            
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> object.
            </returns>
            
            <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"></see> values. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.ExecuteScalar">
            <summary>
            Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.
            </summary>
            
            <returns>
            The first column of the first row in the resultset.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlCommand.Connection">
            <summary>
            Gets or sets the <see cref="T:System.Data.IDbConnection"></see> used by this instance of the <see cref="T:System.Data.IDbCommand"></see>.
            </summary>
            
            <returns>
            The connection to the data source.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlCommand.Transaction">
            <summary>
            Gets or sets the transaction within which the Command object of a .NET Framework data provider executes.
            </summary>
            
            <returns>
            the Command object of a .NET Framework data provider executes. The default value is null.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlCommand.CommandText">
            <summary>
            Gets or sets the text command to run against the data source.
            </summary>
            
            <returns>
            The text command to execute. The default value is an empty string ("").
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlCommand.CommandTimeout">
            <summary>
            Gets or sets the wait time before terminating the attempt to execute a command and generating an error.
            </summary>
            
            <returns>
            The time (in seconds) to wait for the command to execute. The default value is 30 seconds.
            </returns>
            
            <exception cref="T:System.ArgumentException">The property value assigned is less than 0. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlCommand.CommandType">
            <summary>
            Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText"></see> property is interpreted.
            </summary>
            
            <returns>
            One of the <see cref="T:System.Data.CommandType"></see> values. The default is Text.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlCommand.Parameters">
            <summary>
            Gets the <see cref="T:System.Data.IDataParameterCollection"></see>.
            </summary>
            
            <returns>
            The parameters of the SQL statement or stored procedure.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlCommand.UpdatedRowSource">
            <summary>
            Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow"></see> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)"></see> method of a <see cref="T:System.Data.Common.DbDataAdapter"></see>.
            </summary>
            
            <returns>
            One of the <see cref="T:System.Data.UpdateRowSource"></see> values. The default is Both unless the command is automatically generated. Then the default is None.
            </returns>
            
            <exception cref="T:System.ArgumentException">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource"></see> values. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GrapeCity.ActiveReports.Data.XmlDataReader">
            <summary>
            Class for reading data from <see cref="T:GrapeCity.ActiveReports.Data.XMLDataSource"/>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.Close">
            <summary>
            Closes the <see cref="T:System.Data.IDataReader"></see> 0bject.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetSchemaTable">
            <summary>
            Returns a <see cref="T:System.Data.DataTable"></see> that describes the column metadata of the <see cref="T:System.Data.IDataReader"></see>.
            </summary>
            
            <returns>
            A <see cref="T:System.Data.DataTable"></see> that describes the column metadata.
            </returns>
            
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.IDataReader"></see> is closed. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch SQL statements.
            </summary>
            
            <returns>
            true if there are more rows; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.Read">
            <summary>
            Advances the <see cref="T:System.Data.IDataReader"></see> to the next record.
            </summary>
            
            <returns>
            true if there are more rows; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlDataReader.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
            
            <returns>
            The level of nesting.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlDataReader.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
            
            <returns>
            true if the data reader is closed; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlDataReader.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
            
            <returns>
            The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            
            <returns>
            The name of the field or the empty string (""), if there is no value to return.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the data type information for the specified field.
            </summary>
            
            <returns>
            The data type information for the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Type"></see> information corresponding to the type of <see cref="T:System.Object"></see> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>.
            </summary>
            
            <returns>
            The <see cref="T:System.Type"></see> information corresponding to the type of <see cref="T:System.Object"></see> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetValue(System.Int32)">
            <summary>
            Return the value of the specified field.
            </summary>
            
            <returns>
            The <see cref="T:System.Object"></see> which will contain the field value upon return.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetValues(System.Object[])">
            <summary>
            Gets all the attribute fields in the collection for the current record.
            </summary>
            
            <returns>
            The number of instances of <see cref="T:System.Object"></see> in the array.
            </returns>
            
            <param name="values">An array of <see cref="T:System.Object"></see> to copy the attribute fields into. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetOrdinal(System.String)">
            <summary>
            Return the index of the named field.
            </summary>
            
            <returns>
            The index of the named field.
            </returns>
            
            <param name="name">The name of the field to find. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            
            <returns>
            The value of the column.
            </returns>
            
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            
            <returns>
            The 8-bit unsigned integer value of the specified column.
            </returns>
            
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            
            <returns>
            The actual number of bytes read.
            </returns>
            
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferoffset">The index for buffer to start the read operation. </param>
            <param name="fieldOffset">The index within the field from which to start the read operation. </param>
            <param name="i">The zero-based column ordinal. </param>
            <param name="length">The number of bytes to read. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            
            <returns>
            The character value of the specified column.
            </returns>
            
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            
            <returns>
            The actual number of characters read.
            </returns>
            
            <param name="fieldoffset">The index within the row from which to start the read operation. </param>
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferoffset">The index for buffer to start the read operation. </param>
            <param name="i">The zero-based column ordinal. </param>
            <param name="length">The number of bytes to read. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            
            <returns>
            The GUID value of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            
            <returns>
            The 16-bit signed integer value of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            
            <returns>
            The 32-bit signed integer value of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetInt64(System.Int32)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            
            <returns>
            The 64-bit signed integer value of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetFloat(System.Int32)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            
            <returns>
            The single-precision floating point number of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetDouble(System.Int32)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            
            <returns>
            The double-precision floating point number of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            
            <returns>
            The string value of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            
            <returns>
            The fixed-position numeric value of the specified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            
            <returns>
            The date and time data value of the spcified field.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetData(System.Int32)">
            <summary>
            Gets an <see cref="T:System.Data.IDataReader"></see> to be used when the field points to more remote structured data.
            </summary>
            
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> to be used when the field points to more remote structured data.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            
            <returns>
            true if the specified field is set to null. Otherwise, false.
            </returns>
            
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlDataReader.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            
            <returns>
            When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlDataReader.Item(System.Int32)">
            <summary>
            Gets the column located at the specified index.
            </summary>
            
            <returns>
            The column located at the specified index as an <see cref="T:System.Object"></see>.
            </returns>
            
            <param name="i">The index of the column to get. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlDataReader.Item(System.String)">
            <summary>
            Gets the column with the specified name.
            </summary>
            
            <returns>
            The column with the specified name as an <see cref="T:System.Object"></see>.
            </returns>
            
            <param name="name">The name of the column to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlDataReader.GetColumnType(System.String)">
            <summary>
            Finds out the type of the column
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlConnection.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
            
            <returns>
            An object representing the new transaction.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel"></see> value.
            </summary>
            
            <returns>
            An object representing the new transaction.
            </returns>
            
            <param name="il">One of the <see cref="T:System.Data.IsolationLevel"></see> values. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlConnection.Close">
            <summary>
            Closes the connection to the database.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlConnection.ChangeDatabase(System.String)">
            <summary>
            Changes the current database for an open Connection object.
            </summary>
            
            <param name="databaseName">The name of the database to use in place of the current database. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlConnection.CreateCommand">
            <summary>
            Creates and returns a Command object associated with the connection.
            </summary>
            
            <returns>
            A Command object associated with the connection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlConnection.Open">
            <summary>
            Opens a database connection with the settings specified by the ConnectionString property of the provider-specific Connection object.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlConnection.ConnectionString">
            <summary>
            Gets or sets the string used to open a database.
            </summary>
            
            <returns>
            A string containing connection settings.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlConnection.ConnectionTimeout">
            <summary>
            Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.
            </summary>
            
            <returns>
            The time (in seconds) to wait for a connection to open. The default value is 15 seconds.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlConnection.Database">
            <summary>
            Gets the name of the current database or the database to be used after a connection is opened.
            </summary>
            
            <returns>
            The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GrapeCity.ActiveReports.Data.XmlConnection.State">
            <summary>
            Gets the current state of the connection.
            </summary>
            
            <returns>
            One of the <see cref="T:System.Data.ConnectionState"></see> values.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GrapeCity.ActiveReports.Data.XmlConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GrapeCity.ActiveReports.DescriptionRes">
            <summary>
            base class for Description Attribute
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.DescriptionRes.Description">
            <summary>
            Description for Resource
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.DisplayNameFromResourceAttribute">
            <summary>
            Resolves DisplayName value from named resource.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.DisplayNameFromResourceAttribute.#ctor(System.String)">
            <param name="resourceName">Name of resource, that would be used as DisplayName</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.ARUtils">
            <summary>
            Summary description for ARUtils.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ARUtils.IsFullTrust">
            <summary>
            Check to see if the calling code is executing with FullTrust
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ARUtils.ReadFloatAttribute(System.Xml.XmlNode,System.String,System.Single@)">
            <summary>
            Returns attribute as float
            </summary>
            <param name="controlNode"></param>
            <param name="attributeName"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.IScriptCompiler">
            <summary>
            Optional service to support scripts.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IScriptCompiler.TryCompile(GrapeCity.ActiveReports.Core.Scripting.Language,System.String,System.String[],System.Reflection.Assembly@,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Core.Scripting.CompilationResult}@,System.Boolean)">
            <summary>
            Try compile the code.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.DDScripting">
            <summary>
            Summary description for DDScripting.
            
            requires references: Microsoft.Vsa , Microsoft.JScript , Microsoft.VisualBasic.Vsa
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.AddNamedItem(System.String,System.Type,System.Object)">
            <summary>
            Adds named item to script scope
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.AddModule(System.String)">
            <summary>
            AddModule
            </summary>
            <param name="code"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.DDScripting.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.SetRootComponent(System.Object)">
            <summary>
            SetRootComponent
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.AddExpression(System.String,System.String)">
            <summary>
            AddExpression
            Adds an expression and returns expression id so you can call ExecuteExpression
            </summary>
            <param name="name"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.ExecuteExpression(System.Int32)">
            <summary>
            ExecuteExpression
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.ExecuteMethod(System.String)">
            <summary>
            ExecuteMethod
            </summary>
            <param name="methodName"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.ExecuteMethod(System.String,System.Object[])">
            <summary>
            ExecuteMethod
            </summary>
            <param name="methodName"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.ExecuteMethod(System.String,System.Object[],System.Boolean@)">
            <summary>
            ExecuteMethod
            </summary>
            <param name="methodName"></param>
            <param name="parameters"></param>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.Clear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.DDScripting.SearchScriptCache(GrapeCity.ActiveReports.DDScripting.ScriptData)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.DDScripting.ScriptData">
            <summary>
            ScriptData class
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.DelayedPages">
            <summary>
            Summary description for DelayedPages.
            This class buffers pages 
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.DesignTimeHelper">
            <summary>
            Utility class to simplify design-time support implementation
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.DesignTimeHelper.IsDesignTime">
            <summary>
            Gets true if component operates in design-time mode
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.DesignTimeHelper.IsInherited(System.ComponentModel.IComponent)">
            <summary>
            Gets trye if specific component is inherited
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DesignTimeHelper.DestroyComponent(System.ComponentModel.IComponent)">
            <summary>
            Destroys component in case of design mode
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.DesignTimeHelper.DoTransaction(System.String,System.Action{System.ComponentModel.Design.DesignerTransaction})">
            <summary>
            Performs transacted update of the component
            </summary>
            <param name="transactionName"></param>
            <param name="action"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.InteropAssembly">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.LayoutDrawingLog">
            <summary>
            Contains drawing log of Report. Mainly List of SectionDrawContext.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.LayoutDrawingLog.#ctor(GrapeCity.ActiveReports.SectionCollection)">
            <summary>
            Constructor that stores Sections structure.
            </summary>
            <param name="sections"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.LayoutDrawingLog.GetDrawContexts(GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Returns a list of SectionDrawContext that placed on indicated Page
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.LayoutDrawingLog.GetDrawContexts(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Document.Section.SectionType)">
            <summary>
            Returns a list of SectionDrawContext that placed on indicated Page with specified SectionType
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.LayoutDrawingLog.GetDrawContexts(GrapeCity.ActiveReports.Core.Document.Page,System.Int32)">
            <summary>
            Returns a list of SectionDrawContext that placed on indicated Page with specified Section Name
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.LayoutDrawingLog.GetDrawContexts(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Controls.CrossSectionCoordinate)">
            <summary>
            Returns a list of SectionDrawContext that placed on indicated Page with specified coordinate. Coordinate's Position is ignored.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.LayoutDrawingLog.GetSectionsStructure">
            <summary>
            Returns Sections Structure in format {index, Identity}
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.LayoutDrawingLog.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GrapeCity.ActiveReports.General.LocalizedCategoryAttribute">
            <summary>
            LocalizedCategoryAttribute overrides and provides an implementation of the CategoryAttribute class's GetLocalizedString method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.LocalizedCategoryAttribute.#ctor(System.String)">
            <summary>
            The Category the property should be in.
            </summary>
            <param name="category">The LocalStrings key to be used as the category key.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized Category string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.General.ScriptUpdater">
            <summary>
            Internal class, which helps to migrate scripts to AR. For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.MinTextualUpdate(System.String)">
            <summary>
            Fix few AR6 names. See https://code.datadynamics.com/default.asp?W2301.
            </summary>
            <param name="code">Code with old names</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.MinTextualUpdate(System.String,System.String,System.String)">
            <summary>
            Fix few AR6 type names. See https://code.datadynamics.com/default.asp?W2301.
            </summary>
            <param name="code">Code with old names</param>
            <param name="oldAssemblyAlias">Alias for old types</param>
            <param name="newAssemblyAlias">Alias for new types</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.ReplaceDataDynamicsNames(System.String)">
            <summary>
            Fix AR6 names.
            </summary>
            <param name="code">Code with old names</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.ReplaceDataDynamicsNames(System.String,System.String,System.String)">
            <summary>
            Fix AR6 names.
            </summary>
            <param name="code">Code with old names</param>
            <param name="oldAssemblyAlias">Alias for old types</param>
            <param name="newAssemblyAlias">Alias for new types</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.UpdateScript(System.String)">
            <summary>
            Fix AR6 scripts.
            </summary>
            <param name="code">Code with old names</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.UpdateScript(System.String,System.String,System.String)">
            <summary>
            Fix AR6 scripts.
            </summary>
            <param name="code">Code with old names</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.RegexMatchAndReplace(System.String,System.Collections.Generic.IDictionary{System.Text.RegularExpressions.Regex,System.String},System.Func{System.Text.RegularExpressions.Match,System.Boolean})">
            <summary>
            Regex match and replace old name.
            </summary>
            <param name="code">Code with old names.</param>
            <param name="regexes">Dictionary of regexes.</param>
            <returns>Code with new name.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.PageSettings">
            <summary>
            Summary description for PageSettings.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.PageSettings"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.Margins">
            <summary>
            Gets or sets the default page margins of the report document.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.Gutter">
            <summary>
            Gets or sets the amount of space between columns in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.MirrorMargins">
            <summary>
            Gets or sets a value that specifies whether the margins will be mirrored for every other page of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.DefaultPaperSource">
            <summary>
            Gets or sets a value that specifies whether the report document should print to the printer's default paper source.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.PaperSource">
            <summary>
            Gets or sets the paper source used to print the report document pages.
            </summary>
            <value>The paper source.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.PaperSourceName">
            <summary>
            Gets the name of the paper source. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.DefaultPaperSize">
            <summary>
            Gets or sets a value that specifies whether the report document should print to the printer's default paper size.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageSettings.CalcKnownPaperSize(System.Drawing.Printing.PaperKind)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.PaperKind">
            *#define PAPERSIZE_MAX 68
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.PaperName">
            <summary>
            Gets or sets the name of the type of paper.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.PaperWidth">
            <summary>
            Gets or sets a value that specifies the width, in inches, of a custom paper size.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.PaperHeight">
            <summary>
            Gets or sets a value that specifies the height of a custom paper size.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.Orientation">
            <summary>
            Gets or sets a value that specifies whether the document pages should be printed in portrait or landscape.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.Duplex">
            <summary>
            Gets or sets the report document setting for double-sided printing.  
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.PageSettings.PrinterCollate">
            <summary>
            Enum PrinterCollate
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.PageSettings.PrinterCollate.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.PageSettings.PrinterCollate.Collate">
            <summary>
            Collate
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.PageSettings.PrinterCollate.DontCollate">
            <summary>
            Do not collate
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageSettings.Collate">
            <summary>
            Gets or sets the printer collate type.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.PageSettings.Changed">
            <summary>
            Occurs when any of the PageSettings properties are changed.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageSettings.XMLRead(System.Xml.XmlNode)">
            <summary>
            Reads the page settings from XML.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageSettings.GetPrinterSettings">
            <summary>
            Gets the Printer settings from the default printer; if not found defaults to 8.5/11
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageSettings.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageSettings.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ParamQuery">
            <summary>
            Summary description for BuildParamQuery.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ParamQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ParamQuery"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ParamQuery.Build(GrapeCity.ActiveReports.SectionReport,System.String,System.Boolean)">
            <summary>
            Builds the parameter query.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ParamQuery.Build(GrapeCity.ActiveReports.SectionReport,GrapeCity.ActiveReports.SectionReportModel.ParameterCollection,System.String,System.Boolean)">
            <summary>
            Thiis one handles only the chart parameters
            </summary>
            <param name="report"></param>
            <param name="chartParameters"></param>
            <param name="sql"></param>
            <param name="bDesignTime"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.RpxValidator">
            <summary>
            AM: CR27501 
            Helper class to perform names validation and correction in
            Rpxs
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.RpxValidator.ProcessComponentsNodeList(System.Xml.XmlNodeList,System.Collections.ArrayList,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>
            extracts wrongly named components and provides a list of correct names found 
            /// </summary>
            <param name="list"></param>
            <param name="nodeNames">node names for check</param>
            <param name="namedComponents">XmlNodes list</param>
            <param name="namesList">always lowercased</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.ScriptReferences">
            <summary>
            String based collection of namespaces that user can add at run time.  
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ScriptReferences._namespaces">
            <summary>
            This will contain nameSpaces as part of the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.Create(System.String)">
            <summary>
            Creates <see cref="T:GrapeCity.ActiveReports.ScriptReferences"/> instance, based on given language
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ScriptReferences.DefaultNamespaces">
            <summary>
            Gets list of default namepaces (added to report script scope explicitly)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ScriptReferences.CustomNamespaces">
            <summary>
            Gets list of internal namepaces
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.Add(System.String)">
            <summary>
            Adds a string as namespace to be used in report's script.
            </summary>
            <param name="ns">NameSpace : for example, "System.XML"</param>
            <returns>Returns the index at which the string is added to the collection.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.AddRange(System.String[])">
            <summary>
            Adds a range of namespaces to the collection.
            </summary>
            <param name="namespaces">string array of namespace strings.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.Clear">
            <summary>
            Clears the string collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.Remove(System.String)">
            <summary>
            Removes the instance of the namespace string from the collecton.
            </summary>
            <param name="nameSpace">NameSpace string</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.RemoveAt(System.Int32)">
            <summary>
            Removes the instance of the namespace string at the specified index from the collecton.
            </summary>
            <param name="index">Index at which the string needs to be removed.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.ScriptReferences.Count">
            <summary>
            Returns the count of collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ScriptReferences.Item(System.Int32)">
            <summary>
            Returns a string in the collection at the specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.Parse(System.String,System.Collections.Specialized.StringCollection@)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ScriptReferences.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionDrawContext">
            <summary>
            Contains general information of how section was rendered 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.ControlPositions">
            <summary>
            List of all CSC positions on this context
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.PageIdentifier">
            <summary>
            Identifier of page on which section is rendered
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.PageOffset">
            <summary>
            (Left,Up) Point of section
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.PageWidth">
            <summary>
            Width of a section (?) starting from offset
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.DrawStartPosition">
            <summary>
            Parameter that shows the starting position of rendering. Shows wether section was clipped.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.DrawEndPosition">
            <summary>
            Parameter that shows the ending position of rendering. Shows wether section was clipped.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.SectionHeight">
            <summary>
            Total section Height
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.SectionType">
            <summary>
            Section Type
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.SectionIdentity">
            <summary>
            Section uniquie identifier
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionDrawContext.IsRepeated">
            <summary>
            Specifies wheter section was duplicated with RepeatStyle!=None
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionDrawContext.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than obj. Zero This instance is equal to obj. Greater than zero This instance is greater than obj. 
            </returns>
            
            <param name="obj">An object to compare with this instance. </param>
            <exception cref="T:System.ArgumentException">obj is not the same type as this instance. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="T:GrapeCity.ActiveReports.DrawContextParameters">
            <summary>
            Simple parameters class for SectionDrawContext
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReport">
            <summary>
            Instance of the specified report.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport._masterReportQueue">
            <summary>
            Used to check the initialization sequence of master report and subreports
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.LocateCredentials">
            <summary>
            Occurs when the report needs to obtain data source credentials from the calling application.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.#ctor(GrapeCity.ActiveReports.Core.Document.IDocument{GrapeCity.ActiveReports.Document.Section.Page},GrapeCity.ActiveReports.Core.Document.DeviceInfo,GrapeCity.ActiveReports.IScriptCompiler,GrapeCity.ActiveReports.IDrawingFactory,GrapeCity.ActiveReports.IPrinterService,GrapeCity.ActiveReports.IImageComparisonService,GrapeCity.ActiveReports.IWinFormsService,GrapeCity.ActiveReports.IUiService)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReport"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ResourceLocator">
            <summary>
            Gets the object responsible for resolving report resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.BinPath">
            <summary>
            For internal use only. Support for code-based reports.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ScriptReferences">
            <summary>
            Collection of namespaces that can be added/removed at run time.  
            These strings will be used in the "using" or "Imports" statements for script compilation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.CrossSectionControls">
            <summary>
            Collection of CrossSectioncontrols
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.CurrentMasterReportQueue">
            <summary>
            masterReportQueue - for internal use only.
            RS: CR 24624 - Could return null
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.IsSerializing">
            <summary>
            Indicates that report is in serializing state.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.ValidateSiteName(System.ComponentModel.IComponent,System.String)">
            <summary>
            ValidateSiteName - checks value passed in against existing components.
            If no matching name is found, true is returned, else false is returned.
            </summary>
            <param name="comp">Component instance being changed</param>
            <param name="value">Name to validate.</param>
            <returns>True if no matching component found, false if match is found.</returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.OnCancel">
            <summary>
            Used for change LoadState in model. Invoked in method Cancel()
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.InchToCm(System.Single)">
            <summary>
            Converts value from inches to centimeters.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.CmToInch(System.Single)">
            <summary>
            Converts value from centimeters to inches.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.IsDisposed">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed" /> event of a component.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Name">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ReportServerUri">
            <summary>
            Gets or sets the report server URI.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.StyleSheet">
            <summary>
            Gets or sets a collection of formatting styles used to format controls in the report.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.InvalidateStyles">
            <summary>
            Causes report to reset any cached styles data. Call this method after updating styles programmatically.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.DataLayer">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.OpenDataLayer">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.CloseDataLayer">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport._styleSheet">
            <summary>
            Internally stores all report root "Styles" such as Normal, Heading1, etc...
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Version">
            <summary>
            Returns the product's version number.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.PrintWidth">
            <summary>
            Sets or returns the report's printable width in inches.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Sections">
            <summary>
            Returns a reference to the report's sections collection.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.SectionAdded">
            <summary>
            Raised when a section is added to the report.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.SectionRemoved">
            <summary>
            Raised when a section is removed from the report.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Document">
            <summary>
            Gets a reference to the report output Document object. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.PrinterSettings">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.CompatibilityMode">
            <summary>
            Specifies if the engine should use legacy GDI/GDI+ rendering or new cross-platform based rendering implementation.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.RunAndSaveDocument(System.IO.Stream)">
            <summary>
            Save document for code-based support. For internal use only.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.MaxPages">
            <summary>
            Sets or returns the maximum number of pages that the report will create. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Fields">
            <summary>
            Returns the current data binding collection.  This collection contains the available Field objects to which the report controls and sections can be bound. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.DuplicateFieldNames">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.CalculatedFields">
            <summary>
            Calculated Fields
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.PageSettings">
            <summary>
            Returns a reference to the current report's page settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Script">
            <summary>
            Sets or returns the script code for a report's events.  Either this property or the script editor may be used to add script to a report. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.EnableScriptDebugging">
            <summary>
            Allows to catch script exceptions in the debugger. The default value is False.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.Run">
            <summary>
            Starts the report processing in blocked mode.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.AllFields">
            <summary>
            All fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.GetFields(System.String,System.String)">
            <summary>
            Gets the fields collection. For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Watermark">
            <summary>
            Adds a specified image to the report's background.  The watermark image can be positioned, sized, aligned and placed on specified pages by using the other watermark properties
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.ResetWatermark">
            <summary>
            Resets the watermark to its default value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.WatermarkAlignment">
            <summary>
            Sets or returns the watermark's general vertical and horizontal position when it is added to the canvas.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.WatermarkSizeMode">
            <summary>
            Sets or returns how the watermark will be sized when the image is rendered on the page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.WatermarkPrintOnPages">
            <summary>
            Sets or returns a value indicating the specific pages to which the watermark should be added.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ParentReport">
            <summary>
            Gets a reference to the parent report. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.AddControlLicense(System.String,System.String)">
            <summary>
            Adds a license key to the report so licensed controls can be added to sections at run time by using the Controls.Add method. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.UserData">
            <summary>
            Sets or returns a user-defined value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ExpressionErrorMessage">
            <summary>
            Stops the reporting engine from throwing exceptions and instead displays the provided string.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.AddNamedItem(System.String,System.Object)">
            <summary>
            Adds an object to the script's global namespace.
            This method allows scripts to become aware of custom classes contained within a project.
            Once an item has been added, the script can use the objectName string to reference the object and the functions contained within the class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.ResetScripts">
            <summary>
            Clears the script of any items added using the AddNamedItem method or code added using the AddCode method.
            This does not affect the pre-saved report layout (RPX) file and only clears code added using the above methods.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.AddCode(System.String)">
            <summary>
            Adds additional valid script code to the report's scripting context.
            Using AddCode allows complete functions to be added to a report's script at run time.  The added functions can be called from the report events in script.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.AddScriptReference(System.String)">
            <summary>
            Adds a reference to the specified assembly to be loaded into the scripting run-time context.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ScriptLanguage">
            <summary>
            Sets or returns the scripting language ActiveReports will use to write and interpret the script properties. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.UseEvidence">
            <summary>
            Gets or sets to add the evidence to script engine when compiling script. The default value is false.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReport.RpxFormat">
            <summary>
            Which format the report are saved in.  The Arnet3 format allows for the components in the component tray to be saved.
            Arnet3 format has been deprecated.  The report will be saved in Arnet format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport.RpxFormat.Arnet">
            <summary>
            Arnet
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport.RpxFormat.Arnet3">
            <summary>
            Arnet3
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.SaveStyles(System.String)">
            <summary>
            Saves a reports styles to an external stylesheet.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.SaveStyles(System.IO.Stream)">
            <summary>
            Saves a reports styles to an external stylesheet.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadStyles(System.String)">
            <summary>
            Loads an external stylesheet to use with the report. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadStyles(System.IO.Stream)">
            <summary>
            Loads an external stylesheet to use with the report. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.String)">
            <summary>
            Saves layout in file in <see cref="F:GrapeCity.ActiveReports.SectionReport.RpxFormat.Arnet"/> format
            </summary>
            <param name="fileName">Name of file where layout should be saved</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.String,GrapeCity.ActiveReports.SectionReport.RpxFormat)">
            <summary>
            Saves report's layout in file
            </summary>
            <param name="fileName">Name of file where layout should be saved</param>
            <param name="rpxFormat">Save format</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.IO.Stream)">
            <summary>
            Saves report's layout into given stream in <see cref="F:GrapeCity.ActiveReports.SectionReport.RpxFormat.Arnet"/> format
            </summary>
            <param name="stream">Stream where layout should be saved</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.IO.Stream,GrapeCity.ActiveReports.SectionReport.RpxFormat)">
            <summary>
            Saves report's layout
            </summary>
            <param name="stream">Stream where layout should be saved</param>
            <param name="rpxFormat">Save format</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.Xml.XmlWriter)">
            <summary>
            Saves report's layout into provided <see cref="T:System.Xml.XmlWriter"/>
            </summary>
            <param name="writer">Object where layout should be saved</param>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.LayoutLoaded">
            <summary>
            Raised after a report XML layout is loaded into the report instance.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.LayoutLoading">
            <summary>
            Raised before a report XML layout starts loading into the report instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.String)">
            <summary>
            Loads report's layout from file
            </summary>
            <param name="fileName">Name of the file with layout</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.String,System.Collections.ArrayList@)">
            <summary>
            Loads report's layout from file
            </summary>
            <param name="fileName">Name of the file with layout</param>
            <param name="errors">List of errors occured while loading</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.IO.Stream)">
            <summary>
            Loads report's layout from stream
            </summary>
            <param name="stream">Stream containing layout</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.IO.Stream,System.Collections.ArrayList@)">
            <summary>
            Loads report's layout from stream
            </summary>
            <param name="stream">Stream containing layout</param>
            <param name="errors">List of errors occured while loading</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.Type,System.String)">
            <summary>
            Loads report layout from embedded resource.
            </summary>
            <param name="type">The type from assembly with embedded resource.</param>
            <param name="resourceName">The embedded resource name.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.Xml.XmlReader)">
            <summary>
            Loads report layout.
            </summary>
            <param name="reader">The xml reader used to load layout.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.Xml.XmlReader,System.Collections.ArrayList@)">
            <summary>
            Loads report layout.
            </summary>
            <param name="reader">The xml reader used to load layout.</param>
            <param name="errors">The list of layout validation errors.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.OnLayoutLoading(System.EventArgs)">
            <summary>
            Fires <see cref="E:GrapeCity.ActiveReports.SectionReport.LayoutLoading"/> event
            </summary>
            <param name="args">Additional information for event</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.OnLayoutLoaded(System.EventArgs)">
            <summary>
            Fires <see cref="E:GrapeCity.ActiveReports.SectionReport.LayoutLoaded"/> event
            </summary>
            <param name="args">Additional information for event</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.VerifyReportComponentName(System.ComponentModel.IComponent)">
            <summary>
            Method used to verify that the component passed in is uniquely named - used during the SaveXmlLayout method
            Added due to CR23865
            </summary>
            <param name="component">component to check</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.GetComponentName(System.ComponentModel.IComponent)">
            <summary>
            Internal method used to retrieve name from various report components.
            Added due to CR23865
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.LoadXmlLayout(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Loads rpx file with version &lt; 4
            </summary>
            <param name="layoutDoc">document loaded</param>
            <param name="checkNames">flag that indicates whether names will be validated and corrected(changed to valid identifiers) 
            before actual loading
            </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.XMLReadComponentTray(System.Xml.XmlNode)">
            <summary>
            Read Component Tray
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.WriteXMLComponentTray(System.Xml.XmlDocument)">
            <summary>
            Write Component Tray to XML; arnet2 format
            Component Trays are NOT written out if saved at run time.  Only when saved from design time.
            </summary>
            <param name="layoutDoc"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.DataMember">
            <summary>
            Gets or sets the specified list in an DataSource to which the report will bind.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.DataSourceChanged">
            <summary>
            Raised when the properties of the report's data source are modified.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.DataSource">
            <summary>
            Gets or sets the data source from which the report will retrieve data.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport.m_bReportOutputReady">
            <summary>
            ReportOutputReady is set to true when report has completed processing
            This is used by the restart and run method so run ignores running report if report output is already done.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.Run(System.Boolean)">
            <summary>
            Run
            
            Calls 3 processing functions to complete processing of a report:
            	ProcessInit
            	*ProcessPage
            	ProcessClose
            </summary>
            <param name="bRunAsync"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.ResetControlInfo">
            <summary>
            Happens only at desing time.
            and report.Cancel 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.Restart">
            <summary>
            Resets the report data source and clears the pages collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.Stop">
            <summary>
            Stops processing the report.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.Cancel">
            <summary>
            Cancels the report's processing. Any rendered pages will be cleared from the report's Document object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.PageNumber">
            <summary>
            Returns the number of the current page being processed when a report is running.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReport.ReportState">
            <summary>
            Represents the report processing state
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport.ReportState.Idle">
            <summary>
            Idle
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport.ReportState.InProgress">
            <summary>
            In progress
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.SectionReport.ReportState.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.LayoutAction">
            <summary>
            Sets or returns a custom action following the rendering of the current record.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.State">
            <summary>
            Returns the current state of the report. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.CurrentPage">
            <summary>
            Returns the current page instance.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.InitializationStarted">
            <summary>
            Used to inform section that initialization is started
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.InitializationCompleted">
            <summary>
            Used to inform sections that initialization is finished
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReport.InitializationCompletedEventArgs">
            <summary>
            Data for <see cref="E:GrapeCity.ActiveReports.SectionReport.InitializationCompleted"/> event
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReport.FetchEventArgs">
            <summary>
            Represents event args for FetchData event
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.FetchEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionReport.FetchEventArgs"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.FetchEventArgs.EOF">
            <summary>
            Gets or sets a value indicating whether processed record is last.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReport.FetchEventHandler">
            <summary>
            Delegate FetchEventHandler
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.FetchData">
            <summary>
            Raised every time a new record is processed.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.ReportStart">
            <summary>
            Raised before a report starts processing.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.ReportEnd">
            <summary>
            Raised after the report finishes processing all pages.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.PageStart">
            <summary>
            Raised before the report renders any output to a new page. 
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.PageEnd">
            <summary>
            Raised after the report finishes rendering each page. 
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.DataInitialize">
            <summary>
            Raised after the ReportStart event to allow the addition of custom fields to the report's fields collection.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.PrintProgress">
            <summary>
            Raised for each page while printing the report document. 
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.PrintAborted">
            <summary>
            Raised when the user cancels a print job.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.Changed">
            <summary>
            Raised when any of the report properties change.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.NoData">
            <summary>
            Raised if the report's data source does not return any records and there is no data to be processed.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.IsDirty">
            <summary>
            Sets or returns the current state of the report layout.  This property is set to True when any changes are made to the report layout since it was last saved.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ShowParameterUI">
            <summary>
            Sets or returns whether or not the query parameters dialog box will appear when the report is run.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionReport.ParameterUIClosedHandler">
            <summary>
            Delegate ParameterUIClosedHandler
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionReport.ParameterUIClosed">
            <summary>
            Raised after the user closes the query parameters dialog. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.RaiseParameterUIClosed(System.Boolean)">
            <summary>
            Raises the ParameterUIClosed event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Parameters">
            <summary>
            Returns a reference to the data source query parameters collection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.RunDateTime">
            <summary>
            Used to update the ReportInfo Control with report execution time. is set in report.Run()
            Replaces "RunDateTime" in format of ReportInfo Control with this value
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.AddAssembly(System.Reflection.Assembly)">
            <summary>
            Adds the specified external assembly.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.ExternalAssemblyList">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.ValidateControlName(System.String)">
            <summary>
            Validate control and section names
            </summary>
            <param name="baseName"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.ValidateNameSyntax(System.String)">
            <summary>
            Validates the syntax of the names
            </summary>
            <param name="baseName"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Initializing">
            <summary>
            Indicates that report is in initializing state.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.MasterReport">
            <summary>
            Gets or sets a value determining whether the report is a master report. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Components">
            <summary>
            Gets the datasource components other than dd's datasources saved to rpx
            Gets populated only at run time loadlayout.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.IsDuplicateName(System.ComponentModel.IComponent)">
            <summary>
            Checks for presence of Duplicate names control.
            </summary>
            <param name="component"></param>
            <returns>true if there is a component with same name exists already in the Section's Control Collection</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionReport.GetLicense(System.Object)">
            <summary>
            Gets license.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionReport.Culture">
            <summary>
            Provides information on a specific culture, including its names and the writing system.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionEventArgs">
            <summary>
            SectionEventArgs
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionEventArgs.#ctor(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionEventArgs"/> class.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionEventArgs.#ctor(GrapeCity.ActiveReports.SectionReportModel.Section,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SectionEventArgs"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionEventArgs.Section">
            <summary>
            Gets the section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionEventArgs.SectionIndex">
            <summary>
            Gets the index of the section.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionEventHandler">
            <summary>
            For Internal Use Only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.IStyleSheetProvider">
            <summary>
            Interface IStyleSheetProvider
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.IStyleSheetProvider.StyleSheet">
            <summary>
            Gets the style sheet.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Design.LanguageConverter">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.LayoutAction">
            <summary>
            Specifies the action to be performed after a section is formatted.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.LayoutAction.PrintSection">
            <summary>
            The section will be printed.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.LayoutAction.MoveLayout">
            <summary>
            The layout position will move to the next printing location on the page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.LayoutAction.NextRecord">
            <summary>
            The data navigation will advance to the next record.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportProcessingError">
            <summary>
            Describe possible error codes for future detail processing of the error.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InternalError">
            <summary>
            Just internal error.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidReport">
            <summary>
            Something wrong in report structure.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidTheme">
            <summary>
            Invalid theme was specified.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InfinitePages">
            <summary>
            Internal loop in pages processing observed.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NoMasterReport">
            <summary>
            No master report was found.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.SubreportNotFound">
            <summary>
            No subreport was found.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.CyclicParameter">
            <summary>
            Cyclic dependencies in parameters: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides name of the parameter.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ParameterValueIsNotValid">
            <summary>
            Parameters validation error: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides name of the parameter.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NullValueAssignedToNonNullableParameter">
            <summary>
            Parameters validation error: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides name of the parameter.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.BlankValueAssignedToNonBlankParameter">
            <summary>
            Parameters validation error: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides name of the parameter.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidDataTypeForParameter">
            <summary>
            Parameters validation error: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides name of the parameter.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ParameterNotValidated">
            <summary>
            Parameters validation error: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides name of the parameter.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NoPermission">
            <summary>
            DB assess error.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidSharedDataSource">
            <summary>
            No assess to shared data source: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides name of the data source.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidData">
            <summary>
            Invalid data or cannot access to date with current configuration.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidQueryParameters">
            <summary>
            Cannot parse/process data set query parameters.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.JsonSchemaNotAvailableOrInvalid">
            <summary>
            Json schema specified in connection string of JSON data provider is not available or invalid.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.UnexpectedCharacterWhileParsingPath">
            <summary>
            Unexpected character while parsing path.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidKeyInConnectionString">
            <summary>
            Invalid key in connection string
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ScriptCompilationFailed">
            <summary>
            Describe script compilation problem: <see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"/> provides errors array.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ScriptError">
            <summary>
            Describe script execution problem.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.DataSetNotSpecified">
            <summary>
            Not specified shared data set.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NoDataSets">
            <summary>
            Not specified shared data set.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.DataSetNotFound">
            <summary>
            Specified data set is not found.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.UnableToCreateConnection">
            <summary>
            Can not connect to data source.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportProcessingError.CommandTextNotBeenSet">
            <summary>
            Command is empty.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportException">
            <summary>
            This exception or one of its descendent classes is thrown when an error occurs while running the report.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportException" /> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportException.ErrorCode">
            <summary>
            Error code for future detail processing.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportException.ErrorData">
            <summary>
            Error data, depends on error code.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportDataException">
            <summary>
            This exception is thrown when an error occurs while connecting to the report's data source.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportDataException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportDataException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportDataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportDataException" /> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportDataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportDataException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportDataException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportScriptException">
            <summary>
            The ReportScriptException is thrown when an error occurs in the report scripting code or any of the report's calculated DataField expressions.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportScriptException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportScriptException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportScriptException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportScriptException" /> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportScriptException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportScriptException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportScriptException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.SectionCollection">
            <summary>
            Summary description for SectionCollection.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.SectionCollection.Changed">
            <summary>
            Occurs when the members of the SectionCollection have changed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Add(GrapeCity.ActiveReports.Document.Section.SectionType,System.String)">
            <summary>
            Adds the specified SectionType to the SectionCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Add(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Adds the specified section to the SectionCollection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Insert(System.Int32,GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Inserts a section at the specified index in the collection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Insert(System.Int32,GrapeCity.ActiveReports.Document.Section.SectionType,System.String)">
            <summary>
            Creates a new Section of the specified type and name and inserts it into the  SectionCollection at the specified index.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionCollection.Item(System.Int32)">
            <summary>
            Gets the Section object at the specified indexed location in the SectionCollection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SectionCollection.Item(System.String)">
            <summary>
            Gets the Section object with the specified name in the SectionCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertReportHF(System.String,System.String)">
            <summary>
            For existing reports i need to do this
            </summary>
            <param name="reportHeaderName"></param>
            <param name="reportFooterName"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertReportHF">
            <summary>
            InsertReportHF support design time and runtime inserting
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertPageHF">
            <summary>
            Inserts a page header and a page matching footer into the SectionCollection with the default names PageHeader1, PageFooter1; where 1 is an order number. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertPageHF(System.String,System.String)">
            <summary>
            InsertPageHF support design time and runtime inserting
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertGroupHF">
            <summary>
            Inserts a group header and a matching group footer into the SectionCollection with the default names GroupHeader1,GroupFooter1; where 1 is an order number.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertGroupHF(System.String,System.String)">
            <summary>
            Inserts a group header and a matching group footer into the SectionCollection with the names, specified in the corresponding grHeaderName and grFooterName parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.IndexOf(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Determines the specific index of the specified section in the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.CopyTo(GrapeCity.ActiveReports.SectionReportModel.Section[],System.Int32)">
            <summary>
            Copies the Sections collection from the specified report to a Sections collection at the specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.GetNewSectionName(GrapeCity.ActiveReports.Document.Section.SectionType)">
            <summary>
            Used from designer to get the section names generated to be passed into
            the LayoutChanging event. the section list is not modified
            </summary>
            <param name="sectionType"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Remove(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Removes the specified Section from the SectionCollection if it exists.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Remove(System.Int32)">
            <summary>
            Removes the Section at the specified index from the SectionCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Clear">
            <summary>
            Remove all sections from the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.Contains(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Determines whether the specified section object exists in the collection.  
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            </summary>
            <param name="sectionsNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.WriteXML(System.Xml.XmlDocument)">
            <summary>
            WriteXML
            </summary>
            <param name="layoutDoc"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.DestroyComponents">
            <summary>
            Called in LoadXmlLayout
            All the existing components needs to be destroyed
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SectionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.CollectionBase" /> instance.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.SerializationManager">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SerializationManager"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.#ctor(System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.SerializationManager"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.Serialize(GrapeCity.ActiveReports.SectionReport)">
            <summary>
            Serialize
            </summary>
            <param name="report"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.Deserialize(GrapeCity.ActiveReports.SectionReport,System.Xml.XmlDocument)">
            <summary>
            Deserialize
            </summary>
            <param name="report"></param>
            <param name="xmlDocument"></param>
            <returns>Returns an array of the errors generated loading the file</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.Deserialize(GrapeCity.ActiveReports.SectionReport,System.IO.Stream)">
            <summary>
            Deserialize
            </summary>
            <param name="report"></param>
            <param name="stream"></param>
            <returns>Returns an array of the errors generated loading the file</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.Deserialize(GrapeCity.ActiveReports.SectionReport,System.String)">
            <summary>
            Deserialize
            </summary>
            <param name="report"></param>
            <param name="fileName"></param>
            <returns>Returns an array of the errors generated loading the file</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.GetConversionSupported(System.ComponentModel.TypeConverter,System.Type)">
            <summary>
            GetConversionSupported
            Simple helper method that returns true if the given type converter supports
            two-way conversion of the given type.
            </summary>
            <param name="converter"></param>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadEvent(System.Xml.XmlNode,System.Object,System.Collections.ArrayList)">
            <summary>
            ReadEvent reads an event node and binds to the event
            </summary>
            <param name="childNode"></param>
            <param name="instance"></param>
            <param name="errors"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadInstanceDescriptor(System.Xml.XmlNode,System.Collections.ArrayList)">
            <summary>
            ReadInstanceDescriptor
            </summary>
            <param name="node"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadReferenceDescriptor(System.Xml.XmlNode,System.Collections.ArrayList)">
            <summary>
            ReadReferenceDescriptor
            </summary>
            <param name="node"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadObject(System.ComponentModel.IComponent,System.Xml.XmlNode,System.Collections.ArrayList)">
            <summary>
            ReadObject reads the Object tags
            </summary>
            <param name="node"></param>
            <param name="errors"></param>
            <returns>Instance of the newly created object or null if an error</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadObject(System.Xml.XmlNode,System.Collections.ArrayList)">
            <summary>
            ReadObject reads the Object tags
            </summary>
            <param name="node"></param>
            <param name="errors"></param>
            <returns>Instance of the newly created object or null if an error</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadObject(GrapeCity.ActiveReports.SectionReport,System.Xml.XmlNode,System.Collections.ArrayList)">
            <summary>
            ReadObject reads the Object tags
            </summary>
            <param name="node"></param>
            <param name="errors"></param>
            <returns>Instance of the newly created object or null if an error</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadProperty(System.Xml.XmlNode,System.Object,System.Collections.ArrayList)">
            <summary>
            ReadProperty parses the given XML node and sets the resulting property value.
            </summary>
            <param name="node"></param>
            <param name="instance"></param>
            <param name="errors"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadValue(System.Xml.XmlNode,System.ComponentModel.TypeConverter,System.ComponentModel.PropertyDescriptor,System.Type,System.Collections.ArrayList,System.Object@)">
            <summary>
            ReadValue reads an object value.
            </summary>
            <param name="node"></param>
            <param name="converter"></param>
            <param name="errors"></param>
            <param name="value"></param>
            <returns>return true if read succeeds</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadArray(System.Xml.XmlNode,System.Type,System.Collections.ArrayList)">
            <summary>
            ReadArray
            </summary>
            <param name="child"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteBinary(System.Xml.XmlDocument,System.Byte[])">
            <summary>
            WriteBinary
            </summary>
            <c>
            <Binary>
            	64 bit encoded string representing binary data
            </Binary>
            </c>
            <param name="document">Xml Document</param>
            <param name="value">byte array</param>
            <returns>XmlNode</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteCollection(System.Xml.XmlDocument,System.Collections.IList,System.Collections.IDictionary,System.Xml.XmlNode)">
            <summary>
            WriteCollection writes the given IList contents into the given parent node
            </summary>
            <param name="document"></param>
            <param name="list"></param>
            <param name="nametable"></param>
            <param name="parent"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteInstanceDescriptor(System.Xml.XmlDocument,System.Collections.IDictionary,System.ComponentModel.Design.Serialization.InstanceDescriptor,System.Object)">
            <summary>
            WriteInstanceDescriptor writes a given instance descriptor into the XML document.
            </summary>
            <param name="document"></param>
            <param name="nametable"></param>
            <param name="desc"></param>
            <param name="value"></param>
            <returns>XmlNode</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteObject(System.Xml.XmlDocument,System.Collections.IDictionary,System.Object)">
            <summary>
            This method writes the given object out to the XML document.  
            </summary>
            <param name="document">The XML document.</param>
            <param name="nametable">The dictionary of components names.</param>
            <param name="value">The object to be written to the document.</param>
            <remarks>Objects have the following XML:
            
            <c>
            <Object type="object type" name="object name" children="child property name">
            
            </Object>
            </c>
            
            Here, Object is the element that defines a custom object.  Type is required
            and specifies the data type of the object.  Name is optional.  If present, it names
            this object, adding it to the container if the object is an IComponent.
            Finally, the children attribute is optional.  If present, this object can have
            nested objects, and those objects will be added to the given property name.  The
            property must be a collection property that returns an object that implements IList.
            
            Inside the object tag there can be zero or more of the following subtags:
            
            InstanceDescriptor -- describes how to create an instance of the object.
            Property -- a property set on the object
            Event -- an event binding
            Binary -- binary data
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteProperties(System.Xml.XmlDocument,System.Collections.IDictionary,System.ComponentModel.PropertyDescriptorCollection,System.Object,System.Xml.XmlNode,System.String)">
            <summary>
            This method writes zero or more property elements into the given parent node.  
            </summary>
            <param name="document"></param>
            <param name="nameTable"></param>
            <param name="properties"></param>
            <param name="value"></param>
            <param name="parent"></param>
            <param name="elementName"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteReference(System.Xml.XmlDocument,System.ComponentModel.IComponent)">
            <summary>
            Writes a reference to the given component.  Emits the following XML:
            <c>
            <Reference name="component name"></Reference>
            </c>
            </summary>
            <param name="document"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteValue(System.Xml.XmlDocument,System.Collections.IDictionary,System.Object,System.Xml.XmlNode)">
            <summary>
            This method writes the given object into the given parent node.  It returns
            true if it was successful, or false if it was unable to convert the object
            to XML.
            </summary>
            <param name="document"></param>
            <param name="nametable"></param>
            <param name="value"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.GetName(System.Object)">
            <summary>
            Called at runtime loading/saving of report.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteComponentTray(System.Xml.XmlDocument,System.ComponentModel.IComponent)">
            <summary>
            WriteComponentTray
            </summary>
            <param name="document"></param>
            <param name="component"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadComponentTray(GrapeCity.ActiveReports.SectionReport,System.Xml.XmlNode)">
            <summary>
            Read Component Tray
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.SerializationManager.NameTable">
            <summary>
            Getter/Setter for read/Write component Tray
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.TypeResolutionService">
            <summary>
            The ITypeResolutionService is used to load types at design time. It keeps an internal
            set of assemblies that have been referenced thus far and can search them for types given
            unqualified names.
            
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.TypeResolutionService.RefencedAssemblies">
            We use this property to help us generate code and compile.
        </member>
        <member name="M:GrapeCity.ActiveReports.TypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#ReferenceAssembly(System.Reflection.AssemblyName)">
            Add an assembly to our internal set.
        </member>
        <member name="M:GrapeCity.ActiveReports.TypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
            Search our internal set of assemblies for one with this AssemblyName.
            If it cannot be located and throwOnError is true, throw an exception.
        </member>
        <member name="M:GrapeCity.ActiveReports.TypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetAssembly(System.Reflection.AssemblyName)">
            Search our internal set of assemblies for one with this AssemblyName.
        </member>
        <member name="M:GrapeCity.ActiveReports.TypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetType(System.String,System.Boolean,System.Boolean)">
            Find a type based on a name that may or may not be fully qualified.
            If the type cannot be found and throwOnError is true, throw an Exception.
            Searching should ignore case based on ignoreCase's value.
        </member>
        <member name="M:GrapeCity.ActiveReports.TypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetType(System.String,System.Boolean)">
            Find a type based on a name that may or may not be fully qualified.
            If the type cannot be found and throwOnError is true, throw an Exception.
            Do not ignore case while searching.
        </member>
        <member name="M:GrapeCity.ActiveReports.TypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetType(System.String)">
            Find a type based on a name that may or may not be fully qualified.
            Do not ignore case while searching.
        </member>
        <member name="M:GrapeCity.ActiveReports.TypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetPathOfAssembly(System.Reflection.AssemblyName)">
            Return the path to the file which the given assembly was loaded.
            If that assembly has not been loaded, this returns null.
        </member>
        <member name="T:GrapeCity.ActiveReports.XmlNames">
            <summary>
            Summary description for XmlNames.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.JpCalendar.CultureInfoExtension.InitJpCalendar">
            <summary>
            Initialize static jp calendar.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.JpCalendar.CultureInfoExtension.FormatJpDate(System.Globalization.CultureInfo,System.DateTime,System.String)">
            <summary>
            Formats date as general for not JP and with era settings and custom format "ggYY" support for JP.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.EraConfigurationException">
            <summary>
            Era configuration errors. For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.EraConfigurationException.ErrorCodes">
            <summary>
            Error codes.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.EraConfigurationException.ErrorCode">
            <summary>
            Error code of current exception.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.EraConfigurationException.#ctor">
            <summary>
            For internal use only. Deserialization only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.EraConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Enables environments where serialization is required to initialize instances of the <see cref="T:GrapeCity.ActiveReports.Rendering.EraConfigurationException" /> class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.Components.CustomRenderReportItemFactory">
            <summary>
            Handles creation of rendering report items.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Components.CustomRenderReportItemFactory.ConstructCustomReportItem(GrapeCity.ActiveReports.Rendering.Components.Interfaces.IReportRenderingContext,GrapeCity.ActiveReports.PageReportModel.CustomReportItem,GrapeCity.ActiveReports.Rendering.IDataScopeInternal,GrapeCity.ActiveReports.Extensibility.Rendering.IPropertyBag,GrapeCity.ActiveReports.Rendering.Components.IReportItemProgram{GrapeCity.ActiveReports.PageReportModel.ReportItem})">
            <summary>
            Returns a an instance of a type derived from <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem"/> that represents the specified <paramref name="customReportItemDefinition"/>.
            </summary>
            <param name="reportRenderingContext">The <see cref="!:ReportRenderingContext"/> for the current report.</param>
            <param name="customReportItemDefinition">The custom report items RDL definition</param>
            <param name="dataContext">The current data scope containing the custom reportitem</param>
            <param name="reportItemProperties"></param>
            <param name="program"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.Components.CustomRenderReportItemFactory.ResolveConfigurationManager(System.IServiceProvider,System.Boolean)">
            <summary>
            Resolves <see cref="T:GrapeCity.ActiveReports.Configuration.IConfigurationManager"/> service.
            </summary>
            <param name="context">The current context to resolve service whithin.</param>
            <param name="fallbackDefaultConfigProvider"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.ExpressionServicesProvider">
            <summary>
            Provides expression services for report rendering.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.ExpressionServicesProvider.GetExpressionServices(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport)">
            <summary>
            Provides expression services for specified report.
            </summary>
            <param name="report">The report to provide services for.</param>
            <returns>The expression services to be used in report rendering.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.GdiRenderersFactory">
            <summary>
            Factory with GDI+ based image renderer.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.ICustomReportItemFactory">
            <summary>
            Represents service to create custom report items. For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.ICustomReportItemFactory.CreateCustomReportItem(System.IServiceProvider,System.String,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IDataScope,GrapeCity.ActiveReports.Extensibility.Rendering.IPropertyBag)">
            <summary>
            Tries to creates new custom report item based on the specified settings.
            </summary>
            <param name="serviceProvider">The service provider to resolve reports core configuration.</param>
            <param name="type">The type of CRI to create.</param>
            <param name="dataContext">The data context to initialize CRI with.</param>
            <param name="properties">The properties to initialize CRI with.</param>
            <returns>New CRI or null if fails.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider">
            <summary>
            Stream provider for rendering report extension outputs to a file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.#ctor(System.IO.DirectoryInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider"/> class.
            </summary>
            <param name="baseOutputDirectory">a <see cref="T:System.IO.DirectoryInfo"/> to save the file streams to.</param>
            <param name="outputFileNamePrefix">a string value indicating the name to place at the beginning of the files created.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the base output directory argument is null.</exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.OverwriteOutputFile">
            <summary>
            Specifies that the FileStreamProvider should overwrite a file if exists; otherwise, a new file with unique name should be created.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.CreatePrimaryStream(System.String,System.String)">
            <summary>
            Creates the primary working stream.
            </summary>
            <param name="mimeType">a string value indicating the mime type for the primary stream.</param>
            <param name="fileExtension">a string value indicating the file extension to use for the primary stream.</param>
            <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> for the primary stream.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the primary stream has already been created.</exception>
            /// <exception cref="T:System.InvalidOperationException">Thrown if the file extension is not specified.</exception>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
            <summary>
            Creates a secondary stream in the stream provider.
            </summary>
            <param name="relativeName">a string value in the name for the secondary stream. The relative name is appended to the file name prefix</param>
            <param name="mimeType">a string value indicating the mime type for the primary stream.</param>
            <param name="fileExtension">a string value indicating the file extension to use for the primary stream.</param>
            <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> for the secondary stream.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the file extension is not specified.</exception>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.GetPrimaryStream">
            <summary>
            Gets the primary stream.
            </summary>
            <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> for the primary stream.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.GetSecondaryStreams">
            <summary>
            Gets the array of secondary streams
            </summary>
            <returns>an array of <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> containing the secondary streams.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.GetUniqueFile(System.String,System.String,System.String)">
            <summary>
            Ensures a unquie fille name
            </summary>
            <param name="mimeType">a string value indicating the mime type for the primary stream.</param>
            <param name="fileExtension">a string value indicating the file extension to use for the primary stream.</param>
            <param name="prefix">a string value indicating the value to place before the file extension</param>
            <returns>a <see cref="T:System.IO.FileInfo"/> for the stream to use.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.CleanUpOnError">
            <summary>
            Performs the required clean up in case of a rendering error.
            </summary>        
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.BaseOutputDirectory">
            <summary>
            Gets the base output directory for the stream provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.OutputFileNamePrefix">
            <summary>
            Gets the file name prefix for the stream provider.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.FileStreamInfo">
            <summary>
            A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> specific for the file stream provider.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.FileStreamInfo.#ctor(System.IO.FileInfo,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.FileStreamInfo"/> class.
            </summary>
            <param name="fileInfo">a <see cref="T:System.IO.FileInfo"/> for the to <see cref="T:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.FileStreamInfo"/> use.</param>
            <param name="mimeType">a string value representing the mime type for the stream.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.FileStreamInfo.OpenStream">
            <summary>
            Opens the file stream.
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider">
            <summary>
            Represents a stream provider that draws the output of an extension to a memory stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.StreamBaseName">
            <summary>
            Defines stream uri prefix.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.CreatePrimaryStream(System.String,System.String)">
            <summary>
            Creates the primary stream.
            </summary>
            <param name="mimeType">The MIME type.</param>
            <param name="suggestedFileExtension">The suggested file extension.</param>
            <returns>StreamInfo.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
            <summary>
            Creates the secondary stream.
            </summary>
            <param name="relativeName">The relative name.</param>
            <param name="mimeType">The MIME type.</param>
            <param name="suggestedFileExtension">The suggested file extension.</param>
            <returns>StreamInfo.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.GetPrimaryStream">
            <summary>
            Gets the primary stream.
            </summary>
            <returns>StreamInfo.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.GetSecondaryStreams">
            <summary>
            Gets the secondary streams.
            </summary>
            <returns>StreamInfo[].</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.GetStreamUri(System.String)">
            <summary>
            Generates unique stream URI which is used to address linked resource
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.Header">
            <summary>
            Class to store name/value(s) pair type headers.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.Header.#ctor(System.String,System.String)">
            <summary>
            Creates an instance with specified header name and its value.
            </summary>
            <param name="name">Header name</param>
            <param name="value">Header value</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.Header.Name">
            <summary>
            Returns the header name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.Header.Value">
            <summary>
            Returns the header value.
            </summary>
            <remarks>
            Incase, there are more than one values,
            the first value is returned.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.Header.ToString">
            <summary>
            Returns string representation of the header.
            </summary>
            <remarks>
            Returns the name in the form of:
            <code>
            Name: Value_1\r\n
            </code>
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList">
            <summary>
            Class to encapsulate a list of headers.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.#ctor">
            <summary>
            Creates an empty list.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.#ctor(GrapeCity.ActiveReports.Rendering.IO.Mht.Header)">
            <summary>
            Creates a list with a header.
            </summary>
            <param name="header">The one header in the initial
            list.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.#ctor(GrapeCity.ActiveReports.Rendering.IO.Mht.Header[])">
            <summary>
            Creates a list with a given set of headers.
            </summary>
            <param name="headers">Initial set of headers
            to be inserted in the list.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.#ctor(GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList)">
            <summary>
            Creates a list with a given set of headers.
            </summary>
            <param name="headers">Initial set of headers
            to be inserted in the list.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Clear">
            <summary>
            Empties the list.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Count">
            <summary>
            Returns the number of headers in the list.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Item(System.Int32)">
            <summary>
            Gets / sets the header at specified index.
            </summary>
            <param name="index">The index (zero based),
            the value at which is to be sought.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Item(System.String)">
            <summary>
            Returns the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.Header"/> with the specified name.  
            </summary>
            <remarks>
            The name comparison is not case sensitive.
            If the specified headerName is not found on a get, then null is returned.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.GetEnumerator">
            <summary>
            Returns an enumerator for the list for iteration.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Add(GrapeCity.ActiveReports.Rendering.IO.Mht.Header)">
            <summary>
            Add a header to the list.
            </summary>
            <param name="header">Header to be added.</param>
            <returns>Total number of elements in the list
            after adding the header.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Add(GrapeCity.ActiveReports.Rendering.IO.Mht.Header[])">
            <summary>
            Add a set of headers to the list.
            </summary>
            <param name="headers">Headers to be added.</param>
            <returns>Total number of elements in the list
            after adding the headers.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.IndexOf(GrapeCity.ActiveReports.Rendering.IO.Mht.Header)">
            <summary>
            Returns the index of the header in the list.
            </summary>
            <param name="header">Header under consideration.</param>
            <returns>The index (zero based) of the header
            in the list. -1 if it does not exist.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.IndexOf(System.String,System.Boolean)">
            <summary>
            Search for a header-value with or without ignoring case.
            </summary>
            <remarks>
            The value is matched against as that returned by
            <b>Header::ToString()</b>
            </remarks>
            <param name="fullHeader">Value to look for.</param>
            <param name="ignoreCase">Whether or not to ignore case.</param>
            <returns>
            The index of the header if found, -1 if not found or
            if <c>fullHeader</c> is null or empty.
            </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Remove(GrapeCity.ActiveReports.Rendering.IO.Mht.Header)">
            <summary>
            Removes the header from the list, if found.
            </summary>
            <param name="header">Header to be removed.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.RemoveAt(System.Int32)">
            <summary>
            Removes the header at the given index.
            </summary>
            <param name="index">Index at which value is to
            be removed.</param>
            <remarks>
            If index &lt; 0 or if index &gt;= Count, no action
            is taken.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Exists(System.String,System.Boolean)">
            <summary>
            Checks for existence of a header.
            </summary>
            <remarks>
            The value is matched against as that returned by
            <b>Header::ToString()</b>
            </remarks>
            <param name="fullHeader">Value to look for.</param>
            <param name="ignoreCase">Whether or not to ignore case.</param>
            <returns>
            <c>true</c> if header is found, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Exists(GrapeCity.ActiveReports.Rendering.IO.Mht.Header)">
            <summary>
            Checks for existence of a header.
            </summary>
            <param name="header">Header to look for.</param>
            <returns>
            <c>true</c> if header is found, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.RemoveAll(System.String,System.Boolean)">
            <summary>
            Removes all matching headers.
            </summary>
            <param name="name">Header to look for.</param>
            <param name="ignoreCase">Whether or not to ignore case.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.Remove(System.String,System.Boolean)">
            <summary>
            Removes the first matching header.
            </summary>
            <param name="fullHeader">Header to look for.</param>
            <param name="ignoreCase">Whether or not to ignore case.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.ToString">
            <summary>
            Returns the string representation for the list.
            </summary>
            <returns>The string representation.</returns>
            <remarks>
            The value returned is a concatenation of the values
            returned by all the headers in the list. Specifially,
            the returned value is of the the form:
            <code>
            Name1: Value11\r\n
            Name1: Value12\r\n
            Name2: Value2\r\n
            </code>
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the System.Collections.ICollection to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection. The System.Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe).
            Returns false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.HeaderList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to this class collection.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider">
            <summary>
            This class severs as the stream provider when rendering to MHT. The class holds all the information for the different parts and writes it out to the stream provider
            used by the user.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider"/>
            </summary>
            <param name="outputFileNamePrefix">the prefix to use for the output file names.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.CreatePrimaryStream(System.String,System.String)">
            <summary>
            Creates the primary stream for the stream provider. This is the main working stream.
            </summary>
            <param name="mimeType">A string value indicating the mime type ('image/png', 'text/html', etc).</param>
            <param name="suggestedFileExtension">A string value with the suggested file extension to appended to the end of the file name.</param>
            <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> for the created primary stream.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
            <summary>
            Creates a secondary stream to add to the stream provider's secondary stream array.
            </summary>
            <param name="relativeName">A string value indicating the name to give the secondary stream. The outputFileNamePrefix will be added to the beginning of this name.</param>
            <param name="mimeType">A string value indicating the mime type ('image/png', 'text/html', etc).</param>
            <param name="suggestedFileExtension">A string value with the suggested file extension to appended to the end of the file name.</param>
            <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> for the created primary stream.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.Finish(GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.String,System.String)">
            <summary>
            Combines all the mime parts of the primary and secondary streams into the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"/> provided by the customer.
            </summary>
            <param name="streamProvider">The customers <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"/> to create the mht output file in.</param>
            <param name="mimeType">Mime type to set for the stream.</param>
            <param name="fileExtension">Suggested file extension to set for the stream.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.GenContentID(System.String)">
            <summary>
            Generates a globally unique ID string with the specified string appended to the end of the globally unique ID string.
            </summary>
            <param name="postFix"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.GetPrimaryStream">
            <summary>
            Gets the primary stream.
            </summary>
            <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> representing the primary stream.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.GetSecondaryStreams">
            <summary>
            Gets the array of secondary streams.
            </summary>
            <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> array containing all the secondary streams.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.MhtStreamInfo">
            <summary>
            A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"/> class specific for using with the MhtStreamProvider.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.MhtStreamInfo.#ctor(System.String,System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.MhtStreamInfo"/> class.
            </summary>
            <param name="cidName">The content ID for the mime part.</param>
            <param name="mimeType">The mime type.</param>
            <param name="uri">The uri to pass to the base class and identify the stream.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.MhtStreamInfo.OpenStream">
            <summary>
            Opens the stream.
            </summary>
            <returns>a <see cref="T:System.IO.Stream"/></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart">
            <summary>
            Creates Multipart/related MIME files simliar to saving a MHT file from IE.  
            Theoretically you could use this class to generate email messages too, but it is specifically targed at creation of MIME MHTML (RFC 2557) documents.
            As of now this class is creating a multipart/related content type.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.boundary">
            <summary>
            Private storage for the part boundary.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.parts">
            <summary>
            Private storage for the Parts property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.SubjectKey">
            <summary>
            Used internally to access the Subject header in the base <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Headers"/> collection.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.FromKey">
            <summary>
            Used internally to access the From header in the base <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Headers"/> collection.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.DateKey">
            <summary>
            Used internally to access the From header in the base <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Headers"/> collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the MimeMultipart class with the specified Subject header value and default values for the unspecified MIME headers (From, Date, MIME-Version, Content-Type, etc..).
            </summary>
            <param name="subject">The value that to be used for the Subject header of this message/document.</param>
            <param name="from">The value that to be used for the From header of this message/document.</param>
            <remarks>The Content-Type header is initialized to multipart/related with a boundary parameter (e.g. <c>Content-Type: multipart/related; boundary="----=_NextPart_000_0000_01C2EE1B.E2C7FC80"</c>).</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart"/> class with the specified Subject, From, and Date header values and default values for the reamaining required unspecified MIME headers (MIME-Version, Content-Type).
            </summary>
            <param name="subject">The value that to be used for the Subject header of this message/document.</param>
            <param name="from">The value that to be used for the From header of this message/document.</param>
            <param name="date">The value that to be used for the Date header of this message/document.</param>
            <remarks>The Content-Type header is initialized to multipart/related with a boundary parameter (e.g. <c>Content-Type: multipart/related; boundary="----=_NextPart_000_0000_01C2EE1B.E2C7FC80"</c>).</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.Date">
            <summary>
            Sets or returns the value of the Date header for this part.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.From">
            <summary>
            Sets or returns the value of the From header for this part.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.Parts">
            <summary>
            Returns a collection containing the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart"/> objects contained in this multipart message/document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.Subject">
            <summary>
            Sets or returns the value of the Subject header for this part.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.Boundary">
            <summary>
            Returns the a unique MIME boundary per instance used between parts in of the MIME document.
            Each instance of this class will have a unique boundary.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.CreateNewBoundary">
            <summary>
            Creates a new boundary that should be very random.
            </summary>
            <returns></returns>
            <remarks>
            <para>
            Excerpt from RFC2046:
            The Content-Type field for multipart entities requires one parameter, "boundary". The boundary delimiter line is then defined as a line consisting entirely of two hyphen characters ("-", decimal value 45) followed by the boundary parameter value from the Content-Type header field, optional linear whitespace, and a terminating CRLF.
            </para>
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.WriteTo(System.IO.Stream)">
            <summary>
            Writes the current multipart MIME document to the specified stream.
            </summary>
            <param name="targetStream">
            The <see cref="T:System.IO.Stream"/> to write the MIME compatible data to.
            </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MimeMultipart.WriteTo(System.IO.TextWriter)">
            <summary>
            Writes the current multipart MIME document to the specified TextWriter.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart">
            <summary>
            Contains the headers and content for a part of a mime document.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.ContentTypeKey">
            <summary>
            Used internally to access the Content-Type header in the <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Headers"/> collection.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.ContentTransferEncodingKey">
            <summary>
            Used internally to access the Content-Transfer-Encoding header in the <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Headers"/> collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.#ctor(System.String,System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the MimePart class.
            </summary>
            <param name="contentType">
            Initializes the <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.ContentType"/> property to the specified value.
            </param>
            <param name="transferEncoding">The MIME "Content-Transfer-Encoding" value. 
            The value specified in body will be encoded according to this value.
            See the <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.TransferEncoding"/> property for details on what values are supported.
            </param>
            <param name="body">An array of bytes containing the body of the part.</param>
            <param name="contentID">The ContentID header value.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.ContentType">
            <summary>
            Sets or returns the value of the Content-Type header for this part.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.TransferEncoding">
            <summary>
            Sets or returns the value of the Content-Transfer-Encoding header.
            </summary>
            <remarks>
            The following Transfer-Encoding values are supported at this time:
            <list type="">
            <item>base64</item>
            <item>quoted-printable</item>
            <item>7 Bit ASCII, (although no additional encoding will be done by this class for 7bit)</item>
            </list>
            Others may be specified, but no encoding will be done on the body if the encoding is not recognized.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.ContentID">
            <summary>
            Sets or returns the value of the Content-ID header.
            </summary>
            <remarks>
            This value can be used to link embeded <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart"/>s together. 
            For example if the first MimePart is HTML, an img tag's src attribute can be prefixed 
            with "cid:" and then the value of another <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart"/>'s 
            <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.ContentID"/> property to specify the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart"/> that contains 
            the image to be displayed.
            </remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Headers">
            <summary>
            Returns the collection of Headers for this part.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Body">
            <summary>
            Sets or returns the body of this part as an array of bytes.  
            </summary>
            <remarks>
            The body should not contain any headers, use the <see cref="P:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.Headers"/> property for access to the headers of this part.
            The body should not contain multipart boundaries, it is the job of the parent Multipart to put boundaries between each part.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MimePart.WriteTo(System.IO.TextWriter)">
            <summary>
            Writes this part's headers and content to the specified writer.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> to write this parts data to.  
            Typically, due to the MIME standard, this writer should be using ASCII 7 bit character encoding and CRLF (carrage return character + line feed character) for the NewLine property.
            </param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.QuotedPrintableEncoding">
            <summary>
            Implements the Quoted-Printable Content-Transfer-Encoding specified in RFC 2045 (6.7).
            </summary>
            <remarks>
            <para>
            (Excerpt from RFC 2045):
            The Quoted-Printable encoding is intended to represent data that largely consists of 
            octets that correspond to printable characters in the US-ASCII character set.  It encodes 
            the data in such a way that the resulting octets are unlikely to be modified by mail 
            transport. If the data being encoded are mostly US-ASCII text, the encoded form of the 
            data remains largely recognizable by humans.  A body which is entirely US-ASCII may also 
            be encoded in Quoted-Printable to ensure the integrity of the data should the message 
            pass through a character-translating, and/or line-wrapping gateway.
            </para>
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Rendering.IO.Mht.QuotedPrintableEncoding.UpperCaseHexDigit">
            <summary>
            Value is the hexidecimal digit coorisponding the integral value used as an index.  
            For example, use 15 as an index, and get F back.
            Used in the QuotedPrintable encoding function.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.QuotedPrintableEncoding.Encode(System.IO.TextWriter,System.Byte[])">
            <summary>
            Encodes the specified array of bytes according to the Quoted-Printable Content-Transfer-Encoding.
            </summary>
            <param name="writer">The writer to write output to.</param>
            <param name="sourceBytes">The array of bytes to encode.</param>
            <returns>The new array of bytes encoded according to the rules of Quoted-Printable.</returns>
            <remarks>
            Note if you have unicode characters that you want to encode, you need to run them through another character encoding scheme first such as UTF8 or another code page specific encoding to first get bytes out of them.
            Whoever reads the resultant bytes will obviously need to know the character encoding that is to be used to decode the data after the quoted printable decoding is done.
            For example, in HTML the body can be encoded according to a variety of character encodings, and the character encoding used is noted in the HTML header's Content-Type field using the charset parameter.
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider">
            <summary>
            Provides access to reports core rendering services. For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration">
            <summary>
             Get the configuration information from the config file for the Japanese eras (to initialize custom jp calendar).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.IsValid">
            <summary>
              Gets a value indicates whether the configuration is valid.
            </summary>
            <value>
              A <b>bool</b> value indicates the configuration is valid.
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.Names">
            <summary>
              Gets the names of Japanese eras
            </summary>
            <value>
              A <b>string</b> array indicates the name of eras.
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.Abbreviations">
            <summary>
              Gets the abberviated names of the Japanese eras.
            </summary>
            <value>
              A <b>string</b> array indicates the abbreviations of eras.
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.Symbols">
            <summary>
              Gets the symbol names of the Japanese eras.
            </summary>
            <value>
              A <b>string</b> array indicates the symbols of eras.
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.StartDates">
            <summary>
              Gets the start dates of the each Japanese eras.
            </summary>
            <value>
              A <b>string</b> array indicates the start dates of eras.
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.Shortcuts">
            <summary>
              Gets the shortcus of each Japanese eras.
            </summary>
            <value>
              A <b>string</b> array indicates the shortcuts of eras.
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.EraCount">
            <summary>
              Gets the era count.
            </summary>
            <value>
              A <b>int</b> value indicates era count.
            </value>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration.TryReadingCommonEraSettings(GrapeCity.ActiveReports.Rendering.EraConfigurationException@)">
            <summary>
              Try to read the settings form common custom era setting section.
            </summary>
            <returns>
              A <b>bool</b> value, <see langword="True"/> if the common era settings reading succeed; otherwise, <see langword="False"/>.
            </returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseEraConfigurationExtension.ConfigureJpCalendar(GrapeCity.ActiveReports.ReportsCore.Configuration.JapaneseErasConfiguration)">
            <summary>
            Creates <see cref="T:GrapeCity.ActiveReports.JpCalendar.JapaneseCalendarEx"/> using a given configuration.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Configuration.ConfigurationHelper">
            <summary>
            For internal use. Helper methods for app.config access.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Configuration.ConfigurationHelper.UsePdfExportFilterKey">
            <summary>
            UsePdfExportFilterKey const.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Configuration.ConfigurationHelper.GetConfigFlag(System.String)">
            <summary>
            Gets value by key from default config file.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration">
            <summary>
            Represents configuration settings for communication with map tile server.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration.AppID">
            <summary>
            Gets or sets bing application id.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration.MaxConnections">
            <summary>
            Gets or sets the number of maximum connections.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration.Timeout">
            <summary>
            Gets or sets the timeout in seconds.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.BlankValueAssignedToNonBlankParameter">
            <summary>
              Looks up a localized string similar to Blank value assigned to non-Blank parameter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.CommandTextIsEmpty">
            <summary>
              Looks up a localized string similar to Command text is empty..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.CreatedBy">
            <summary>
              Looks up a localized string similar to Created by GrapeCity, inc..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.CsvDataProviderCaption">
            <summary>
              Looks up a localized string similar to Csv Provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.CyclicParameter">
            <summary>
              Looks up a localized string similar to Cyclic report parameter references.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DataEngineErrorOccured">
            <summary>
              Looks up a localized string similar to An error in Gcef.Data.DataEngine occured..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DataProviderNotFound">
            <summary>
              Looks up a localized string similar to Specified data provider was not found: {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DataProviderNotSpecified">
            <summary>
              Looks up a localized string similar to Data provider not specified for the data set: {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DatasetDataProviderCaption">
            <summary>
              Looks up a localized string similar to Dataset Provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DataSetNotFoundFormatError">
            <summary>
              Looks up a localized string similar to A DataSet &apos;{0}&apos; referenced in the report could not be found..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DataSetNotSpecifiedError">
            <summary>
              Looks up a localized string similar to DataSet name needs to be specified in the Fixed Page Layout settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DefaultCredentialsPrompt">
            <summary>
              Looks up a localized string similar to Please enter your username and password..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.DuplicateStartDates">
            <summary>
              Looks up a localized string similar to Two eras, &apos;{0}&apos; and &apos;{1}&apos; have the same start date..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.EmptyShortcutKey">
            <summary>
              Looks up a localized string similar to The shortcut key should not be empty in &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.ErrBarcodeFit">
            <summary>
              Looks up a localized string similar to Barcode doesn&apos;t fit area too small.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.EvaluationNotice">
            <summary>
              Looks up a localized string similar to This document was created using an EVALUATION version of ActiveReports {0}. Only a licensed user may legally create reports for use in production. Please report infractions or address questions to ActiveReports.Sales@grapecity.com. Copyright © 2020 GrapeCity, inc. All rights reserved..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.EvaluationNoticePro">
            <summary>
              Looks up a localized string similar to This document was created using a STANDARD or an EVALUATION version of ActiveReports {0}. Only a PROFESSIONAL EDITION licensed user may legally create reports for use in production. Please report infractions or address questions to ActiveReports.Sales@grapecity.com. Copyright © 2020 GrapeCity, inc. All rights reserved..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.EvaluationPosition">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.HtmlBodyNodeNotFound">
            <summary>
              Looks up a localized string similar to Invalid HTML: &apos;body&apos; node was not found..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.InfinitePages">
            <summary>
              Looks up a localized string similar to Endless loop detected.&apos;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.InvalidColumnSpacingError">
            <summary>
              Looks up a localized string similar to When Page (width is set in report PageSize) is divided into columns, the width of the column must be greater than zero and the column spacing..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.InvalidDataTypeForParameter">
            <summary>
              Looks up a localized string similar to Invalid data type for parameter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.InvalidHTML">
            <summary>
              Looks up a localized string similar to Invalid HTML: {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.InvalidKeyInConnectionString">
            <summary>
              Looks up a localized string similar to Invalid key in connection string: {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.InvalidStartDateFormat">
            <summary>
              Looks up a localized string similar to The start date value within the value attribute has an incorrect format. It must be &apos;yyyy MM dd&apos;..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.JsonDataProviderCaption">
            <summary>
              Looks up a localized string similar to Json Provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.JsonDataSourceNotFound">
            <summary>
              Looks up a localized string similar to The json data source has not been found..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.MapLicenseBanner">
             <summary>
               Looks up a localized string similar to Map report item is only licensed with the Professional Edition of ActiveReports {0}. 
            Please contact ActiveReports.Sales@grapecity.com for upgrade information..
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.MissingNamespaceURI">
            <summary>
              Looks up a localized string similar to Missing NamespaceURI: Unable to load report definition. Please verify the report definition has the correct xmlns specified..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.NoDataSetsError">
            <summary>
              Looks up a localized string similar to No data sets.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.NullValueAssignedToNonNullableParameter">
            <summary>
              Looks up a localized string similar to null value assigned to non-Nullable parameter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.ObjectDataProviderCaption">
            <summary>
              Looks up a localized string similar to Object Provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.OdbcDataProviderCaption">
            <summary>
              Looks up a localized string similar to Microsoft Odbc Provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.OleDbDataProviderCaption">
            <summary>
              Looks up a localized string similar to Microsoft OleDb Provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.ParameterNotValidated">
            <summary>
              Looks up a localized string similar to Not validated..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.ParameterValueIsNotValid">
            <summary>
              Looks up a localized string similar to Parameter value is not a valid value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.RunMustBeCalledBefore">
            <summary>
              Looks up a localized string similar to &apos;Run&apos; must be called before..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.SharedDataSourceNotLoaded">
            <summary>
              Looks up a localized string similar to The shared data source: {0} cannot be loaded..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.SqlDataProviderCaption">
            <summary>
              Looks up a localized string similar to Microsoft Sql Client Provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.SubreportNotFoundError">
            <summary>
              Looks up a localized string similar to Unable to locate subreport.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.SubreportNotSpecifiedError">
            <summary>
              Looks up a localized string similar to Subreport name is not specified for subreport report item &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.SubreportTooSmall">
            <summary>
              Looks up a localized string similar to The size of the subreport &apos;{0}&apos; is too small to accommodate the content of the report &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.ThrowIfInvalidCollectionElementTypeFormat">
            <summary>
              Looks up a localized string similar to &quot;Element must be of type {0}.&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.TileProviderException_UnknownProvider">
            <summary>
              Looks up a localized string similar to Specified map tiles provider not registered: {0}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.TocLicenseBanner">
            <summary>
              Looks up a localized string similar to TableOfContents report item is only licensed with the Professional Edition of ActiveReports {0}. Please contact ActiveReports.Sales@grapecity.com for upgrade information..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.UnexpectedErrorOccuredFormat">
            <summary>
              Looks up a localized string similar to An unexpected error occurred. Additional information: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.UnrecognizedFileFormat">
            <summary>
              Looks up a localized string similar to Unrecognized file format. The specified file does not appear to be a properly formatted RDL file. The root element must be an RDL defined \&quot;Report\&quot; element.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CommonResources.XmlDataProviderCaption">
            <summary>
              Looks up a localized string similar to Xml Provider.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CoreResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CoreResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CoreResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CoreResources.BarCodeErrorInvalidData">
            <summary>
              Looks up a localized string similar to Invalid barcode data.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CoreResources.FplSubreportInvalidSize">
            <summary>
              Looks up a localized string similar to Subreport&apos;s fixed page report must have size at least with width {0} and height {1}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.AssemblyResources.CoreResources.SubreportErrorMessage">
            <summary>
              Looks up a localized string similar to An error occurred while attempting to execute the subreport..
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.CultureService">
            <summary>
            Specifies values that are specific to culture settings.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.CultureService.defaultRdlFormatInch">
            <summary>
            Default report defintion template
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.CultureService.defaultRdlFormatCm">
            <summary>
            Default report defintion template
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.CultureService.IsMetricSytem">
            <summary>
             Returns True is the user is currently working in metric measurement system. Returns False
             for US system. Takes into account the current "Measurement system" setting in the Regional Options
             CP applet.
             </summary>
             <returns>True if metric system is set, False for US system.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.DataBuilder.ReportDef">
            <summary>
            Makes a data tree definition from report object model.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.DataBuilder.ReportDef.Of(GrapeCity.ActiveReports.PageReport,GrapeCity.ActiveReports.Rendering.ReportStore)">
            <summary>
            Builds data-tree definition from given report.
            </summary>
            <param name="report"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.CustomDataProvidersFactory">
            <summary>
            For internal use only. Extends default data providers factory with OLEDB, and custom data providers, configured in .config file.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.DbTableType">
            <summary>
            Indicates the type of a table.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.DbTableType.Table">
            <summary>
            Specifies that table represents a proper data base table.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.DbTableType.View">
            <summary>
            Specifies that table represents a proper data base view.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.DbTableType.Unknown">
            <summary>
            Specifies that unit type is unknown.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ResolveDbTableType(System.String)">
            <summary>
            Resolves the table type.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.TableSchema">
            <summary>
            Defines a schema information for tables.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ColumnSchema">
            <summary>
            Defines a schema information for columns.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.DataTypeSchema">
            <summary>
            Defines a schema information for data types rowset.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.PrimaryKeySchema">
            <summary>
            Defines a schema information for foreign keys.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeySchema">
            <summary>
            Defines a schema information for foreign keys.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.TableData">
            <summary>
            Represents the schema data for the table.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ColumnData">
            <summary>
            Represents the schema data for the column.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.TypeData">
            <summary>
            Represents the schema data for the column type.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.PrimaryKeyData">
            <summary>
            Represents the schema data for the primary key.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData">
            <summary>
            Represents the schema data for the foreign key.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.Name">
            <summary>
            Gets the foreign key constraint name specified in database.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.SourceTableSchema">
            <summary>
            Gets the schema name of table the constraint belongs to.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.SourceTableName">
            <summary>
            Gets the table name of the constraint belongs to.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.TargetTableSchema">
            <summary>
            Gets the schema name of table the constraint is referenced to.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.TargetTableName">
            <summary>
            Gets the table name the constraint is referenced to.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.Relations">
            <summary>
            Gets foreign key relations.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.Relation">
            <summary>
            Defines foreign key relation between two columns.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.Relation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.Relation"/> class.
            </summary>
            <param name="source">The source column reference.</param>
            <param name="target">The target column reference.</param>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.Relation.Source">
            <summary>
            Gets source column reference.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Data.DataProviders.OleDbSchemaProvider.ForeignKeyData.Relation.Target">
            <summary>
            Gets target column reference.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.LocalizedMessageService">
            <summary>
            Retrieves specified property value from Resources
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.PageDocumentException">
            <summary>
            Helper class to create localized exceptions of <see cref="T:GrapeCity.ActiveReports.ReportException"/> type.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.PageDocumentException.UnexpectedError(System.Exception)">
            <summary>
            Localized "unexpected error" message.
            </summary>
            <param name="eUnexpected"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.PageDocumentException.DataBuilderException(GrapeCity.ActiveReports.Rendering.DataBuilderException)">
            <summary>
            Wraps <see cref="T:GrapeCity.ActiveReports.Rendering.DataBuilderException"/> to <see cref="T:GrapeCity.ActiveReports.ReportException"/>.
            </summary>
            <param name="e">Original exception</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.PageDocumentException.DataProcessingException(GrapeCity.ActiveReports.Rendering.DataProcessingException)">
            <summary>
            Wraps <see cref="T:GrapeCity.ActiveReports.Rendering.DataProcessingException"/> to <see cref="T:GrapeCity.ActiveReports.ReportException"/>.
            </summary>
            <param name="e">Original exception</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.PageDocumentException.JsonDataProviderException(GrapeCity.BI.Data.DataProviders.Json.JsonDataProviderException)">
            <summary>
            Wraps <see cref="T:GrapeCity.BI.Data.DataProviders.Json.JsonDataProviderException"/> to <see cref="T:GrapeCity.ActiveReports.ReportException"/>.
            </summary>
            <param name="e">Original exception</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.PageDocumentException.EraConfigurationException(GrapeCity.ActiveReports.Rendering.EraConfigurationException)">
            <summary>
            Wraps <see cref="!:Configuration.EraConfigurationException"/> to <see cref="T:GrapeCity.ActiveReports.ReportException"/>.
            </summary>
            <param name="e">Original exception</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.PageDocumentException.LayoutException(GrapeCity.ActiveReports.Rendering.Layout.LayoutException)">
            <summary>
            Wraps <see cref="T:GrapeCity.ActiveReports.Rendering.Layout.LayoutException"/> to <see cref="T:GrapeCity.ActiveReports.ReportException"/>.
            </summary>
            <param name="e">Original exception</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.PageDocumentException.ReportParameterException(GrapeCity.ActiveReports.Expressions.ExpressionObjectModel.ReportParameterException)">
            <summary>
            Wraps <see cref="T:GrapeCity.ActiveReports.Expressions.ExpressionObjectModel.ReportParameterException"/> to <see cref="T:GrapeCity.ActiveReports.ReportException"/>.
            </summary>
            <param name="e">Original exception</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Rendering.Components.Map.TileProviders.ConfigurableTileProvidersManager">
            <summary>
            Providers ability to create tile providers applying settings from config file.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.ReportDataSnapshotExtensions">
            <summary>
            Extensions for the <see cref="T:GrapeCity.ActiveReports.ReportDataSnapshot"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.ReportDataSnapshotExtensions.HasData(GrapeCity.ActiveReports.ReportDataSnapshot)">
            <summary>
            Returns <c>True</c> if the specified report data snapshod contains data.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.DataVisualizerInfoExtensions">
            <summary>
            Usefull extensions.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.DataVisualizerInfoExtensions.GetImage(GrapeCity.ActiveReports.Rendering.GraphicalRenderers.DataVisualizerInfo,System.Int32,System.Int32,System.Single,System.Single,System.Nullable{GrapeCity.ActiveReports.Rendering.GraphicalRenderers.BackgroundRepeatOption})">
            <summary>
            Gets as PNG image.
            </summary>
            <param name="buffer">Visualizer info.</param>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <param name="dpiX">Horizontal resolution.</param>
            <param name="dpiY">Vertical resolution.</param>
            <param name="repeatOption">Background rendering mode.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.ImageConverterService">
            <summary>
            Image converter service. For internal use only.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.ImageConverterService.Instance">
            <summary>
            One instance. For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.ObjectExtensions">
            <summary>
            For internal use. Provides some helper methods for any object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ObjectExtensions.ApplyDefaults``1(``0)">
            <summary>
            Sets the properties values of object to their default values (defined by DefaultValue attribute).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ObjectExtensions.SetValue``1(``0,System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Sets the property value using approprieate type converter.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner">
            <summary>
            Allows to create report combining existing reports by adding them as subreports
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.DefaultStep">
            <summary>
            Defines the default gap between two adjacent subreports. It's 1in by default.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.#ctor">
            <summary>
            Creates instance of ReportCombiner
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.SetMargin(GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length)">
            <summary>
            Sets the margins of the report.
            </summary>
            <param name="top">Top margin</param>
            <param name="right">Right Margin</param>
            <param name="bottom">Bottom Margin</param>
            <param name="left">Left Margin</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.SetMargin(GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length)">
            <summary>
            Sets the margins of the report.
            </summary>
            <param name="topAndBottom">Top and bottom margins</param>
            <param name="rightAndLeft">Right and left margins</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.SetMargin(GrapeCity.ActiveReports.PageReportModel.Length)">
            <summary>
            Sets the margins of the report to the specified value.
            </summary>
            <param name="all">Margin length</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.Clear">
            <summary>
            Clears all the items from current instance of report combiner.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.Insert(System.Int32,GrapeCity.ActiveReports.PageReport,GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions)">
            <summary>
            Insert a report to the specified position in reports list.
            </summary>
            <param name="index">The position of the report to be added.</param>
            <param name="report">The report to be added.</param>
            <param name="options">The options to report be added with.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.AddReport(GrapeCity.ActiveReports.PageReport,GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions)">
            <summary>
            Add the report with specified options in the reports list.
            </summary>
            <param name="report">The report to be added.</param>
            <param name="options">The options to report be added with.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.AddRange(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.PageReport},GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions)">
            <summary>
            Add a collection of reports with specified options in the reports list.
            </summary>
            <param name="reports">Reports to be added.</param>
            <param name="options">The options to be applied to each report.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.RemoveAt(System.Int32)">
            <summary>
            Remove the report from the specified position in the reports list.
            </summary>
            <param name="index">The index of the report to be removed.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.RemoveAll(GrapeCity.ActiveReports.PageReport)">
            <summary>
            Remove all the occurrences of the specified report.
            </summary>
            <param name="report">The report to be removed</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.BuildReport">
            <summary>
            Returns a new PageReport instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.CombinerResourceLocator">
            <summary>
            Resource locator used by report combiner. For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions">
            <summary>
            Additional options to control report location when using ReportCombiner
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions.PageBreakBefore">
            <summary>
            Adds a pagebreak before added report
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions.Gap">
            <summary>
            Adds extra space between previous and added report
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Latch">
            <summary>
            Latched execution 'pattern'.
            For simplicity, try use ExecuteIfOpen method.
            Only if it doesn't fit to your task, use more low level method 'Execute' 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Latch.IsClosed">
            <summary>
            Answers question 'Is something already executing?'.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Latch.Execute(System.Action)">
            <summary>
            Sets flag (IsClosed will return 'true'), executes action, resets flag (IsClosed will return 'false').
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Latch.ExecuteIfOpen(System.Action)">
            <summary>
            If latch is open (IlClosed is 'false'), closes it (IsClosed is 'true'), executes action, opens the latch.
            If latch is closed, does nothing.
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.Aggregator">
            <summary>
            Summary description for Aggregator
            
            This class handles summary functions, totals etc...
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.Aggregator.CTotalInfo.Clone">
            <summary>
            totalInfo clone
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout">
            <summary>
            Summary description for PageLayout.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Layout.PageLayout.m_bDidOutput">
            <summary>
            This is set to true if at least a single section was output (non PageH/F)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Layout.PageLayout.m_runningRepeatRefs">
            <summary>
            Running reference to groupheaders to repeat
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Layout.PageLayout.m_repeatRefs">
            <summary>
            CPiece reference to groupheaders on start of page
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Layout.PageLayout.m_repeatingItems">
            <summary>
            Cache of repeating formatted sections (to be reused during reflow) 
            </summary>		
        </member>
        <member name="F:GrapeCity.ActiveReports.Layout.PageLayout.EMPTY_SPACE_THRESHOLD">
            <summary>
            1 inch empty space on page is ok, more won't look good so disable moving to next area and cut anyway.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Layout.PageLayout.g_relayoutCount">
            <summary>
            To measure how effective layout algorithm is.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.#ctor(GrapeCity.ActiveReports.Layout.ProcessReport)">
            <summary>
            takes the owner as ProcessReport
            </summary>
            <param name="Owner"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Layout.PageLayout.DrawingLog">
            <summary>
            getter for LayoutDrawingLog 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SetBaseWidth(System.Single)">
            <summary>
            SetBaseWidth
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SetPageFooterReserve(System.Single)">
            <summary>
            SetPageFooterReserve
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.LockProgressiveOutput(System.Boolean)">
            <summary>
            
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SetDidOutput(System.Boolean)">
            <summary>
            
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ResetIncrementalLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ClearLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ResetCommit">
            <summary>
            
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout.RelayoutData">
            <summary>
            RelayoutData
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.CommitLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ContainDetailSections">
            <summary>
            check is there Detail Page in the layout list
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.LayoutListIsEmpty">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.GetListCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.GetItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.AddPiece(GrapeCity.ActiveReports.Layout.PageLayout.CPiece)">
            <summary>
            
            </summary>
            <param name="piece"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.OutputLayout">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.GetDestinationRect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.GetDetailCountForTotals">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SetSurfaceNoLayout(GrapeCity.ActiveReports.Document.Section.Page,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SetSurface(GrapeCity.ActiveReports.Document.Section.Page,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.MarkNotReady(System.UInt32)">
            <summary>
            
            </summary>
            <param name="execID2OfProcess"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.IsEmpty">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.IsPageFull">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.DidWeOutputAnything">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.InitSectionBackup">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.CopyRefsToRunningRefs">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.CopyRunningRefsToRefs">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ClearCommitList">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.BackupSection(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            BackupSection will backup the current instance data into both the section.backupdata area and
            if this section is in the current layoutlist it will set the CPiece section data to current instance data
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.RestoreFromBackup">
            <summary>
            
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout.CSectionData">
            <summary>
            
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout.CPiece">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.CPiece.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.CPiece.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout.RepPiece">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.RepPiece.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.RepPiece.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout.RegionData">
            <summary>
            
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout.SubRepRenderRec">
            <summary>
            
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.PageLayout.SubRepQueryRec">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.IsDirty">
            ReLayout Logic
            
            1- NewPage Before or BeforeAfter 
            	stops processing(reports a layout complete) if its not the first section in the layout.
            	special case: NewPage is ignored if section is repeating
            
            2- NewPage After or BeforeAfter 
            	stops processing
            	
            3- UnderlayNext 
            	doesn't move layout position
            	special conditions:
            	a) If the section following Underlaynext has NewPage/NewColumn set, this property is ignored
            
            4- KeepTogether 
            	will prevent the section from splitting into 2 parts if that section doesn't start on a new page.
            	special conditions:
            	a) Optional improvement: If the section is bigger than pageheight, it won't fit on next page either so KeepTogether is ignored in that case
            	b) If we run out of space when columndirection is down_across , move to next column
            	c) If we run out of space when columndirection is across_down, we're done, page is full
            
            5- Splitting of sections
            		if a section doesn't fit in the available space and rule4 was already applied, split the section into parts.
            			Precedence:
            				a) First try to split on a page break
            				b) split between controls
            				c) smartly cut a control in half
            				
            6- Visible
            	invisible sections are filtered out (in AddSection member)
            	special conditions:
            		a) if previous section has underlaynext (we do use it)
            		b) if groupheader.visible=FALSE and grpkeeptogether is specified it will disregard grpkeeptogether as if section didn't exist
            		
            7- ColumnDirection, ColumnCount
            	a) if a section is split into multiple parts on the same page, it is assigned a part#
            	b) ReLayout will destroy parts and regenerate them
            	c) GroupHeader/Detail/Footer will be spaced at printwidth/columncount when output
            	d) If a section is rendered that has columnlayout=FALSE it should skip to end of column occupied area
            		1- If column direction is down_across use the highest column height in area
            		2- If column direction is across_down, use the highest section in line
            8- ColumnLayout , ColumnCount
            a) A detail section or a groupheader/footer with columnlayout=TRUE starts a column section
            ///	9- NewColumn Before (applies to Detail/GroupHeader/Footer when columnCount>1)
            a) DownAcross : If we are not at the beginning of a column, increment curCol if full pageisfull
            b) AcrossDown : If we are not at first column, move to next line and set curCol=0
            10- NewColumn After (applies to Detail/GroupHeader/Footer when columnCount>1)
            a) DownAcross
            b) AcrossDown
            11- GroupKeepTogether All (applies to groupheader section)
            GroupKeepTogether will force layout to suspend output of sections until associated groupfooter is available
            exceptions: 
            a) If group is already on a new page dont grpkeeptogether
            b) If multiple groups have grpkeeptogether, outer groups in layout take precedence except for 11a
            Example1:
            Detail record5
            GroupHeader1 , keep=true
            GroupHeader2 , keep=false
            GroupHeader3 , keep=true    ' this one won't have an effect
            ...
            Example2:
            Detail record5
            GroupHeader2 , keep=false
            GroupHeader3 , keep=true    ' will be enforced
            ...
            
            *Implementation: 
            - When first groupheader with grpkeeptogether=true is encountered grpkeepAllCount is set to 1
            - If grpkeepAllCount>0 , every header increments the count , every footer decrements the count
            - Count can't go below 0 since there might be a gh/gf mismatch on this page
            
            12- GroupKeepTogether First Detail
            a) If an outer or inner group specifies grpkeeptogether all, "ALL" will take precendence
            b) When a detail record is found and grpKeepAllCount reaches 0, all sections before are committed for output
            *Implementation
            - FirstDetail increments the grpKeepAllCount and also sets the bGrpFirstDetail flag
            
            13- Repeat (applies to groupheader sections)
            If a section is marked to be repeated it is buffered for the following pages that might need it
            a) If next page starts with the same groupheaders ignore buffer
            b) If next page starts with associated groupfooters , ignore buffer
            Example:
            Repeated GroupHeader2 in buffer *** don't render this one , will look ugly
            GroupFooter2
            GroupFooter1
            
            
            14- LayoutAction
            a) ddLANextRecord , if this is set to false after detail section output, the record position is not changed
            b) ddLAMoveLayout
            Changed to layout due to section are ignored if this is set to false
            exceptions:
            - NewPage/NewColumn before is still honored  (after is not)
            - GrpKeepTogether is still honored  
            - KeepTogether is still honored, section that has MoveLayout=FALSE will still start at new page if it doesn't fit and
            can't be cut
            c) ddLAPrintSection
            CPageLayout filters sections that have printsection=FALSE when draw is called 
            ** subreports of these sections will be executed (visible=false on the other hand will not execute subreports)
            
            
            15- heuristic: If a section is about to be split and won't even fit on next page and amount of space that will be left empty is greater than 4000 twips, do a smartcut instead of cutting before very long controls.
            
            16- If GroupKeepTogether=first detail and multicolumn report and groupheader is set to repeat, we don't want the groupheader to be rendered
            		as last item on a column so internally ColumnKeepTogether flag for that section will be applied
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ResetRunningNewColumnValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ReLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.CalculateGroupHeaderHeight(System.Single,System.Drawing.RectangleF)">
            <summary>
            If groupheader crosses more than one page, we should calculate the bottom of groupheader
            at last page.  Whenever bottom of GH is larger than height of subreport, minus the height
            of subreport until we get the actual bottom of GH.
            </summary>
            <param name="position">The bottom position of groupheader.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ProcessColumnGrpKeepTogether(System.Int32)">
            <summary>
            
            </summary>
            <param name="maxIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ReLayoutItem(System.Int32)">
            <summary>
            ReLayoutItem
            </summary>
            <param name="index"></param>
            <returns>If full relayout needs to be triggered</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.MarkRepeatingPiecesUnused">
            <summary>
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ProcessPageRepeatGH">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ProcessColRepeatGH(System.Int32)">
            <summary>
            
            </summary>
            <param name="layoutIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.GetRepeatingPiece(GrapeCity.ActiveReports.Layout.ProcessReport,GrapeCity.ActiveReports.Layout.PageLayout.CPiece)">
            <summary>
            
            </summary>
            <param name="process"></param>
            <param name="pRef"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.AddSection(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            
            </summary>
            <param name="section"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.AddSection(GrapeCity.ActiveReports.SectionReportModel.Section,System.Int32)">
            <summary>
            
            </summary>
            <param name="section"></param>
            <param name="insPos"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.UpdateSectionNewColumnPageForRepeatToFill(GrapeCity.ActiveReports.Layout.PageLayout.CPiece)">
            <summary>
            Update the new page or new column of the section next to the repeated details.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.IsReportHeaderCompleted">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SpaceLeft">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SpaceUsed">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.SetDirty(System.Boolean)">
            <summary>
            
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.ExchangePerPiece(System.IO.Stream,System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pStream"></param>
            <param name="pItemArray"></param>
            <param name="pCommitArray"></param>
            <param name="save"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.Dispose">
            <summary>
            Get rid of cpiece/sectiondata etcs.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.PageLayout.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Layout.ProcessReport">
            <summary>
            Summary description for ProcessReport.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.ProcessReport.RestoreRects">
            <summary>
            Restores all Sections and Controls bounds from Backup
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.ProcessReport.BackupRects">
            <summary>
            Saves Section and Controls bounds to Backup
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.ProcessReport.RestoreRects(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Restores Section and Controls bounds from Backup
            </summary>
            <param name="section">if null then restores all</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.ProcessReport.ProcessFlexSize(System.Int32)">
            <summary>
            ProcessFlexSize
            
            formerly known as ProcessCanGrow in AR2, it grows and shrinks controls that support GetFlexSizeSupported and 
            updates control size/section height
            
            How it works:Think about tetris backwards, if we grow/shrink block from the top, the blocks under it might or might not shift up
            The blocks are spans of controls. A span of controls .bottom shifts up so we can use the max(height of controls in span)
            </summary>
            <param name="section"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.ProcessReport.CommitControlsLocation(GrapeCity.ActiveReports.SectionReportModel.Section,System.Collections.Generic.IList{GrapeCity.ActiveReports.SectionReportModel.ARControl},GrapeCity.ActiveReports.Layout.ProcessReport.ShiftInfo,System.Single@)">
            <summary>
            Commits commit shiftUp/shiftDown/size values
            </summary>
            <param name="section"></param>
            <param name="ysortedList"></param>
            <param name="shiftInfo"></param>
            <param name="maxBottom"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.ProcessReport.GetLineBottom(GrapeCity.ActiveReports.SectionReportModel.Line)">
            <summary>
            Gets bottom line boundary taking line weight into account
            </summary>
            <param name="lineControl"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Layout.ProcessReport.GetCurrentLocation(GrapeCity.ActiveReports.SectionReportModel.Section)">
            <summary>
            Get the current location where is willing to render the section.
            </summary>
            <param name="section">The current section to render.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.IDrawingFactory">
            <summary>
            Helper interface to render as image (primary - for HTML in RTB).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IDrawingFactory.CreateMetricsProvider">
            <summary>
            Creates GDI metrics provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.IDrawingFactory.CreateDrawingCanvas(System.Drawing.Graphics,System.Nullable{System.Drawing.GraphicsUnit})">
            <summary>
            Creates GDI drawing canvas.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.PrinterPageSettings">
            <summary>
            Gets settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PrinterPageSettings.IsLandscape">
            <summary>
            Access printer settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PrinterPageSettings.PaperWidth">
            <summary>
            Access printer settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PrinterPageSettings.PaperHeight">
            <summary>
            Access printer settings.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PrinterPageSettings.#ctor(System.Boolean,System.Single,System.Single)">
            <summary>
            Creates settings.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.IPrinterService">
            <summary>
            Optional interface to access printer settings.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IPrinterService.ApplyPrinterSettings(GrapeCity.ActiveReports.PageSettings)">
            <summary>
            Apply printer settings to current page settings.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.IImageComparisonService">
            <summary>
            Optional service to improve performance. Exists to improve next scenario performance (see example):
            specify same image (but different image instances) in every page events - for example - image from resources.
            </summary>
            <example>
            <code>
            private void Detail_Format(object sender, EventArgs e)
            {
                ...
                myPicture.Image = Properties.Resources.MyImage;
                ...
            }
            </code>
            </example>
        </member>
        <member name="M:GrapeCity.ActiveReports.IImageComparisonService.ImageEquals(System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Compares images if possible (as fast as possible). Returns false otherwise.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.IUiService">
            <summary>
            Optional UI interaction service to show UI dialogs.
            Brings a lot of problems in server-side cases, so should be used only for compatibility.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IUiService.PromptParameters(GrapeCity.ActiveReports.SectionReportModel.ParameterCollection)">
            <summary>
            Shows parameters prompt dialog.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.IWinFormsService">
            <summary>
            Optional service to execute WinForms-related function.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IWinFormsService.DoEvents">
            <summary>
            Performs UI events (SectionReport.Run method).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IWinFormsService.RenderOleObject(GrapeCity.ActiveReports.SectionReportModel.OleObject,System.Action)">
            <summary>
            Renders OLE object in special context (OLE object can be turned on in config file for code-based reports).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IWinFormsService.CreateControl(System.Type,System.Drawing.SizeF)">
            <summary>
            Creates WinForms control (code-based report with WinForms or ChartFX controls).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IWinFormsService.RenderControlOnImage(System.Object,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders WinForms control (code-based report with WinForms or ChartFX controls).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.IRichTextService">
            <summary>
            WinForms wrapper over RTF related function
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IRichTextService.HtmlToRtf(System.String,System.Single)">
            <summary>
            Converts HTML to RTF.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IRichTextService.MeasureRtf(System.String,System.Single)">
            <summary>
            Measure RTF height.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.IRichTextService.RenderBitmap(System.String,System.Single)">
            <summary>
            Renders as bitmap.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.IRichTextService.RenderMetafile(System.String,System.Single)">
            <summary>
            Renders as metafile.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.RTextDrawingFactory">
            <summary>
            RDF format is based on RText, so it is logically to use RText for all measurement.
            For internal use only.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.RTextDrawingFactory.Instance">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.RTextDrawingFactory.FontFactory">
            <summary>
            Factory of GDI fonts with cache.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.RTextDrawingFactory.FontFactory.GetFont(GrapeCity.ActiveReports.Drawing.FontInfo)">
            <summary>
            Gets the <see cref="T:System.Drawing.Font"/> object for a given FontInfo.
            </summary>
            <param name="fontInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.AssertionHelper">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.AssertionHelper.ExecuteWithMemberAccessAssert(System.Action{System.Boolean})">
            <summary>
            Executes code while asserting reflection permission
            </summary>
            <param name="permission"></param>
            <param name="action"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.AssertionHelper.ExecuteWithAssert(System.Security.CodeAccessPermission,System.Action{System.Boolean})">
            <summary>
            Executes code while asserting specific permission
            </summary>
            <param name="permission"></param>
            <param name="action"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary">
            <summary>
            Represents a dictionary of custom designers configured for components.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.#ctor">
            <summary>
            Initializes a new instance of CustomDesignerConfigurationDictionary class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Configuration.CustomDesignerConfig})">
            <summary> Initializes a new instance with a predefined custom designers configurations. </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetDesignerForCustomTypeName(System.String)">
            <summary>
            Returns the <see cref="T:System.Type" /> of the custom designer configured for the specified component type or null.
            </summary>
            <param name="customTypeName">The value of <see cref="T:System.Type" /> for which a configured designer is sought for.</param>
            <returns>The <see cref="T:System.Type" /> of the custom designer configured for the specified component, or null if a custom designer is not configured for the specified component.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetCustomTypeNameForDesigner(System.Type)">
            <summary>
            Gets the <see cref="T:System.Type" /> value associated with the specified designer.
            </summary>
            <param name="designerType">The <see cref="T:System.Type" /> for the designer the caller wants a custom report item type name for.</param>
            <returns>A value appropriate for the CustomReportItem RDL element's Type attribute value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetStyleDefaultsForDesigner(System.Type)">
            <summary>
            Gets the style defaults for designer.
            </summary>
            <param name="designerType">Type of the designer.</param>
            <returns>System.Collections.Generic.IDictionary&lt;System.String,GrapeCity.ActiveReports.Expressions.ExpressionInfo&gt;.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetToolboxItems">
            <summary> Returns toolbox items configuration </summary>
            <remarks>For internal use.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.CustomDesignerConfig">
            <summary>Configuration entry for a custom report item designer.</summary>
            <remarks>For internal use.</remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection">
            <summary>
            Represents the collection of custom data providers.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.#ctor">
            <summary>
            Initializes new instance of <see cref="T:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.ContentChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.ContentChanged"/> event.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.ContentChanged">
            <summary>
            Occurs when the content has changed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.OnContentChanged">
            <summary>
            Fire ContentChanged event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo" /> at the specified index.
            </summary>
            <param name="index">The index of the item to get or set.</param>
            <returns>The <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo" /> at the index.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Add(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
            <summary>
            Adds the <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object to the end of the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object to add.</param>
            <returns>The position into which the new <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object was inserted, or -1 to indicate that the item was not inserted into the collection.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Contains(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
            <summary>
            Determines if the <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object exists in the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object to locate in the collection.</param>
            <returns>True if the <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Insert(System.Int32,GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
            <summary>
            Inserts the <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object to the collection at the specified index.
            </summary>
            <param name="index">The position at which the new <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object will be added.</param>
            <param name="value">The <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object to add.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Remove(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
            <summary>
            Removes the <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object from the collection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object to remove.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.IndexOf(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
            <summary>
            Determines the index of the <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object in the collection.
            </summary>
            <param name="value"> The <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"/> object to locate in the collection.</param>
            <returns>The index of <paramref name="value"/> if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.CopyTo(GrapeCity.BI.Data.DataProviders.DataProviderInfo[],System.Int32)">
            <summary>
            Copies the elements of the System.Collections.ICollection to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">
            The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.
            The System.Array must have zero-based indexing.
            </param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider">
            <summary>
            Implements an <see cref="T:GrapeCity.ActiveReports.Configuration.IConfigurationProvider"/> that gets configuration information from
            a file in the executable directory.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider.#ctor">
            <summary>
            Creates a new instance of <see cref="T:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider.GetMapPath">
            <summary>
            Jumps through the reflection hoops to get System.Web.HttpContext.Current.Server.MapPath(null).
            </summary>
            <devdoc>Case 123996</devdoc>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider.Content">
            <summary>
            Returns the xml content of the configuration information.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.IConfigurationManager">
            <summary>
            Defines an interface to allow access to configuration information.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.RenderingExtensions">
            <summary>
            Returns the rendering extensions defined by the provider.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.ReportItems">
            <summary>
            Provides the mapping between CustomReportItem type names and their corresponding <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.DataProviders">
            <summary>
            Returns a collection of custom data providers.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.CustomItemDesigners">
            <summary>
            Returns a map for the custom report items with the custom designers.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.ToolboxItems">
            <summary>
            Returns the toolbox item configuration entries.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.Settings">
            <summary>
            Returns a collection of configuration settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.MapTileServerConfiguration">
            <summary>
            Returns a configuration for communication with map tile server.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.TileProviders">
            <summary>
            Returns map tile providers.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.IConfigurationProvider">
            <summary>
            Defines interface for providing raw configuration information.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationProvider.Content">
            <summary>
            Gets the xml representing the configuration.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.PropertyElement">
            <summary>
            Represents a property configuration option for the associated export extension.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.PropertyElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class with the specified property, value and value type.
            </summary>
            <param name="property">The property to assign value to.</param>
            <param name="value">The value for the property.</param>
            <param name="type">The type of the value to convert the string value to.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.PropertyElement.Property">
            <summary>
            Gets the property to assign value to.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.PropertyElement.Value">
            <summary>
            Gets the string value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.PropertyElement.Type">
            <summary>
            Gets the type of the value to convert the value to.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo">
            <summary>
            Class containing rendering extension information.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo._assemblyName">
            <summary>
            Fully qualified name of the assembly.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo._menuName">
            <summary>
            Export menu item name for this rendering extension name.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo._extensionTypeName">
            <summary>
             Rendering extension implementation class name.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo._settings">
            <summary>
            Settings for this rendering extension name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.MenuName">
            <summary>
            Export menu item name for this rendering extension name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.AssemblyName">
            <summary>
            Fully qualified name of the assembly.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.TypeName">
            <summary>
            Rendering extension implementation class name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.Settings">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Configuration.PropertyElement})">
            <summary>
            Allows initialization of <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo" />
            </summary>
            <param name="assemblyName">The assembly name.</param>
            <param name="extensionTypeName">The type of the extension.</param>
            <param name="menuName">The name of menu item.</param>
            <param name="settings">The collection of the properties.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.#ctor">
            <summary>
            Creates an instance of <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection" />.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.ContentChangedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.ContentChanged"/> event.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.ContentChanged">
            <summary>
            Occurs when the content has changed.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.OnContentChanged">
            <summary>
            Fire ContentChanged event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo" /> at the specified index.
            </summary>
            <param name="index">The index of the item to get or set.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Add(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
            <summary>
            Adds RenderingExtensionInfo to the end of the RenderingExtensionsCollection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"/> info to be added.</param>
            <returns>The index of added item.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Contains(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
            <summary>
            Determines whether the RenderingExtensionsCollection contains a specific RenderingExtensionInfo.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"/> to search.</param>
            <returns><c>True</c> if specified <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"/> is presented in the collection, <c>False</c> othervise.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Insert(System.Int32,GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
            <summary>
            Inserts a RenderingExtensionInfo into the RenderingExtensionsCollection at the specified index.
            </summary>
            <param name="index">The index to place the item.</param>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"/> to be inserted.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Remove(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
            <summary>
            Removes the first occurrence of a specific RenderingExtensionInfo from the RenderingExtensionsCollection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"/> to remvoe.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.IndexOf(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
            <summary>
            Searches for the specified RenderingExtensions and returns the zero-based index of the first occurrence within the entire RenderingExtensionsCollection.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"/> to looking for.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.CopyTo(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo[],System.Int32)">
            <summary>
            Copies the entire RenderingExtensionsCollection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">The start index.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.ReportingConfiguration">
            <summary>
            Specifies configuration information for the core. For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.#ctor(GrapeCity.ActiveReports.Configuration.IConfigurationProvider)">
            <Devdocs>Allow a null provider so we can create an "empty" configuration and still get access to default data providers</Devdocs>
            <summary>
             Creates a new instance of <see cref="T:GrapeCity.ActiveReports.Configuration.ReportingConfiguration" />.
             </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.ReportItems">
            <summary>
            Provides the mapping between <c>CustomReportItem</c> type names and their corresponding <see cref="T:System.Type" />.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.Settings">
            <summary> Returns a collection of configuration settings. </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.RenderingExtensions">
            <summary>
            Gets the rendering extension configuration entries.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.DataProviders">
            <summary>
            Gets the data providers configuration entries.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.ToolboxItems">
            <summary>
            Gets the toolbox item configuration entries.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.MapTileServerConfiguration">
            <summary>
            Gets a configuration for communication with map tile server.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.TileProviders">
            <summary>
            Gets the tile providers.
            </summary>
            <value>The tile providers.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.CustomItemDesigners">
            <summary>
            Gets a map for the custom report items with the custom designers
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationSectionHandler">
            <summary>
            A <see cref="T:System.Configuration.IConfigurationSectionHandler"/> for the ReportItems configuration section.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.AppSettingsConfigurationHandler">
            <summary>
            Configuration handler for the DesignerSettings section in the config file. Currently this is a default implmentation, that isn't really doing anything, to allow for additional customization in the future, if needed.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionsConfigurationHandler">
            <summary>
            Configuration handler for Extensions/Render section in the config file.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.DataExtensionsConfigurationHandler">
            <summary>
            Configuration handler for Extensions/Data section in the config file.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.MapTileServerConfigurationHandler">
            <summary>
            Configuration handler for MapTileServerConfiguration section in the config file.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.MapTileProvidersConfigurationHandler">
            <summary>
            Configuration handler for Extensions/MapTileProviders section in the config file.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary">
            <summary>
            A dictionary of <c>CustomReportItem</c> type names and their corresponding <see cref="T:System.Type" />.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary.#ctor(System.String[],System.Type[])">
            <summary>
            Initializes a new <see cref="T:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary"/> instance with the specified type names and types.
            </summary>
            <param name="typeNames">An array of type names.</param>
            <param name="reportItemTypes">
            An array of <see cref="T:System.Type"/> where each element corresponds to the type name at the same index in the typeNames argument.
            </param>
            <remarks>The two arrays must have the same number of elements.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary.AddEntry(System.String,System.Type)">
            <summary>
            Adds a new CustomReportItem type configuration entry.
            </summary>
            <param name="customReportItemTypeName">The value of the <see cref="P:GrapeCity.ActiveReports.PageReportModel.CustomReportItem.Type"/> property.</param>
            <param name="customReportItemType">The <see cref="T:System.Type"/> of the class that implements the runtime logic for the specified ReportItem.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary.GetReportItemForCustomTypeName(System.String)">
            <summary>
            Returns the <see cref="T:System.Type" /> of the custom report item configured for the specified component type or null.
            </summary>
            <remarks>
            The returned type should implement the interface <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem" />.
            </remarks>
            <param name="customReportItemTypeName">The value of <see cref="P:GrapeCity.ActiveReports.PageReportModel.CustomReportItem.Type" /> for which a configured designer is sought for.</param>
            <returns>The <see cref="T:System.Type" /> of the custom designer configured for the specified component, or null if a custom designer is not configured for the specified component.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary.GetCustomTypeNameForReportItem(System.Type)">
            <summary>
            Gets the <see cref="P:GrapeCity.ActiveReports.PageReportModel.CustomReportItem.Type" /> value associated with the specified ReportItem.
            </summary>
            <remarks>
            The specified ReportItem Type should implement the interface <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem" />.
            </remarks>
            <param name="reportItemType">The <see cref="T:System.Type" /> for the designer the caller wants a custom report item type name for.</param>
            <returns>A value appropriate for the CustomReportItem RDL element's Type attribute value.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig">
            <summary>
            Represents an entry for a toolbox configuration item.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig.ClearItems">
            <summary>
            Gets a value that indicates if all existing items should be cleared.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig.ReportItemDesignerType">
            <summary>
            Gets an assembly qualified type name of the report item designer type that this toolbox item represents (technically it represents the component associated with this designer).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig.BitmapResource">
            <summary>
            Gets an assembly qualified resource name of the bitmap that should be displayed for this toolbox item.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.DataManager.Data.DataProviders.DataExtensions">
            <summary>
            Provides various extension methods for data interfaces.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.DataManager.Data.DataProviders.DataExtensions.ReadAll(System.Data.IDataReader)">
            <summary>
            Reads all records in specified data reader.
            </summary>
            <param name="reader">The data reader to iterate records for.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DataManager.Data.DataProviders.DataExtensions.GetString(System.Data.IDataRecord,System.String)">
            <summary>
            Gets field value as string in specified record.
            </summary>
            <param name="record">The record to get value field in.</param>
            <param name="name">The field name to get value for.</param>
            <returns>The field value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DataManager.Data.DataProviders.DataExtensions.GetInt32(System.Data.IDataRecord,System.String)">
            <summary>
            Gets field value as integer in specified record.
            </summary>
            <param name="record">The record to get value field in.</param>
            <param name="name">The field name to get value for.</param>
            <returns>The field value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DataManager.Data.DataProviders.DataExtensions.GetBoolean(System.Data.IDataRecord,System.String)">
            <summary>
            Gets field value as boolean in specified record.
            </summary>
            <param name="record">The record to get value field in.</param>
            <param name="name">The field name to get value for.</param>
            <returns>The field value.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.DataManager.Data.DataProviders.DataExtensions.IsDBNull(System.Data.IDataRecord,System.String)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="record">The record to get value field in</param>
            <param name="name">The field name to get value for.</param>
            <returns>true if the specified field is set to null; otherwise, false.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.DataTable">
            <summary>
            Represents result set of query execution.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.DataTable.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.DataColumn},System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.DataRow})">
            <summary>
            Creates new instance of <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.DataTable"/>.
            </summary>
            <param name="columns">The table columns.</param>
            <param name="rows">The table rows.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.DataTable.Columns">
            <summary>
            Gets table columns.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.DataTable.Rows">
            <summary>
            Gets table rows.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.DataColumn">
            <summary>
            Data column.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Extensibility.Data.DataColumn.Name">
            <summary>
            Specifies column name.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Extensibility.Data.DataColumn.DataType">
            <summary>
            Specifies data type of the column.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.DataColumn.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.DataColumn"/>.
            </summary>
            <param name="name">The column name.</param>
            <param name="dataType">The column type.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.DataRow">
            <summary>
            Data row.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Extensibility.Data.DataRow.Values">
            <summary>
            The row data.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.DataRow.#ctor(System.Object[])">
            <summary>
            Creates new instance of <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.DataRow"/>.
            </summary>
            <param name="values">The row data.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter">
            <summary>
            Represents a parameter used with a <see cref="!:IDbCommand"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameterCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.IDataParameterCollection.Add(GrapeCity.ActiveReports.Extensibility.Data.IDataParameter)">
            <summary>
            Adds the specified <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter"/> object to the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.IDbSchemaProvider">
            <summary>
            Specifies the schema provider.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.IDbSchemaProvider.GetSchema(System.Data.Common.DbConnection)">
            <summary>
            Gets the schema of the specified db connection if it's of the same data provider.
            </summary>
            <param name="connection">A connection to get schema for.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column">
            <summary>
            Defines a column.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.#ctor(System.String,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column"/> class.
            </summary>
            <param name="name">The column name.</param>
            <param name="dataType">The column data type.</param>
            <param name="isPrimaryKey">Whether the column is included to primary key.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.Name">
            <summary>
            The column name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.DataType">
            <summary>
            The column data type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.IsPrimaryKey">
            <summary>
            Whether the column is included to primary key.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema">
            <summary>
            Defines the data schema of database.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.Empty">
            <summary>
            Represents the empty data schema.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table},System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema"/> class.
            </summary>
            <param name="tables">The tables collection.</param>
            <param name="foreighKeys">The foreigh keys collection.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.Tables">
            <summary>
            The tables collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.ForeignKeys">
            <summary>
            The foreight keys collection which has this table as source.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName">
            <summary>
            Defines the name of table.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName"/> class.
            </summary>
            <param name="name">The name of table.</param>
            <param name="schema">The schema name.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.Name">
            <summary>
            The name of table.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.Schema">
            <summary>
            The schema name.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey">
            <summary>
            Defines the foreigh key.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.#ctor(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column},System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey"/> class.
            </summary>
            <param name="source">The source table.</param>
            <param name="destination">The destination table.</param>
            <param name="sourceColumns">The columns that defines a source.</param>
            <param name="destinationColumns">The columnts that defines a destination.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.Source">
            <summary>
            The source table.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.Destination">
            <summary>
            The destination table.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.SourceColumns">
            <summary>
            The columns that defines a source.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.DestinationColumns">
            <summary>
            The columnts that defines a destination.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table">
            <summary>
            Defines a table.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.#ctor(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table"/> class.
            </summary>
            <param name="name">The name of the table.</param>
            <param name="tableType">The table type.</param>
            <param name="columns">The table colums collection.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Name">
            <summary>
            The name of table
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.TableType">
            <summary>
            The table type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Columns">
            <summary>
            The table colums collection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Equals(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table)">
            <summary>
            Returns a <see cref="T:System.Boolean" />. This is true if the specified Table is equal to the current Table; otherwise, false.
            <param name="anotherTable">The table for comparison.</param>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Equals(System.Object)">
            <summary>
            Returns a <see cref="T:System.Boolean" />. This is true if the specified Object is equal to the current Table; otherwise, false.
            <param name="obj">The object for comparison.</param>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.GetHashCode">
            <summary>
            Returns a <see cref="T:System.Int32" /> that represents a hash code for the current object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.op_Equality(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table)">
            <summary>
            Returns a <see cref="T:System.Boolean" />. This is true if the first Table is equal to the second Table; otherwise, false.
            <param name="firstTable">The first table for comparison.</param>
            <param name="secondTable">The second table for comparison.</param>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.op_Inequality(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table)">
            <summary>
            Returns a <see cref="T:System.Boolean" />. This is true if the first Table is not equal to the second Table; otherwise, false.
            <param name="firstTable">The first table for comparison.</param>
            <param name="secondTable">The second table for comparison.</param>
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType">
            <summary>
            Defines enumeration of table types.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType.View">
            <summary>
            View
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable">
            <summary>
            Interface for configurable components.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable.GetSupportedSettings">
            <summary>
            Returns the settings supported by a rendering extension.
            </summary>
            <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.ISettings" /> to provide access to the rendering extension settings.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable.GetSupportedSettings(System.Boolean)">
            <summary>
             Returns the settings supported by a rendering extension.
            </summary>
            <param name="fpl">Indicates that this is a fixed page layout</param>
            <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.ISettings" /> to provide access to the rendering extension settings.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo">
            <summary>
            Wraps info about streams. Used with <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider" /> to access streams.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.#ctor(System.Uri,System.String)">
            <summary>
            Initializes new instance of the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo" />
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.OpenStream">
            <summary>
            Returns instance to the underlying <see cref="T:System.IO.Stream" />
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.Uri">
            <summary>
            Returns <see cref="T:System.Uri" /> of the underlying stream
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.MimeType">
            <summary>
            Returns MimeType of the underlying stream
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider">
            <summary>
            Base class for stream provider for rendering report extension outputs to a file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.CreatePrimaryStream(System.String,System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo" /> of the primary stream.
            </summary>
            <param name="mimeType">mime type of the primary stream</param>
            <param name="suggestedFileExtension">suggested file extension</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo" /> of the primary stream.
            </summary>
            <param name="relativeName">relative name</param>
            <param name="mimeType">mime type of the primary stream</param>
            <param name="suggestedFileExtension">suggested file extension</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.GetPrimaryStream">
            <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo" /> providing access to the primary stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.GetSecondaryStreams">
            <summary>
            Returns an array of <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo" /> objects providing access to the secondary stream(s).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.CleanUpOnError">
            <summary>
            Performs the required clean up in case of a rendering error.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension">
            <summary>
            Interface for rendering extention objects.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)">
            <summary>
            Renders the report.
            </summary>
            <param name="report">The report to render.</param>
            <param name="streams">Stream for output.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Renders the report.
            </summary>
            <param name="report">The report to render.</param>
            <param name="streams">Stream for output.</param>
            <param name="settings">Settings used in the report.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.InternalConstants">
            <summary>
            Used for internal constant values in the code.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.InternalConstants.PublicKey">
            <summary>
            The public key for the reports assemblies.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.InternalConstants.PublicKeyToken">
            <summary>
            The public key token for our assembly.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.LocateCredentialsEventArgs">
            <summary>
            Provides data for <see cref="!:LocateCredentials" /> event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.DataSource">
            <summary>
            Gets the data source to locate credentials for.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.ReportPath">
            <summary>
            Gets the name of the report to locate credentials for.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.UserName">
            <summary>
            Gets ot sets the user name of the credentials to be located.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.Password">
            <summary>
            Gets ot sets the password of the credentials to be located.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.PromptText">
            <summary>
            Gets the text of prompt of the locate credentials request.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.LocateCredentialsEventArgs.#ctor(GrapeCity.ActiveReports.PageReportModel.DataSource,System.String,System.String)">
            <summary>
            Initializes new instance of <see cref="T:GrapeCity.ActiveReports.LocateCredentialsEventArgs" /> class.
            </summary>
            <param name="dataSource">The data source to locate credentials for.</param>
            <param name="reportPath">The name of the report to locate credentials for.</param>
            <param name="promptText">The text of prompt of the locate credentials request.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.LocateCredentialsEventHandler">
            <summary>
            Represents method that handles <see cref="!:LocateCredentials"/> event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.LocateDataSourceEventArgs">
            <summary>
            Provides data for the <see cref="E:GrapeCity.ActiveReports.Document.PageDocument.LocateDataSource"/> event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.Data">
            <summary>
            The data returned by the event handler.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.DataSet">
            <summary>
            Gets the report's <see cref="T:GrapeCity.ActiveReports.PageReportModel.IDataSet"/> object to locate data for.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.Report">
            <summary>
            Gets the <see cref="T:GrapeCity.ActiveReports.PageReportModel.Report"/> for which is trying to locate the data set.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.Parameters">
            <summary>
            Gets the Parameters collection specified for a given report instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.LocateDataSourceEventArgs.#ctor(GrapeCity.ActiveReports.PageReportModel.Report,GrapeCity.ActiveReports.PageReportModel.IDataSet,System.Collections.Generic.IReadOnlyList{GrapeCity.Enterprise.Data.DataEngine.DataProcessing.DataParameter})">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.ActiveReports.LocateDataSourceEventArgs"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.LocateDataSourceEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:GrapeCity.ActiveReports.Document.PageDocument.LocateDataSource"/> event.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The <see cref="T:GrapeCity.ActiveReports.LocateDataSourceEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.PageReport">
            <summary>
            Loads, modifies, or saves a report definition.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.InternalName">
            <summary>
            Gets or sets name of data definition associated with this report.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.ReportFile">
            <summary>
            Gets file from which report was loaded.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PageReport class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.#ctor">
            <summary>
            Initializes a new instance of the PageReport class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the PageReport class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the PageReport class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.SetLicense(System.ComponentModel.License)">
            <summary>
            Sets the license.
            </summary>
            <param name="license">The license to set.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.LicenseLevel">
            <summary>
            For internal use only!
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.GetLicense(System.Object)">
            <summary>
            Gets license.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.Initialize">
            <summary>
            Allows post-initialization of the  PageReport instance. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.Run">
            <summary>
            Processes the inner document of this report.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.MergeWithMaster">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.Load(System.IO.FileInfo)">
            <summary>
            Loads the report definition file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.Load(System.IO.TextReader)">
            <summary>
            Loads the report definition file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.Save(System.IO.FileInfo)">
            <summary>
            Saves this report definition file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.Save(System.Xml.XmlWriter)">
            <summary>
            Saves this report definition file.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.ToRdlString">
            <summary>
            Returns the report definition language (RDL) as a System.String in the report definition.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.GrapeCity#ActiveReports#IReportComponentFactory#CreateComponent(System.Type)">
            <summary>
            Creates a component of the specified type.
            </summary>
            <param name="componentType">The <see cref="T:System.Type"/> of component to be created.</param>
            <returns>The component.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.SetReportFolder(System.String)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.ReportName">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.ConfigurationProvider">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.ActiveReports.Configuration.IConfigurationProvider"/> associated with this ReportDefinition.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.Report">
            <summary>
            Returns the current report definition object.  
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.ResourceLocator">
            <summary>
            Gets the object responsible for resolving report resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PageReport.HasDelayedContent">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.DeepCopy(GrapeCity.ActiveReports.PageReport)">
            <summary>
            Performs deep copy of the specified <see cref="!:source"/> report.
            </summary>
            <param name="source">the <see cref="T:GrapeCity.ActiveReports.PageReport"/> to copy </param>
            <returns>deep clone of the specified <see cref="!:source"/> report</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.CreateFromMaster(System.Uri)">
            <summary>
            Overloaded. Creates blank report with all of the content placeholders from specified master report.    
            </summary>
            <param name="masterUri">The Uri to the master report</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.PageReport.CreateFromMaster(System.String,GrapeCity.ActiveReports.ResourceLocator)">
            <summary>
            Overloaded. Creates blank report with all of the content placeholders from specified master report.    
            </summary>
            <param name="masterName">The master report name.</param>
            <param name="resourceLocator">The resource locator.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.ReportDataProcessor">
            <summary>
            Retrieves datatree for given page report. todo: remove
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.ServiceUnavailableException">
            <summary>
            Raised when an internal service is unavailable.
            </summary>
            <remarks>In the event of this exception, please report the incident to the technical support department.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.ServiceUnavailableException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ServiceUnavailableException" /> class for the specified unavailable service.
            </summary>
            <param name="serviceType">The type of service that is not available.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.ServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.ServiceUnavailableException" /> class for the specified unavailable service.
            </summary>
            <param name="info">A SerializationInfo object holding the name, type, and value of the unavailable service.</param>
            <param name="context">Describes the source and destination of the unavailable service.  </param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Tools.StringExtensions">
            <summary>
            Extends <see cref="T:System.String"/> class with helper methods.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Tools.StringExtensions.LinesNumber(System.String)">
            <summary>
            Returns number of lines (strings splitted by \r\n sequence) in the defined text
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Tools.EmbeddedResourceManager">
            <summary>Allows to load resource strings from main assembly instead of satellite assembly.</summary>
            <remarks>For internal use.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Tools.EmbeddedResourceManager.InjectTo(System.Type)">
            <summary>
            Replaces default ResourceManager with the <see cref="T:GrapeCity.ActiveReports.Tools.EmbeddedResourceManager"/> in the specified class.
            </summary>
            <param name="resourceDesignerType">The resource's designer auto-generated class.</param>
            <remarks>For internal use.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Tools.EmbeddedResourceManager.SatelliteAssemblyExists(System.Globalization.CultureInfo)">
            <summary> Check if the satellite assembly exists and contains suitable resource. </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.AggergatorException1">
            <summary>
              Looks up a localized string similar to SummaryGroup &apos;{0}&apos; doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException1">
            <summary>
              Looks up a localized string similar to Out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException2">
            <summary>
              Looks up a localized string similar to MaxPages.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException3">
            <summary>
              Looks up a localized string similar to Can&apos;t load XML file. Invalid Report Layout Structure..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException4">
            <summary>
              Looks up a localized string similar to The sections collection is invalid. Please make sure that each Report/Page and Group Header has an associated Footer in the collection and that you have a detail section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException5">
            <summary>
              Looks up a localized string similar to Margins are too large.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException6">
            <summary>
              Looks up a localized string similar to Printer does not support {0} papersize. Please use PaperKind.Custom in your PageSettings or specify a papersize supported by the current printer.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException7">
            <summary>
              Looks up a localized string similar to &quot;Incorrect Script Language: [{0}].  Only &quot;C#&quot; and &quot;VB.NET&quot; are supported as script language values.&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException8">
            <summary>
              Looks up a localized string similar to Invalid query parameters. Expecting matching &apos;%&gt;&apos;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ARException9">
            <summary>
              Looks up a localized string similar to Syntax error query parameter. Expecting parameter name before &apos;|&apos;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.BarCode_RowCountValueException">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid value for &apos;{1}&apos;. &apos;{1}&apos; must be less than or equal to {2} and more than or equal to {3}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.BarcodeDisplayName">
            <summary>
              Looks up a localized string similar to Barcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.BarCodeErrorInvalidData">
            <summary>
              Looks up a localized string similar to Invalid barcode data.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.BarHeightOutOfRange">
            <summary>
              Looks up a localized string similar to Height of bar is out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.BarWidth">
            <summary>
              Looks up a localized string similar to BarWidth.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.BarWidthOutOfRange">
            <summary>
              Looks up a localized string similar to Width of a narrow bar is out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CalendarPropertyDescription">
            <summary>
              Looks up a localized string similar to Select the calendar to use for formatting dates.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Category_Chart">
            <summary>
              Looks up a localized string similar to Chart.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Category_Summary">
            <summary>
              Looks up a localized string similar to Summary.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ChartDisplayName">
            <summary>
              Looks up a localized string similar to Chart.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CheckBoxDisplayName">
            <summary>
              Looks up a localized string similar to CheckBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlBoundsException">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be more than or equal to {1} and less than or equal to {2} in (or equivalent in cm)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlException1">
            <summary>
              Looks up a localized string similar to Invalid Control Name: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlException2">
            <summary>
              Looks up a localized string similar to destinationType.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlMustHaveAName">
            <summary>
              Looks up a localized string similar to Control must have a name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlsException1">
            <summary>
              Looks up a localized string similar to Controls can&apos;t be added or removed after report starts running. Please modify your ControlCollection in the ReportStart event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlsException2">
            <summary>
              Looks up a localized string similar to Control name doesn&apos;t exist or invalid.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlsException3">
            <summary>
              Looks up a localized string similar to name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlsException4">
            <summary>
              Looks up a localized string similar to Control with Name : &quot;{0}&quot; already exists..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlsException5">
            <summary>
              Looks up a localized string similar to Control is null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ControlsException6">
            <summary>
              Looks up a localized string similar to &quot;Invalid Control Name: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CrossSectionBoxDisplayName">
            <summary>
              Looks up a localized string similar to CrossSectionBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CrossSectionControlRadiusException">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be more than or equal to {1} and less than or equal to {2}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CrossSectionControlsInsertException">
            <summary>
              Looks up a localized string similar to CrossSection Controls can be added only in Header or Footer sections..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CrossSectionLineDisplayName">
            <summary>
              Looks up a localized string similar to CrossSectionLine.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException_InvalidFontUnits">
            <summary>
              Looks up a localized string similar to Value of &apos;{0}&apos; is not supported for &apos;units&apos;..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException1">
            <summary>
              Looks up a localized string similar to Invalid property specified..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException10">
            <summary>
              Looks up a localized string similar to A className must be specified!.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException11">
            <summary>
              Looks up a localized string similar to className.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException12">
            <summary>
              Looks up a localized string similar to cssText must only be a declaration block, no selector or brackets (&apos;{&apos; or &apos;}&apos;) can be present..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException13">
            <summary>
              Looks up a localized string similar to cssText.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException14">
            <summary>
              Looks up a localized string similar to Font-size was not specified..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException15">
            <summary>
              Looks up a localized string similar to There is no value in this instance nor the parent..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException16">
            <summary>
              Looks up a localized string similar to Pushback count is negative..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException2">
            <summary>
              Looks up a localized string similar to Shorthand property values cannot be obtained..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException3">
            <summary>
              Looks up a localized string similar to Unexpected property value requested..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException4">
            <summary>
              Looks up a localized string similar to Tried to unread more than a single character..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException5">
            <summary>
              Looks up a localized string similar to Size was specified in EM height (relative to parent), not enough data to convert value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException6">
            <summary>
              Looks up a localized string similar to Font-size was specified in an unknown enumerated unit, not enough data to convert value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException7">
            <summary>
              Looks up a localized string similar to Font-size was specified in XHeight, not enough data to convert value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException8">
            <summary>
              Looks up a localized string similar to Size was specified in Percent, and there&apos;s no parent, not enough data to convert value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CSSException9">
            <summary>
              Looks up a localized string similar to Font-size was specified in an unknown unit, not enough data to convert value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CulturePropertyDescription">
            <summary>
              Looks up a localized string similar to Get/set CultureInfo used for value output formatting..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CustomControlDisplayName">
            <summary>
              Looks up a localized string similar to CustomControl.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.CUSTOMPAPER">
            <summary>
              Looks up a localized string similar to Custom paper.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataFieldExecutionError">
            <summary>
              Looks up a localized string similar to Script failed for expression [{0}]. Possibly conversion error or invalid data..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataLayerException1">
            <summary>
              Looks up a localized string similar to DataMember &apos;{0}&apos; not found in report &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataSourceNameSuffix">
            <summary>
              Looks up a localized string similar to {0} Data Source.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataSourcesException1">
            <summary>
              Looks up a localized string similar to FileURL not set or empty.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataSourcesException2">
            <summary>
              Looks up a localized string similar to Can&apos;t read XML data. DocumentElement not found.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataSourcesException3">
            <summary>
              Looks up a localized string similar to FileURL is empty.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataSourcesException4">
            <summary>
              Looks up a localized string similar to RecordsetPattern empty.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DataSourcesException5">
            <summary>
              Looks up a localized string similar to Invalid RecordsetPattern.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException1">
            <summary>
              Looks up a localized string similar to Expecting type name in is expression.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException10">
            <summary>
              Looks up a localized string similar to Type mismatch.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException11">
            <summary>
              Looks up a localized string similar to Invalid bitwise and operation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException12">
            <summary>
              Looks up a localized string similar to Can&apos;t compare types.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException13">
            <summary>
              Looks up a localized string similar to Type mismatch. Can&apos;t compare types.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException14">
            <summary>
              Looks up a localized string similar to Type mismatch. Cannot implicitely convert to boolean.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException2">
            <summary>
              Looks up a localized string similar to Type mismatch.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException3">
            <summary>
              Looks up a localized string similar to Unknown opcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException4">
            <summary>
              Looks up a localized string similar to Unknown script identifier {0}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException5">
            <summary>
              Looks up a localized string similar to Invalid member name &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException6">
            <summary>
              Looks up a localized string similar to Expecting array.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException7">
            <summary>
              Looks up a localized string similar to Type required in new expression.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException8">
            <summary>
              Looks up a localized string similar to Can&apos;t find suitable constructor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDEvalException9">
            <summary>
              Looks up a localized string similar to Eval stack too small for IfTrue opcode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDExpressionException1">
            <summary>
              Looks up a localized string similar to Unknown script identifier.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDExpressionException2">
            <summary>
              Looks up a localized string similar to sizeof is not supported in managed context.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDExpressionException3">
            <summary>
              Looks up a localized string similar to Invalid type name in typeof expression.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDExpressionException4">
            <summary>
              Looks up a localized string similar to not impl.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDFormatException1">
            <summary>
              Looks up a localized string similar to Argument_RankEQOne1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDFormatException2">
            <summary>
              Looks up a localized string similar to Argument_Range0to99_1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDFormatException3">
            <summary>
              Looks up a localized string similar to NumDigitsAfterDecimal.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDFormatException4">
            <summary>
              Looks up a localized string similar to InvalidCast_FromTo {0} Currency.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDFormatException5">
            <summary>
              Looks up a localized string similar to &quot;VbMakeException(5).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDLexerException1">
            <summary>
              Looks up a localized string similar to 64 bit hex not implemented.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DDSctipring_UnsupportedProvider_Exception">
            <summary>
              Looks up a localized string similar to Unsupported code provider found. Please, check you script settings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultCredentialsPrompt">
            <summary>
              Looks up a localized string similar to Please enter your username and password..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultGroupFooterName">
            <summary>
              Looks up a localized string similar to GroupFooter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultGroupHeaderFooterHeight">
            <summary>
              Looks up a localized string similar to 0.25.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultGroupHeaderName">
            <summary>
              Looks up a localized string similar to GroupHeader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultPageFooterName">
            <summary>
              Looks up a localized string similar to PageFooter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultPageHeaderFooterHeight">
            <summary>
              Looks up a localized string similar to 0.25.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultPageHeaderName">
            <summary>
              Looks up a localized string similar to PageHeader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultReportFooterName">
            <summary>
              Looks up a localized string similar to ReportFooter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultReportHeaderFooterHeight">
            <summary>
              Looks up a localized string similar to 0.25.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultReportHeaderName">
            <summary>
              Looks up a localized string similar to ReportHeader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultSectionHeight">
            <summary>
              Looks up a localized string similar to 2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultSectionReportDocumentName">
            <summary>
              Looks up a localized string similar to ActiveReports Document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultSectionReportPrintWidth">
            <summary>
              Looks up a localized string similar to 6.5.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DefaultSectionReportScriptLanguage">
            <summary>
              Looks up a localized string similar to C#.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_AddCode">
            <summary>
              Looks up a localized string similar to Adds additional valid script code to the report&apos;s scripting context. Using AddCode allows complete functions to be added to a report&apos;s script at run time. The added functions can be called from the report events in script..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_AddControlLicense">
            <summary>
              Looks up a localized string similar to Adds a license key to the report so licensed controls can be added to sections at run time by using the Controls.Add method..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_AddNamedItem">
            <summary>
              Looks up a localized string similar to Adds an object to the script&apos;s global namespace. This method allows scripts to become aware of custom classes contained within a project. Once an item has been added, the script can use the objectName string to reference the object and the functions contained within the class..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_AddScriptReference">
            <summary>
              Looks up a localized string similar to Adds a reference to the specified assembly to be loaded into the scripting run-time context..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_CalculatedFields">
            <summary>
              Looks up a localized string similar to TODO: write description.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Cancel">
            <summary>
              Looks up a localized string similar to Cancels the report&apos;s processing. Any rendered pages will be cleared from the report %Document:ActiveReports~GrapeCity.ActiveReports.SectionReport~Document%..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Changed">
            <summary>
              Looks up a localized string similar to Raised when any of the report properties change..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_CmToInch">
            <summary>
              Looks up a localized string similar to Converts value from centimeters to inches..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_CompatibilityMode">
            <summary>
              Looks up a localized string similar to Gets or sets rendering mode: legacy GDI/GDI+ (Windows-only) or cross-platform. The cross-platform mode is the only mode supported by ASP.NET Core environment..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_CurrentPage">
            <summary>
              Looks up a localized string similar to Returns the current page instance..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_DataInitialize">
            <summary>
              Looks up a localized string similar to Raised before the ReportStart event to allow adding custom fields to report fields collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_DataMember">
            <summary>
              Looks up a localized string similar to Gets or sets the specified list in a DataSource to which the report will bind..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source from which the report will retrieve data..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_DataSourceChanged">
            <summary>
              Looks up a localized string similar to Raised when the properties of the report&apos;s data source are modified..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Disposed">
            <summary>
              Looks up a localized string similar to Raised when the report instance is released from memory..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Document">
            <summary>
              Looks up a localized string similar to Returns a reference to the report output Document object..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_EnableScriptDebugging">
            <summary>
              Looks up a localized string similar to Enables debug information for script editor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ExpressionErrorMessage">
            <summary>
              Looks up a localized string similar to Stops the reporting engine from throwing exceptions and instead displays the provided string.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_FetchData">
            <summary>
              Looks up a localized string similar to Raised every time a new record is processed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Fields">
            <summary>
              Looks up a localized string similar to Returns the current data binding collection. This collection contains the available Field objects that the report controls and sections can be bound to..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_InchToCm">
            <summary>
              Looks up a localized string similar to Converts value from inches to centimeters..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_IsDirty">
            <summary>
              Looks up a localized string similar to Sets or returns the current state of the report layout. This property is set to true when any changes are made to the report layout since it was last saved..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_LayoutAction">
            <summary>
              Looks up a localized string similar to Sets or returns custom action following the rendering of the current record. Gives control over these steps..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_LayoutLoaded">
            <summary>
              Looks up a localized string similar to Raised after a report XML layout is loaded into the report instance..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_LayoutLoading">
            <summary>
              Looks up a localized string similar to Raised before a report XML layout starts loading into the report instance..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_LoadLayout">
            <summary>
              Looks up a localized string similar to Overloaded. Retrieves a report XML layout (RPX) from a file, stream or a resource..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_LoadStyleError">
            <summary>
              Looks up a localized string similar to Cannot load styles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_LoadStyles">
            <summary>
              Looks up a localized string similar to Load styles from a file, stream or a resource..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_MasterReport">
            <summary>
              Looks up a localized string similar to Sets report for use as a base report instance for other SectionReport instances..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_MaxPages">
            <summary>
              Looks up a localized string similar to Sets or returns the maximum number of pages that the report will create..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_NoData">
            <summary>
              Looks up a localized string similar to Raised if report&apos;s data source does not return any records and there is no data to be processed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_PageEnd">
            <summary>
              Looks up a localized string similar to Raised after the report finishes rendering each page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_PageNumber">
            <summary>
              Looks up a localized string similar to Returns the current page number being processed when report is running..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_PageSettings">
            <summary>
              Looks up a localized string similar to Returns a reference to the current report page settings..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_PageStart">
            <summary>
              Looks up a localized string similar to Raised before the report renders any output to a new page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ParameterUIClosed">
            <summary>
              Looks up a localized string similar to Raised after the user closes the query parameters dialog..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ParentReport">
            <summary>
              Looks up a localized string similar to Gets a reference to the parent report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_PrintAborted">
            <summary>
              Looks up a localized string similar to Raised when the user cancels a print job..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_PrintProgress">
            <summary>
              Looks up a localized string similar to Raised for each page while printing the report document..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_PrintWidth">
            <summary>
              Looks up a localized string similar to Sets or returns the report&apos;s printable width in inches..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ReportEnd">
            <summary>
              Looks up a localized string similar to Raised after the report finishes processing all pages..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ReportStart">
            <summary>
              Looks up a localized string similar to Raised before a report starts processing..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ResetScripts">
            <summary>
              Looks up a localized string similar to Clears the script of the items added by the AddNameItem method or code added by the AddCode method. This does not affect the pre-saved report layout (RPX) file and only clears code added using the above methods..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Restart">
            <summary>
              Looks up a localized string similar to Resets the report data source and restarts report processing..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Run">
            <summary>
              Looks up a localized string similar to Overloaded. Starts the report processing..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_SaveLayout">
            <summary>
              Looks up a localized string similar to Overloaded. Saves a report XML layout to a stream or file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_SaveStyles">
            <summary>
              Looks up a localized string similar to Save styles to a file, stream or a resource..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Script">
            <summary>
              Looks up a localized string similar to Sets or returns report events script code..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ScriptLanguage">
            <summary>
              Looks up a localized string similar to Sets or returns the scripting language ActiveReports will use to write and interpret the script properties..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_SectionAdded">
            <summary>
              Looks up a localized string similar to Occurs after the section has been added to the report. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_SectionRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the section has been removed from the report. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Sections">
            <summary>
              Looks up a localized string similar to Returns a reference to the report&apos;s sections collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_ShowParameterUI">
            <summary>
              Looks up a localized string similar to Sets or returns whether or not the query parameters dialog box will appear when the report is run..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_State">
            <summary>
              Looks up a localized string similar to Returns the current state of the report whether it is running, idle, completed or cancelled..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Stop">
            <summary>
              Looks up a localized string similar to Stops processing the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_StreamIsNull">
            <summary>
              Looks up a localized string similar to Can&apos;t save report style. Output file stream is null.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_StyleSheet">
            <summary>
              Looks up a localized string similar to Returns a collection of formatting styles used to format controls in the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_UserData">
            <summary>
              Looks up a localized string similar to Sets or returns a user-defined value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Version">
            <summary>
              Looks up a localized string similar to Gets current ActiveReports for .NET assembly version..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_Watermark">
            <summary>
              Looks up a localized string similar to Adds a specified image to the report&apos;s background. The watermark image can be positioned, sized, aligned and placed on specified pages by using the other watermark properties..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_WatermarkAlignment">
            <summary>
              Looks up a localized string similar to Sets or returns the watermark&apos;s general vertical and horizontal positions when it is added to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_WatermarkPrintOnPages">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating the specific pages to which the watermark should be added..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_WatermarkSizeMode">
            <summary>
              Looks up a localized string similar to Sets or returns how the watermark will be sized when the image is rendered on the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ActiveReport_WriteIsNull">
            <summary>
              Looks up a localized string similar to Can&apos;t save report style. Output writer is null.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl">
            <summary>
              Looks up a localized string similar to ARControl is the base class for ActiveReports controls.  You should not need to use this class in your application..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ARControl_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode">
            <summary>
              Looks up a localized string similar to Barcode controls is used to print barcode symbology in the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Alignment">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of text in the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_AutoSize">
            <summary>
              Looks up a localized string similar to Gets or sets whether the barcode automatically stretches to fit the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the barcode&apos;s background color or fill color..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_BarHeight">
            <summary>
              Looks up a localized string similar to Sets or returns the height of the barcode (in ruler units)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_BarWidth">
            <summary>
              Looks up a localized string similar to Sets or returns the width for the barcode&apos;s narrow bars (1 unit is 0.864 points)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_CaptionGrouping">
            <summary>
              Looks up a localized string similar to Gets or sets the caption&apos;s grouping..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_CaptionPosition">
            <summary>
              Looks up a localized string similar to Gets or sets the caption&apos;s vertical position relative to the barcode symbol..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_CheckSumEnabled">
            <summary>
              Looks up a localized string similar to Determines whether a checksum of the barcode will be computed and included in the barcode when applicable..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Direction">
            <summary>
              Looks up a localized string similar to Gets or sets the barcode&apos;s direction, horizontally or vertically..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Font">
            <summary>
              Looks up a localized string similar to Gets or returns the font object used to print the control text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_ForeColor">
            <summary>
              Looks up a localized string similar to Gets or returns the foreground (font) color of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_NWRatio">
            <summary>
              Looks up a localized string similar to Sets or returns the NW Ratio of barcode..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_QuietZoneBottom">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom quiet zone of the barcode..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_QuietZoneLeft">
            <summary>
              Looks up a localized string similar to Gets or sets the left quiet zone of the barcode..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_QuietZoneRight">
            <summary>
              Looks up a localized string similar to Gets or sets the right quiet zone of the barcode..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_QuietZoneTop">
            <summary>
              Looks up a localized string similar to Gets or sets the top quiet zone of the barcode..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Rotation">
            <summary>
              Looks up a localized string similar to Gets or sets the barcode&apos;s rotation..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Style">
            <summary>
              Looks up a localized string similar to Gets or sets the barcode symbology used to render the barcode text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Text">
            <summary>
              Looks up a localized string similar to Gets or sets the barcode text value to be printed as a barcode symbol and caption of the barcode in applicable symbologies..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Barcode_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl">
            <summary>
              Looks up a localized string similar to Renders a 2D or 3D chart displaying series data..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_AutoRefresh">
            <summary>
              Looks up a localized string similar to Chart Autorefresh..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Backdrop">
            <summary>
              Looks up a localized string similar to Chart background style..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_BlackAndWhiteMode">
            <summary>
              Looks up a localized string similar to Chart uses hatch patterns and line dashing are used to designate colors..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_ChartAreas">
            <summary>
              Looks up a localized string similar to Chart areas collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_ChartBorder">
            <summary>
              Looks up a localized string similar to Chart border style..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_ColorPalette">
            <summary>
              Looks up a localized string similar to Chart ColorPalette..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source from which the report will retrieve data..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_GridLayout">
            <summary>
              Looks up a localized string similar to Chart areas columns..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_ImageType">
            <summary>
              Looks up a localized string similar to Allows the image that is generated by this control to be saved as either a metafile or a png image when the image is added to a document object..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Legends">
            <summary>
              Looks up a localized string similar to Chart legend..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Restart">
            <summary>
              Looks up a localized string similar to Resets the report data source and restarts report processing..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Series">
            <summary>
              Looks up a localized string similar to Chart series data..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_SeriesLine">
            <summary>
              Looks up a localized string similar to Series line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Titles">
            <summary>
              Looks up a localized string similar to Chart titles..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_UIOptions">
            <summary>
              Looks up a localized string similar to Chart UIOptions..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ChartControl_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox">
            <summary>
              Looks up a localized string similar to Checkbox is used to print boolean values as checked or unchecked..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the control&apos;s background color or fill color..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_CheckAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of the checkbox text within the control drawing area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Checked">
            <summary>
              Looks up a localized string similar to Gets or set a value indicating whether the check box is in the checked state..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_ClassName">
            <summary>
              Looks up a localized string similar to Gets or sets a style rule class name. The style rule is used to format the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Font">
            <summary>
              Looks up a localized string similar to Gets or returns the font object used to print the control text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_ForeColor">
            <summary>
              Looks up a localized string similar to Gets or returns the foreground (font) color of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Padding">
            <summary>
              Looks up a localized string similar to Gets or sets a padding in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Style">
            <summary>
              Looks up a localized string similar to Gets or sets a style string for the checkbox..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Text">
            <summary>
              Looks up a localized string similar to Gets or sets the printed caption of the checkbox..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CheckBox_WrapMode">
            <summary>
              Looks up a localized string similar to Indicates whether a multi-line label control automatically wraps words to the beginning of the next line when necessary..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection">
            <summary>
              Looks up a localized string similar to Represents a collection of ARControl objects..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_Add">
            <summary>
              Looks up a localized string similar to Adds the specified control to the control collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_AddRange">
            <summary>
              Looks up a localized string similar to Adds an array of ARControl objects to the collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_Clear">
            <summary>
              Looks up a localized string similar to Removes all controls from the collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_Contains">
            <summary>
              Looks up a localized string similar to Determines whether the specified control is a member of the collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_IndexOf">
            <summary>
              Looks up a localized string similar to Retrieves the index of the specified control in the control collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_Item">
            <summary>
              Looks up a localized string similar to Returns a control in the collection at the specified index or with a specified name..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_Remove">
            <summary>
              Looks up a localized string similar to Removes the specified control from the control collection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ControlCollection_RemoveAt">
            <summary>
              Looks up a localized string similar to Removes the control in the collection at the specified index..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CrossSectionBox">
            <summary>
              Looks up a localized string similar to CrossSectionBox control is used to paint rectangular boxes over report pages.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CrossSectionBox_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CrossSectionBox_CloseBorder">
            <summary>
              Looks up a localized string similar to Specifies whether to close the boundary of the CSB on each page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CrossSectionBox_Radius">
            <summary>
              Looks up a localized string similar to Sets the Radius of each corner in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CrossSectionControl_End">
            <summary>
              Looks up a localized string similar to End position of Cross Section control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CrossSectionControl_Start">
            <summary>
              Looks up a localized string similar to Start position of Cross Section control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CrossSectionLine">
            <summary>
              Looks up a localized string similar to CrossSectionLine control is used to paint vertical line across report pages.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl">
            <summary>
              Looks up a localized string similar to CustomControl is a wrapper class that allows you to print .NET controls that inherit from System.Windows.Forms.Control.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Control">
            <summary>
              Looks up a localized string similar to Gets or sets a reference to the hosted control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_CustomControl_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail">
            <summary>
              Looks up a localized string similar to Detail section is the main section in a report.  It is printed once for each record in the data source..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the detail section has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_ColumnCount">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifies the number of newspaper columns in the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_ColumnDirection">
            <summary>
              Looks up a localized string similar to Determines how ActiveReports should print the detail section in a multi-column report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_ColumnSpacing">
            <summary>
              Looks up a localized string similar to Sets or returns the space between columns in a multi-column report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the detail section. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the detail section. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_KeepTogether">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether the section should be printed on a single page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_NewColumn">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new column should be started before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_NewPage">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_RepeatToFill">
            <summary>
              Looks up a localized string similar to Identifies the way filling page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Detail_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Event_OnCancel">
            <summary>
              Looks up a localized string similar to Invoke method for change state..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the group footer has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_ColumnLayout">
            <summary>
              Looks up a localized string similar to Gets or sets a value to determine whether the section should use the same column layout as its detail section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the group footer. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the group footer. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_KeepTogether">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether the section should be printed on a single page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_NewColumn">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new column should be started before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_NewPage">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_PrintAtBottom">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifies whether the section should be printed at the bottom of the page immediatly before any page footer section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupFooter_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader">
            <summary>
              Looks up a localized string similar to GroupHeader section prints once for every data group defined using the field specified in DataField property.  A GroupHeader section requires a matching GroupFooter section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the group header has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_ColumnGroupKeepTogether">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifies whether the section and it&apos;s footer will print as a single block on the same column..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_ColumnLayout">
            <summary>
              Looks up a localized string similar to Gets or sets a value to determine whether the section should use the same column layout as its detail section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the group header. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the group header. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the field used to group the data source records..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_GroupKeepTogether">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifies whether the section and its footer will print as a single block on the same page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_KeepTogether">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether the section should be printed on a single page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_NewColumn">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new column (in a multi-column report) should be started before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_NewPage">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_RepeatStyle">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifies whether the section should print with every column or page that the Detail section or associated footer is printed on..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_UnderlayNext">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifes whether the section should print underneath the following section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_GroupHeader_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label">
            <summary>
              Looks up a localized string similar to Displays a static text on the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Alignment">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of text within the bounds of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Angle">
            <summary>
              Looks up a localized string similar to Gets or sets the angle (slope) of the text within the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_CharacterSpacing">
            <summary>
              Looks up a localized string similar to Gets or sets a character spacing in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_ClassName">
            <summary>
              Looks up a localized string similar to Gets or sets a style rule class name.  The style rule is used to format the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Font">
            <summary>
              Looks up a localized string similar to Gets or returns the font object used to print the control text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_ForeColor">
            <summary>
              Looks up a localized string similar to Gets or returns the foreground (font) color of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_HyperLink">
            <summary>
              Looks up a localized string similar to Gets or sets a Url address that can be used in the viewer&apos;s HyperLink event to navigate to the specified location.  The Url is automatically converted into an anchor tag or a hyperlink in HTML and PDF exports..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Justify">
            <summary>
              Looks up a localized string similar to Specifies how to distribute text when the Alignment property is set to Justify.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_LineSpacing">
            <summary>
              Looks up a localized string similar to Gets or sets a line spacing in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_MultiLine">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether this is a multi-line label control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Padding">
            <summary>
              Looks up a localized string similar to Gets or sets a padding in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_RightToLeft">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating whether control&apos;s elements are aligned to support locales using right-to-left fonts. .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_ShrinkToFit">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should decrease the font of the field based on its value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Style">
            <summary>
              Looks up a localized string similar to Gets or sets a style string for the label..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Text">
            <summary>
              Looks up a localized string similar to Gets or sets the text of the label to be printed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Value">
            <summary>
              Looks up a localized string similar to Gets or sets the current Value of the Label control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_VerticalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the position of the label&apos;s text vertically within the bounds of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_VerticalText">
            <summary>
              Looks up a localized string similar to Gets or sets whether label should be rendered according to vertical layout rules.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Label_WrapMode">
            <summary>
              Looks up a localized string similar to Indicates whether a multi-line label control automatically wraps words to the beginning of the next line when necessary..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line">
            <summary>
              Looks up a localized string similar to Prints a line on the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_AnchorBottom">
            <summary>
              Looks up a localized string similar to Anchors the line to the bottom of the containing section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_LineColor">
            <summary>
              Looks up a localized string similar to Gets or sets the color of the line control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_LineStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the pen style used to draw the line..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_LineWeight">
            <summary>
              Looks up a localized string similar to Gets or sets the pen width of the line..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_X1">
            <summary>
              Looks up a localized string similar to Gets or sets the horizontal coordinate of the line&apos;s starting point..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_X2">
            <summary>
              Looks up a localized string similar to Gets or sets the horizontal coordinate of the line&apos;s end point..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Y1">
            <summary>
              Looks up a localized string similar to Gets or sets the vertical coordinate of the line&apos;s starting point..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Line_Y2">
            <summary>
              Looks up a localized string similar to Gets or sets the vertical coordinate of the line&apos;s end point..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_MinCondenseRate">
            <summary>
              Looks up a localized string similar to Specifies the minimal rate of text horizontal shrinking in percentages. Should be between 10 and 100..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject">
            <summary>
              Looks up a localized string similar to OleObject is a wrapper class to print OLE objects..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_CanEdit">
            <summary>
              Looks up a localized string similar to Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Class">
            <summary>
              Looks up a localized string similar to Specifies the class name of the Ole object..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_ContentSize">
            <summary>
              Looks up a localized string similar to Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_CreateFrom">
            <summary>
              Looks up a localized string similar to Creates an Ole Object to embed in the control from the specified file..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Edit">
            <summary>
              Looks up a localized string similar to Invokes the Ole server to edit the current embedded instance..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_HyperLink">
            <summary>
              Looks up a localized string similar to Gets or sets a Url address that can be used in the viewer&apos;s HyperLink event to navigate to the specified location.  The Url is automatically converted into an anchor tag or a hyperlink in HTML and PDF exports..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_PictureAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the position of the object&apos;s content within the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Value">
            <summary>
              Looks up a localized string similar to Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_OleObject_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak">
            <summary>
              Looks up a localized string similar to PageBreak ends the current page and starts a new page at the control&apos;s location on the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Enabled">
            <summary>
              Looks up a localized string similar to Determines whether the PageBreak is currently enabled..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageBreak_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter">
            <summary>
              Looks up a localized string similar to PageFooter section prints once at the bottom every page in the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the page footer has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the page footer. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the page footer. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageFooter_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader">
            <summary>
              Looks up a localized string similar to PageHeader section prints once at the top of every page in the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the page header has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the page header. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the page header. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_PageHeader_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_DefaultValue">
            <summary>
              Looks up a localized string similar to Sets/returns the value that will be displayed when the user is prompted to enter a value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_Key">
            <summary>
              Looks up a localized string similar to Sets/returns parameter key.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_Prompt">
            <summary>
              Looks up a localized string similar to Sets/returns string that will be displayed when user is prompted for the value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_PromptUser">
            <summary>
              Looks up a localized string similar to Don&apos;t display in the parameter dialog..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_QueryCreated">
            <summary>
              Looks up a localized string similar to True if created from the Data Source&apos;s SQL query string, false if user created..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_Tag">
            <summary>
              Looks up a localized string similar to Sets/returns custom data attached to a parameter.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_Type">
            <summary>
              Looks up a localized string similar to Sets/returns data type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Parameter_Value">
            <summary>
              Looks up a localized string similar to Sets/returns value that will be used to substitute the parameter in the query.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture">
            <summary>
              Looks up a localized string similar to Prints an image on the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_HyperLink">
            <summary>
              Looks up a localized string similar to Gets or sets a Url address that can be used in the viewer&apos;s HyperLink event to navigate to the specified location.  The Url is automatically converted into an anchor tag or a hyperlink in HTML and PDF exports..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Image">
            <summary>
              Looks up a localized string similar to Gets or sets the Image to be printed using the Picture control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_LineColor">
            <summary>
              Looks up a localized string similar to Gets or sets the border line color around the picture control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_LineStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the pen style used to paint the border around the picture control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_LineWeight">
            <summary>
              Looks up a localized string similar to Gets or sets the pen width of the line..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_PictureAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the position of the image within the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_ResetImage">
            <summary>
              Looks up a localized string similar to Sets the current image to null..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_SizeMode">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines how the image is sized to fit the Picture control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Title">
            <summary>
              Looks up a localized string similar to Gets or sets the title for the Picture control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Picture_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter">
            <summary>
              Looks up a localized string similar to ReportFooter section prints once at the end of the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the report footer has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the report footer. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the report footer. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_KeepTogether">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether the section should be printed on a single page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_NewPage">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_PrintAtBottom">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifies whether the section should be printed at the bottom of the page immediatly before any page footer section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportFooter_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader">
            <summary>
              Looks up a localized string similar to ReportHeader section is printed once at the beginning of the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the report header has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the report header. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the report header. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_NewPage">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether a new page should be inserted before and/or after printing the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportHeader_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo">
            <summary>
              Looks up a localized string similar to Displays the Page N of M and/or Report Execution date for the report based on the FormatString property of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Alignment">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of text within the bounds of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_CanGrow">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should increase the height of the control based on its content..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_CanShrink">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should decrease the height of the field based on its value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_ClassName">
            <summary>
              Looks up a localized string similar to Gets or sets a style rule class name.  The style rule is used to format the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Date">
            <summary>
              Looks up a localized string similar to Gets or sets the date time for the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Font">
            <summary>
              Looks up a localized string similar to Gets or returns the font object used to print the control text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_ForeColor">
            <summary>
              Looks up a localized string similar to Gets or returns the foreground (font) color of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_FormatString">
            <summary>
              Looks up a localized string similar to Gets or sets the mask string used to format the text property before placing it in the Text property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_MultiLine">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether this is a multiline ReportInfo control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_RightToLeft">
            <summary>
              Looks up a localized string similar to Determines whether text should be displayed in right-to-left order for this control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Style">
            <summary>
              Looks up a localized string similar to Gets or sets a style string for the ReportInfo..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_SummaryGroup">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the group header section that is used to reset the summary value when calculating subtotals..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_SummaryRunning">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether the data field summary value will be accumulated or reset for each level (detail, group or page)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Text">
            <summary>
              Looks up a localized string similar to Displays the output of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_VerticalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the position of the control&apos;s text vertically within the bounds of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_ReportInfo_WrapMode">
            <summary>
              Looks up a localized string similar to Indicates whether a multi-line text control automatically wraps words to the beginning of the next line when necessary..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox">
            <summary>
              Looks up a localized string similar to Prints text formatted as Rich Text (RTF) on the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_AutoReplaceFields">
            <summary>
              Looks up a localized string similar to If true the fields in the rtf control will be replaced by fields in datasource assigned to the section.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the control&apos;s background color or fill color..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_BulletIndent">
            <summary>
              Looks up a localized string similar to Gets or sets the indentation used in the control when the bullet style is applied to the text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_CanGrow">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should increase the height of the control based on its content..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_CanShrink">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should decrease the height of the field based on its value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Clear">
            <summary>
              Looks up a localized string similar to Clears the content of the RichTextBox control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Find">
            <summary>
              Looks up a localized string similar to Searches for text in the content of the RichTextBox control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Font">
            <summary>
              Looks up a localized string similar to Gets or returns the font object used to print the control text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_ForeColor">
            <summary>
              Looks up a localized string similar to Gets or returns the foreground (font) color of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_InsertField">
            <summary>
              Looks up a localized string similar to Gets or sets a value that specifies whether the section and it&apos;s footer will print as a single block on the same column..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_LoadFile">
            <summary>
              Looks up a localized string similar to Loads the contents of a file or stream into the RichTextBox control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_MaxLength">
            <summary>
              Looks up a localized string similar to Gets or sets the maximum number of characters in the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Multiline">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether the RichTextBox prints multiple lines or single line..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_ReplaceField">
            <summary>
              Looks up a localized string similar to Merges the contents of the RTF stream with the field values specified..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_RTF">
            <summary>
              Looks up a localized string similar to Gets or sets the rich text content of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_RtfRenderingType">
            <summary>
              Looks up a localized string similar to Renders RTF with legacy renderer or with WordPad as a metafile or a raster image. Only legacy RTF renderer supports fields..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectedText">
            <summary>
              Looks up a localized string similar to Gets or sets the current selected text in the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment to apply to the current selection or insertion point..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionBackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the current text selection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionBullet">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether the bullet style is applied to the current selection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionCharOffset">
            <summary>
              Looks up a localized string similar to Gets or sets whether text in the control appears on the baseline as a superscript or as a subscript below the baseline..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionColor">
            <summary>
              Looks up a localized string similar to Gets or sets the text color of the current text selection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionFont">
            <summary>
              Looks up a localized string similar to Gets or sets the font of the current text selection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionHangingIndent">
            <summary>
              Looks up a localized string similar to Gets or sets the distance between the left edge of the first line of text in the selected paragraph and the left edge of subsequent lines in the same paragraph..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionIndent">
            <summary>
              Looks up a localized string similar to Gets or sets the distance in pixels between the left edge of the RichTextBox and the left edge of the current text selection..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionLength">
            <summary>
              Looks up a localized string similar to Gets or sets the number of characters selected in control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionProtected">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether the current text selection is protected..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionRightIndent">
            <summary>
              Looks up a localized string similar to The distance (in pixels) between the right edge of the RichTextBox control and the right edge of the text that is selected..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SelectionStart">
            <summary>
              Looks up a localized string similar to Gets or sets the starting point of text selected in the text box..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Text">
            <summary>
              Looks up a localized string similar to Gets or sets the current text in the RichTextBox..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_RichTextBox_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section">
            <summary>
              Looks up a localized string similar to Section is the base class of all ActiveReports section types..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_AddBookmark">
            <summary>
              Looks up a localized string similar to Adds a bookmark in the report&apos;s table of contents.  The bookmark will position the view at the start of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_AfterPrint">
            <summary>
              Looks up a localized string similar to Occurs after the section has been rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_BeforePrint">
            <summary>
              Looks up a localized string similar to Occurs immediately before the section is rendered to the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_CanGrow">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should grow when its controls extend beyond its original height..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_CanShrink">
            <summary>
              Looks up a localized string similar to Indicates whether the section height should be adjusted to the exact total height of its controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_ControlAdded">
            <summary>
              Looks up a localized string similar to Occurs after the control has been added to the section. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_ControlRemoved">
            <summary>
              Looks up a localized string similar to Occurs after the control has been removed to the section. For internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_Controls">
            <summary>
              Looks up a localized string similar to Gets a collection of all controls contained in section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_CurrentLocation">
            <summary>
              Looks up a localized string similar to Gets the location of where the section is being rendered on the page..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_CurrentLocation_ErrorMessage">
            <summary>
              Looks up a localized string similar to Can only get Section&apos;s CurrentLocation property while processing the report in Format, BeforePrint or AfterPrint event..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_Format">
            <summary>
              Looks up a localized string similar to Occurs after the section&apos;s data is loaded and bound to the section&apos;s controls, but before the section is rendered to the canvas..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_Type">
            <summary>
              Looks up a localized string similar to Gets the section&apos;s type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Section_Visible">
            <summary>
              Looks up a localized string similar to Specifies whether the section should be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape">
            <summary>
              Looks up a localized string similar to Prints a rectangular or oval shape on the report..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_BackgroundPattern">
            <summary>
              Looks up a localized string similar to Gets or sets the background pattern to hatch style..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_BackStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the background style..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_GradientStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the gradient style..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_LineColor">
            <summary>
              Looks up a localized string similar to Gets or sets the color of the shape lines..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_LineStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the pen style used to draw the line..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_LineWeight">
            <summary>
              Looks up a localized string similar to Gets or sets the pen width used to draw the shape..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_RoundingRadius">
            <summary>
              Looks up a localized string similar to Sets the Radius of each corner for the RoundRect shape type..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Style">
            <summary>
              Looks up a localized string similar to Gets or sets the shape type to be printed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_Shape_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport">
            <summary>
              Looks up a localized string similar to Prints a linked report object as part of the current report.   Subreports are linked using the Report property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_CanGrow">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should increase the height of the control based on its content..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_CanShrink">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should decrease the height of the field based on its value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Report">
            <summary>
              Looks up a localized string similar to Gets or sets a reference to the instance of the report that this control will embed and render as part of the containing section..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_ReportName">
            <summary>
              Looks up a localized string similar to Specifies the name of the subreport..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_SubReport_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox">
            <summary>
              Looks up a localized string similar to Displays a formatted text value bound or unbound..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Alignment">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of text within the bounds of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_BackColor">
            <summary>
              Looks up a localized string similar to Gets or sets the background color of the control area..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Border">
            <summary>
              Looks up a localized string similar to Gets a border object that defines the border style for each edge of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_BringToFront">
            <summary>
              Looks up a localized string similar to Brings the control to the front of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_CanGrow">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should increase the height of the control based on its content..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_CanShrink">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should decrease the height of the field based on its value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_CharacterSpacing">
            <summary>
              Looks up a localized string similar to Gets or sets a character spacing in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_ClassName">
            <summary>
              Looks up a localized string similar to Gets or sets a style rule class name.  The style rule is used to format the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_CountNullValues">
            <summary>
              Looks up a localized string similar to Boolean which determines whether DBNull values should be included as zeroes in summary fields..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field name from the data source to bind to the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_DistinctField">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the data field used in a distinct summary function..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Draw">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate description for the picture.  Used in the Html Export for the &quot;alt&quot; img tag property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Font">
            <summary>
              Looks up a localized string similar to Gets or returns the font object used to print the control text..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_ForeColor">
            <summary>
              Looks up a localized string similar to Gets or returns the foreground (font) color of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_GetBounds">
            <summary>
              Looks up a localized string similar to This method is used by ActiveReports designer. Internal use only..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Height">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the control in pixels..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_HyperLink">
            <summary>
              Looks up a localized string similar to Gets or sets a hyperlink for the text control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Justify">
            <summary>
              Looks up a localized string similar to Specifies how to distribute text when the Alignment property is set to Justify.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Left">
            <summary>
              Looks up a localized string similar to Gets or sets the left position of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_LineSpacing">
            <summary>
              Looks up a localized string similar to Gets or sets a line spacing in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_MultiLine">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether this is a multiline textbox control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_OutputFormat">
            <summary>
              Looks up a localized string similar to Gets or sets the mask string used to format the Value property before placing it in the Text property..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Padding">
            <summary>
              Looks up a localized string similar to Gets or sets a padding in points..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_RightToLeft">
            <summary>
              Looks up a localized string similar to Sets or returns a value indicating whether control&apos;s elements are aligned to support locales using right-to-left fonts. .
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_SendToBack">
            <summary>
              Looks up a localized string similar to Sends the control to the back of the z-order..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_SetBounds">
            <summary>
              Looks up a localized string similar to Sets the bounds of the control to the specified rectangle..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_ShrinkToFit">
            <summary>
              Looks up a localized string similar to Determines whether ActiveReports should decrease the font of the field based on its value..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Style">
            <summary>
              Looks up a localized string similar to Gets or sets a style string for the textbox..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_SummaryFunc">
            <summary>
              Looks up a localized string similar to Gets or sets the summary function type used to process the DataField values..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_SummaryGroup">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the group header section that is used to reset the summary value when calculating subtotals..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_SummaryRunning">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines whether the data field summary value will be accumulated or reset for each level (detail, group or page)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_SummaryType">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines the summary type to be performed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Tag">
            <summary>
              Looks up a localized string similar to Gets or sets user-defined information to be persisted with the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Text">
            <summary>
              Looks up a localized string similar to Gets or sets the formatted text value to be rendered in the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Top">
            <summary>
              Looks up a localized string similar to Gets or sets the top position of the control relative to the section that contains it..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Value">
            <summary>
              Looks up a localized string similar to Gets or sets the value of the control before formatting..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_VerticalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the position of the control&apos;s text vertically within the bounds of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_VerticalText">
            <summary>
              Looks up a localized string similar to Gets or sets whether text should be rendered according to vertical layout rules.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Visible">
            <summary>
              Looks up a localized string similar to Determines whether the control will be printed or not..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_Width">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the control..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.Desc_TextBox_WrapMode">
            <summary>
              Looks up a localized string similar to Indicates whether a multi-line text control automatically wraps words to the beginning of the next line when necessary..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.DuplicateComponentNameException">
            <summary>
              Looks up a localized string similar to Duplicate names found in the report structure.  All report items must be uniquely named, please rename {0} to a unique name..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ErrBarcodeFit">
            <summary>
              Looks up a localized string similar to Barcode doesn&apos;t fit area too small.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ERROR_INVALID_CULTURE">
            <summary>
              Looks up a localized string similar to Neutral (non-specific) cultures can&apos;t be used..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.InteropNotLoaded_x64">
            <summary>
              Looks up a localized string similar to Warning: the Grapecity.ActiveReports.Interop assembly was not found. When using the OleObject control, Grapecity.ActiveReports.Interop64.dll is required..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.InteropNotLoaded_x86">
            <summary>
              Looks up a localized string similar to Warning: the Grapecity.ActiveReports.Interop assembly was not found. When using the OleObject control, Grapecity.ActiveReports.Interop.dll is required..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.LabelDisplayName">
            <summary>
              Looks up a localized string similar to Label.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.LineDisplayName">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.LineLocationException">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be more than or equal to {1} and less than or equal to {2} in (or equivalent in cm)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.LineWeightException">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid value for &apos;{1}&apos;. &apos;{1}&apos; must be less than or equal to {2} and more than or equal to {3}..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.MasterReportException">
            <summary>
              Looks up a localized string similar to Report must inherit from GrapeCity.ActiveReports.SectionReport or a inherited SectionReport object with the MasterReport property set to true..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.MinCondenseRate_ValidationError">
            <summary>
              Looks up a localized string similar to Value should be between 10 and 100..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.NWRatioOutOfRange">
            <summary>
              Looks up a localized string similar to NW Ratio is out of range (should be 0 or between 2 and 3).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.OleObjectDisplayName">
            <summary>
              Looks up a localized string similar to OleObject.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.OleObjectException1">
            <summary>
              Looks up a localized string similar to OleObject.CreateFrom failed. Please make sure file exists and contains valid ole object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.OleObjectException2">
            <summary>
              Looks up a localized string similar to fileName.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageBreakDisplayName">
            <summary>
              Looks up a localized string similar to PageBreak.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettings_DefaultBottomMargin">
            <summary>
              Looks up a localized string similar to 1.0.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettings_DefaultGutter">
            <summary>
              Looks up a localized string similar to 0.0.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettings_DefaultLeftMargin">
            <summary>
              Looks up a localized string similar to 1.0.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettings_DefaultMirrorMargins">
            <summary>
              Looks up a localized string similar to false.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettings_DefaultRightMargin">
            <summary>
              Looks up a localized string similar to 1.0.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettings_DefaultTopMargin">
            <summary>
              Looks up a localized string similar to 1.0.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettingsException1">
            <summary>
              Looks up a localized string similar to Gutter cannot be a negative value.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettingsException2">
            <summary>
              Looks up a localized string similar to PaperWidth.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PageSettingsException3">
            <summary>
              Looks up a localized string similar to PaperHeight.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ParametersIncorrect">
            <summary>
              Looks up a localized string similar to You may have incorrectly entered the parameters; would you like to try again?.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ParametersTitle">
            <summary>
              Looks up a localized string similar to Parameters.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.pDeclaration_null_Exception">
            <summary>
              Looks up a localized string similar to pDeclaration argument was null.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.PictureDisplayName">
            <summary>
              Looks up a localized string similar to Picture.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ProcessReportException1">
            <summary>
              Looks up a localized string similar to Subreport initialization failed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ProcessReportException2">
            <summary>
              Looks up a localized string similar to Page header/footer too large. Increase paper size or reduce header/footer height.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.QueryCreateParameterCannotRemove">
            <summary>
              Looks up a localized string similar to Query created parameters cannot be removed..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.QuietZoneBottomOutOfRange">
            <summary>
              Looks up a localized string similar to QuietZone.Bottom is out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.QuietZoneLeftOutOfRange">
            <summary>
              Looks up a localized string similar to QuietZone.Left is out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.QuietZoneRightOutOfRange">
            <summary>
              Looks up a localized string similar to QuietZone.Right is out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.QuietZoneTopOutOfRange">
            <summary>
              Looks up a localized string similar to QuietZone.Top is out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RepeatToFill_EnabledPageBreak">
            <summary>
              Looks up a localized string similar to When RepeatToFill is set to true, the detail section must not contain enabled PageBreak controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RepeatToFill_NewColumn">
            <summary>
              Looks up a localized string similar to When RepeatToFill property is set to true, the NewColumn property of the detail section must be set to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RepeatToFill_Newpage">
            <summary>
              Looks up a localized string similar to When RepeatToFill property is set to true, the NewPage property of the detail section must be set to None.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RepeatToFill_SubReport">
            <summary>
              Looks up a localized string similar to When RepeatToFill is set to true, the detail section must not contain Subreport controls..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ReportInfoDisplayName">
            <summary>
              Looks up a localized string similar to ReportInfo.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ReportScriptCompileErrorDetailedFormat">
            <summary>
              Looks up a localized string similar to Report Script Compile Error on line {0} Error = {1} , {3}Code={2}{3}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ReportScriptCompileErrorFormat">
            <summary>
              Looks up a localized string similar to Report Script Compile Error on line {0}:{2}{1}{2}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RichTextBoxDisplayName">
            <summary>
              Looks up a localized string similar to RichTextBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RoundingRadiusException">
            <summary>
              Looks up a localized string similar to The value provided is out of range for the control.  Valid range is 0 to 100..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RptFieldsException1">
            <summary>
              Looks up a localized string similar to Field name does not exist..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RptFieldsException2">
            <summary>
              Looks up a localized string similar to Can&apos;t remove field. Field does not exist..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RptFieldsException3">
            <summary>
              Looks up a localized string similar to Index.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RTFDecoderException1">
            <summary>
              Looks up a localized string similar to Unknown item RTF color table.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RTFDecoderException2">
            <summary>
              Looks up a localized string similar to RTF parse error.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.RTFDecoderException3">
            <summary>
              Looks up a localized string similar to Unknown RTF font index.  Please Verify that font index (\fN control word) in the rtf is defined in {\fonttbl ..} construct..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ScriptCompilationFailed">
            <summary>
              Looks up a localized string similar to Script compilation failed.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ScriptCompileErrorInAddedItemFormat">
            <summary>
              Looks up a localized string similar to Script Compile Error in item added using AddNamedItem API Name={0} Value=[{1}]{2}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ScriptCompileErrorInControlExpressionFormat">
            <summary>
              Looks up a localized string similar to Script Compile Error in control expression {0} [={1}]{2}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException1">
            <summary>
              Looks up a localized string similar to Invalid Section Name: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException2">
            <summary>
              Looks up a localized string similar to Control Script failed for control {0} , Source={1}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException3">
            <summary>
              Looks up a localized string similar to Section DataField Script failed for section {0} , Source={1}.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException4">
            <summary>
              Looks up a localized string similar to ColumnCount.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException5">
            <summary>
              Looks up a localized string similar to Too many groups. ActiveReports supports a maximum of 32 groups.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException6">
            <summary>
              Looks up a localized string similar to Invalid section type.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException7">
            <summary>
              Looks up a localized string similar to Invalid Report structure..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException8">
            <summary>
              Looks up a localized string similar to Too many groups. ActiveReports supports a maximum of 32 groups.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionException9">
            <summary>
              Looks up a localized string similar to Sections can&apos;t be added or removed after report starts running. Please modify your SectionCollection in the ReportStart event.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionHeightException">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be more than or equal to {1}  and less than or equal to {2} in (or equivalent in cm)..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SectionReportNameIsNotValidFormat">
            <summary>
              Looks up a localized string similar to The name {0} is not a valid identifier.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ShapeDisplayName">
            <summary>
              Looks up a localized string similar to Shape.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.StyleException1">
            <summary>
              Looks up a localized string similar to index.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.StyleException2">
            <summary>
              Looks up a localized string similar to Stylesheet index is out of range.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.StyleException3">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.StyleException4">
            <summary>
              Looks up a localized string similar to Style doesn&apos;t exist or invalid style name.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.StyleException5">
            <summary>
              Looks up a localized string similar to Style already exists.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.StyleException6">
            <summary>
              Looks up a localized string similar to NameOfParent.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.StyleException7">
            <summary>
              Looks up a localized string similar to Parent style not found.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SubReportDisplayName">
            <summary>
              Looks up a localized string similar to SubReport.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.SubreportNotFoundException">
            <summary>
              Looks up a localized string similar to Could not find the subreport &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.TextBoxDisplayName">
            <summary>
              Looks up a localized string similar to TextBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.TileProviderTimeoutException">
            <summary>
              Looks up a localized string similar to Timeout expired..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.UnrecognizedReportDefinition">
            <summary>
              Looks up a localized string similar to Unrecognized report definition. The specified file does not appear to be a properly formatted report definition file. The root element must be an RDL defined \&quot;Report\&quot; element.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.ValueNotMatchPattern">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; attribute must match the pattern..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.WPFormatterException1">
            <summary>
              Looks up a localized string similar to Incorrect textrun coordinates.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Resources.WPPieceTableException1">
            <summary>
              Looks up a localized string similar to RTF formatting failed.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.DataParameter">
            <summary>
            Represents a parameter used with a <see cref="!:IDbCommand"/>.
            </summary>
            <devdoc>
            A generic implementation of <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter"/>.
            </devdoc>
        </member>
        <member name="M:GrapeCity.BI.Data.DataProviders.DataParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.BI.Data.DataProviders.DataParameter"/> class.
            </summary>
            <remarks>Parameterless constructor required for JSON deserialization (in VQD).</remarks>
        </member>
        <member name="M:GrapeCity.BI.Data.DataProviders.DataParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.BI.Data.DataProviders.DataParameter"/> class.
            </summary>
            <param name="parameterName">The name of the parameter</param>
            <param name="value">The value of the parameter</param>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataParameter.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataParameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.DataProviderFactories">
            <summary>
            Supports dynamic configuration of the data providers.
            </summary>
        </member>
        <member name="M:GrapeCity.BI.Data.DataProviders.DataProviderFactories.GetFactory(System.String,GrapeCity.BI.Data.DataProviders.DataProviderInfo[],GrapeCity.ActiveReports.ResourceLocator)">
            <summary>
            Returns an instance of the specified data provider.
            </summary>
            <param name="providerName">The name, as configured for the desired data provider.</param>
            <returns>The <see cref="!:DataProviderFactory"/> associated with the the specified data provider name or NULL if it is not configured or it cannot be initialized.</returns>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo">
            <summary>
            Specifies the information about a configured data provider.
            </summary>
        </member>
        <member name="M:GrapeCity.BI.Data.DataProviders.DataProviderInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Allows internal callers to initialize instances of this struct.
            </summary>
            <param name="invariantName">Initial value for <see cref="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.InvariantName"/>.</param>
            <param name="assemblyQualifiedName">Initial value for <see cref="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.AssemblyQualifiedName"/>.</param>
            <param name="humanReadableName">Initial value for <see cref="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.HumanReadableName"/>.</param>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.CommandTextEditorType">
            <summary>
            <see cref="T:System.Type"/> that derives from <see cref="!:UiTypeEditor"/> for the query command text for this provider.
            </summary>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.ConnectStringEditorType">
            <summary>
            <see cref="T:System.Type"/> that derives from <see cref="!:UiTypeEditor"/> for the data source connect string for this provider.
            </summary>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.HumanReadableName">
            <summary>
            A human-readable name for the data provider.
            </summary>
            <remarks>An empty human readable name will prevent it from being displayed in UI.</remarks>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.InvariantName">
            <summary>
            The name that can be used to refer to the data provider in reports.
            </summary>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.AssemblyQualifiedName">
            <summary>
            Fully assembly-qualified name of the class that implements <see cref="T:System.Data.Common.DbProviderFactory"/> for this provider.
            </summary>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.AdapterAssemblyQualifiedName">
            <summary>
            Fully assembly-qualified name of the class that implements additional features like setting of multi-value parameters and others.
            </summary>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.SchemaProviderAssemblyQualifiedName">
            <summary>
            Fully assembly-qualified name of the class that implements <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDbSchemaProvider"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.QueryDesignerSupported">
            <summary>
            True if query designer supports this data provider
            </summary>
        </member>
        <member name="M:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.GetTableType(System.String)">
            <summary>
            Gets the type of the SQL table.
            </summary>
            <param name="value">The value returned by provider.</param>
            <returns>The table type.</returns>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.DbTableType">
            <summary>
            Indicates the type of a table.
            </summary>			
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.DbTableType.Table">
            <summary>
            Specifies that table represents a proper data base table.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.DbTableType.View">
            <summary>
            Specifies that table represents a proper data base view.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.DbTableType.SystemTable">
            <summary>
            Specifies that table represents a proper data base system table.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.DbTableType.SystemView">
            <summary>
            Specifies that table represents a proper data base system view.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.TableData">
            <summary>
            Represents the schema data for the table.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ColumnData">
            <summary>
            Represents the schema data for the column.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData">
            <summary>
            Represents the schema data for the foreign key.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.Name">
            <summary>
            Gets the foreign key constraint name specified in database.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.SourceTableSchema">
            <summary>
            Gets the schema name of table the constraint belongs to.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.SourceTableName">
            <summary>
            Gets the table name of the constraint belongs to.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.TargetTableSchema">
            <summary>
            Gets the schema name of table the constraint is referenced to.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.TargetTableName">
            <summary>
            Gets the table name the constraint is referenced to.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.Relations">
            <summary>
            Gets foreign key relations.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.Relation">
            <summary>
            Defines foreign key relation between two columns.
            </summary>
        </member>
        <member name="M:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.Relation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.Relation"/> class.
            </summary>
            <param name="source">The source column reference.</param>
            <param name="target">The target column reference.</param>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.Relation.Source">
            <summary>
            Gets source column reference.
            </summary>
        </member>
        <member name="F:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeyData.Relation.Target">
            <summary>
            Gets target column reference.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.TableSchema">
            <summary>
            Defines a schema information for tables.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ForeignKeySchema">
            <summary>
            Defines a schema information for foreign key columns.
            </summary>
        </member>
        <member name="T:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.ColumnSchema">
            <summary>
            Defines a schema information for reader.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSDeclaration">
            <summary>
            CSSDeclaration represents the declaration block of a CSS rule.  
            Provides a programmatic interface directly to the CSS declarations.
            </summary>
            <remarks>
            Use the publicly accessable m_pXxxx structs to retrieve known property values.  
            Unknown properties and their text values are available in the publicly accessable m_unknownPropTable variable.
            Use AppendValue to append values to this CSSDeclaration.
            </remarks>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pFont">
            <summary>
            Gets any font property declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pColor">
            <summary>
            Gets any color related declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pText">
            <summary>
            Gets any text related declarations (spacing, decoration, alignment) in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pMargin">
            <summary>
            Gets any text margin declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pPosition">
            <summary>
            Gets any text positional declarations (spacing, decoration, alignment) in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pList">
            <summary>
            Gets any text list declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pDisplay">
            <summary>
            Gets any text display declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pTable">
            <summary>
            Gets any text table declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pBreaks">
            <summary>
            Gets any text breaks declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pPage">
            <summary>
            Gets any text page declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pContent">
            <summary>
            Gets any text content declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pUserInterface">
            <summary>
            Gets any text user interface declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pAural">
            <summary>
            Gets any text aural declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pLine">
            <summary>
            Gets any text line declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_pMisc">
            <summary>
            Gets any text misc declarations in this CSSDeclaration.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_unknownPropTable">
            <summary>
            The unknown property table
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDeclaration.m_alOrder">
            <summary>
            m_alOrdertracks the order values were appended to this declaration in order to preserve that order when the CSS string is rebuilt.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.#ctor">
            <summary>
            The default constructor for CSSDeclaration.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.Reset">
            <summary>
            Resets all CSSValues contained in this declaration.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.AppendValue(DDCssLib.eCSSProperty,DDCssLib.CSSValue)">
            <summary>
            Adds the specified value for the specified property to this CSSDeclaration.
            </summary>
            <param name="aProperty">The property the value should be used for.</param>
            <param name="aValue">The value of the property.</param>
            <remarks>
            This method will keep track of the order that the properties are added in so 
            that when the CSS string is recreated, you have the capability to list the 
            properties in the same order as they were originally specified in the 
            declaration block.
            </remarks>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.AddPropertyToOrder(System.Int32)">
            <summary>
            Adds the specified eCSSProperty ID to the CSSDeclaration's order array.  When a CSS 
            string is rebuilt, only properties that are in this order array will be in the returned string; 
            and they will be in the order they occur within this array.
            </summary>
            <param name="ePropId"></param>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.AppendUnknownValue(System.String,System.String)">
            <summary>
            Used to append unknown properties to this declaration.  The unknown name and value will be used only 
            when rebuilding the CSS string again.
            </summary>
            <param name="sPropertyName">The unchanged name of the CSS property parsed.</param>
            <param name="sPropertyValue">The unchanged value for the CSS property.</param>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.SetValueImportant(DDCssLib.eCSSProperty)">
            <summary>
            Sets the value important.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.GetValue(DDCssLib.eCSSProperty)">
            <summary>
            Returns the value of the specified property as a CSSValue object.
            </summary>
            <param name="aProperty">The property to get the value of.</param>
            <returns>The CSSValue object containing the specified property's value.</returns>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.AppendValueToString(DDCssLib.eCSSProperty,DDCssLib.CSSValue,System.Text.StringBuilder@)">
            <summary>
            Appends the string value of the specified CSSValue object to the specified string.
            </summary>
            <param name="aProperty">The CSS property the value in the specified CSSValue is for.</param>
            <param name="aValue">The CSSValue object containing the value.</param>
            <param name="aResult">The string to put the string representation of the CSSValue object in.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.AppendValueToString(DDCssLib.eCSSProperty,System.Text.StringBuilder@)">
            <summary>
            Retrieves the value for the specified CSS property from this declaration instance.  
            Appends the string representation of the value to aResult.
            </summary>
            <param name="aProperty">The CSS propety to retrieve the value for.</param>
            <param name="aResult">The StringBuilder instance to append the string representation of the value to.</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.GetValue(DDCssLib.eCSSProperty,System.String@)">
            <summary>
            Retrieves the value for the specified CSS property from this declaration instance and places the value into sValue.
            </summary>
            <param name="aProperty">The CSS property to retrieve the value for.</param>
            <param name="sValue">The string variable to set to the string representation of the specified property's value.</param>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.GetImportantValues(DDCssLib.CSSDeclaration@)">
            <summary>
            Returns all of the property/values in this CSSDeclaration instance that were marked with the !important declaration.
            </summary>
            <param name="pResult"></param>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.GetValueIsImportant(DDCssLib.eCSSProperty,System.Boolean@)">
            <summary>
            Determines if the specified property stored in this CSSDeclaration instance was marked with the !important declaration.
            </summary>
            <param name="aProperty">The property to check for important.</param>
            <param name="bImportant">The boolean variable who's value will be True if the specified property is marked as important, or false if the specified property is not marked as important.</param>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.GetValueIsImportant(System.String,System.Boolean@)">
            <summary>
            Determines if the specified property stored in this CSSDeclaration instance was marked with the !important declaration.
            </summary>
            <param name="aProperty">The string name of the property to check for important.</param>
            <param name="aIsImportant">The boolean variable who's value will be True if the specified property is marked as important, or false if the specified property is not marked as important.</param>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.Count">
            <summary>
            Returns the number of declarations stored by this CSSDeclaration instance (that were added with AppendValue).
            </summary>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.GetProperty(System.Int32)">
            <summary>
            Returns the eCSSProperty at the specified index in the property order array.
            </summary>
            <param name="nIndex">The index within the order array to retrieve the element at.</param>
            <returns>The eCSSProperty value at the specified index within the order array.</returns>
            <remarks>The "order array"  keeps track of what order the properties were added to the declaration in, so that when the CSS string is recreated the properties are in the original order.</remarks>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.ToString">
            <summary>
            Returns the propery/value pair(s) contained in this CSSDeclaration in 
            standards based CSS declaration block syntax.
            </summary>
            <returns>The CSS text string.  If there are not any properties stored by this CSSDeclaration, an empty string will be returned.</returns>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.Clone(DDCssLib.CSSDeclaration@)">
            <summary>
            Creates copy of this instance and places it in the specified variable.
            </summary>
            <param name="pClone">
            The variable to contain a copy of the instance of CSSDeclaration the Clone method is called on.
            </param>
        </member>
        <member name="M:DDCssLib.CSSDeclaration.HasRect(DDCssLib.CSSRect)">
            <summary>
            Returns true if the specified CSSRect has no members set to eCSSUnit.Null.
            </summary>
            <param name="theMember">The CSSRect structure to verify.</param>
            <returns>Returns true if the specified CSSRect has no members set to eCSSUnit.Null, otherwise false.</returns>
        </member>
        <member name="T:DDCssLib.UnknownProp">
            <summary>
             UnknownProp struct is used to track property names that are not known, (or not standard, or part of a CSS standard greater than Level 2).
             We're tracking these properties so we don't throw them away when parsing the CSS string, and rebuilding it later.
             This struct is appropriate for placing in a hashtable as the iPropKey field is used to generate the hashcode.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSList">
            <summary>
            Struct CSSList
            </summary>
        </member>
        <member name="F:DDCssLib.CSSList.m_vType">
            <summary>
            Type
            </summary>
        </member>
        <member name="F:DDCssLib.CSSList.m_vImage">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:DDCssLib.CSSList.m_vPosition">
            <summary>
            Position
            </summary>
        </member>
        <member name="M:DDCssLib.CSSList.#ctor(DDCssLib.CSSList)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSList"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSList.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSContent">
            <summary>
            Struct CSSContent
            </summary>
        </member>
        <member name="F:DDCssLib.CSSContent.m_vlContent">
            <summary>
            Content
            </summary>
        </member>
        <member name="F:DDCssLib.CSSContent.m_cdCounterIncrement">
            <summary>
            Counter increment
            </summary>
        </member>
        <member name="F:DDCssLib.CSSContent.m_cdCounterReset">
            <summary>
            Counter reset
            </summary>
        </member>
        <member name="F:DDCssLib.CSSContent.m_vMarkerOffset">
            <summary>
            Marker offset
            </summary>
        </member>
        <member name="F:DDCssLib.CSSContent.m_Quotes">
            <summary>
            Quotes
            </summary>
        </member>
        <member name="M:DDCssLib.CSSContent.#ctor(DDCssLib.CSSContent)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSContent"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSContent.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSPosition">
            <summary>
            Struct CSSPosition
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vPosition">
            <summary>
            Position
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vWidth">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vMinWidth">
            <summary>
            Minimum width
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vMaxWidth">
            <summary>
            Maximum width
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vHeight">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vMinHeight">
            <summary>
            Minimum height
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vMaxHeight">
            <summary>
            Maximum height
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vBoxSizing">
            <summary>
            Box sizing
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_rcOffset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPosition.m_vZIndex">
            <summary>
            Z index
            </summary>
        </member>
        <member name="M:DDCssLib.CSSPosition.#ctor(DDCssLib.CSSPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSPosition"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSPosition.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSMargin">
            <summary>
            Struct CSSMargin
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_rcMargin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_rcPadding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_rcBorderWidth">
            <summary>
            Border width
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_rcBorderColor">
            <summary>
            Border color
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_rcBorderStyle">
            <summary>
            Border style
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_rcBorderRadius">
            <summary>
            Border radius
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_vOutlineWidth">
            <summary>
            Outline width
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_vOutlineColor">
            <summary>
            Outline color
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_vOutlineStyle">
            <summary>
            Outline style
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_rcOutlineRadius">
            <summary>
            Outline radius
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMargin.m_vFloatEdge">
            <summary>
            Float edge
            </summary>
        </member>
        <member name="M:DDCssLib.CSSMargin.#ctor(DDCssLib.CSSMargin)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSMargin"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSMargin.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSText">
            <summary>
            Struct CSSText
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vWordSpacing">
            <summary>
            Word spacing
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vLetterSpacing">
            <summary>
            Letter spacing
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vDecoration">
            <summary>
            Decoration
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vVerticalAlign">
            <summary>
            Vertical align
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vTextTransform">
            <summary>
            Text transform
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vTextAlign">
            <summary>
            Text align
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vTextJustify">
            <summary>
            Text justify
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vTextIndent">
            <summary>
            Text indent
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_pTextShadow">
            <summary>
            Text shadow
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vUnicodeBidi">
            <summary>
            Unicode bidi
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vLineHeight">
            <summary>
            Line height
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vWhiteSpace">
            <summary>
            White space
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vShrinkToFit">
            <summary>
            Shrink to fit
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vWrapMode">
            <summary>
            Wrap mode
            </summary>
        </member>
        <member name="F:DDCssLib.CSSText.m_vEnableKinsoku">
            <summary>
            Enable kinsoku
            </summary>
        </member>
        <member name="M:DDCssLib.CSSText.#ctor(DDCssLib.CSSText)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSText"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSText.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSColor">
            <summary>
            Struct CSSColor
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vColor">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vBackColor">
            <summary>
            Back color
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vBackImage">
            <summary>
            Back image
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vBackRepeat">
            <summary>
            Back repeat
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vBackAttachment">
            <summary>
            Back attachment
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vBackPositionX">
            <summary>
            Back position x
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vBackPositionY">
            <summary>
            Back position y
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vBackStyle">
            <summary>
            Back style
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vlCursor">
            <summary>
            Cursor
            </summary>
        </member>
        <member name="F:DDCssLib.CSSColor.m_vOpacity">
            <summary>
            Opacity
            </summary>
        </member>
        <member name="M:DDCssLib.CSSColor.#ctor(DDCssLib.CSSColor)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSColor"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSColor.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSFont">
            <summary>
            Struct CSSFont
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vFamily">
            <summary>
            Family
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vStyle">
            <summary>
            Style
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vVariant">
            <summary>
            Variant
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vWeight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vSize">
            <summary>
            Size
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vSizeAdjust">
            <summary>
            Size adjust
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vStretch">
            <summary>
            Stretch
            </summary>
        </member>
        <member name="F:DDCssLib.CSSFont.m_vVerticalFont">
            <summary>
            Vertical font
            </summary>
        </member>
        <member name="M:DDCssLib.CSSFont.#ctor(DDCssLib.CSSFont)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSFont"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSFont.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSMisc">
            <summary>
            Struct CSSMisc
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMisc.m_vCanGrow">
            <summary>
            Can grow
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMisc.m_vCanShrink">
            <summary>
            Can shrink
            </summary>
        </member>
        <member name="F:DDCssLib.CSSMisc.m_vCharset">
            <summary>
            Charset
            </summary>
        </member>
        <member name="M:DDCssLib.CSSMisc.#ctor(DDCssLib.CSSMisc)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSMisc"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSMisc.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSPage">
            <summary>
            Struct CSSPage
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPage.m_vMarks">
            <summary>
            Marks
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPage.m_vSizeWidth">
            <summary>
            Size width
            </summary>
        </member>
        <member name="F:DDCssLib.CSSPage.m_vSizeHeight">
            <summary>
            Size height
            </summary>
        </member>
        <member name="M:DDCssLib.CSSPage.#ctor(DDCssLib.CSSPage)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSPage"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSPage.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSAural">
            <summary>
            Struct CSSAural
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vAzimuth">
            <summary>
            Azimuth
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vElevation">
            <summary>
            Elevation
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vCueAfter">
            <summary>
            Cue after
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vCueBefore">
            <summary>
            Cue before
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vPauseAfter">
            <summary>
            Pause after
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vPauseBefore">
            <summary>
            Pause before
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vPitch">
            <summary>
            Pitch
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vPitchRange">
            <summary>
            Pitch range
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vPlayDuring">
            <summary>
            Play during
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vPlayDuringFlags">
            <summary>
            Play during flags
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vRichness">
            <summary>
            Richness
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vSpeak">
            <summary>
            Speak
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vSpeakHeader">
            <summary>
            Speak header
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vSpeakNumeral">
            <summary>
            Speak numeral
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vSpeakPunctuation">
            <summary>
            Speak punctuation
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vSpeechRate">
            <summary>
            Speech rate
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vStress">
            <summary>
            Stress
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vVoiceFamily">
            <summary>
            Voice family
            </summary>
        </member>
        <member name="F:DDCssLib.CSSAural.m_vVolume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="M:DDCssLib.CSSAural.#ctor(DDCssLib.CSSAural)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSAural"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSAural.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSBreaks">
            <summary>
            Struct CSSBreaks
            </summary>
        </member>
        <member name="F:DDCssLib.CSSBreaks.m_vOrphans">
            <summary>
            Orphans
            </summary>
        </member>
        <member name="F:DDCssLib.CSSBreaks.m_vWidows">
            <summary>
            Widows
            </summary>
        </member>
        <member name="F:DDCssLib.CSSBreaks.m_vPage">
            <summary>
            Page
            </summary>
        </member>
        <member name="F:DDCssLib.CSSBreaks.m_vPageBreakAfter">
            <summary>
            Page break after
            </summary>
        </member>
        <member name="F:DDCssLib.CSSBreaks.m_vPageBreakBefore">
            <summary>
            Page break before
            </summary>
        </member>
        <member name="F:DDCssLib.CSSBreaks.m_vPageBreakInside">
            <summary>
            Page break inside
            </summary>
        </member>
        <member name="M:DDCssLib.CSSBreaks.#ctor(DDCssLib.CSSBreaks)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSBreaks"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSBreaks.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSTable">
            <summary>
            Struct CSSTable
            </summary>
        </member>
        <member name="F:DDCssLib.CSSTable.m_vBorderCollapse">
            <summary>
            Border collapse
            </summary>
        </member>
        <member name="F:DDCssLib.CSSTable.m_vBorderSpacingX">
            <summary>
            Border spacing x
            </summary>
        </member>
        <member name="F:DDCssLib.CSSTable.m_vBorderSpacingY">
            <summary>
            Border spacing y
            </summary>
        </member>
        <member name="F:DDCssLib.CSSTable.m_vCaptionSide">
            <summary>
            Caption side
            </summary>
        </member>
        <member name="F:DDCssLib.CSSTable.m_vEmptyCells">
            <summary>
            Empty cells
            </summary>
        </member>
        <member name="F:DDCssLib.CSSTable.m_vLayout">
            <summary>
            Layout
            </summary>
        </member>
        <member name="M:DDCssLib.CSSTable.#ctor(DDCssLib.CSSTable)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSTable"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSTable.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSLine">
            <summary>
            Struct CSSLine
            </summary>
        </member>
        <member name="F:DDCssLib.CSSLine.m_vColor">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:DDCssLib.CSSLine.m_vWeight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="F:DDCssLib.CSSLine.m_vStyle">
            <summary>
            Style
            </summary>
        </member>
        <member name="F:DDCssLib.CSSLine.m_vMulti">
            <summary>
            Multi
            </summary>
        </member>
        <member name="M:DDCssLib.CSSLine.#ctor(DDCssLib.CSSLine)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSLine"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSLine.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSDisplay">
            <summary>
            Struct CSSDisplay
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDisplay.m_vDirection">
            <summary>
            Direction
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDisplay.m_vDisplay">
            <summary>
            Display
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDisplay.m_vFloat">
            <summary>
            Float
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDisplay.m_vClear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDisplay.m_rcClip">
            <summary>
            Clip
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDisplay.m_vOverflow">
            <summary>
            Overflow
            </summary>
        </member>
        <member name="F:DDCssLib.CSSDisplay.m_vVisibility">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="M:DDCssLib.CSSDisplay.#ctor(DDCssLib.CSSDisplay)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSDisplay"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSDisplay.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSUserInterface">
            <summary>
            Struct CSSUserInterface
            </summary>
        </member>
        <member name="F:DDCssLib.CSSUserInterface.m_vUserInput">
            <summary>
            User input
            </summary>
        </member>
        <member name="F:DDCssLib.CSSUserInterface.m_vUserModify">
            <summary>
            User modify
            </summary>
        </member>
        <member name="F:DDCssLib.CSSUserInterface.m_vUserSelect">
            <summary>
            User select
            </summary>
        </member>
        <member name="F:DDCssLib.CSSUserInterface.m_vlKeyEquivalent">
            <summary>
            Key equivalent
            </summary>
        </member>
        <member name="F:DDCssLib.CSSUserInterface.m_vUserFocus">
            <summary>
            User focus
            </summary>
        </member>
        <member name="F:DDCssLib.CSSUserInterface.m_vResizer">
            <summary>
            Resizer
            </summary>
        </member>
        <member name="F:DDCssLib.CSSUserInterface.m_vBehavior">
            <summary>
            Behavior
            </summary>
        </member>
        <member name="M:DDCssLib.CSSUserInterface.#ctor(DDCssLib.CSSUserInterface)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSUserInterface"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSUserInterface.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSQuotes">
            <summary>
            Struct CSSQuotes
            </summary>
        </member>
        <member name="F:DDCssLib.CSSQuotes.m_vOpen">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:DDCssLib.CSSQuotes.m_vClose">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:DDCssLib.CSSQuotes.m_oNext">
            <summary>
            Next
            </summary>
        </member>
        <member name="M:DDCssLib.CSSQuotes.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSCounterData">
            <summary>
            Struct CSSCounterData
            </summary>
        </member>
        <member name="F:DDCssLib.CSSCounterData.m_oNext">
            <summary>
            Next
            </summary>
        </member>
        <member name="F:DDCssLib.CSSCounterData.m_vCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="F:DDCssLib.CSSCounterData.m_vValue">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:DDCssLib.CSSCounterData.#ctor(DDCssLib.CSSCounterData)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSCounterData"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSCounterData.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSShadow">
            <summary>
            Struct CSSShadow
            </summary>
        </member>
        <member name="F:DDCssLib.CSSShadow.m_oNext">
            <summary>
            Next
            </summary>
        </member>
        <member name="F:DDCssLib.CSSShadow.m_vColor">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:DDCssLib.CSSShadow.m_vXOffset">
            <summary>
            X offset
            </summary>
        </member>
        <member name="F:DDCssLib.CSSShadow.m_vRadius">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:DDCssLib.CSSShadow.m_vYOffset">
            <summary>
            Y offset
            </summary>
        </member>
        <member name="M:DDCssLib.CSSShadow.#ctor(DDCssLib.CSSShadow)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.CSSShadow"/> struct.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSShadow.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSValueList">
            <summary>
            Used for making a linked list of CSSValue objects.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSValueList.m_vValue">
            <summary>
            Value
            </summary>
        </member>
        <member name="F:DDCssLib.CSSValueList.m_oNext">
            <summary>
            Next
            </summary>
        </member>
        <member name="M:DDCssLib.CSSValueList.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSRect">
            <summary>
            Struct CSSRect
            </summary>
        </member>
        <member name="F:DDCssLib.CSSRect.m_vTop">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:DDCssLib.CSSRect.m_vRight">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:DDCssLib.CSSRect.m_vBottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:DDCssLib.CSSRect.m_vLeft">
            <summary>
            Left
            </summary>
        </member>
        <member name="M:DDCssLib.CSSRect.#ctor(DDCssLib.CSSRect)">
            <summary>
            Creates a new CSSRect instance that copies top, right, bottom, left members' values of the specified CSSRect object.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSRect.Reset">
            <summary>
            Resets each of the CSSValue objects contained by this struct.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSKeywords">
            <summary>
            Used for quickly converting CSS keywords to numeric CSS keyword identifiers (eCSSKeyword) 
            and vice versa.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSKeywords.s_kCSSRawKeywords">
            <summary>
            Raw CSS Keywords with underscores (_) inplace of hyphens (-) .
            </summary>
            <remarks>
            eCSSKeyword enum values can be used as an index in the CSSKeywords.kCSSRawKeywords 
            array to obtain the coorisponding keyword literal string.
            At last check there were 306 CSS keywords in this array.
            </remarks>
        </member>
        <member name="F:DDCssLib.CSSKeywords.s_KeywordTable">
            <summary>
            Table for fast CSS keyword lookups.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSKeywords.s_nTableRefCount">
            <summary>
            Used for refrence counting between AddRefTable and RelaseTable().
            </summary>
        </member>
        <member name="M:DDCssLib.CSSKeywords.#cctor">
            <summary>
            Used for initializing keyword table used for LookupKeyword() function.  
            </summary>		
        </member>
        <member name="M:DDCssLib.CSSKeywords.LookupKeyword(System.String)">
            <summary>
            Returns the enum value for the specified string CSS keyword.
            </summary>
            <param name="aKeyword">
            The keyword to look up.
            </param>
            <returns>
            The eCSSKeyword enum value for the specified keyword.  
            eCSSKeyword.Unknown if the keyword is not found.
            </returns>
            <remarks>
            You *must* call AddRefTable before using this function.
            </remarks>
        </member>
        <member name="M:DDCssLib.CSSKeywords.GetStringValue(DDCssLib.eCSSKeyword)">
            <summary>
            Returns the CSS keyword for the specified eCSSKeyword value.
            </summary>
            <param name="aKeyword">
            The eCSSKeyword enum value to lookup the coorisponding CSS keyword for.
            </param>
            <returns>
            The CSS keyword, or String.Empty if the keyword is not found.
            </returns>
            <remarks>
            You *do not* need to call AddRefTable before using this function. ;)
            </remarks>
        </member>
        <member name="T:DDCssLib.eCSSKeyword">
            <summary>
            An enum containing a numeric ID value for each CSS keyword.
            </summary>
            <remarks>
            eCSSKeyword enum values can be used as an index in the CSSKeywords.kCSSRawKeywords 
            array to obtain the coorisponding keyword literal string.
            </remarks> 
        </member>
        <member name="T:DDCssLib.CSSParser">
            <summary>
            Summary description for CSSParser.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSParser.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSParser.GetToken(System.Int32@,System.Boolean)">
            <summary>
            Gets the next CSS token.  
            </summary>
            <param name="nErrorCode">
            In the event of an error, this member will have a code indicating the source of the parsing error.
            </param>
            <param name="bSkipWS">
            If set to true, whitespace tokens will be skipped and not returned.
            </param>
            <returns>
            True if a token was retrieved succesfully into m_tCurrentToken, otherwise false.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.UngetToken">
            <summary>
            Unget's the token in effect making the next call to GetToken return the same m_tCurrentToken that is available now.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSParser.NextIdent(System.Int32@)">
            <summary>
            Returns the next token's m_sIdent value as a string if the next token's type is Ident.
            If the next token's type is not an Ident, the token will be unread, and String.Empty 
            will be returned.
            </summary>
            <param name="nErrorCode">In the event of a parsing error this variable will contain an error code.</param>
            <returns>
            If the next token's type is Ident, the token's m_sIdent value.  
            If the next token's type is not Ident, String.Empty will be returned.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.SkipUntil(System.Int32@,System.Char)">
            <summary>
            Skips consecutive tokens until the specified stop symbol is reached. 
            The stop token will have been consumed (i.e. it will not be the next token).
            </summary>
            <param name="nErrorCode"></param>
            <param name="aStopSymbol">The symbol to stop skipping characters when reached.</param>
            <remarks>
            If a { is reached all characters will be skipped (including any aStopSymbol) until the next } is found.
            if a [ is reached all characters will be skipped (including any aStopSymbol) until the next ] is found.
            if a ( is reached all characters will be skipped (including any aStopSymbol) until the next ) is found.
            </remarks>
        </member>
        <member name="M:DDCssLib.CSSParser.SkipDeclaration(System.Int32@,System.Boolean)">
            <summary>
            Skips tokens until an end of a declaration is found.
            A declaration could end with ';' or or if bCheckForBraces=true it could be '}' .
            </summary>
            <param name="nErrorCode">The int to place error code into (if any).</param>
            <param name="bCheckForBraces">Set to true to allow '}' to end a declaration.</param>
            <returns>
            True if no syntax errors were found, and if the end of string was not reached.  Otherwise false.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ExpectSymbol(System.Int32@,System.Char,System.Boolean)">
            <summary>
            Determines if the next token is the specified symbol.  
            If the specified symbol is found, the token will be consumed.  
            If the next token is not the specified symbol, the next token will not be consumed.
            </summary>
            <param name="nErrorCode">Will contain an error code if an error is encountered.</param>
            <param name="aSymbol">The symbol you're expecting to be the next token</param>
            <param name="bSkipWS">Set to true to skip whitespace tokens.</param>
            <returns>True if the next token is the specified symbol.  Otherewise false.</returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ExpectEndProperty(System.Int32@,System.Boolean)">
            <summary>
            Determines if the next token is a valid property end token; which could be ';', '!', or '}'.
            The token will not be consumed.
            </summary>
            <param name="nErrorCode">If an error occurs retrieving the token, this argument will contain an error code.</param>
            <param name="bSkipWS">Set to true to ignore whitespace tokens.</param>
            <returns>
            True if the end of the property was found in the next token. 
            However, false could be returned if the end of the string is reached, 
            which might be interpreted as a property end (by the caller, not this function).
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.TranslateDimension(DDCssLib.CSSValue@,System.Int32,System.Single,System.String)">
            <summary>
            Translates a Dimension parser token into a CSSValue object.
            </summary>
            <param name="aValue">
            The CSSValue object to represent the parsed dimension token.
            </param>
            <param name="aVariantMask">
            This should contain a mask of VARIANT_XXX value(s) indicating what type of value 
            you're expecting (e.g. Length, Angle, Time, or Frequency.).
            </param>
            <param name="aNumber">
            The number associated with the parser's dimension token (probably from CSSToken.m_fNumber).
            </param>
            <param name="sUnit">The trailing unit specifier found in the dimension token (probably from CSSToken.m_sIdent).</param>
            <returns>
            True if the dimension was succesfully tranlated, otherwise false.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.GetURLToken(System.Int32@,System.Boolean)">
            <summary>
            Gets a URL token from the scanner.
            </summary>
            <param name="nErrorCode"></param>
            <param name="bSkipWS">Set to true if whitespace can be skipped.</param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseURL(System.Int32@,DDCssLib.CSSValue@)">
            <summary>
            Parses a URL and translates it into the a CSSValue object.
            </summary>
            <param name="nErrorCode"></param>
            <param name="aValue"></param>
            <returns></returns>
            <remarks>
            Does not translate relative URL's to absolute URL's per CSS Specification.
            See CSS, Level 1 Section 6.4 http://www.w3.org/TR/REC-CSS1#url
            </remarks>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseColorComponent(System.Int32@,System.Int32@,System.Char)">
            <summary>
            Parses a single component of a RGB function notation for colors where component could 
            be either r, g, or b in the following example: "RGB( r , g , b , )" .
            r, g, or b could be a percentage, or number.  
            If the component is a number, and it is greater than 255 or less than zero the value 
            will be "clipped" to be 255 or zero respectively.  If the component is a percentage, the 
            value will be interpreted as a percentage of 255, and converted to a value between 0-255.
            </summary>
            <param name="nErrorCode">In the event of a parsing error, this variable will contain an error code.</param>
            <param name="aComponent">This variable will contain the resulting value of the parsed component.</param>
            <param name="aStop">The character to stop parsing the component when found, usually 
            a ',' or a ')'.</param>
            <returns>True if the color component was interpreted succesfully, otherwise false.</returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseColor(System.Int32@,DDCssLib.CSSValue@)">
            <summary>
            Parses a CSS color value from the current position in the string.
            </summary>
            <param name="nErrorCode">In the event of a parsing error, this variable will contain an error code.</param>
            <param name="aValue">The CSSValue object to place the parsed color into.</param>
            <returns>
            True if the color was succesfully interpreted, otherwise false.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseAttr(System.Int32@,DDCssLib.CSSValue@)">
            <summary>
            Parses attribute selectors ? * Not Implemented * 
            </summary>
            <param name="nErrorCode"></param>
            <param name="aValue"></param>
            <returns>false</returns>
        </member>
        <member name="M:DDCssLib.CSSParser.SearchKeywordTable(DDCssLib.eCSSKeyword,System.Int32[])">
            <summary>
            Searches the specified keyword table for the specified eCSSKeyword value.  Returns the 
            </summary>
            <param name="aKeyword"></param>
            <param name="aKeywordTable"></param>
            <returns>
            The index in the keyword table that the specified eCSSKeyword value was found.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseVariant(System.Int32@,DDCssLib.CSSValue@,System.Int32,System.Int32[])">
            <summary>
            Parses just about anything based on the aVariantMask parsing hints provided.
            </summary>
            <param name="nErrorCode">If a parsing error occurs, this variable will contain an error code.</param>
            <param name="aValue">The CSSValue object to put the parsed value into.</param>
            <param name="aVariantMask">
            A bitmasked variable of the VARIANT_xxx constants with information about what types of tokens 
            Variant Mask should allow when parsing.  For example, you can tell ParseVariant that it 
            should accept Lenth, Frequency, and or Color values. 
            </param>
            <param name="aKeywordTable">
            If aVariantMask has the VARIANT_KEYWORD bit set, this aKeywordTable will be searched for the allowable keywords.
            </param>
            <returns>
            True if ParseVariant could succesfully parse the value based on the supplied aVariantMask and other parameters, otherwise false.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseFamily(System.Int32@,DDCssLib.CSSValue@)">
            <summary>
            Parses a font-family value into the specified CSSValue object.
            </summary>
            <param name="nErrorCode">If a parsing error occurs this variable will contain an error code.</param>
            <param name="aValue">
            The CSSValue object to place the parsed value in.
            </param>
            <returns>
            True if the font-family value was parsed succesfully.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseEnum(System.Int32@,DDCssLib.CSSValue@,System.Int32[])">
            <summary>
            Parses the next token expecting the token to be an Ident, and a keyword that will be 
            found in the specified table.
            </summary>
            <param name="nErrorCode">If a parsing error occurs, this variable will contain an error code.</param>
            <param name="aValue">The CSSValue object to parse the keyword's found eCSSKeyword (keyword ID) into.</param>
            <param name="aKeywordTable">
            The keyword table to lookup the value in.  
            </param>
            <returns>
            True if the next token's value was a CSS keyword found in the specified aKeywordTable.
            Otherwise, false is returned.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseFontWeight(System.Int32@,DDCssLib.CSSValue@)">
            <summary>
            Parses a CSS font-weight value.
            </summary>
            <param name="nErrorCode">In the event of a parsing error, this variable will contain an error code.</param>
            <param name="aValue">The CSSValue object to put the parsed value into.</param>
            <returns>
            True if the font-weight value was succesfully parsed and a valid font-weight value.
            A valid font-weight value is greater than or equal to 100, less than or equal to 900, and divisible by 100.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseTextDecoration(System.Int32@,DDCssLib.CSSValue@)">
            <summary>
            Parses a text-decoration value.
            </summary>
            <param name="nErrorCode">
            In the event of a parsing error, this variable will contain an error code.
            </param>
            <param name="aValue">The CSSValue object to put the parsed text-decoration value into.</param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParsePositiveVariant(System.Int32@,DDCssLib.CSSValue@,System.Int32,System.Int32[])">
            <summary>
            Uses ParseVariant to parse a number?
            </summary>
            <param name="nErrorCode"></param>
            <param name="aValue"></param>
            <param name="aVariantMask"></param>
            <param name="aKeywordTable"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDCssLib.CSSParser.ParseDeclarationBlock(System.String,DDCssLib.CSSDeclaration)" -->
        <member name="M:DDCssLib.CSSParser.ParseDeclarationBlock(System.Int32@,System.Boolean,DDCssLib.CSSDeclaration)">
            <summary>
            Parses a delcaration block's property/value pairs (a.k.a. declarations) into the specified CSSDeclaration object.
            </summary>
            <param name="nErrorCode">In the event of a parsing error this variable will contain an error code.</param>
            <param name="bCheckForBraces">Set to true if the declarations are enclosed in braces ('{' '}').</param>
            <param name="pDeclaration">The CSSDeclaration object you want to append the parsed declarations to.</param>
            <returns>True if success.  Otherwise false.</returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseDeclaration(System.Int32@,DDCssLib.CSSDeclaration,System.Boolean,System.Int32@)">
            <summary>
            Parses a single declaration inside of a CSS declaration block.
            </summary>
            <param name="nErrorCode">
            In the event of a parsing error this variable will contain an error code.
            </param>
            <param name="pDeclaration">
            The CSSDeclaration object to append the declaration (prop/value) to.
            </param>
            <param name="bCheckForBraces">
            Set to true when the declaration is enclosed in braces ('{' '}').
            If this value is true, and a closing brace ('}') is not found, it will be considered a syntax error.
            </param>
            <param name="nChangeHint">{unused}</param>
            <returns>True if the declaration was syntactly valid and parsed succesfully.  If it's false it's likely the end of a declaration block was reached.</returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseSingleValueProperty(System.Int32@,DDCssLib.CSSValue@,DDCssLib.eCSSProperty)">
            <summary>
            Parses CSS properties who's values should have only a single value.
            </summary>
            <param name="nErrorCode"></param>
            <param name="aValue"></param>
            <param name="aPropID"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSParser.AppendValue(DDCssLib.CSSDeclaration,DDCssLib.eCSSProperty,DDCssLib.CSSValue,System.Int32@)">
            <summary>
            Adds the specified value to the specified declaration if the value is different from the value already in the declaration.
            </summary>
            <param name="pDeclaration"></param>
            <param name="aPropID"></param>
            <param name="aValue"></param>
            <param name="nChangeHint"></param>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseMarks(System.Int32@,DDCssLib.CSSValue@)">
            <summary>
            Parses a marks property value.
            </summary>
            <param name="nErrorCode">In the event of a parsing error, this variable will contain an error code.</param>
            <param name="aValue">The CSSValue object to plave the parsed value into.</param>
            <returns>True if the property value was succesfully parsed an interpreted.</returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseUnknownPropertyValue(System.Int32@,DDCssLib.CSSDeclaration,System.String)">
            <summary>
            Parses an unknown property's value and appends it to the CSSDeclaration using CSSDeclaration.AppendUnknownValue(...).
            </summary>
            <param name="nErrorCode">In the event of a parsing error, this variable will contain an error code.</param>
            <param name="pDeclaration">The CSSDeclaration object to append the value to.</param>
            <param name="sPropName">The CSS property name (you must supply this because the name token has already been consumed).</param>
        </member>
        <member name="M:DDCssLib.CSSParser.GatherAllUntil(System.Int32@,System.Text.StringBuilder@,System.Char[])">
            <summary>
            Gathers all tokens (including whitespace) and appends their value to the specified StringBuilder.
            This function can be used to gather the entire value for a property for example with stop chars as ';' and or '}'.
            </summary>
            <param name="nErrorCode">In the event of a parsing error this variable will contain an error code.</param>
            <param name="sbResult">The value of the cathered tokens will be in this variable.</param>
            <param name="caStopSymbols">
            The gathering of tokens stops upon encountering one of these specified symbols.  
            The stop symbol encountered will be consumed, but not part of sbResult.
            </param>
            <returns>True as long as no errors occur.</returns>
            <remarks>If the string ends while parsing tokens, this will be handled just like a stop character was encountered.</remarks>
        </member>
        <member name="M:DDCssLib.CSSParser.ParseOutline(System.Int32@,DDCssLib.CSSDeclaration,System.Int32@)">
            <summary>
            Parses the CSS outline property's value.
            </summary>
            <param name="nErrorCode">In the event of a parsing error, this variable will contain an error code.</param>
            <param name="pDeclaration">The declaration object to add the value to.</param>
            <param name="nChangeHint">{unused}</param>
            <returns>True if the value was parsed and interpreted succesfully.</returns>
        </member>
        <member name="M:DDCssLib.CSSParser.ParsePadding(System.Int32@,DDCssLib.CSSDeclaration,System.Int32@)">
            <summary>
             Parses a CSS padding property's value.
            </summary>
            <param name="nErrorCode">In the event of a parsing error, this variable will contain the error code.</param>
            <param name="pDeclaration">The CSSDeclaration object to add the parsed value to.</param>
            <param name="nChangeHint">{unused}</param>
            <returns>True if the value was parsed and interpreted succesfully.</returns>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_KEYWORD">
            <summary>
            Expect Keyword.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_LENGTH">
            <summary>
            Expect Length.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_PERCENT">
            <summary>
            Expect Percent.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_COLOR">
            <summary>
            Expect Color.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_URL">
            <summary>
            Expect URL.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_NUMBER">
            <summary>
            Expect Number.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_INTEGER">
            <summary>
            Expect Integer.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_ANGLE">
            <summary>
            Expect Angle.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_FREQUENCY">
            <summary>
            Expect Frequency.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_TIME">
            <summary>
            Expect Time.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_STRING">
            <summary>
            Expect String.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_COUNTER">
            <summary>
            Expect Counter.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_ATTR">
            <summary>
            Expect Attr.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_pIdentIFIER">
            <summary>
            Expect Ident.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AUTO">
            <summary>
            Expect Auto.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_INHERIT">
            <summary>
            Expect Inherit.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_NONE">
            <summary>
            Expect None.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_NORMAL">
            <summary>
            Expect Normal.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AL">
            <summary>
            Expect Auto or Length.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_LP">
            <summary>
            Expect Length or Percent.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AH">
            <summary>
            Expect Auto or Inherit.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AHLP">
            <summary>
            Expect Auto, Inherit, Length, or Percent.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AHI">
            <summary>
            Expect Auto, Inherit, or Integer.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AHK">
            <summary>
            Expect Auto, Inherit, or a Keyword.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AHUK">
            <summary>
            Expect Auto, Inherit, URL, or Keyword.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AHL">
            <summary>
            Expect Auto, Inherit, or Length
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AHKL">
            <summary>
            Expect Auto, Inherit, Keyword, or Length.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HK">
            <summary>
            Expect Inherit or Keyword.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HKF">
            <summary>
            Expect Inherit, Keyword, or Frequency.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HKL">
            <summary>
            Expect Inherit, Keyword, or Length.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HKLP">
            <summary>
             Expect Inherit, Keyword, Length, or Percent.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HL">
            <summary>
            Expect Inherit, or Length.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HI">
            <summary>
            Expect Inherit or Integer.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HLP">
            <summary>
            Expect Inherit, Length, or Percent.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HLPN">
            <summary>
            Expect Inherit, Length, Percent, or None.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HLPO">
            <summary>
            Expect Inherit, Length, Percent, or None.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HTP">
            <summary>
            Expect Inherit, Time, or Percent.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HMK">
            <summary>
            Expect Inherit, Keyword, or Normal.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HMKI">
            <summary>
            Expect Inherit, Normal, Keyword, or Integer.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HC">
            <summary>
            Expect Inherit, or Color.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HCK">
            <summary>
            Expect Inherit, Color, or Keyword.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HUO">
            <summary>
            Expect Inherit, URL, or None.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_AHUO">
            <summary>
            Expect Auto, Inherit, URL, or None.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HPN">
            <summary>
            Expect Inherit, Percent, or Number.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HOK">
            <summary>
            Expect Inherit, Keyword, or None.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HN">
            <summary>
            Expect Inherit or Number.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HON">
            <summary>
            Expect Inherit, None, or Number.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_HOS">
            <summary>
            Expect Inherit, None, or String.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSParser.VARIANT_CONTENT">
            <summary>
            Expect one of the 'content-xxx' prop values.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSProps">
            <summary>
            Provies static functions for quickly looking up CSS property name keywords.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSProps.s_kCSSRawProperties">
            <summary>
            A string array containing all CSS property names.
            </summary>
            <remarks>
            The values of the eCSSProperty enum can be used as indexes to the 
            s_kCSSRawProperties array to return the coorisponding property name as a string.
            </remarks>
        </member>
        <member name="M:DDCssLib.CSSProps.#cctor">
            <summary>
            Used for initializing keyword table used for LookupProperty() function.  
            </summary>	
        </member>
        <member name="M:DDCssLib.CSSProps.LookupProperty(System.String)">
            <summary>
            Looks up the specified property name string, and returns the coorisponding CSS property ID.
            </summary>
            <param name="aProperty">
            The CSS property name you want to lookup.
            </param>
            <returns>
            The CSS property numeric ID.
            </returns>
            <remarks>
            You *must* call AddRefTable before calling this function.
            </remarks>
        </member>
        <member name="M:DDCssLib.CSSProps.GetStringValue(DDCssLib.eCSSProperty)">
            <summary>
            Returns the literal CSS property name for the specified CSS property ID.
            </summary>
            <param name="aProperty">
            A CSS property id.
            </param>
            <returns>
            The literal CSS property name if it is found, or String.Empty if it is not found.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSProps.SearchKeywordTableInt(System.Int32,System.Int32[])">
            <summary>
            Searches the specified table for the specified value.  
            Returns the NS_STYLE_HINT constant for hte specified value.
            </summary>
            <param name="aValue"></param>
            <param name="aTable"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSProps.SearchKeywordTable(System.Int32,System.Int32[])">
            <summary>
            
            </summary>
            <param name="aValue"></param>
            <param name="aTable"></param>
            <returns>
            The CSS keyword if found or String.Empty if not found.
            </returns>
        </member>
        <member name="T:DDCssLib.eCSSProperty">
            <summary>
            An enum of CSS property name numeric identifiers.
            </summary>
            <remarks>The values of the eCSSProperty enum can be used as indexes to the
            s_kCSSRawProperties array to return the coorisponding property name as a string.</remarks>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.border_radius">
            <summary>
            Border radius
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.border_radius_topLeft">
            <summary>
            Border radius top left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.border_radius_topRight">
            <summary>
            Border radius top right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.border_radius_bottomLeft">
            <summary>
            Border radius bottom left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.border_radius_bottomRight">
            <summary>
            Border radius bottom right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.outline_radius">
            <summary>
            Outline radius
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.outline_radius_topLeft">
            <summary>
            Outline radius top left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.outline_radius_topRight">
            <summary>
            Outline radius top right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.outline_radius_bottomLeft">
            <summary>
            Outline radius bottom left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.outline_radius_bottomRight">
            <summary>
            Outline radius bottom right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Azimuth">
            <summary>
            Azimuth
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background">
            <summary>
            Background
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background_attachment">
            <summary>
            Background attachment
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background_color">
            <summary>
            Background color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background_image">
            <summary>
            Background image
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background_position">
            <summary>
            Background position
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background_repeat">
            <summary>
            Background repeat
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background_x_position">
            <summary>
            Background x position
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Background_y_position">
            <summary>
            Background y position
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Behavior">
            <summary>
            Behavior
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border">
            <summary>
            Border
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_bottom">
            <summary>
            Border bottom
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_bottom_color">
            <summary>
            Border bottom color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_bottom_style">
            <summary>
            Border bottom style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_bottom_width">
            <summary>
            Border bottom width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_collapse">
            <summary>
            Border collapse
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_color">
            <summary>
            Border color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_left">
            <summary>
            Border left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_left_color">
            <summary>
            Border left color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_left_style">
            <summary>
            Border left style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_left_width">
            <summary>
            Border left width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_right">
            <summary>
            Border right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_right_color">
            <summary>
            Border right color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_right_style">
            <summary>
            Border right style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_right_width">
            <summary>
            Border right width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_spacing">
            <summary>
            Border spacing
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_style">
            <summary>
            Border style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_top">
            <summary>
            Border top
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_top_color">
            <summary>
            Border top color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_top_style">
            <summary>
            Border top style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_top_width">
            <summary>
            Border top width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_width">
            <summary>
            Border width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_x_spacing">
            <summary>
            Border x spacing
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Border_y_spacing">
            <summary>
            Border y spacing
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Box_sizing">
            <summary>
            Box sizing
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Caption_side">
            <summary>
            Caption side
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Clear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Clip">
            <summary>
            Clip
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Clip_bottom">
            <summary>
            Clip bottom
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Clip_left">
            <summary>
            Clip left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Clip_right">
            <summary>
            Clip right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Clip_top">
            <summary>
            Clip top
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Counter_increment">
            <summary>
            Counter increment
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Counter_reset">
            <summary>
            Counter reset
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Cue">
            <summary>
            Cue
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Cue_after">
            <summary>
            Cue after
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Cue_before">
            <summary>
            Cue before
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Cursor">
            <summary>
            Cursor
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Display">
            <summary>
            Display
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Elevation">
            <summary>
            Elevation
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Empty_cells">
            <summary>
            Empty cells
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Float">
            <summary>
            Float
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Float_edge">
            <summary>
            Float edge
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font_family">
            <summary>
            Font family
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font_size">
            <summary>
            Font size
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font_size_adjust">
            <summary>
            Font size adjust
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font_stretch">
            <summary>
            Font stretch
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font_style">
            <summary>
            Font style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font_variant">
            <summary>
            Font variant
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Font_weight">
            <summary>
            Font weight
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Key_equivalent">
            <summary>
            Key equivalent
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Letter_spacing">
            <summary>
            Letter spacing
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Line_height">
            <summary>
            Line height
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.List_style">
            <summary>
            List style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.List_style_image">
            <summary>
            List style image
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.List_style_position">
            <summary>
            List style position
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.List_style_type">
            <summary>
            List style type
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Margin_bottom">
            <summary>
            Margin bottom
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Margin_left">
            <summary>
            Margin left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Margin_right">
            <summary>
            Margin right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Margin_top">
            <summary>
            Margin top
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Marker_offset">
            <summary>
            Marker offset
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Marks">
            <summary>
            Marks
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Max_height">
            <summary>
            Max height
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Max_width">
            <summary>
            Max width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Min_height">
            <summary>
            Min height
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Min_width">
            <summary>
            Min width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Opacity">
            <summary>
            Opacity
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Orphans">
            <summary>
            Orphans
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Outline">
            <summary>
            Outline
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Outline_color">
            <summary>
            Outline color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Outline_style">
            <summary>
            Outline style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Outline_width">
            <summary>
            Outline width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Overflow">
            <summary>
            Overflow
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Padding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Padding_bottom">
            <summary>
            Padding bottom
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Padding_left">
            <summary>
            Padding left
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Padding_right">
            <summary>
            Padding right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Padding_top">
            <summary>
            Padding top
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Page">
            <summary>
            Page
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Page_break_after">
            <summary>
            Page break after
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Page_break_before">
            <summary>
            Page break before
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Page_break_inside">
            <summary>
            Page break inside
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Pause">
            <summary>
            Pause
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Pause_after">
            <summary>
            Pause after
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Pause_before">
            <summary>
            Pause before
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Pitch">
            <summary>
            Pitch
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Pitch_range">
            <summary>
            Pitch range
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Play_during">
            <summary>
            Play during
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Play_during_flags">
            <summary>
            Play during flags
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Quotes">
            <summary>
            Quotes
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Quotes_close">
            <summary>
            Quotes close
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Quotes_open">
            <summary>
            Quotes open
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Resizer">
            <summary>
            Resizer
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Richness">
            <summary>
            Richness
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Size_height">
            <summary>
            Size height
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Size_width">
            <summary>
            Size width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Speak">
            <summary>
            Speak
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Speak_header">
            <summary>
            Speak header
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Speak_numeral">
            <summary>
            Speak numeral
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Speak_punctuation">
            <summary>
            Speak punctuation
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Speech_rate">
            <summary>
            Speech rate
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Stress">
            <summary>
            Stress
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Table_layout">
            <summary>
            Table layout
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_align">
            <summary>
            Text align
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_decoration">
            <summary>
            Text decoration
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_indent">
            <summary>
            Text indent
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_justify">
            <summary>
            Text justify
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_shadow">
            <summary>
            Text shadow
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_shadow_color">
            <summary>
            Text shadow color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_shadow_radius">
            <summary>
            Text shadow radius
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_shadow_x">
            <summary>
            Text shadow x
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_shadow_y">
            <summary>
            Text shadow y
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_transform">
            <summary>
            Text transform
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Unicode_bidi">
            <summary>
            Unicode bidi
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.User_focus">
            <summary>
            User focus
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.User_input">
            <summary>
            User input
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.User_modify">
            <summary>
            User modify
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.User_select">
            <summary>
            User select
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Vertical_align">
            <summary>
            Vertical align
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Visibility">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Voice_family">
            <summary>
            Voice family
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.White_space">
            <summary>
            White space
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Widows">
            <summary>
            Widows
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Word_spacing">
            <summary>
            Word spacing
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Z_index">
            <summary>
            Z index
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_line_color">
            <summary>
            Ddo line color
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_line_weight">
            <summary>
            Ddo line weight
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_line_style">
            <summary>
            Ddo line style
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_multi_line">
            <summary>
            Ddo multi line
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_can_grow">
            <summary>
            Ddo can grow
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_can_shrink">
            <summary>
            Ddo can shrink
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_char_set">
            <summary>
            Ddo char set
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Ddo_font_vertical">
            <summary>
            Ddo font vertical
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_shrink_to_fit">
            <summary>
            Text shrink to fit
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_wrap_mode">
            <summary>
            Text wrap mode
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Text_enable_kinsoku">
            <summary>
            Text enable kinsoku
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSProperty.Count">
            <summary>
            Count
            </summary>
        </member>
        <member name="T:DDCssLib.CSSScanner">
            <summary>
            Parses CSS text into relevant tokens according to CSS forward compatable parsing rules.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSScanner.Init(System.String)">
            <summary>
            Init the scanner.
            </summary>
            <param name="sInput"></param>
        </member>
        <member name="M:DDCssLib.CSSScanner.Next(System.Int32@,DDCssLib.CSSToken@)">
            <summary>
            Get the next token. Return nsfalse on EOF or ERROR. aTokenResult is filled in with the data for the token.
            </summary>
            <param name="aErrorCode"></param>
            <param name="aTokenResult"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.NextURL(System.Int32@,DDCssLib.CSSToken@)">
            <summary>
            Get the next token that may be a string or unquoted URL or whitespace
            </summary>
            <param name="aErrorCode"></param>
            <param name="aTokenResult"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.Read(System.Int32@)">
            <summary>
            Reads a single character from the input string, and moves the current 
            character position forward one position.
            </summary>
            <param name="aErrorCode"></param>
            <returns>The next character in the input string or System.Char.MinValue if end of stream is reached.</returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.Peek(System.Int32@)">
            <summary>
            Returns the next character in the input string without actually reading it (i.e. without moving the character position).  
            The next call to Read will return this same character.
            </summary>
            <param name="aErrorCode"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.Pushback(System.Char)">
            <summary>
            Puts the specified character on the pushback buffer.  
            The pushback buffer is used by read/peek/unread/pushback to preserve characters already read.
            </summary>
            <param name="aChar"></param>
        </member>
        <member name="M:DDCssLib.CSSScanner.Unread">
            <summary>
            Unreads the last character read with the Read function.  
            The next call to Read will return the same character it returned last call.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSScanner.LookAhead(System.Int32@,System.Char)">
            <summary>
            Reads the next character in the input stream.  If the next character 
            is equal to the specified character, true will be returned, and the 
            character will be left Read (i.e. the next call to the Read function 
            will *not* return the character LookAhead was called with, you can all UnRead to get it back).
            If the next character is *not* equal to the specified character the 
            character will be Unread, so that the next call to Read() will return 
            the character LookAhead found.
            </summary>
            <param name="aErrorCode"></param>
            <param name="aChar">The character you're looking for next in the string.</param>
            <returns>
            True if the next character in the string is the specified character.  Otherwise false.
            </returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.ParseCComment(System.Int32@,DDCssLib.CSSToken@)">
            <summary>
            Parses C style comments (/*  */).
            </summary>
            <param name="aErrorCode"></param>
            <param name="aToken"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.EatWhiteSpace(System.Int32@)">
            <summary>
            Eats the next set of consecutive whitespace characters, including ' ', '\n, 'r', and '\t'.  
            The string position will be left so that the next call to Reach returns next non-whitespace character.
            </summary>
            <param name="aErrorCode"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.ParseEscape(System.Int32@)">
            <summary>
            Parses an escape sequence (\uXXXXXX).
            </summary>
            <param name="aErrorCode"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.EatNewline(System.Int32@)">
            <summary>
            Uses Read function to read until the all the consecutive new line 
            characters ('\r', '\n', or "\r\n") have been read.
            </summary>
            <param name="aErrorCode"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.GatherIdent(System.Int32@,System.Int32,System.Text.StringBuilder@)">
            <summary>
            Gather up the characters in an identifier. The identfier was started by 
            "aChar" which will be appended to aIdent. The result will be aIdent 
            with all of the identifier characters appended until the first 
            non-identifier character is seen. The termination character is unread 
            for the future re-reading. 
            </summary>
            <param name="aErrorCode"></param>
            <param name="aChar"></param>
            <param name="aIdent"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.ParseString(System.Int32@,System.Int32,DDCssLib.CSSToken@)">
            <summary>
            Parses quoted strings.
            </summary>
            <param name="aErrorCode"></param>
            <param name="aStop"></param>
            <param name="aToken"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.ParseID(System.Int32@,System.Int32,DDCssLib.CSSToken@)">
            <summary>
            Parses a CSS Hash/ID (e.g. #{ident}).
            </summary>
            <param name="aErrorCode"></param>
            <param name="aChar"></param>
            <param name="aToken"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.ParseNumber(System.Int32@,System.Int32,DDCssLib.CSSToken@)">
            <summary>
            Parses numbers and Dimensions.
            </summary>
            <param name="aErrorCode"></param>
            <param name="c"></param>
            <param name="aToken"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.ParseAtKeyword(System.Int32@,System.Int32,DDCssLib.CSSToken@)">
            <summary>
            Parses an '@'{ident} keyword, like @import, @page, @media, etc...
            </summary>
            <param name="aErrorCode"></param>
            <param name="aChar"></param>
            <param name="aToken"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.ParseIdent(System.Int32@,System.Int32,DDCssLib.CSSToken@)">
            <summary>
            Parses an Ident or function into the specified CSSToken argument.
            </summary>
            <param name="aErrorCode"></param>
            <param name="aChar"></param>
            <param name="aToken"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSScanner.#cctor">
            <summary>
            Builds a array of lexical information used to determine information about individual characters.
            </summary>
        </member>
        <member name="T:DDCssLib.CSSValue">
            <summary>
            Encapsulates a value for a CSSProperty.
            </summary>
            <remarks>
            When callign any of the Get...Value() properties the current unit type must be valid.  Ensure the unit type is valid using CSSValue.Unit.
            </remarks>
        </member>
        <member name="F:DDCssLib.CSSValue.m_unit">
            <summary>
            The type of unit this CSSValue is currently holding.
            </summary>
        </member>
        <member name="F:DDCssLib.CSSValue.m_value">
            <summary>
            Holds the curernt value in the proper variable type.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSValue.#ctor(DDCssLib.eCSSUnit)">
            <summary>
            Constructs the class with the specified unit type.
            </summary>
            <param name="aUnit"></param>
        </member>
        <member name="M:DDCssLib.CSSValue.#ctor(System.Int32,DDCssLib.eCSSUnit)">
            <summary>
            Constructs the class with the specified unit type, and integer value.
            </summary>
            <param name="aValue">The integer value to construct the class with.</param>
            <param name="aUnit">The unit type to construct the class with.  Shold be Integer or Enumerated.</param>
        </member>
        <member name="M:DDCssLib.CSSValue.#ctor(System.Single,DDCssLib.eCSSUnit)">
            <summary>
            Constructs the class with the specified unit type, and value.
            </summary>
            <param name="aValue">The value to construct the class with.</param>
            <param name="aUnit">The unit type to construct the class with.  Should be eCSSUnit.Percent.</param>
        </member>
        <member name="M:DDCssLib.CSSValue.#ctor(System.String,DDCssLib.eCSSUnit)">
            <summary>
            Constructs the class with the specified unit type, and string value.
            </summary>
            <param name="aValue">The string value to construct the class with.</param>
            <param name="aUnit">The unit type to construct the class with.  Should be eCSSUnit.String, or eCSSUnit.Counters</param>
        </member>
        <member name="M:DDCssLib.CSSValue.#ctor(DDCssLib.eCSSUnit,System.Drawing.Color,System.String)">
            <summary>
            Constructs the class with the specified color.
            </summary>
            <param name="aValue">The Color value to construct the class with.</param>
            <param name="eColorUnit">
            The type of color being stored.
            </param>
            <param name="sOriginalSyntax">
            The way that the color value should be outputed when outputed as a string.
            </param>
        </member>
        <member name="P:DDCssLib.CSSValue.Unit">
            <summary>
            Gets/sets the Unit value.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSValue.IsColorUnit">
            <summary>
            Returns true if the unit type is current a valid color unit (eCSSUnit.Color_Hex or eCSSUnit.Color_Name or eCSSUnit.Color_RGBFunc or eCSSUnit.Color_System).
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.IsLengthUnit">
            <summary>
            Returns true if the unit type is currently a valid length unit (fixed or relative).
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.IsFixedLengthUnit">
            <summary>
            Returns true if the unit type is currently a valid fixed length unit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.IsRelativeLengthUnit">
            <summary>
            Returns true if the unit type is currently a valid relative length unit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.IsAngularUnit">
            <summary>
            Returns true if the unit type is currently a valid Angle unit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.IsFrequencyUnit">
            <summary>
            Returns true if the current unit type is a valid Frequency unit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.IsTimeUnit">
            <summary>
            Returns true if the current unit type is a valid time unit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetIntValue">
            <summary>
            Returns an integer value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetPercentValue">
            <summary>
            Returns the current percent value as a float.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetFloatValue">
            <summary>
            Returns a value as a float.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetStringValue">
            <summary>
            Returns the current string value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetColorValue">
            <summary>
            Returns the current color value as a Color object.  If the current unit type is string it will be 
            converted using ColorTranslator.FromHtml(). 
            If the current value is a Color it is returned directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetLengthTwips(System.Single)">
            <summary>
            Returns a length value in twip units.
            </summary>
            <param name="aTwipsPerPixel">
            This value is necessary to convert a device independent length unit 
            (mm, cm, inch, etc...) from the device dependent unit pixels.
            If the value was specified in a device independent unit, then this value will not be used.
            </param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetLengthPixels(System.Single)">
            <summary>
            Returns a length value in pixel units.
            </summary>
            <param name="aPixelsPerTwip">
            The number of pixels per twip.  
            This value will be used if a conversion from a device independent 
            length unit (mm, cm, pica, etc...) is necessary.  If the length 
            value was originally specified as pixels, then this value will not be used.</param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.SetIntValue(System.Int32,DDCssLib.eCSSUnit)">
            <summary>
            Specifies the value as an integer.
            </summary>
            <param name="aValue">The integer value to store.</param>
            <param name="aUnit">The CSS unit type the value is.</param>
        </member>
        <member name="M:DDCssLib.CSSValue.SetPercentValue(System.Single)">
            <summary>
            Specifies the value as a percent.
            </summary>
            <param name="aValue">A percentage (0-100) value.  According to CSS this value 
            could range from negative to greater than 100.</param>
        </member>
        <member name="M:DDCssLib.CSSValue.Reset">
            <summary>
            Resets this current value.  Sets all value members to their appropriate 
            empty equivelent (numbers are set to 0), and sets the current Unit type to eCSSUnit.Null.
            </summary>
        </member>
        <member name="M:DDCssLib.CSSValue.SetFloatValue(System.Single,DDCssLib.eCSSUnit)">
            <summary>
            Specifies this current value as a float.
            </summary>
            <param name="aValue">The value to store.</param>
            <param name="aUnit">The CSS unit type the value is in.</param>
        </member>
        <member name="M:DDCssLib.CSSValue.SetStringValue(System.String,DDCssLib.eCSSUnit)">
            <summary>
            Specifies this class's current value as a string.
            </summary>
            <param name="aValue">The string value to store.</param>
            <param name="aUnit">The CSS unit type of the value.</param>
        </member>
        <member name="M:DDCssLib.CSSValue.SetColorValue(DDCssLib.eCSSUnit,System.Drawing.Color,System.String)">
            <summary>
            Specifies this class's current value as a System.Drawing.Color object.
            Will set the Unit value to eCSSUnit.Color.
            </summary>
            <param name="aValue">The actual color value in System.Drawing.Color.</param>
            <param name="sOriginalSyntax">
            The way that the color value should be outputed when the CSS string is rebuilt.  
            </param>
        </member>
        <member name="M:DDCssLib.CSSValue.SetAutoValue">
            <summary>
            Specifies that this CSSValue's value is the CSS keyword 'auto'.
            </summary>
            <remarks>
            Used for margin-top, margin-right, margin-bottom, margin-left, margin, width, and height values.
            </remarks>
            
        </member>
        <member name="M:DDCssLib.CSSValue.SetInheritValue">
            <summary>
            Indicates that this value is not null, not none, but should be inherited from the 
            parent object of the object who's style this value is applied to.  
            In CSS this is the default value for many *child* elements's (but certainly not all) 
            style properties who's style is not specified.
            </summary>
            <remarks>
            See CSS Level 1 Recomendation Section 1.3 Inheritance:
             http://www.w3.org/TR/REC-CSS1#inheritance 
            An important statement in this section is the following:
            "Some style properties are not inherited from the parent element to the child element. 
            Most often it is intuitive why this is not the case. E.g., the 'background' property 
            does not inherit, but the parent element's background will shine through by default."
            </remarks>
        </member>
        <member name="M:DDCssLib.CSSValue.SetNoneValue">
            <summary>
            Sets this class's value to the special CSS value 'none' 
            (e.g. border properties, background-image, display, etc...). 
            </summary>
        </member>
        <member name="M:DDCssLib.CSSValue.SetNormalValue">
            <summary>
            Sets this class'es value to the special CSS value 'normal'.
            (e.g. font-style, font-variant, font-weight, word-spacing, letter-spacing, line-height).
            </summary>
        </member>
        <member name="M:DDCssLib.CSSValue.ToDebugString">
            <summary>
            Writes out the current unit type and value in a string formatted appropriately for debugging purposes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.ToString">
            <summary>
            Writes out this class's current value in string form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.CopyFrom(DDCssLib.CSSValue)">
            <summary>
            Performs a "deep copy" (memebers and child memebers) the specified CSSValue to this CSSValue instance.
            </summary>
            <param name="aTarget"></param>
        </member>
        <member name="M:DDCssLib.CSSValue.Equals(System.Object)">
            <summary>
            Override of System.Object.Equals().  Checks for value equality of the 
            Unit and actual Value contained in this object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.op_Equality(DDCssLib.CSSValue,DDCssLib.CSSValue)">
            <summary>
            After checking arguments for null, uses valA.Equals(valB).  
            If either argument is null, the return will be false.
            </summary>
            <param name="valA"></param>
            <param name="valB"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.op_Inequality(DDCssLib.CSSValue,DDCssLib.CSSValue)">
            <summary>
            After checking both arguments for null, uses !valA.Equals(valB).
            If either argument is null, true will be returned.
            </summary>
            <param name="valA"></param>
            <param name="valB"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.CSSValue.GetHashCode">
            <summary>
            Provides a hashcode by XORing the Unit.GetHashCode() and {value}.GetHashCode().
            </summary>
            <returns></returns>
        </member>
        <member name="T:DDCssLib.eCSSUnit">
            <summary>
            The available types of CSSUnits.
            </summary>
        </member>
        <member name="F:DDCssLib.eCSSUnit.Null">
            (n/a) null unit, value is not specified
        </member>
        <member name="F:DDCssLib.eCSSUnit.Auto">
            (n/a) value is algorithmic
        </member>
        <member name="F:DDCssLib.eCSSUnit.Inherit">
            (n/a) value is inherited
        </member>
        <member name="F:DDCssLib.eCSSUnit.None">
            (n/a) value is none
        </member>
        <member name="F:DDCssLib.eCSSUnit.Normal">
            (n/a) value is normal (algorithmic, different than auto)
        </member>
        <member name="F:DDCssLib.eCSSUnit.String">
            (string) a string value
        </member>
        <member name="F:DDCssLib.eCSSUnit.URL">
            (string) a URL value
        </member>
        <member name="F:DDCssLib.eCSSUnit.Attr">
            (string) a attr(string) value
        </member>
        <member name="F:DDCssLib.eCSSUnit.Counter">
            (string) a counter(string,[string]) value
        </member>
        <member name="F:DDCssLib.eCSSUnit.Counters">
            (string) a counters(string,string[,string]) value
        </member>
        <member name="F:DDCssLib.eCSSUnit.Integer">
            (int) simple value  //FYI: Any new int values should be greater than Integer, and less than Enumerated, as unit checks do a comparison like this: if ( (eCSSUnit_Integer &lt;= m_unit) &amp;&amp; (m_unit &lt;= eCSSUnit.Enumerated) ) then value is int
        </member>
        <member name="F:DDCssLib.eCSSUnit.Enumerated">
            (int) value has enumerated meaning
        </member>
        <member name="F:DDCssLib.eCSSUnit.Color_Hex">
            (color + string) an RGBA value, was specified as "#xxxxxx", (color) contains the actual color, (string) contains how it was originally specified.
        </member>
        <member name="F:DDCssLib.eCSSUnit.Color_RGBFunc">
            (color + string) an RGBA value, was specified as "RGB(iR,iG,iB)" (color) contains the actual color, (string) contains how it was originally specified.
        </member>
        <member name="F:DDCssLib.eCSSUnit.Color_Name">
            (color + string) Color specified as a CSS color name.  (string) contains the original name, (color) contains the color
        </member>
        <member name="F:DDCssLib.eCSSUnit.Color_System">
            (color + string) Color specified as a CSS color name.  (string) contains the original system color keyword (e.g. Activeborder, Buttontext, Highlight etc...), (color) contains the color
        </member>
        <member name="F:DDCssLib.eCSSUnit.Percent">
            (float) 1.0 == 100%) value is percentage of something
        </member>
        <member name="F:DDCssLib.eCSSUnit.Number">
            (float) value is numeric (usually multiplier, different behavior that percent)
        </member>
        <member name="F:DDCssLib.eCSSUnit.Inch">
            (float) Standard length
        </member>
        <member name="F:DDCssLib.eCSSUnit.Foot">
            (float) 12 inches
        </member>
        <member name="F:DDCssLib.eCSSUnit.Mile">
            (float) 5280 feet
        </member>
        <member name="F:DDCssLib.eCSSUnit.Millimeter">
            (float) 1/1000 meter
        </member>
        <member name="F:DDCssLib.eCSSUnit.Centimeter">
            (float) 1/100 meter
        </member>
        <member name="F:DDCssLib.eCSSUnit.Meter">
            (float) Standard length
        </member>
        <member name="F:DDCssLib.eCSSUnit.Kilometer">
            (float) 1000 meters
        </member>
        <member name="F:DDCssLib.eCSSUnit.Point">
            (float) 1/72 inch
        </member>
        <member name="F:DDCssLib.eCSSUnit.Pica">
            (float) 12 points == 1/6 inch
        </member>
        <member name="F:DDCssLib.eCSSUnit.Didot">
            (float) 15 didots == 16 points
        </member>
        <member name="F:DDCssLib.eCSSUnit.Cicero">
            (float) 12 didots
        </member>
        <member name="F:DDCssLib.eCSSUnit.EM">
            (float) == current font size
        </member>
        <member name="F:DDCssLib.eCSSUnit.EN">
            (float) .5 em
        </member>
        <member name="F:DDCssLib.eCSSUnit.XHeight">
            (float) distance from top of lower case x to baseline
        </member>
        <member name="F:DDCssLib.eCSSUnit.CapHeight">
            (float) distance from top of uppercase case H to baseline
        </member>
        <member name="F:DDCssLib.eCSSUnit.Char">
            (float) number of characters, used for width with monospace font
        </member>
        <member name="F:DDCssLib.eCSSUnit.Pixel">
            (float)
        </member>
        <member name="F:DDCssLib.eCSSUnit.Degree">
            (float) 360 per circle
        </member>
        <member name="F:DDCssLib.eCSSUnit.Grad">
            (float) 400 per circle
        </member>
        <member name="F:DDCssLib.eCSSUnit.Radian">
            (float) 2pi per circle
        </member>
        <member name="F:DDCssLib.eCSSUnit.Hertz">
            (float)
        </member>
        <member name="F:DDCssLib.eCSSUnit.Kilohertz">
            (float)
        </member>
        <member name="F:DDCssLib.eCSSUnit.Seconds">
            (float)
        </member>
        <member name="F:DDCssLib.eCSSUnit.Milliseconds">
            (float)
        </member>
        <member name="T:DDCssLib.ValueData">
            <summary>
            A simple struct capable of explicitly holding values of different typs 
            (int, float, Color, or string).  
            </summary>
            <remarks>
            When Color values are stored, it is likely that m_string and m_color to be used.
            </remarks>
        </member>
        <member name="F:DDCssLib.ValueData.m_int">
            <summary>
            Holds values of type int.
            </summary>
        </member>
        <member name="F:DDCssLib.ValueData.m_float">
            <summary>
            Holds values of type float.
            </summary>
        </member>
        <member name="F:DDCssLib.ValueData.m_string">
            <summary>
            Holds values of type string.
            </summary>
        </member>
        <member name="F:DDCssLib.ValueData.m_color">
            <summary>
            Holds values of type Color.
            </summary>
        </member>
        <member name="T:DDCssLib.ValueData.eDType">
            <summary>
            The possible data type's this struct holds.
            </summary>
        </member>
        <member name="F:DDCssLib.ValueData.m_currentType">
            <summary>
             Keeps track of the current data type of the value stored.
            </summary>
        </member>
        <member name="P:DDCssLib.ValueData.IntValue">
            <summary>
            Gets/Sets a value of type int.
            </summary>
        </member>
        <member name="P:DDCssLib.ValueData.FloatValue">
            <summary>
            Gets/Sets a value of type float.
            </summary>
        </member>
        <member name="P:DDCssLib.ValueData.StringValue">
            <summary>
            Gets/Sets a value of type string.
            </summary>
        </member>
        <member name="P:DDCssLib.ValueData.ColorValue">
            <summary>
            Gets/Sets a value of type Color.
            </summary>
        </member>
        <member name="M:DDCssLib.ValueData.ToString">
            <summary>
            Returns the current value from the appropriate type (float, int, string, or color) in 
            it's string equivelent.
            If the current value is an int or float, it uses int.ToString() or float.ToString().  If 
            it is a color ColorTranslator.ToHtml() is used. If it is a string the value is returned directly.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DDCssLib.StyleHelper">
            <summary>
            StyleHelper has functions that are used in both the StyleSheetRule and StyleSheetRuleProxy classes.  
            All functions are static so CLR can inline them for performance.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleHelper.FontFamilyFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Returns the first font family found as a string from the specified CSSValue object.
            </summary>
            <param name="cssFamily">The CSSValue  object containing a font family.</param>
            <returns>Font Family as a string.</returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.FontSizeFromCSSValue(DDCssLib.CSSValue,DDCssLib.IStyleSheetRule)">
            <summary>
            Returns the font size in points from the specified CSSValue object.  You must pass in a parentStyle because 
            some font size units are relative to a parent style.  The parent can be null.
            </summary>
            <param name="cssFontSize">The CSSValue containig the FontSize value.</param>
            <param name="parentStyle">The StyleSheetRule instance you want to use as a parent for relative units.  Can be null.</param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromFontStyle(DDCssLib.ddFontStyleTypes)">
            <summary>
            Converts a ddFontStyleType into a CSSValue.
            </summary>
            <param name="fsValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.FontStyleFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Returns a ddFontStyleTypes value from the specified CSSValue object.
            </summary>
            <param name="cssVal">The CSSValue containing CSS "font-style" value.</param>
            <returns>The converted ddFontStyleTypes value.</returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromFontWeight(DDCssLib.ddFontWeightTypes)">
            <summary>
            Converts a ddFontWeightTypes value into a CSSValue object.
            </summary>
            <param name="fwValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.FontWeightFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Converts a CSSValue representation of the 'font-weight' CSS property to a ddFontWeightTypes value.
            </summary>
            <param name="cssVal"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.ForeColorFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Returns a System.Drawing.Color object from the specified CSS 'color' property value.
            </summary>
            <param name="cssColor">The CSSValue representing a CSS 'color' property.</param>
            <returns>A System.Drawing.Color object for the specified CSS color.</returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromTextDecoration(DDCssLib.ddTextDecorationTypes)">
            <summary>
            Converts a ddTextDecorationTypes value to a CSSValue object.
            </summary>
            <param name="tdValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.TextDecorationFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Returns a ddTextDecorationTypes value from a CSS 'text-decoration' value in a CSSValue object.
            </summary>
            <param name="cssTD">The CSSValue representing the CSS 'text-decoration' property's value.</param>
            <returns>The converted ddTextDecorationTypes value.</returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.ShrinkToFitFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Returns a ddShrinkToFitTypes value from a CSS 'ddo-shrink-to-fit' value in a CSSValue object.
            </summary>
            <param name="cssTD">The CSSValue representing the CSS 'ddo-shrink-to-fit' property's value.</param>
            <returns>The converted ddShrinkToFitTypes value.</returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.KinsokuFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Returns a ddKinsokuTypes value from a CSS 'ddo-enable-kinsoku' value in a CSSValue object.
            </summary>
            <param name="cssTD">The CSSValue representing the CSS 'ddo-enable-kinsoku' property's value.</param>
            <returns>The converted ddKinsokuTypes value.</returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromTextAlign(DDCssLib.ddTextAlignTypes)">
            <summary>
            Converts the specified text align value to a CSSValue.
            </summary>
            <param name="taValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromTextJustify(DDCssLib.ddTextJustifyTypes)">
            <summary>
            Converts the specified text justify value to a CSSValue.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromVerticalAlign(DDCssLib.ddVerticalAlignTypes)">
            <summary>
            Converts the specified ddVerticalAlignTypes value to a CSSValue object.
            </summary>
            <param name="vaValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.VerticalAlignFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Converts the specified CSS 'vertical-align' property value from a CSSValue instance to a ddVerticalAlignTypes value.
            </summary>
            <param name="cssVAlign">The CSSValue instance holding the 'vertical-align' value.</param>
            <returns>The converted 'vertical-align' value.</returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromWrapMode(DDCssLib.ddWrapModeTypes)">
            <summary>
            Converts a ddWrapModeTypes value to a CSSValue object.
            </summary>
            <param name="wsValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.CSSValueFromWhiteSpace(DDCssLib.ddWhiteSpaceTypes)">
            <summary>
            Converts a ddWhiteSpaceTypes value to a CSSValue object.
            </summary>
            <param name="wsValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.SetFontDelta(DDCssLib.IStyleSheetRule,System.Drawing.Font,System.Drawing.Font)">
            <summary>
            Handles a Font.Set for a IStyleSheetRule.  Instead of changing all the font properties by 
            setting Font it will calculate only the Font properties that differ from the rule's current 
            font and set those individule properties.  
            For example: Lets say someone wanted to change the Bold property of a font.  They would have 
            to create a new font object with bold set, and call control.Font.Set.  This function will 
            discover that all that has changed is bold, and only set the FontWeight property.  Resulting 
            in only the font-weight being written out in CSSText.  If we didn't use this delta function, 
            font-weight, font-family, font-style, text-decoration, etc... would have to all be written 
            out in the CSSText.
            </summary>
            <param name="rule">The rule that is having it's font changed.</param>
            <param name="oldFont">The specified rule's current font.</param>
            <param name="newFont">The font the specified rule is being passed in Font.Set (ie. the new font).</param>
        </member>
        <member name="M:DDCssLib.StyleHelper.WrapModeFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Converts a CSSValue object to a ddWrapModeTypes value.
            </summary>
            <param name="cssWhiteSpace"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleHelper.WhiteSpaceFromCSSValue(DDCssLib.CSSValue)">
            <summary>
            Converts a CSSValue object to a ddWhiteSpaceTypes value.
            </summary>
            <param name="cssWhiteSpace"></param>
            <returns></returns>
        </member>
        <member name="T:DDCssLib.StyleSheet">
            <summary>
            Summary description for StyleSheet.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.StyleSheet"/> class.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheet.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DDCssLib.StyleSheet"/> class.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheet.Add(System.String,System.String)">
            <summary>
            Creates a StyleSheetRule object from the specified information.
            </summary>
            <param name="className">The ClassName to identify this stylesheet rule by.</param>
            <param name="cssText">The CSS declartaion block string that the returned StyleSheetRule object will represent.</param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.StyleSheet.Add(System.String,System.String,System.String)">
            <summary>
            Creates a StyleSheetRule object from the specified information.
            </summary>
            <param name="className">The ClassName to identify this stylesheet rule by.</param>
            <param name="cssText">The CSS declartaion block string that the returned StyleSheetRule object will represent.</param>
            <param name="parentStyle">The parent StyleSheetRule that this </param>
            <returns></returns>
        </member>
        <member name="P:DDCssLib.StyleSheet.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheet.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheet.GetRuleByClassName(System.String)">
            <summary>
            Returns the rule with the specified class name.  If the rule is not in this stylesheet, null will be returned.
            </summary>
            <param name="className">The case insensitive class name</param>
            <returns>The stylesheet rule with the specified class name.</returns>
        </member>
        <member name="M:DDCssLib.StyleSheet.RemoveRule(System.String)">
            <summary>
            Removes the rule with the specified classname from this stylesheet.
            </summary>
            <param name="className"></param>
        </member>
        <member name="M:DDCssLib.StyleSheet.Clear">
            <summary>
            Removes all rules in this stylesheet.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheet.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:DDCssLib.StyleSheet.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheet.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <value><c>true</c> if this instance is synchronized; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:DDCssLib.StyleSheet.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:DDCssLib.StyleSheet.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <value>The synchronize root.</value>
        </member>
        <member name="M:DDCssLib.StyleSheet.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:DDCssLib.StyleSheet.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:DDCssLib.StyleSheet.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:DDCssLib.StyleSheet.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:DDCssLib.StyleSheet.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:DDCssLib.StyleSheet.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
        </member>
        <member name="M:DDCssLib.StyleSheet.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:DDCssLib.StyleSheet.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:DDCssLib.StyleSheet.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <value><c>true</c> if this instance is fixed size; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:DDCssLib.StyleSheetRule">
            <summary>
            StyleSheetRule encapsulates the CSSDeclaration class to provide .NET compatable translations to and from the CSS styles.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRule.m_declaration">
            <summary>
            Private reference to this StyleSheetRule's declaration.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRule.m_parentStyle">
            <summary>
            The private reference to this StyleSheetRules' parent StyleSheetRule.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRule.m_isFontDirty">
            <summary>
            Used for a dirty mechinism on the privately stored font object.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRule.m_font">
            <summary>
            Private reference to a cached System.Drawing.Font object.  Once CSS properties are requested, a m_font object will be built (uses a dirty mechinism for quick returns).
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRule.m_className">
            <summary>
            Holds the ClassName of this stylesheet rule.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRule.m_parentStyleSheet">
            <summary>
            Holds a reference to the parent stylesheet of this stylesheet rule.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheetRule.#ctor">
            <summary>
            The default constructor for StyleSheetRule.  
            A new empty CSSDeclaration will be used, the parent StyleSheetRule and ParentStyleSheet will be null.  The ClassName will be String.Empty.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheetRule.#ctor(System.String,System.String,DDCssLib.StyleSheet)">
            <summary>
            Creates an instance of StyleSheetRule that will use the specified ClassName, CSSText, and ParentStyleSheet.
            </summary>
            <param name="className"></param>
            <param name="parentStyleSheet"></param>
        </member>
        <member name="M:DDCssLib.StyleSheetRule.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates an instance of StyleSheetRule that will use the specified ClassName, CSSText, and ParentStyleSheet.
            </summary>
            <param name="className"></param>
            <param name="parentStyleSheet"></param>
        </member>
        <member name="M:DDCssLib.StyleSheetRule.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of StyleSheetRule that will use the specified ClassName, CSSText, and ParentStyleSheet.
            </summary>
            <param name="className"></param>
            <param name="parentStyleSheet"></param>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.ParentStyleSheetRule">
            <summary>
            Sets/Returns this instances parent StyleSheetRule.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.ClassName">
            <summary>
            Gets/sets the ClassName of this StyleSheetRule.  This value can be used to retrieve the stylesheet rule from it's parent stylesheet.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.ParentStyleSheet">
            <summary>
            Returns the parent StyleSheet. The StyleSheet should be specified on creation of the instance.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.Declaration">
            <summary>
            Gets/sets the CSSDeclaration object used by this style.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsFontFamily">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits font family value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.FontFamily">
            <summary>
            Gets/sets the FontFamily value.  
            If this StyleSheetRule's declaration does not contain the value, or the value is 
            indicated as null, it will be returned from it's parent. 
            When the property is set the value will only be set to this StyleSheetRule's declaration 
            instance (not the parent's).
            </summary>
            <remarks>
            Multiple families seperated by commas may be returned.
            </remarks>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.DdCharset">
            <summary>
            Implementation of IStyleSheetRule.DdCharset.  DdCharset is the charset/script for the font.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsFontSize">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits font size value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.FontSize">
            <summary>
            Returns font size in points.
            </summary>
            <exception cref="T:System.ApplicationException">
            Sometimes font-size is specified (in the CSS style string) in a value 
            that cannot be converted to points.
            For example a size relative to the parent, and there is no parent.
            Or Font XHeight (the height of the letter x) where this not enough data to perform a conversion.
            </exception> // the reason other props don't through exceptions is because we return Inherit in the event of an error on the get.  This can't be done with FontSize because it's not an enum.
        </member>
        <member name="P:DDCssLib.StyleSheetRule.FontUnit">
            <summary>
            Gets or sets the font unit.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsFontStyle">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits font style value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsFontWeight">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits font wighth value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsTextDecoration">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits text decoration value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.FontStyle">
            <summary>
            Returns the font-style declaration value.  
            If a value cannot be found from neither this declaration, nor the parent style, 
            then ddFontStyleTypes.Inherit will be returned to allow the caller to determine how to handle the condition.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.FontWeight">
            <summary>
            Gets/sets the 'font-weight' property of the style.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.TextDecoration">
            <summary>
            Gets/sets the 'text-decoration' property of the style.  
            The Blink, Linethrough, Overline, and Underline values can be masked (the Inherit, nor None value should not be masked).
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.Font">
            <summary>
            Returns a System.Drawing.Font object from the current font related CSS style information.
            If a font is specified it's properties will be turned into it's CSS equivelent.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.ShrinkToFit">
            <summary>
            When get, it returns a System.Boolean object based on the curren CSS property.
            When set, it sets the CSS property.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheetRule.rebuildFontObject">
            <summary>
            Rebuilds the internal cached System.Drawing.Font object according to the current font related CSS information.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsBackColor">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits background color value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.BackColor">
            <summary>
            When get, it returns a System.Drawing.Color object based on the curren CSS 'background-color' 
            property.  It may return Color.Empty if the background-color CSS property was not specified in the CSS string.
            When set, it sets the CSS 'background-color' property based on the supplied color object.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsForeColor">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits foreground color value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.ForeColor">
            <summary>
            When get, it returns a System.Drawing.Color object based on the curren CSS 'color' 
            property.  It may return Color.Empty if the CSS color property was not specified in the CSS string.
            When set, it sets the CSS 'color' property based on the supplied color object.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsTextAlign">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits text alignment value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.TextAlign">
            <summary>
            Gets/sets the 'text-align' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsVerticalAlign">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits vertical alignment value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.VerticalAlign">
            <summary>
            Gets/sets the 'vertical-align' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.TextJustify">
            <summary>
            Gets/sets 'text-justify' CSS property
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.WhiteSpace">
            <summary>
            Gets/sets the 'white-space' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.WrapMode">
            <summary>
            Gets/sets the 'ddo-wrap-mode' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.Kinsoku">
            <summary>
            Gets/sets the 'ddo-enable-kinsoku' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.CSSText">
            <summary>
            Sets/gets the CSSText string.  When set any current declarations (style properties) will be cleared/reset, and the string will be parsed to form a new set of declarations (style properties).
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheetRule.IsParentDeclarationValid">
            <summary>
            Returns true if the parent StyleSheetRule and the parent StyleSheetRule's declaration are not null.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.InheritsFontVertical">
            <summary>
            Gets a value indicating whether current stylesheet rule inherits font vertical value.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRule.DdVerticalFont">
            <summary>
            Gets or sets the dd vertical font CSS property.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheetRule.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:DDCssLib.IStyleSheetRule">
            <summary>
            Interface IStyleSheetRule
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.FontFamily">
            <summary>
            Sets/gets the font's family name as a string.
            </summary>
            <remarks>
            Multiple comma seperated values can be returned.
            </remarks>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.FontSize">
            <summary>
            Sets/gets font size.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.FontUnit">
            <summary>
            Sets/gets font units.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.FontStyle">
            <summary>
            Gets/sets the 'font-style' property of the style.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.FontWeight">
            <summary>
            Gets/sets the 'font-weight' property of the style.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.TextDecoration">
            <summary>
            Gets/sets the 'text-decoration' property of the style.  The Blink, Linethrough, Overline, and Underline values can be masked.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.Font">
            <summary>
            When get, it returns a System.Drawing.Font object based on the current font related CSS information.
            When set, it sets the font related CSS information based on the specified font.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.ShrinkToFit">
            <summary>
            When get, it returns a System.Boolean object based on the curren CSS property.  
            When set, it sets the CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.BackColor">
            <summary>
            When get, it returns a System.Drawing.Color object based on the curren CSS 'background-color' 
            property.  It may return Color.Empty if the CSS background-color property was not specified in the CSS string.
            When set, it sets the CSS 'background-color' property based on the supplied color object.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.ForeColor">
            <summary>
            When get, it returns a System.Drawing.Color object based on the curren CSS 'color' 
            property.  It may return Color.Empty if the CSS color property was not specified in the CSS string.
            When set, it sets the CSS 'color' property based on the supplied color object.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.TextAlign">
            <summary>
            Gets/sets the 'text-align' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.VerticalAlign">
            <summary>
            Gets/sets the 'vertical-align' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.TextJustify">
            <summary>
            Gets/sets 'text-justify' CSS property
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.WhiteSpace">
            <summary>
            Gets/sets the 'white-space' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.WrapMode">
            <summary>
            Gets/sets the 'ddo-wrap-mode' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.Kinsoku">
            <summary>
            Gets/sets the 'ddo-enable-kinsoku' CSS property.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.CSSText">
            <summary>
            Sets/gets the CSSText string.  When set any current declarations (style properties) will be cleared/reset, and the string will be parsed to form a new set of declarations (style properties).
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.ParentStyleSheetRule">
            <summary>
            Gets or sets the parent style sheet rule.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.ParentStyleSheet">
            <summary>
            Returns the parent StyleSheet.  The StyleSheet should be specified on creation of the instance.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.ClassName">
            <summary>
            Returns the classname this StyleSheetRule is identified by.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.Declaration">
            <summary>
            Gets/sets the CSSDeclaration object used by this style.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.DdCharset">
            <summary>
            Gets/sets the "ddo-char-set" value.  This value seams to always be an integer, but old code used a string to store it.
            </summary>
        </member>
        <member name="P:DDCssLib.IStyleSheetRule.DdVerticalFont">
            <summary>
            Gets or sets the dd vertical font CSS property.
            </summary>
            <value>The dd vertical font.</value>
        </member>
        <member name="T:DDCssLib.ddWhiteSpaceTypes">
            <summary>
            Enum ddWhiteSpaceTypes
            </summary>
        </member>
        <member name="F:DDCssLib.ddWhiteSpaceTypes.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:DDCssLib.ddWhiteSpaceTypes.Pre">
            <summary>
            Pre
            </summary>
        </member>
        <member name="F:DDCssLib.ddWhiteSpaceTypes.NoWrap">
            <summary>
            No wrap
            </summary>
        </member>
        <member name="F:DDCssLib.ddWhiteSpaceTypes.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="T:DDCssLib.ddWrapModeTypes">
            <summary>
            Enum ddWrapModeTypes
            </summary>
        </member>
        <member name="F:DDCssLib.ddWrapModeTypes.WordWrap">
            <summary>
            Word wrap
            </summary>
        </member>
        <member name="F:DDCssLib.ddWrapModeTypes.CharWrap">
            <summary>
            Character wrap
            </summary>
        </member>
        <member name="F:DDCssLib.ddWrapModeTypes.NoWrap">
            <summary>
            No wrap
            </summary>
        </member>
        <member name="F:DDCssLib.ddWrapModeTypes.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="T:DDCssLib.ddKinsokuTypes">
            <summary>
            Enum ddKinsokuTypes
            </summary>
        </member>
        <member name="F:DDCssLib.ddKinsokuTypes.Auto">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="F:DDCssLib.ddKinsokuTypes.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:DDCssLib.ddKinsokuTypes.True">
            <summary>
            True
            </summary>
        </member>
        <member name="T:DDCssLib.ddShrinkToFitTypes">
            <summary>
            Enum ddShrinkToFitTypes
            </summary>
        </member>
        <member name="F:DDCssLib.ddShrinkToFitTypes.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:DDCssLib.ddShrinkToFitTypes.True">
            <summary>
            True
            </summary>
        </member>
        <member name="T:DDCssLib.ddVerticalFontStyles">
            <summary>
            Enum ddVerticalFontStyles
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalFontStyles.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalFontStyles.True">
            <summary>
            True
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalFontStyles.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="T:DDCssLib.ddVerticalAlignTypes">
            <summary>
            Enum values for the StyleSheetRule.VerticalAlign property.
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.BaseLine">
            <summary>
            Base line
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.Sub">
            <summary>
            Sub
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.Super">
            <summary>
            Super
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.TextTop">
            <summary>
            Text top
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.Middle">
            <summary>
            Middle
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.TextBottom">
            <summary>
            Text bottom
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:DDCssLib.ddVerticalAlignTypes.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="T:DDCssLib.ddTextAlignTypes">
            <summary>
            Enum values for the StyleSheetRule.TextAlign property.
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextAlignTypes.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextAlignTypes.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextAlignTypes.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextAlignTypes.Justify">
            <summary>
            Justify
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextAlignTypes.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="T:DDCssLib.ddTextJustifyTypes">
            <summary>
            Enum values for the StyleSheetRule.TextJustify property.
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextJustifyTypes.Auto">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextJustifyTypes.Inter_word">
            <summary>
            Inter_word
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextJustifyTypes.Inter_ideograph">
            <summary>
            Inter_ideograph
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextJustifyTypes.Distribute">
            <summary>
            Distribute
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextJustifyTypes.Distribute_all_lines">
            <summary>
            Distribute_all_lines
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextJustifyTypes.Newspaper">
            <summary>
            Newspaper
            </summary>
        </member>
        <member name="T:DDCssLib.ddFontStyleTypes">
            <summary>
            Enum values for the StyleSheetRule.FontStyle property.
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontStyleTypes.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontStyleTypes.Italic">
            <summary>
            Italic
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontStyleTypes.Oblique">
            <summary>
            Oblique
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontStyleTypes.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="T:DDCssLib.ddFontWeightTypes">
            <summary>
            Possible values for the StyleSheetRule.FontWeight property.
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.Lighter">
            <summary>
            Lighter
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.Bolder">
            <summary>
            Bolder
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.Bold">
            <summary>
            Bold
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd100">
            <summary>
            DD100
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd200">
            <summary>
            DD200
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd300">
            <summary>
            DD300
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd400">
            <summary>
            DD400
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd500">
            <summary>
            DD500
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd600">
            <summary>
            DD600
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd700">
            <summary>
            DD700
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd800">
            <summary>
            DD800
            </summary>
        </member>
        <member name="F:DDCssLib.ddFontWeightTypes.dd900">
            <summary>
            DD900
            </summary>
        </member>
        <member name="T:DDCssLib.ddTextDecorationTypes">
            <summary>
            Possible values for the StyleSheetRule.TextDecoration property.
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Underline">
            <summary>
            Underline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Overline">
            <summary>
            Overline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough">
            <summary>
            Linethrough
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink">
            <summary>
            Blink
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Inherit">
            <summary>
            Inherit
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline">
            <summary>
            Blink overline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Linethrough">
            <summary>
            Blink linethrough
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Underline">
            <summary>
            Blink underline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline_Linethrough">
            <summary>
            Blink overline linethrough
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline_Underline">
            <summary>
            Blink overline underline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline_Linethrough_Underline">
            <summary>
            Blink overline linethrough underline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Linethrough_Underline">
            <summary>
            Blink linethrough underline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Linethrough_Overline">
            <summary>
            Blink linethrough overline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough_Overline">
            <summary>
            Linethrough overline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough_Underline">
            <summary>
            Linethrough underline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough_Overline_Underline">
            <summary>
            Linethrough overline underline
            </summary>
        </member>
        <member name="F:DDCssLib.ddTextDecorationTypes.Overline_Underline">
            <summary>
            Overline underline
            </summary>
        </member>
        <member name="T:DDCssLib.StyleSheetRuleProxy">
            <summary>
            StyleSheetRuleProxy is a class for very fast lookups of properties.  
            The proxy internally manges a table of "modifiers" which only contains properties that differ from 
            it's parent StyleSheetRule.  When a property value is requested, it is first checked to see if a 
            modifier exists for that property, if it does it's (.NET) value immediately returned (which makes is what yields the fast property lookups).  
            If a modifier does not exists for the applicable property, the value will be retreived from the proxy's 
            parent StyleSheetRule.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRuleProxy.m_modifiersTable">
            <summary>
            Table of all property modifiers this proxy has.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRuleProxy.m_parentStyle">
            <summary>
            Parent StyleSheetRule.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRuleProxy.m_parentStyleSheet">
            <summary>
            Parent StyleSheet.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRuleProxy.m_declaration">
            <summary>
            This Proxy's declaration.  It will essentally only be used parse and rebuild a CSSText string.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRuleProxy.m_isFontDirty">
            <summary>
            For Font{get} dirty mechinism handling.
            </summary>
        </member>
        <member name="F:DDCssLib.StyleSheetRuleProxy._fontUnit">
            <summary>
            Field to keep font unit property in designer.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheetRuleProxy.#ctor">
            <summary>
            Creates an instance of a StyleSheetRuleProxy class with the specified CSStext, parent class name and parent StyleSheet.
            </summary>
            <param name="parentStyle">The parent StyleSheetRule that property values should be returned from if a modifier does not exists for a requested property value.</param>
            <param name="parentStyleSheet">The StyleSheet that this proxy (and it's parent) are a member of.</param>
        </member>
        <member name="M:DDCssLib.StyleSheetRuleProxy.AddModifier(DDCssLib.eCSSProperty,System.Drawing.Color,System.String)">
            <summary>
            Adds a modifer for the specified property with the specified value.
            </summary>
            <param name="eProp">The property to add the modifier for.</param>
            <param name="oColor">The color value for the property.</param>
        </member>
        <member name="P:DDCssLib.StyleSheetRuleProxy.Font">
            <summary>
            Returns a System.Drawing.Font object from the current font related CSS style information.
            If a font is specified it's properties will be turned into it's CSS equivelent.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRuleProxy.FontSize">
            <summary>
            Sets/gets fontsize.
            </summary>
            <exception cref="T:System.ApplicationException">Occurs when no font size was specified.</exception>
        </member>
        <member name="P:DDCssLib.StyleSheetRuleProxy.FontUnit">
            <summary>
            Sets/gets fontUnits.
            </summary>
            <exception cref="T:System.ApplicationException">Occurs when no font unit was specified.</exception>
        </member>
        <member name="P:DDCssLib.StyleSheetRuleProxy.DdCharset">
            <summary>
            Implementation of IStyleSheetRule.DdCharset.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRuleProxy.DdVerticalFont">
            <summary>
            Implementation of IStyleSheetRule.DdCharset.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRuleProxy.ParentStyleSheetRule">
            <summary>
            Sets/Returns this instances parent StyleSheetRule.
            </summary>
        </member>
        <member name="P:DDCssLib.StyleSheetRuleProxy.CSSText">
            <summary>
            Sets/gets the CSS text string for this StyleSheetRule.
            </summary>
        </member>
        <member name="M:DDCssLib.StyleSheetRuleProxy.rebuildFontObject">
            <summary>
            Rebuilds the internal cached System.Drawing.Font object according to the current font related CSS information.
            </summary>
        </member>
        <member name="T:DDCssLib.ModifierData">
            <summary>
            Holds a value for a CSS property modifer in one of the following .NET compatable data types:
            bool, System.Drawing.Color, int or float.
            </summary>
        </member>
        <member name="T:DDCssLib.UnitConverter">
            <summary>
            Converts different unit types such as inches to twips, twips to pixels, etc...
            </summary>
        </member>
        <member name="M:DDCssLib.UnitConverter.InchesToTwips(System.Single)">
            <summary>
            Converts the specified value from inches to twips.
            </summary>
            <param name="fInches"></param>
            <returns></returns>
            <remarks>Twips per inch = 1440.</remarks>
        </member>
        <member name="M:DDCssLib.UnitConverter.FeetToTwips(System.Single)">
            <summary>
            Converts the specified value from feet to twips.
            </summary>
            <param name="fFeet"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.MilesToTwips(System.Single)">
            <summary>
            Converts the specified value from miles to twips.
            </summary>
            <param name="fMiles"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.MillimetersToTwips(System.Single)">
            <summary>
            Converts millimeters to twips
            </summary>
            <param name="fMillimeters"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.CentimetersToTwips(System.Single)">
            <summary>
            Converts centimeters to twips.
            </summary>
            <param name="fCentimeters"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.MetersToTwips(System.Single)">
            <summary>
            Converts meters to twips.
            </summary>
            <param name="fMeters"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.KilometersToTwips(System.Single)">
            <summary>
            Converts kilometers to twips.
            </summary>
            <param name="fKilometers"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.PicasToTwips(System.Single)">
            <summary>
            Converts picas to twips.
            </summary>
            <param name="fPicas"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.DidotsToTwips(System.Single)">
            <summary>
            Converts didots to twips.
            </summary>
            <param name="fDidots"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.CicerosToTwips(System.Single)">
            <summary>
            Converts ciceros to twips.
            </summary>
            <param name="fCiceros"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.TwipsToInches(System.Single)">
            <summary>
            Converts twips to inches.
            </summary>
            <param name="fTwips"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.TwipsToFeet(System.Single)">
            <summary>
            Converts twips to feet.
            </summary>
            <param name="fTwips"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.TwipsToMiles(System.Single)">
            <summary>
            Converts twips to miles.
            </summary>
            <param name="fTwips"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.TwipsToUnits(System.Single,System.Single)">
            <summary>
            Converts Twips to points?.
            </summary>
            <param name="aTwips"></param>
            <param name="aUnitsPerPoint"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.UnitsToTwips(System.Single,System.Single)">
            <summary>
            Converts points? to twips.
            </summary>
            <param name="aValue"></param>
            <param name="aPointsPerUnit"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.ToCoordRound(System.Single)">
            <summary>
            Rounds the specified float value?
            </summary>
            <param name="aValue"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.FloatPointsToTwips(System.Single)">
            <summary>
            Converts points (specified as float) to twips.
            </summary>
            <param name="aPoints"></param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.TwipsToPixels(System.Single,System.Single)">
            <summary>
            Converts twips to pixels using the specifed Pixels Per Twip value.
            </summary>
            <param name="aTwips">The value in twips units to convert to pixels.</param>
            <param name="aPixelsPerTwip">
            The number of pixels per twip you want to use for the conversion.
            This value should be obtained from the target deveice such as the monitor or printer.
            </param>
            <returns></returns>
        </member>
        <member name="M:DDCssLib.UnitConverter.PixelsToTwips(System.Single,System.Single)">
            <summary>
            Converts pixels to twips using the specified twips per pixel value.
            </summary>
            <param name="aPixels">The value in pixels to convert to twips.</param>
            <param name="aTwipsPerPixel">
            The number of twips per pixel you want to use for the conversion.
            This value should be obtained from the traget device such as the monitor or printer.
            </param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDLib.DDExpression.DDEval">
            <summary>
            Summary description for DDEval.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.DDExpression.DDEval.ExecuteException">
            <summary>
            This exception is used by Execute method and should be re-thrown out.
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.DDExpression.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseExpression">
            <summary>
            conditional-or-expression | conditional-or-expression   ?   expression   :   expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseConditionalOrExpression">
            <summary>
            conditional-and-expression |   conditional-or-expression  "||"   conditional-and-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseConditionalAndExpression">
            <summary>
            inclusive-or-expression | conditional-and-expression  "&amp;&amp;"   inclusive-or-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseInclusiveOrExpression">
            <summary>
            exclusive-or-expression |  inclusive-or-expression '|' exclusive-or-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseExclusiveOrExpression">
            <summary>
            and-expression | exclusive-or-expression   ^   and-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseAndExpression">
            <summary>
            equality-expression |  and-expression   &amp;   equality-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseEqualityExpression">
            <summary>
            relational-expression |  
            equality-expression   ==   relational-expression | 
            equality-expression  != relational-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseRelationalExpression">
            <summary>
            shift-expression 
            relational-expression   &lt;   shift-expression
            relational-expression   &gt;   shift-expression
            relational-expression   &lt;=   shift-expression
            relational-expression   &gt;=   shift-expression
            relational-expression   is   type
            relational-expression   as   type
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseShiftExpression">
            <summary>
            
            additive-expression |
            shift-expression   '&lt;&lt;'   additive-expression |
            shift-expression   '&gt;&gt;'   additive-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseAdditiveExpression">
            <summary>
            multiplicative-expression |
            additive-expression   +   multiplicative-expression |
            additive-expression   �   multiplicative-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseMultiplicativeExpression">
            <summary>
            unary-expression
            multiplicative-expression   *   unary-expression
            multiplicative-expression   /   unary-expression
            multiplicative-expression   %   unary-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseUnaryExpression">
            <summary>
            primary-expression
            +   unary-expression
            -   unary-expression
            !   unary-expression
            ~   unary-expression
            *   unary-expression
            cast-expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ParseCastExpression">
            <summary>
            ( type ) unary-expression
            </summary>
            <returns></returns>
        </member>
        <member name="F:DataDynamics.DDLib.DDExpression.Expression.m_idStack">
            <summary>
            literal	:						boolean-literal -> true | false
            								integer-literal -> decimal-integer-literal | hexadecimal-integer-literal
            								real-literal
            								character-literal -> ' character '
            								string-literal -> " regular-string-literal-characters " | @"verbatim-string-literal-characters"
            								null-literal -> null
            simple-name						-> identifier
            parenthesized-expression		-> ( expression )
            member-access					-> primary-expression.identifier | predefined-type.identifier
            invocation-expression			-> primary-expression( argument-listopt )
            element-access					-> primary-no-array-creation-expression[   expression-list   ]
            this-access						-> this
            object-creation-expression		-> new type(argument-listopt)
            typeof-expression				-> typeof ( type ) | typeof ( void )
            
            Ok, now this is the tricky part. We'll leave literal resolve to tokenizer, so it will return
            	Lexer.TokType.TRUE,FALSE,NULL,INTEGER,REAL,CHARACTER,STRING
            The following tokentypes are also a predictive first set :
            	TYPEOF,THIS,NEW,(,IDENTIFIER
            	
            For the member-access, invocation-expression , element-access we need to use type information
            to properly parse. It's fairly simple to call primary-expression parse and then match . ( [ for all productions
            except predefined-type.identifier case. So either we need to do backtracking on ParsePrimaryExpression and then try
            to match a type, or we prematch the predefined-type first. Since the first-set of ParsePrimaryExpression is well defined,
            we will keep on matching identifier.identifier.identifer.... until . is not matched and then try to find a type that matches n-1 entries
            
            
            
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Expression.ResolveIDStack">
            <summary>
            ResolveIDStack
            This is the heart of type access, basically it resolves id.id.id into classes and property access on thoses classes
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DataDynamics.DDLib.DDExpression.Expression.ParseType(System.Type@)" -->
        <member name="T:DataDynamics.DDLib.DDExpression.Lexer">
            <summary>
            Summary description for DDLexer.
            
            This function breaks up the input into tokens, the token types are defined by TokType enumeration
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.DDExpression.Lexer.GetNumericToken">
            <summary>
            GetNumericToken
            
            integer-literal::
            		decimal-integer-literal
            		hexadecimal-integer-literal
            decimal-integer-literal::
            		decimal-digits   integer-type-suffixopt
            decimal-digits::
            		decimal-digit
            		decimal-digits   decimal-digit
            decimal-digit::  one of
            		0  1  2  3  4  5  6  7  8  9
            integer-type-suffix::  one of
            		U  u  L  l  UL  Ul  uL  ul  LU  Lu  lU  lu
            hexadecimal-integer-literal::
            		0x   hex-digits   integer-type-suffixopt
            		0X   hex-digits   integer-type-suffixopt
            hex-digits::
            		hex-digit
            		hex-digits   hex-digit
            hex-digit::  one of
            		0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  a  b  c  d  e  f
            real-literal::
            		decimal-digits   .   decimal-digits   exponent-partopt   real-type-suffixopt
            		.   decimal-digits   exponent-partopt   real-type-suffixopt
            		decimal-digits   exponent-part   real-type-suffixopt
            		decimal-digits   real-type-suffix
            exponent-part::
            		e   signopt   decimal-digits
            		E   signopt   decimal-digits
            sign::  one of
            		+  -
            real-type-suffix::  one of
            		F  f  D  d  M  m
            		
            First see if there is a 0x 0X prefix. If so call GetHexIntegerLiteralToken()
            If number starts with . , advance to fractional part
            loop until non digit, then check integer suffix (make sure no fractional lexing was done) or check exponent and real-type suffix
            </summary>
        </member>
        <member name="T:DataDynamics.DDLib.DDFormat">
            <summary>
            DDFormat contains some replica of VBA functions or VB.NET Runtime functions.   
            Ultimately we needed a Format function that worked just like VB6's because of ActiveReports' TextBox.OutputFormat was depdendent on it in the past, so we've created our own.
            There are many other VBA like functions in this class as they were handy in writing the Format function.  Some are compiled out using preprocessor directives, so view the source if you're looking for something (e.g. intelisense &amp; object browser won't see them.
            </summary>
        </member>
        <member name="F:DataDynamics.DDLib.DDFormat.AR_FORMAT_ESCAPE_CHAR">
            <summary>
            An escape char used in AR format.
            Why '\u0800'? It has no glyph. 
            It is the first character in Latin-1 Supplement list of Unicode char set.
            </summary>
        </member>
        <member name="F:DataDynamics.DDLib.DDFormat.FORMAT_ESCAPE_CHAR">
            <summary>
            System escape char.
            </summary>
        </member>
        <member name="F:DataDynamics.DDLib.DDFormat.SKIP_CODE_REG">
            <summary>
            The Regex of finding skip code..
            </summary>
        </member>
        <member name="F:DataDynamics.DDLib.DDFormat.SKIP_CODE_CHAR">
            <summary>
            _ (underscore)
            This code skips the width of the next character.
            This code is commonly used as _) to leave space for a closing parenthesis
            in a positive number format when the negative number format includes 
            parentheses. This allows both positive and negative values to line up 
            at the decimal point.
            </summary>
        </member>
        <member name="F:DataDynamics.DDLib.DDFormat.FORMAT_SECTION_SPLIT_CHAR">
            <summary>
            The OutputFormat property of the TextBox control includes 
            four sections delimited by a semicolon.
            Each section contains the format specifications for 
            a different type of number.
            </summary>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.ValidateCulture(System.Globalization.CultureInfo@)">
            <summary>
            Validates the culture by checkign if it's null, if it is null, it will be assigned Thread.CurrentThread.CurrentCulture. If it is not null, then it remains unchanged.
            We might want to check for InvariantCultures too, and if one is found then set it to a specific culture, or Debug.Assert or something, as invariant cultures may not provide enough information for formatting such as NumberFormatInfo's, TextInfo, etc..
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.Format(System.Object,System.String)">
            <summary>
            Should be a replica of VB6/7's global Format function.  We needed this for ActiveReports' Textbox.OutputFormat and nolonger can have any dependency on VB.
            </summary>
            <param name="expression">The expression to be formatted.</param>
            <param name="style">
            The style/specifier to format the expression according to.
            This specifier can now have four parts, as follows:
            <list type="table">
            	<listheader><term>Section</term><description>Description</description></listheader>
            	<item><term>First</term><description>A format specifier for positive numbers.</description></item>
            	<item><term>Second</term><description>A format specifier for negative numbers.</description></item>
            	<item><term>Third</term><description>A format specifier for zero values.</description></item>
            	<item><term>Fourth</term><description>A format specifier for null and <see cref="T:System.DBNull"/> values.</description></item>
            </list>
            </param>
            <returns>The formatted value.</returns>
            <remarks>The <see cref="!:Thread.CurrentThread.CurrentCulture"/> will be used for culture specific formatting as required.</remarks>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.Format(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
            The implementation of TextBox.OutputFormat property.
            </summary>
            <param name="expression">The value.</param>
            <param name="style">Format string</param>
            <param name="culture">CultureInfo</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.Format(System.Object,System.String,System.Globalization.CultureInfo,System.Collections.Generic.IDictionary{System.Int32,System.String}@)">
            <summary>
            The implementation of TextBox.OutputFormat property.
            </summary>
            <param name="expression">The value.</param>
            <param name="style">Format string</param>
            <param name="culture">CultureInfo</param>
            <param name="spaceDic">Output a dictionary which contains the index and 
            corresponding skip string.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.IsSkipCodeEnabled(System.Globalization.CultureInfo)">
            <summary>
            Check whether should support SkipCode in OutputFormat.
            </summary>
            <param name="culture">CultureInfo</param>
            <returns>When culture's NumberDecimalSeparator and NumberGroupSeparator contains 
            ship code, skip code should not take effect, so the return is false.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.CustomFormat(System.Object,System.String,System.String,System.Globalization.CultureInfo,System.Collections.Generic.IDictionary{System.Int32,System.String}@)">
            <summary>
            In the previous format process, we use .NET ToString Format. 
            In this method, format the text again under AR custom rules.
            </summary>
            <param name="value">The value.</param>
            <param name="text">The text.</param>
            <param name="style">Format string</param>
            <param name="culture">CultureInfo</param>
            <param name="spaceDic">Output a dictionary which contains the index and 
            corresponding skip string.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.FormatWithSkipCode(System.String,System.Collections.Generic.IDictionary{System.Int32,System.String}@)">
            <summary>
            Format with skip code.
            </summary>
            <param name="text">Text</param>
            <param name="spaceDic">Output the dictionary which contains
            the skip characters and their indexes.</param>
            <returns>The formatted value with skip code.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.PreProcessFormatString(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
            Pre-process format string: escape skip code and the char after skip code.
            </summary>
            <param name="value">The value</param>
            <param name="style">Format string</param>
            <param name="culture">CultureInfo</param>
            <returns>Escaped format string</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.PreProcessFormatSection(System.String)">
            <summary>
            Pre-process the section of format string: escape skip code and the char after skip code.
            </summary>
            <param name="section">The section of format string.</param>
            <returns>Escaped the section of format string.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.EscapeFormatStringWithSkipCode(System.String)">
            <summary>
            Escape format string with skip code.
            </summary>
            <param name="format">Format string.</param>
            <returns>Escaped format string.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.EscapeSkipCode(System.Text.RegularExpressions.Match)">
            <summary>
            Escape skip code.
            </summary>
            <param name="m">The results from a single regular expression match.</param>
            <returns>Escaped string with skip code.</returns>
        </member>
        <member name="M:DataDynamics.DDLib.DDFormat.CoreFormat(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
            Should be a replica of VB6/7's global Format function except it will accept a CultureInfo to format relative to.  
            There is an overload of this function that does not require a CultureInfo or you can pass null for this function's CultureInfo argument.
            We needed this for ActiveReports' Textbox.OutputFormat and nolonger can have any dependency on VB.
            </summary>
            <param name="expression">The expression to be formatted.</param>
            <param name="style">
            The style/specifier to format the expression according to.
            This specifier can now have four parts, as follows:
            <list type="table">
            	<listheader><term>Section</term><description>Description</description></listheader>
            	<item><term>First</term><description>A format specifier for positive numbers.</description></item>
            	<item><term>Second</term><description>A format specifier for negative numbers.</description></item>
            	<item><term>Third</term><description>A format specifier for zero values.</description></item>
            	<item><term>Fourth</term><description>A format specifier for null and <see cref="T:System.DBNull"/> values.</description></item>
            </list>
            </param>
            <param name="culture">Can be null to indicate that <see cref="!:Thread.CurrentThread.CurrentCulture"/> should be used for culture specific formatting as required.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="T:DataDynamics.DDLib.ResourcesLink">
            <summary>
            Don't touch this crap, it's used in many places. See Resharper->Find Usages
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.RichTextException">
            <summary>
            Summary description for Class1.
            </summary>
            
        </member>
        <member name="P:DataDynamics.DDWord.RichText.RTBWidth">
            <summary>
            Gets/sets the width of the RichTextBox control
            i need this for html decoding, if no width is specified
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.#ctor">
            <summary>
            Initialize Richtext; 
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.InitializeDocumentProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.EnableFields">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.LoadFile(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.LoadFile(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.LoadHtmlStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Loads a Htmlstream with encoding
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.LoadHtmlFile(System.String)">
            <summary>
            For loading html files
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SaveFile(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.RTF">
            <summary>
            
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.Html">
            <summary>
            Sets,Gets the Html. HTML returned is the original html
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SyncCharFormat(DataDynamics.DDWord.CharFormat)">
            <summary>
            SyncCharFormat
            
            When user sets the formatting programmatically by setting SelBold or calling SyncCharFormat,
            the change needs to be buffered until the very first character that will have to code is inserted
            Therefore we use a flag called m_bCharFormatPending to signal to insertchar/string/paragraph routines that they
            need to call textrun format after inserting new data. 
            
            The selection charformat is called m_selCharFormat, everytime it is modified m_bCharFormatPending should be set
            The current character format at the cursor position is assigned to m_selCharFormat when cursor moves.
            
            The difference from selCharFormat to current charformat at cursor position is stored in m_selMod; modifier object.
            
            </summary>
            <param name="charFormat"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SyncParaFormat(DataDynamics.DDWord.ParaFormat)">
            <summary>
            
            </summary>
            <param name="paragraphFormat"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CreateOptimizedModList(System.Int32,DataDynamics.DDWord.WPModifierList)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <param name="mods"></param>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalInsertChar(System.Char)">
            <summary>
            
            </summary>
            <param name="ch"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalInsertChar(System.Int32,System.Char)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <param name="ch"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalDeleteChars(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <param name="len"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalInsertString(System.String)">
            <summary>
            
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalInsertString(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="InsertPos"></param>
            <param name="s"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalEndParagraph">
            <summary>
            
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.FontCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.ColorCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetColor(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetFont(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetFontTable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalMergeFont(DataDynamics.DDWord.FontEntry,System.Int32@)">
            <summary>
            
            </summary>
            <param name="fontEntry"></param>
            <param name="destIndex"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalMergeStyle(System.String,System.Int32,DataDynamics.DDWord.ParaFormat,System.Int32@)">
            <summary>
            
            </summary>
            <param name="styleName"></param>
            <param name="styleid"></param>
            <param name="paraFormat"></param>
            <param name="destIndex"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalMergeColor(System.Drawing.Color,System.Int32@)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="destIndex"></param>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.RightToLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.Pictures">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetDefaultTabWidth(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetWidowCtrl(System.Boolean)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetLeftMargin(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetRightMargin(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetPaperWidth(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetPaperHeight(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:DataDynamics.DDWord.RichText.PictureTable">
            <summary>
            Class, containing pictures
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.PictureTable.GetItemAtCharPos(System.Int32)">
            <summary>
            Made internal for test purposes only
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.PictureTable.Render(System.Drawing.Graphics,System.Int32,System.Single,System.Single)">
            <summary>
            Renders picture on the graphics. 			
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.PictureTable.TryGetIndexWithGreaterCharPos(System.Int32,System.Int32@)">
            <summary>
            Gets index of the item with greater ir equal cp
            </summary>
            <returns>
            true, if such index was found
            </returns>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.PictureTable.PictItem.DrawingSize">
            <summary>
            Get the size which is used for drawing the image. Unit is inch.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.PictureTable.CalculateImageYOffset(System.Int32,System.Single,System.Single)">
            <summary>
            Calculate the image's y offset with considering baseline alignment.
            And the unit of the input and output data is inch.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.InsertPicture(System.Drawing.Image,DataDynamics.DDWord.Decoder.PictInfo)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="pictInfo"></param>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.ParagraphCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetTextLength">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetText(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetPosition(System.Int32)">
            <summary>
            
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ParaFormatDiff.OverridesParaFontAlignment">
            TODO: impl parafont alignment
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ParaFormatDiff.OverridesLanguage">
            TODO: impl override language
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ParaFormatDiff.OverridesKeepTogether">
            TODO : rtf keeptogether flag
        </member>
        <member name="T:DataDynamics.DDWord.RichText.CharFormatDiff">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesBold">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesItalic">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesCaps">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesTextColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesBackColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesHidden">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesRevisionMarkDel">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesProtected">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesStrike">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesSuperSubScript">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesVPosition">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesUnderline">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesFontSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesFontIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CharFormatDiff.OverridesFSpec">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.TextRunDiff.GetTable(System.Int32)">
            <summary>
            Returns a table at the table position.
            </summary>
            <param name="tablePos"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetTextRunDiff(System.Int32)">
            <summary>
            
            </summary>
            <param name="paraIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetRawData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.StyleSheet">
            <summary>
            
            </summary>
        </member>
        <member name="F:DataDynamics.DDWord.RichText.m_prevFormatWidth">
            <summary>
            // SelectionType : 
            		Empty No text is selected in the current selection. 
            		MultiChar More than one character is selected. 
            		MultiObject More than one Object Linking and Embedding (OLE) object is selected.
            		Object At least one Object Linking and Embedding (OLE) object is selected. 
            		Text The current selection contains only text. 
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.RichText.Multiline">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetFormattedHeight(System.Single)">
            <summary>
            Returns the formatted document height 
            </summary>
            <param name="docWidth">Width of Document</param>
            <returns></returns>
        </member>
        <member name="F:DataDynamics.DDWord.RichText.isDesignTime">
            <summary>
            for design time or run time rendering
            set in the render methods of ddword
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.CalcCut(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="docWidth"></param>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalTableStart">
            <summary>
            Inserts a new table in the table collection.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalTableStart(DataDynamics.DDWord.WPTable)">
            <summary>
            Inserts the table in the table collection.
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalInsertTableRow(DataDynamics.DDWord.WPTableRow)">
            <summary>
            Inserts a row in the current Table.
            </summary>
            <param name="tableRow">Row to be inserted; if null gets the previous row from the table</param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalTableRowEnd">
            <summary>
            End of a table row
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalInsertTableCell(DataDynamics.DDWord.WPTableCell)">
            <summary>
            Inserts a table cell in the current Row
            </summary>
            <param name="tableCell">Cell to be inserted</param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalTableCellEnd">
            <summary>
            call this one when i see \cell
            should not modify table or rows, just make sure the cp and the len is set up in here
            </summary>
            <param name="isRtfCell">if true refers to rtf cell handling, false; normal table cell addition</param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ExternalTableEnd">
            <summary>
            Specifies the end of a table.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.UpdateAlignmentForCell(DataDynamics.DDWord.WPTableCell,System.Int32)">
            <summary>
            Updates the right/left/center alignment for cell.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.PrepareFields">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.UpdateRtfFields(System.Object)">
            <summary>
            Update rtf fields with the value from the FieldCollection		
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SyncFields(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <param name="delta"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.ReplaceField(System.String,System.String)">
            <summary>
            Replaces the rtf fields with the values
            </summary>
            <param name="fieldName"></param>
            <param name="replaceString"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.Find(System.Char[])">
            <summary>
            
            </summary>
            <param name="characterSet"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.Find(System.Char[],System.Int32)">
            <summary>
            
            </summary>
            <param name="characterSet"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.Find(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.Find(System.String,System.Int32,DataDynamics.DDWord.RichText.FindOptions)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="start"></param>
            <param name="findOptions"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.RichText.RtfField">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.UpdateFieldValue(DataDynamics.DDWord.RichText.RtfField)">
            <summary>
            Updates the RtfField value; updated from RichText.ReplaceField
            </summary>
            <param name="inField"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetParagraphStartPosition(System.Int32)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.FindFontEntry(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="fontName"></param>
            <param name="charSet"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetCharFormatAndTextRun(System.Int32,System.Int32,DataDynamics.DDWord.WpTextRun@,DataDynamics.DDWord.CharFormat@)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="textRun"></param>
            <param name="charFormat"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetParaFormatAndTextRun(System.Int32,DataDynamics.DDWord.WpTextRun@,DataDynamics.DDWord.ParaFormat@)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="textRun"></param>
            <param name="paraFormat"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetFont(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetFont(System.Int32,System.Int32,System.Drawing.Font)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="font"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetIndent(DataDynamics.DDWord.RichText.IndentType,System.Int32)">
            <summary>
            
            </summary>
            <param name="iType"></param>
            <param name="cp"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetIndent(DataDynamics.DDWord.RichText.IndentType,System.Int32,System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="iType"></param>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="indent"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetJustify(System.Int32,System.Int32,System.Byte)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="jc"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetTextColor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetTextColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="color"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetCharOffset(System.Int32,System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="offset"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetCharOffset(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetProtected(System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="bProtect"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetProtected(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetTextBackColor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetTextBackColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="color"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.GetFontName(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.SetFontName(System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="cp"></param>
            <param name="len"></param>
            <param name="fontName"></param>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.T_GetTextLength">
            <summary>
            Returns the number of characters red in text buffer after decoding
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.T_GetLines">
            <summary>
            Return the lines collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.T_Format(System.Single)">
            <summary>
            Formats the document to generate the lines
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.T_GetTableList">
            <summary>
            Returns the collection of table.
            </summary>		
        </member>
        <member name="M:DataDynamics.DDWord.RichText.Clone">
            <summary>
            Implementaion of Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.RichText.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.HtmlDecoder">
            <summary>
            Wrapper for html text in form of an xml document(XMLDocument)
            Reads html in the form of a xml document and sets up the html text for richtext rendering.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.TestInit">
            <summary>
            Initializes internals for testing
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.TestInit(System.Xml.XmlDocument)">
            <summary>
            Initializes internals for testing
            </summary>
        </member>
        <member name="F:DataDynamics.DDWord.Decoder.HtmlDecoder._filePath">
            <summary>
            FilePath; used for images.
            </summary>
        </member>
        <member name="F:DataDynamics.DDWord.Decoder.HtmlDecoder._lastParaString">
            <summary>
            keeps last paragraph line (for tracking ending spaces)
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="htmlText"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Takes in a stream and the specified encoding for processing, m not sure if this is how it should be done
            </summary>
            <param name="stream">input stream containg text</param>
            <param name="encoding">encoding if the stream, if null encodong is set to unicode</param>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.HtmlDecoder.HtmlText">
            <summary>
            Get the html text
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.HtmlDecoder.Output">
            <summary>
            Get for Output(for debugging)
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.HtmlDecoder.FilePath">
            <summary>
            FilePath used for images.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.Decode(DataDynamics.DDWord.Decoder.ITextDecodeEvents,System.Single)">
            <summary>
            Takes in the target reference to decoder and the width in which the table has to fit
            </summary>
            <param name="target">RichText</param>
            <param name="width">Width to fit into</param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.Init(System.String)">
            <summary>
            Initializes the decoder with an input string
            </summary>
            <param name="errorFound"></param>
            <param name="htmlText"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.Init(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes the decoder with an input stream and an encoding
            </summary>
            <param name="errorFound"></param>
            <param name="stream"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.Init(System.String,System.IO.Stream,System.Text.Encoding)">
             <summary>
             Inits the xmlDoucment with the htmlText
             </summary>
             <param name="errorFound">out parameter, returns detalied error caught from an exception</param>
             <returns>true if there is no problem; the xmlDocument is loaded, in the xml format</returns>	
             <remarks>
             Processing to be done before the document is loaded into an xml document
             1. handling white spaces
             2. creating a forced parent/super root so that an xml structure is enforced(start tag, end tag)
             3. any special handling of the body tag
             4. line wraps
            </remarks>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetXmlDocument(System.String,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Returns a a textReader initialized from either an input string
            or a stream with/without encoding
            </summary>
            <param name="htmlInput"></param>
            <param name="stream"></param>
            <param name="encoding"></param>
            <returns></returns>	
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.VerifyInput(System.String)">
            <summary>
            Verifies whether the input is well formed or not,
            And sets the html text to "well-formed" xml.
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.VerifyInput(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Verifes input stream with given encoding for well formedness.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ParseHtml">
            <summary>
            takes in the tml text, parses the tags and sets it up for html rendering
            </summary>
            <param name="html">html to be parsed</param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ParseHtmlNode(System.Xml.XmlNode,DataDynamics.DDWord.CharFormat,DataDynamics.DDWord.ParaFormat,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Handles each node in the html input and sets the corresponding CharFormat and the ParaFormat properties for iRichText conversion.
            Each attributes value needs to be enclosed inside "".Apart from the style attribute most of the attributes define one single value.
            Style can define multiple parameters with a semicoln separated list.
            This method is called recursively.
            </summary>
            <param name="node">The current node in the html</param>
            <param name="charFormat">Object to set the properties of characters/text</param>
            <param name="paraFormat">Object to set the properties of a paragraph</param>
            <param name="isChpDirty">bool to determine when charFormat should be synched with iRichText</param>
            <param name="isParDirty">bool to determine when paraFormat should be synched with iRichText</param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.SetStyleAttributes(System.Xml.XmlAttribute,System.Int32,DataDynamics.DDWord.ParaFormat,DataDynamics.DDWord.CharFormat,DataDynamics.DDWord.FontEntry,System.Boolean@,System.Boolean@,System.Boolean@,System.String)">
            <summary>
            To set the values for the style attribute in the paragraph tag(can also occur in the font tag)
            style attribute can have multiple attribute value pair inside it(css style)
            </summary>
            <param name="xmlAttribute">Style attribute value</param>
            <param name="BASE_FONT_SIZE">BASE_FONT_SIZE=3, fontSize=24 points</param>
            <param name="paraFormat">ParaForamt</param>
            <param name="charFormat">CharFormat</param>
            <param name="fontEntry">fontEntry object to set up font values</param>
            <param name="isChpDirty">set to true, if charFormat changed</param>
            <param name="isParDirty">set to true, if paraFormat changed</param>		
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.HandleBorder(DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,System.String,GrapeCity.ActiveReports.Border,DataDynamics.DDWord.WPBorderWidth,GrapeCity.ActiveReports.BorderLineStyle@)">
            <summary>
            Handles Border through style tag
            </summary>
            <param name="eBorder"></param>
            <param name="attVal"></param>
            <param name="table"></param>
            <param name="cell"></param>
            <param name="border"></param>
            <param name="borderLineStyle"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.HandleMargins(DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,System.String,DataDynamics.DDWord.ParaFormat@,System.Boolean@)">
            <summary>
            Handles Margins through style tag
            </summary>
            <param name="eMargins"></param>
            <param name="attVal"></param>
            <param name="paraFormat"></param>
            <param name="isParDirty"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.HandlePadding(DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,System.String,GrapeCity.ActiveReports.Core.Document.DDLib.Table.Padding@)">
            <summary>
            This method handles Cell/table padding thru style attribute
            </summary>
            <param name="ePadding"></param>
            <param name="attVal"></param>
            <param name="table"></param>
            <param name="cell"></param>
            <param name="padding"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.HandleSpacing(DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,System.String,GrapeCity.ActiveReports.Core.Document.DDLib.Table.Spacing@)">
            <summary>
            Handles Spacing  through style tag
            </summary>
            <param name="eSpacing"></param>
            <param name="attVal"></param>
            <param name="spacing"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.HandleMiscellaneous(DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,System.String,DataDynamics.DDWord.CharFormat@,System.Boolean@,DataDynamics.DDWord.ParaFormat@,System.Boolean@)">
            <summary>
            Hanldes Miscellanous attributes
            </summary>
            <param name="eMisc"></param>
            <param name="attVal"></param>
            <param name="charFormat"></param>
            <param name="isChpDirty"></param>
            <param name="paraFormat"></param>
            <param name="isParDirty"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ConvertHtmlUnitsToRtfUnitsInPointsForFontTag(System.String,System.Int32,DataDynamics.DDWord.CharFormat)">
            <summary>
            To convert &lt;font&gt; tag sizes to rtf font sizes.  the value returned is in point
            		
            NOTE: em unit is implements as pt unit
            </summary>
            <param name="htmlFontSizeString">String with the html unit</param>
            <param name="BASE_FONT_SIZE">BASE_FONT_SIZE = 3 (correpsonds to 24 points)</param>
            <returns>Font size in points; default is 24</returns>		
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ConvertHtmlUnitsToTwips(System.String,System.Single)">
            <summary>
            This method converts html units to twips
            The twips conversion is required for setting the text indent for the paragraphs		
            1 inch = 1440 twips, 1cm = 567 twips, 1 pt = 20 twips, 
            </summary>
            <param name="htmlFontSizeString">String with the html unit</param>
            <param name="baseSizeUnit">BASE_FONT_SIZE = 3 (correpsonds to 24 points)</param>
            <returns>Value size in twips; default is 1440</returns>		
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ConvertImgUnitsToTwips(System.String,System.Int32)">
            <summary>
            To Convert values specified for image height and width into twips
            The width and height of an image is specified only in pixels
            </summary>
            <param name="input">Font Size value</param>
            <param name="BASE_FONT_SIZE">BASE_FONT_SIZE = 3 (correpsonds to 24 points) </param>
            <returns>Value in twips; default is 200px</returns>			
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ConvertHTagsFontSizeToRtfFontSizeInPoints(System.Int32)">
            <summary>
            To Convert &lt;H&gt; tags value &lt;H1&gt;- &lt;H7&gt; into a font size; &lt;h1&gt; correpsonds to fonstSize of 15
            </summary>
            <param name="size">Value from 1 to 7</param>
            <returns>Returns Font Size in points; default is 24</returns>		
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetLineHeightInTwips(System.String,System.Int32,DataDynamics.DDWord.CharFormat)">
            <summary>
            To Convert line height dimension to twips
            1 inch = 1440 twips, 1cm = 567 twips, 1 pt = 20 twips, 
            </summary>
            <param name="input">Value of line height</param>
            <param name="BASE_FONT_SIZE">BaseFontSize==3, correpsonds to 24 points</param>
            <returns>Line Height in twips</returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetColorValues(System.String)">
            <summary>
            To convert a color value from string to Color
            A color is specified by a name or #ffffff(hexadecimal format)
            </summary>
            <param name="htmlColorString">Color string</param>
            <returns>Color; default is Color.Black</returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetImageInfoFromImgTag(System.Xml.XmlAttribute,DataDynamics.DDWord.Decoder.PictInfo.PictureType@)">
            <summary>
            Return image from a uri or a local path specified as string
            </summary>
            <param name="xmlAtt">XMLAttribute containg the uri</param>
            <param name="pictType">Contains information about the image; such as height, width etc., 
            the pictType is one of the PictInfo.PictType enumeration(for eg. jpg)</param>
            <returns>Image</returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetImageAfterException(System.String)">
            <summary>
            Run this routine if i have to go image hunting from img tag
            </summary>
            <param name="uriPath">Path to image specieid in img; src attribute</param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ResetParaformatAfterBefore(DataDynamics.DDWord.ParaFormat@,System.Int32)">
            <summary>
            Resets paraFormat dyaBefore and dyAfter to 0 or default
            </summary>
            <param name="paraFormat">paraFormat to be modified</param>
            <param name="value">if value = 0; set it to 0 otherwise to default</param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetCurrentFontIndex(System.Int32,System.Char@)">
            <summary>
            returns the current font index for unordered lists
            </summary>
            <param name="currentIndex">index that represents how deep the list is</param>
            <param name="charFormat">charFormat, whose iFontIndex needs to be set</param>
            <param name="outChar">the character that has to be inserted at each ul level</param>
            <returns>return the fontIndex</returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.SetTabstopForListItems(System.Single,System.Int32)">
            <summary>
            Sets the tab stop for lists(ul and ol tags ) based on the defaultTabWidth parameter in pixels
            </summary>
            <param name="defaultTabWidth">DEFAULT_TAB_STOP parameter(.25f, .5f)</param>
            <param name="tabCounter">current tabstop counter in pixels</param>
            return the tab stop oition to be set
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ValidateOLTagTypeAttribute(System.String)">
            <summary>
            Ensures bullet type is '1', a', 'A', 'i', or 'I'.
            </summary>
            <param name="bulletType">Type fo bullet.</param>
            <returns>Character representing teh bullet.</returns>
            <remarks>
            Get the different bullet types that can be specified in the OL tag attribute "type"
            the various types are 
            	Type 	Numbering style
            	1 	arabic numbers 	1, 2, 3, ...
            	a 	lower alpha 	a, b, c, ...
            	A 	upper alpha 	A, B, C, ...
            	i 	lower roman 	i, ii, iii, ...
            	I 	upper roman 	I, II, III, ...
            </remarks>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ValidateOLStartTypeAttribute(System.String)">
            <summary>
            Validates OL: start attribute input and LI: value attribute input
            </summary>
            <param name="startValue"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetBulletTypeForLITag(System.String)">
            <summary>
            get the type fo bullet specified inside the li tag
            the possible values are disc, square, circle
            </summary>
            <param name="attributeName"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetInputStringForRomanNumbering(System.Int32,System.Int32)">
            <summary>
            Returns the upper or lower roman number to be inserted as a bullet
            </summary>
            <param name="counter">the counter from which a bullet needs to be created</param>
            <param name="romanType">i or I(lower roman or upper Roman</param>
            <returns>string to be inserted</returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetCurrentBulletFromChar(System.Int32,System.Int32)">
            <summary>
            To get values if the ol type is "a", "A"
            </summary>
            <param name="number"></param>
            <param name="baseChar"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.SetTableBorder(System.String,System.Boolean)">
            <summary>
            Set the border if specified thru "border" tag on table
            </summary>
            <param name="borderWidthString"></param>
            <param name="isTableCell"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.DebugPrint(System.String)">
            <summary>
            Print for debugging
            </summary>
            <param name="str">input string </param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetStyleAtrribute(System.String)">
            <summary>
            Returns the CssEnum based on the attribute name
            </summary>
            <param name="attributeName">name of the attribute </param>
            <returns>correpsonding enum or CssEnum.NONE </returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetValuesFromParameter(System.String)">
            <summary>
            Returns the parameter values as a collection of string.
            Reason fr having this function is to eliminate any "" in the string[] when it is split
            </summary>
            <param name="paramValues"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetBorderWidthUnits(System.String,GrapeCity.ActiveReports.BorderLineStyle@)">
            <summary>
            Border width can be a number, or can be a one of thin, thick or medium
            </summary>
            <param name="param"></param>
            <param name="borderLineStyle"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetBorderLineStyle(System.Single,System.String,GrapeCity.ActiveReports.BorderLineStyle@)">
            <summary>
            Gets one of the following borderLine styles
            none | dotted | dashed | solid | double | groove | ridge | inset | outset
            </summary>
            <param name="attVal">parameter value</param>
            <param name="borderLineStyle">borderLineStyle to be set</param>
            <returns>true if found one, default returns false</returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.SetBorderColor(System.Drawing.Color,DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,GrapeCity.ActiveReports.Border)">
            <summary>
            Set color for border.
            </summary>
            <param name="color">Color for border.</param>
            <param name="borderType">Border type.</param>
            <param name="border">Border to set color.</param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.SetBorderLineStyle(GrapeCity.ActiveReports.BorderLineStyle,DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,GrapeCity.ActiveReports.Border)">
            <summary>
            Set line style for border.
            </summary>
            <param name="borderLineStyle">Border line style.</param>
            <param name="borderType">Border type.</param>
            <param name="border">Border to set line style.</param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.SetBorderProperties(DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum,System.String,GrapeCity.ActiveReports.Border,DataDynamics.DDWord.WPBorderWidth,GrapeCity.ActiveReports.BorderLineStyle@)">
            <summary>
            
            </summary>
            <param name="attVal"></param>
            <param name="border"></param>
            <param name="borderLineStyle"></param>
            <param name="borderWidth"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.Initialize">
            <summary>
            Initaializes the members.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ProcessInputText(System.String)">
            <summary>
            Problem was that an extra space before text and afer text.
            Idea is look for the prevString if it ends with " " and then look for the current string and see if it starts or ends with " "
            </summary>
            <param name="iString"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.GetParaAlignment(System.String)">
            <summary>
            Return the paragraph alignment
            </summary>
            <param name="attVal"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ParseRGBValues(System.String)">
            <summary>
            Parse RGB values; returns Color.Empty for parse failed
            </summary>
            <param name="rgbColor"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.ConvertWhiteSpaces(System.String)">
            <summary>
            To Handle whitespaces in html specified as &#160; (;nbsp)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.RemoveSingleQuotes(System.String)">
            <summary>
            To remove single quotes in html
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HtmlDecoder.Dispose(System.Boolean)">
            <summary>
            TODO: 
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.HtmlDecoder.CssEnum">
            <summary>
            Enum for all the attributes inside the style attribute
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.HtmlDecoder.NestedCellIndex">
            <summary>
            Struct to hold the Row, columns and table counters for nested cell
            Implelemntation has been commented out for now.
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.HTMLDocumentException">
            <summary>
            Summary description for HTMLDocumentException.
            theis class cathces all the eceptions in the html document class
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.HTMLErrorCollection">
            <summary>
            Stores all the errors encountered during the parsing of html document
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HTMLErrorCollection.#ctor">
            <summary>
            Initialize the string collection for errors.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HTMLErrorCollection.Add(System.String)">
            <summary>
            Add an error mesage to the collection.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.HTMLErrorCollection.ToString">
            <summary>
            Get the ToString representation of all the errors 
            found while decoding the html document.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.RTFDecoder">
            <summary>
            Summary description for RTFDecoder.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ResetCharacterProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ResetParagraphProperties">
            <summary>
            Resets the paragraph to its default properties. and sets paragraph = dirty
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ResetSectionProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.SetChpDirty">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.SetPapDirty">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.BeforeOutput">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecPrintChar(System.Char)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.GetCodePageFromCharSet(System.Int32)">
            <summary>
            
            </summary>
            <param name="charset"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParseChar(System.Char)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecPushRtfState">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecPopRtfState">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ThrowRTFException(DataDynamics.DDWord.Decoder.RTFDecoder.RTFResCode)">
            <summary>
            Throws Exception during parsing of rtf.
            </summary>
            <param name="ec"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.InitDecode">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.getc">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ungetc">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.EOF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.Decode(System.String,DataDynamics.DDWord.Decoder.ITextDecodeEvents)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="target"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.Decode(System.IO.Stream,DataDynamics.DDWord.Decoder.ITextDecodeEvents)">
            <summary>
            
            </summary>
            <param name="dataStream"></param>
            <param name="target"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.InternalDecode(DataDynamics.DDWord.Decoder.ITextDecodeEvents)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="F:DataDynamics.DDWord.Decoder.RTFDecoder.m_curKeywordIndex">
            <summary>
            get a control word (and value)
            call ecTranslateKeyword to dispatch to target
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParseRtfKeyword">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecTranslateKeyword(System.String,System.Int32,System.Boolean)">
            <summary>
            
            Search rgsymRtf for szKeyword and evaluate it appropriately.
            Inputs:
            szKeyword   The RTF control to evaluate.
            param       The parameter of the RTF control.
            fParam      TRUE if the control had a parameter; (that is, if param is valid)
                         FALSE if it did not.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecChangeDest(DataDynamics.DDWord.Decoder.IPROP)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecApplyPropChange(DataDynamics.DDWord.Decoder.IPROP,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecApplyStylePropChange(DataDynamics.DDWord.Decoder.IPROP,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.RTFDecoder.TopLeftBotRight">
            <summary>
            Enum to determine the current cell's top, left, bottom, right property
            that i am handling.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecApplyPropChangeEx(DataDynamics.DDWord.ParaFormat,DataDynamics.DDWord.CharFormat,DataDynamics.DDWord.Decoder.IPROP,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.RTFDecoder.RTFStyleEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.TransferStyleSheet">
            <summary>
            Transfers/Stores all the stylesheet infomation obtained from the rtf into styleMap/styleEntries, 
            and merges styles with the target.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.TransferFontTable">
            <summary>
            Transfers/Stores all the font table infomation obtained from the rtf into fontMap, and merges font with the target.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.TransferColorTable">
            <summary>
            Transfers/Stores all the color table infomation into colorMap, and merges colors with the target.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecEndGroupAction(DataDynamics.DDWord.Decoder.RDS)">
            <summary>
            Handles the end of groups in rtf, the group enums are defined in enum RDS.
            TODO: RDS.rdsListTable, RDS.rdsListTableList, RDS.rdsListTableLevel are not handled
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ConvertPictInfoToImage(DataDynamics.DDWord.Decoder.PictInfo)">
            <summary>
            Converts picture from stream obtained from rtf into an Image(Metafile, only the EMF and WMETAFILE picture types).
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.CreateStreamFromStream(System.IO.Stream)">
            <summary>
            Create stream with png format from picItfo (case 179573)
            </summary>
            <param name="pict"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.CreateBitmapFromDib(System.IO.Stream)">
            <summary>
            code from http://www.codeproject.com/Messages/2609843/Creating-Bitmap-from-DIB-without-PInvoke-Code-insi.aspx
            </summary>
            <param name="dib"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.CheckIfTableStarted">
            <summary>
            Checks if the table has already been started
            </summary>		
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParseSpecialKeyword(DataDynamics.DDWord.Decoder.RTFKeywords.KeywordItem@)">
            <summary>
            Parses special control words. (these control words are commented as funcs on line 467 of RTFKeywords.cs)
            (control words are : bin, page, line, para, *, ')
            the keyword types are : KeywordType.kwdSpec
            keyWordItem: struct containg the info abt the control words..
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParseColorTableKeyword(System.String,System.Int32,System.Boolean)">
            <summary>
            Parses Color table control words.
            szKeyWord: rtf control word.
            param: numeric digit associated with the control word.
            fParam: = true, if a there is digit after the control word (means we have a parameter).
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParseStyleSheetKeyword(System.String,System.Int32,System.Boolean)">
            <summary>
            Parses Style sheet control words.
            szKeyWord: rtf control word.
            param: numeric digit associated with the control word.
            fParam: = true, if a there is digit after the control word (means we have a parameter).
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParseFontTableKeyword(System.String,System.Int32,System.Boolean)">
            <summary>
            Parses Font table control words.
            szKeyWord: rtf control word.
            param: numeric digit associated with the control word.
            fParam: = true, if a there is digit after the control word (means we have a parameter).
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParsePicture(System.String,System.Int32,System.Boolean)">
            <summary>
            Parses picture control word from rtf.
            szKeyWord: rtf control word.
            val: numeric digit associated with the control word.  assigned to mapMode of the pictInfo object
            fParam: = true, if a there is digit after the control word (means we have a parameter).
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.ecParseListTableKeyword(System.String,System.Int32,System.Boolean)">
            <summary>
            TODO: Parse list table keywords.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.HexReader.#ctor(System.IO.Stream,System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="dest"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.HexReader.#ctor(System.String,System.Int32,System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="sourceStr"></param>
            <param name="sourcePos"></param>
            <param name="dest"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.HexReader.InitializeConversionTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.HexReader.TransferHex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.HexReader.TransferHex(System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytesRead"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.HexReader.TransferHexString(System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytesRead"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.HexReader.TransferHexStream(System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytesRead"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.BurstRead">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.RTFDecoder.IsLeadByte(System.Char)">
            <summary>
            
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.RTFKeywords">
            <summary>
            Summary description for RTFKeywords.
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.Sgml.SgmlReader">
            <summary>
            SgmlReader is an XmlReader API over any SGML document (including built in support for HTML).  
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.Dtd">
            <summary>
            Specify the SgmlDtd object directly.  This allows you to cache the Dtd and share
            it across multipl SgmlReaders.  To load a DTD from a URL use the SystemLiteral property.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.DocType">
            <summary>
            The name of root element specified in the DOCTYPE tag.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.StripDocType">
            <summary>
            Whether to strip out the DOCTYPE tag from the output.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.PublicIdentifier">
            <summary>
            The PUBLIC identifier in the DOCTYPE tag
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.SystemLiteral">
            <summary>
            The SYSTEM literal in the DOCTYPE tag identifying the location of the DTD.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.InternalSubset">
            <summary>
            The DTD internal subset in the DOCTYPE tag
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.InputStream">
            <summary>
            The input stream containing SGML data to parse.
            You must specify this property or the Href property before calling Read().
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.WebProxy">
            <summary>
            Sometimes you need to specify a proxy server in order to load data via HTTP
            from outside the firewall.  For example: "itgproxy:80".
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.SetBaseUri(System.String)">
            <summary>
            The base Uri is used to resolve relative Uri's like the SystemLiteral and
            Href properties.  This is a method because BaseURI is a read-only
            property on the base XmlReader class.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.Href">
            <summary>
            Specify the location of the input SGML document as a URL.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.ErrorLog">
            <summary>
            DTD validation errors are written to this stream.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.SgmlReader.ErrorLogFile">
            <summary>
            DTD validation errors are written to this log file.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.Sgml.WebPage.#ctor(System.String)">
            <summary>
            Initializes the parser with a html text
            </summary>
            <param name="htmlPage"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.Sgml.WebPage.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="P:DataDynamics.DDWord.Decoder.Sgml.WebPage.Document">
            <summary>
            The outer xml on the document give the wellformed xml style html
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.Sgml.WebPage.ParseDtd(System.Xml.XmlNameTable)">
            <summary>
            
            </summary>
            <param name="nt"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Decoder.Sgml.WebPage.ParsePageText">
            <summary>
            
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Decoder.Sgml.DoctypeDtdException">
            <summary>
            Problems with the DOCTYPE DTD; probably that it was incorrect.  Correct it.
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.Encoder.RTFEncoder">
            <summary>
            Summary description for RTFEncoder.
            
            Encoding involves the following steps:
            
            write out RTF header
            write out \pard \plain infront of each paragraph to reset default paragraph properties
            if the paragraph is using a new style use \s[number] to select style
            
            !MS Word writes out basic paragraph properties again although it doesn't need to
            ! this might be to protect againsts buggy RTFreaders, but makes the rtf huge.
            
            After paragraph reset and style select a  { } section is started which contains the actual paragraph content
            Paragraphs are terminated with \par code.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.Output(System.String)">
            <summary>
            Appends a string to the rtf stream.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.Output(System.Char)">
            <summary>
            Appends a character to the rtf stream.
            </summary>
            <param name="ch"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.PrettyTab(System.Int32)">
            <summary>
            Appends "tabCount" number of tabs.  Only for Debugging the output.
            </summary>
            <param name="tabCount"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.PrettyLine">
            <summary>
            Appends a new line character to the rtf stream.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.Encode(System.String@,DataDynamics.DDWord.RichText)">
            <summary>
            Encodes the richtext and outputs the rt stream as string.
            </summary>
            <param name="str"></param>
            <param name="doc"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.Encode(System.IO.Stream,DataDynamics.DDWord.RichText)">
            <summary>
            Encodes the richtext and outputs the rt stream as datastream.
            </summary>
            <param name="dataStream"></param>
            <param name="doc"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteRTFTables">
            <summary>
            Write RTF tables
            
            The font table format is:
            	{\fonttbl
            		{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
            		{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
            		....
            	}
            	
            	
            	
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteStyleSheet">
            <summary>
            Writes the rtf sytlesheet; \stylesheet..
            </summary>
        </member>
        <member name="F:DataDynamics.DDWord.Encoder.RTFEncoder.tblStack">
            <summary>
            to figure out par tag for table
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteContent">
            <summary>
            Writes the content to the rtf 
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteParagraphStyleForOldReaders(DataDynamics.DDWord.RichText.ParaFormatDiff,System.Boolean@)">
            <summary>
            Writes paragraph styles for old rtf readers.
            </summary>
            <param name="paraDiff"></param>
            <param name="canPostFix"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteCharFormatDiff(DataDynamics.DDWord.RichText.CharFormatDiff,System.Boolean@)">
            <summary>
            Writes the formatting info that changed between contents.
            </summary>
            <param name="charDiff"></param>
            <param name="canPostFix"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteParagraphDiff(DataDynamics.DDWord.RichText.ParaFormatDiff,System.Boolean@)">
            <summary>
            Writes the paragraph diffs between 2 consecutive paragraphs
            </summary>
            <param name="paraDiff"></param>
            <param name="canPostFix"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteRTFHeader">
            <summary>
            Write rtf format header
            
            typical MSWord output is :
            {\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch11\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.CloseRTFHeader">
            <summary>
            Coloses the rtf header with }
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WritePicture(DataDynamics.DDWord.RichText.PictureTable.PictItem)">
            <summary>
            Writes the picture
            {\pict\wmetafile8\picwgoal3234\pichgoal2097 
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteMetafileInfo(System.Drawing.Image,DataDynamics.DDWord.Decoder.PictInfo)">
            <summary>
            Writes the metaFile info for the image.
            </summary>
            <param name="img"></param>
            <param name="goalSizeInTwips"></param>
            <param name="pictInfo"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.GenMetafileData(System.Byte[])">
            <summary>
            Generated MetaFileData (in hex)
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.InitializeRowDefaults(DataDynamics.DDWord.WPTable,DataDynamics.DDWord.WPTableRow,System.Int32)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <param name="row"></param>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteRow(DataDynamics.DDWord.WPTable,DataDynamics.DDWord.WPTableRow)">
            <summary>
            Writes a table row
            </summary>
            <param name="table"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.WriteCell(DataDynamics.DDWord.WPTable,GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes a table cell
            </summary>
            <param name="table"></param>
            <param name="cell"></param>
            <param name="rowIndex"></param>
            <param name="cellIndex"></param>
            <param name="isFakeCell"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.EndTableRow">
            <summary>
            Ends a table cell
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.EndTableCell">
            <summary>
            Ends a table row
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.GetBorderInfo(DataDynamics.DDWord.Encoder.RTFEncoder.TLBR,GrapeCity.ActiveReports.Border,System.Boolean)">
            <summary>
            Gets the rtf control words for border 
            </summary>
            <param name="tlbr">enum for top, left, bottom, right</param>
            <param name="borderLineStyle"></param>
            <param name="borderColor"></param>
            <param name="isCell"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.GetRtfBorderWidth(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.GetBorderStyle(GrapeCity.ActiveReports.BorderLineStyle)">
            <summary>
            gets the border styles from the bordeLineStyles
            </summary>
            <param name="borderLineStyle"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.InitializeRowColumnCount(DataDynamics.DDWord.WPTable)">
            <summary>
            
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.GetMergeCellRowIndex(System.Int32,System.Int32)">
            <summary>
            Gets the cell index where the merge started; 
            looks for _rowColspans[row, col ] == 1, in the same column of the cell.
            </summary>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.OutputString(System.Char,System.Int32)">
            <summary>
            
            </summary>
            <param name="ch"></param>
            <param name="codePage"></param>
        </member>
        <member name="M:DataDynamics.DDWord.Encoder.RTFEncoder.OutputNonAscChar(System.Char,System.Int32)">
            <summary>
            Output the char which is larger than 255
            </summary>
            <param name="ch"></param>
            <param name="codePage"></param>
        </member>
        <member name="T:DataDynamics.DDWord.Encoder.RTFEncoder.TLBR">
            <summary>
            Enum for Top, left, bottom Right
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WPFormatter">
            <summary>
            Summary description for WPFormatter.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.#ctor(GrapeCity.ActiveReports.Core.Document.DeviceInfo,DataDynamics.DDWord.WpStyleSheet,System.Collections.Generic.IList{DataDynamics.DDWord.FontEntry},DataDynamics.DDWord.WPParaList,DataDynamics.DDWord.WPTextRunList,DataDynamics.DDWord.WpTextBuffer,DataDynamics.DDWord.RichText.PictureTable,System.Collections.Generic.IList{System.Int32},DataDynamics.DDWord.WPTableList,System.Collections.Generic.IList{System.String})">
            <summary>
            Constructor
            </summary>
            <param name="info"></param>
            <param name="styleSheet"></param>
            <param name="fontTable"></param>
            <param name="papList"></param>
            <param name="textRuns"></param>
            <param name="text"></param>
            <param name="pictTable"></param>
            <param name="colors"></param>
            <param name="tableList"></param>
            <param name="hyperlinks"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.Dispose">
            <summary>
            Clears the formatter
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.GetColorByIndex(System.Int32)">
            <summary>
            Returns Color based on index in the color table.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.Format(System.Single,System.Boolean)">
            <summary>
            Format , formats the whole document and sets the DocumentHeight property
            </summary>
            <param name="docWidth">width for rtb to format</param>
            <param name="bMultiline">multiline</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.FindLinePositionLessEqual(System.Single)">
            <summary>
            Finds line position less or equal to pos returns false if pos exceeds doc height
            // TODO: optimize using binary search
            </summary>
            <param name="pos">pos to cut at</param>
            <returns>line position</returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.FormatRegion(System.Drawing.PointF,System.Single,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            FormatRegion 
            Formats a region of text at origin and returns the height of that part. If bGenStripes is true it will generate the actual stripes
            otherwise it will just measure what the height would be.
            
            For things like table cells, this function is called multiple times to determine cell heights and origin
            would be used to place final text when generating stripes on a second pass
            
            m_text[endFormatPos] is excluded from formatting so  length=endFormatPos-startFormatPos
            </summary>
            <param name="origin">start location</param>
            <param name="docWidth">RTB control width</param>
            <param name="startFormatPos">start position from where to start formatting</param>
            <param name="endFormatPos">start position from where to start formatting</param>
            <param name="bGenStripes">if true, will generate lines</param>
            <param name="bMultiline">value for multiline</param>
            <returns>Returns the formatted size of the text</returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.FormatTableRegion(DataDynamics.DDWord.WPTable,System.Drawing.PointF,System.Single,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Foramts the table region, return the current format position  for the table
            </summary>
            <param name="table"></param>
            <param name="origin"></param>
            <param name="docWidth"></param>
            <param name="startFormatPos"></param>
            <param name="endFormatPos"></param>
            <param name="bGenStripes"></param>
            <param name="bMultiline"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.GetFontForCharFormat(DataDynamics.DDWord.CharFormat)">
            <summary>
            Returns font for a char format.
            </summary>
            <param name="chp"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.CalcLineSpacing(DataDynamics.DDWord.LineSpace,System.Single,DataDynamics.DDWord.WPFormatter.LineDesc@)">
            <summary>
            Calculates line spacing
            </summary>
            <param name="lineSpacing"></param>
            <param name="maxAscentOnLine"></param>
            <param name="curline"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.Render(System.Drawing.Graphics,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Design time rendering
            </summary>
            <param name="g"></param>
            <param name="outRect"></param>
            <param name="startOffset"></param>
            <param name="endOffset"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.RenderToPage(System.Drawing.Graphics,GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Drawing.PointF,System.Single,System.Single,System.Single)">
            <summary>
            Render to Page
            </summary>
            <param name="page"></param>
            <param name="pageOffset"></param>
            <param name="docWidth"></param>
            <param name="startPos"></param>
            <param name="endPos"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.GetPieceText(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            If current PieceText is before the first PieceText which has content,
            It will trim the white space of leading characters.
            If current PieceText is after the last PieceText which has content,
            It will trim the white space of trailing characters.
            </summary>
            <param name="originPieceText">the origin text for PieceText</param>
            <param name="index">the index of current PieceText</param>
            <param name="startIndex">the first index in TextPieces which has content</param>
            <param name="endIndex">the last index in TextPieces which has content</param>
            <returns>PieceText</returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.FindFirstContentIndex(System.Collections.Generic.IList{DataDynamics.DDWord.WPFormatter.LineDesc.TextPiece},System.Boolean)">
            <summary>
            Search from beginning of pieces, find the first text piece which contains content.
            </summary>
            <param name="textPieces"></param>
            <param name="specialBulletsCase"></param>
            <returns>Return the piece index.</returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.FindLastContentIndex(System.Collections.Generic.IList{DataDynamics.DDWord.WPFormatter.LineDesc.TextPiece},System.Boolean)">
            <summary>
            Search from ending of pieces, find the first text piece which contains content.
            </summary>
            <param name="textPieces"></param>
            <param name="specialBulletsCase"></param>
            <returns>Return the piece index.</returns>
        </member>
        <member name="P:DataDynamics.DDWord.WPFormatter.Lines">
            <summary>
            Returns generated Lines
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.DebugLines(DataDynamics.DDWord.WPFormatter.LineDesc)">
            <summary>
            DebugLines
            </summary>
            <param name="lineDesc"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.DebugString(System.String)">
            <summary>
            Debug
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.NormalizeLineFeeds(System.String)">
            <summary>
            NormalizeLineFeeds for rtf" different from textbox in the replacemments.
            Instead of replacing to \n, we replace to \r.
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.WPFormatter.FontCache">
            <summary>
            FontCache class 
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.FontCache.GetFont(System.String,System.Single,System.Drawing.FontStyle,System.Byte)">
            <summary>
            Creates a font. font creating used GraphicsUnit.Point as its graphic unit.
            </summary>
            <param name="faceName">font faceName</param>
            <param name="size">font size</param>
            <param name="fontStyle">fontStyle</param>
            <param name="gdiCharSet">gdiCharset</param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.WPFormatter.LineDesc">
            <summary>
            m_lines represents the formatted lines with LineDesc.TextPiece representing a piece of text
            that has common formatting characteristics
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.LineDesc.DebugLine">
            <summary>
            Debug information about line for NUnit purposes
            pieceCount, lineHeight, bsaeLinePos
            </summary>
            <returns></returns>			
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.LineDesc.DebugInfo">
            <summary>
            Oututs teh Debug Information for NUnit Tests.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.LineDesc.TextPiece.DebugPiece">
            <summary>
            Debug information about piece for NUnit tests
            X, fontSize, fontName, foreColor, backColor
            </summary>
            <returns></returns>				
        </member>
        <member name="M:DataDynamics.DDWord.WPFormatter.LineDesc.TextPiece.DebugInfo">
            <summary>
            Outputs the debug information for NUnit Testing
            </summary>				
        </member>
        <member name="T:DataDynamics.DDWord.WPParaList">
            <summary>
            Summary description for WPParaList.
            
            Holds a list of paragraphs that can be references using the character position. Returns a WPPapEntry
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPParaList.SetTabChange(DataDynamics.DDWord.ParaFormat,System.Int32,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Byte})">
            <summary>
             The format is :  
             1 byte : total size for record
             1 byte : deletecount
             deleteCount*2 bytes of delete positions
             deletecount*2 bytes of dxaClose values
             1 byte : addcount
             addcount*2 of add positions
             addcount of add descriptors
             
            </summary>
            <param name="pBase"></param>
            <param name="cp"></param>
            <param name="destTabPos"></param>
            <param name="destTabDesc"></param>
        </member>
        <member name="F:DataDynamics.DDWord.WPParaList.WPPapEntry.cp">
            <summary>
            this is the coordinate of char 13 or end of document
            </summary>
        </member>
        <member name="F:DataDynamics.DDWord.WPParaList.WPPapEntry.m_papmod">
            <summary>
             modifier list for paragraph properties
            </summary>
        </member>
        <member name="F:DataDynamics.DDWord.WPModifierList.sprmPLanguage">
            <summary>
            paraformat language for modifiers
            I picked 0x43.
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WPModifierList.FormatOverrideFlag">
            <summary>
            
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WPModifierList.OverrideFlag">
            <summary>
            
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPModifierList.GetOverrideFlags(DataDynamics.DDWord.WPModifierList.OverrideFlag@,DataDynamics.DDWord.WPModifierList.FormatOverrideFlag@)">
            <summary>
            
            </summary>
            <param name="flags1"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPModifierList.Dump(DataDynamics.DDWord.WpStyleSheet,System.Int32,System.Collections.ArrayList)">
            <summary>
            For tests only
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPModifierList.SetLanguage(System.Int16)">
            <summary>
            Sets the changed language modifer in the modfier data
            </summary>
            <param name="language"></param>
        </member>
        <member name="T:DataDynamics.DDWord.WpTextRun">
            <summary>
            Summary description for WPPieceTable.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTextRunList.Format(System.Int32,System.Int32,DataDynamics.DDWord.WPModifierList,System.Int32@)">
            <summary>
            Format function will do merge formatting when you format the middle of other text runs
            However if user is just adding(or streaming in) data, the modList appends will cause lots of extra data
            For example bold=true would cause a bold=false insert and modifiers would start piling up , therefore
            this function will return false in the case and will ask the caller to call FormatEx with a new modlist that
            only specifies the difference from the base style
            </summary>
            <param name="cp"></param>
            <param name="formatLen"></param>
            <param name="modList"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.WpStyle">
            <summary>
            WpStyle : style sheet item
            </summary>
            
        </member>
        <member name="T:DataDynamics.DDWord.WpStyleSheet">
            <summary>
            Summary description for WpStyleSheet.
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WPTableList">
            <summary>
            Maintains a list of all the tables parsed in current rtf/html document.
            </summary>
        </member>
        <member name="F:DataDynamics.DDWord.WPTableList.IsDesignTime">
            <summary>
            separating design time and run time rendering code
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.GetTableAtPos(System.Int32)">
            <summary>
            Returns table at the specified position. 
            This is the table startPosition in the text buffer of richText.
            </summary>
            <param name="tablePositon">Position where the table starts</param>
            <returns>Table</returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.RenderToGraphics(System.Drawing.Graphics,System.Int32,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Renders the table on to graphics.
            </summary>
            <param name="g">Graphics to render on to</param>
            <param name="tableIndex">Index of the table; which is the table start position: table.cp</param>
            <param name="tableOffset">Offset</param>
            <param name="startPos">StartPosition for the table; fed through Rich Text Box</param>
            <param name="endPos">EndPosition for the table; fed through Rich Text Box</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.RenderToPage(GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Int32,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single)">
            <summary>
            Renders the table on to page(viewer).
            Creates a PagesRenderContext on which the table will render itself
            </summary>
            <param name="page">Page to render on to</param>
            <param name="tableIndex">Index of the table; which is the table start position: table.cp</param>
            <param name="pageOffSet">Page Offset</param>
            <param name="tableOffSet">Offset</param>
            <param name="docWidth">Width of the document(page); Used to compute bounds in which the table will render itself</param>
            <param name="startPos">StartPosition for the table; fed through Rich Text Box</param>
            <param name="endPos">EndPosition for the table; fed through Rich Text Box</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.LayoutTables(System.Single)">
            <summary>
            Lays out the table; Following steps are carried out.
            1. Sets the width and location of the table.
            2. Computes row and col spanfor rtf tables only.
            3. Computes the padding for table and cell accordingly.
            4. Updates borders information on cell; for html table only.
            5. Table's border, cellPadding, cellSpacing informationis copied to each rows; for proper encoding. 		
            </summary>
            <param name="availableWidth">Width of the RichTextBox control</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.ReLayoutTables(System.Single)">
            <summary>
            Lays out the table again by forcing any table that needs to be laid out again 
            by making it FixedLayout and teh tables' width to be the availableWidth. 
            </summary>		
            <param name="availableWidth">Width of RichTextBox control</param>
            <remarks>
            Lays out the table again if after first attempt the width of any of the tables 
            in the document exceeded the width of the RichTextBox width. Table's NeedsRelayout
            property will be true.
            All the table in the document HAS to fit along the x-direction.
            </remarks>		
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.VerifyTableWidths(System.Single)">
            <summary>
            Verifies each table in the document, if its width exceeds the RichTextBox's width.
            If it does, flags the table for another layout.
            </summary>
            <param name="availableWidth">Width of RichTextBox</param>
            <returns>True if any of the table needs to be laid out again.</returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.UpdateTablePositions(System.Int64,System.Int32)">
            <summary>
            Updates table's current position and cell's start and end positions if there are any rtf fields.
            </summary>
            <param name="curPos">Position where the shift starts</param>
            <param name="offset">Position by which table and cells needs to offset their start and end positions.</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableList.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.WPTable">
            <summary>
            Represents a rtf/html Table, inherits from BaseTable.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.#ctor(System.Boolean)">
            <summary>
            Initializes the table.
            </summary>
            <param name="isHtmlTable">Set to false is it is a rtf table.</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.#ctor">
            <summary>
            Initializes a rtf table
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.Render(GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext)">
            <summary>
            Render method
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.ResetComingRows(System.Int32)">
            <summary>
            Resets all the subsequent rows' split information to false.
            Used during computing CalcCut() for the table.
            </summary>
            <param name="counter">Current row counter</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.SetWidthAndLocation(DataDynamics.DDWord.WPTableRow,System.Single)">
            <summary>
            Sets the width and Location of the table.  
            Dependent of whether the table is a html table or rtf table.
            </summary>
            <param name="row">The first visible row; used for rtf tables because rtf has the value stored in rows instead of table.</param>
            <param name="totalContentWidth">Available width for the table to fit in</param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.ComputePadding">
            <summary>
            Set cell padding info for the cell; if the cell's padding info is not specified in the rtf, 
            it is same as the tables padding information.  
            In that case cells' Top, Bottom, Left, Right padding values are = -1 (by default)
            and then sets the table's cell padding to first row's cell padding info.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.UpdateRowsForHTMLTables">
            <summary>
            Sets the padding, spacing, border info for table to all the rows,
            since the encoding is done using rows information rather than table information.
            </summary>
            <remarks>
            rtf table already has the the information in its rows.		
            </remarks>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.GetCellWithMaxLines(DataDynamics.DDWord.WPTableRow)">
            <summary>
            Returns the cell in the row with which has the most number of lines.
            Used for CalcCut.  
            TODO: This logic will change, because of cells in the row having different cellspacing, borderwidths, rowspans, etc.. values.
            Need to determine which cell in a row is the best one to use to calculate cut.
            </summary>
            <param name="row">Current row</param>
            <returns>Cell with max lines</returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.UpdateBordersForCell">
            <summary>
            Cell's Border are updated to table's border html Tables.  A Cell can override this only if it's border 
            is specified through the style attribute on the cell.		
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.GetCellAt(System.Int32,System.Int32)">
            <summary>
            Returns Cell at row, col index
            </summary>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.GetLayoutRow(System.Int32,System.Int32@)">
            <summary>
            Gets the layoutRow for the current row, also sets layoutRowindex.
            </summary>
            <param name="rowIndex"></param>
            <param name="layoutRowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.UpdateCellWidthsForTable(System.Single)">
            <summary>
            
            </summary>
            <param name="rowIndex"></param>
            <param name="tableWidth"></param>
        </member>
        <member name="P:DataDynamics.DDWord.WPTable.RealWidth">
            <summary>
            To store table width infomation for html tables.  once it has been encoded into a rtf, the tablewidth info is not written down
            To make sure html table is treated as it was read the first time, I use this property.
            It is only set for html table
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.PrintCpAndEndP">
            <summary>
            Print current position and endPosition in rtf stream for the cells
            </summary>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.DDWord.WPTable.IsHTMLTable">
            <summary>
            Return whether the cell or the table is html/rtf table
            Default is Rtf.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTable.MRCL">
            <summary>
            Get/Set MergedRowColumnList for the table. 
            Contains information about the cell merges in rtf document. 
            Contains cell's row and column indices.
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTable.BorderWidth">
            <summary>
            BorderWidth of table
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTable.Item(System.Int32)">
            <summary>
            Indexer for Row
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.PrintRowColSpans">
            <summary>
            Print row and col spans for the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.ResetRowSpans">
            <summary>
            Resets the row span values for cells to 1
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.ResetColSpans">
            <summary>
            Resets the col span values for cells to 1
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.DoColSpans">
            <summary>
            Computes column spans for the table
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.DoRowSpans">
            <summary>
            Computes the Row Spans for the table
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.FindTableCellAt(System.Int32,System.Int32,System.Int32)">
            <summary>
            Finds table cell at given row and column index and the xWidth of cell
            Used in computing Row Span for rtf
            </summary>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="xWidth"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.ComputeRowColSpans">
            <summary>
            Computes the row and col spans for the table. Only for html table.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.GetRowAt(System.Int32)">
            <summary>
            Gets the row at the specified index; used in rtf decoder, when 2 rows are part of the same /trowd control word
            In that case i have to get the previous row with cells that has already been inserted
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.Clone">
            <summary>
            Clone of a table object
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.WPTable.MergedRowColumnList">
            <summary>
            Contains a list of all the MergedRowColumnInfo in teh rtf document.
            <see cref="T:DataDynamics.DDWord.WPTable.MergedRowColumnInfo"/>		
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.MergedRowColumnList.GetRowIndex(System.Int32,System.Int32)">
            <summary>
            ROWSPAN
            Returns the row index for the cell where the vertical merge Starts;
            returns -1 if not found
            </summary>
            <param name="curRowIndex">current RowIndex for the cell</param>
            <param name="colIndex">current ColumnIndex for the cell</param>
            <returns>rowIndex for the cell in the same column where the merege starts.</returns>
        </member>
        <member name="T:DataDynamics.DDWord.WPTable.MergedRowColumnInfo">
            <summary>
            Holds row and column index for the cell where vertical and horizontal merge starts.
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WPTable.AscendingSort">
            <summary>
            Ascending sort for computing row/col spans for the table
            Uses the xWidth of the cells to compute the row and column spans
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.AscendingSort.Compare(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="obj1"></param>
            <param name="obj2"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.ComputeCellWidthsForHtmlTables(System.Single)">
            <summary>
            This method will be called ONLY for FixedLayout.it Returns if fixedlayout is valid, otherwise default to AutoLayout. 
            This method will assign cell widths to each cell in fixedlayout.
            In fixed layout: table should/need/must have "table-layout:fixed" in the style attribute of the table tag.
            if width on table is specified without the "table-layout:fixed" it still goes thru AutoLayout.
            BTW mozilla hoses the fixed layout big time. IE does it better :)
            THIS ONE IS FOR IE.
            And here is what is happening here:
            If the cell width has been specified, it is honored otherwise it gets te percentage of the table width
            based on the number of cells in the FIRST row, NOT including the cells with cell width specified..
            MAKE SURE: the cells, tables width are ALWAYS in twips/or same units( i am doin face value comparison)
            TODO: do i need to take col spans into account here ????	
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.ComputeCellWidthsForRTFTables(System.Single)">
            <summary>
            I am doin this, because my one attempt to do both the rtf and html table layout failed miserabley.
            
            </summary>
            <param name="totalTableWidth">rtb width in inches</param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.CalculateValue(System.Drawing.Graphics,System.Single,GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType)">
            <summary>
            Calculates the value in inches based on the unitType.
            </summary>
            <param name="graphics"></param>
            <param name="val"></param>
            <param name="unitType"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTable.OffSet(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Offsets the rectangle with width, height, top and bottom
            </summary>
            <param name="input"></param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="top"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.WPTableRow">
            <summary>
            Represents a table row
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableRow.#ctor">
            <summary>
            Defaults the row properties
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableRow.Render(GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext)">
            <summary>
            Render Method
            <para>
            	<br/>Render a table row.  If the table has a TableRender use the TableRender otherwise
            	see if we have a built in RenderContext Drawing code
            </para>
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableRow.CellPadding">
            <summary>
            Default Row cell padding 
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableRow.CellSpacing">
            <summary>
            Row Cell spacing TODO: check if i need this
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableRow.BorderWidth">
            <summary>
            Border Width
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableRow.TableRowInfo">
            <summary>
            Contains additional info about the row.
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WPTableCell">
            <summary>
            Represents a table cell		
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.#ctor(System.Boolean)">
            <summary>
            Defaults all the properties of the cell. 
            Takes in a boolean to specify if it is a html cell or rtf cell.
            Value of false means it is a rtf cell		
            </summary>
            <param name="isHtmlCell"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.#ctor">
            <summary>
            Constructs a rtf cell.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.Render(GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext)">
            <summary>
            Render Method
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.HasNoWidthUnit">
            <summary>
            
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.ChildTable">
            <summary>
            TODO: for nested tables.
            Gets/Sets the child table for a cell
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.ParentRow">
            <summary>
            TODO: parent row of the cell, i think is available thru site
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.TableCellInfo">
            <summary>
            Contains additional information aboutt the cell, that is not being used in the Base table layout.		
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.BorderWidth">
            <summary>
            Cells Border Widths
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.CurrentPosition">
            <summary>
            Current position of the cell in the rtf text buffer
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.EndPosition">
            <summary>
            End position of the cell in the rtf text buffer
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.Length">
            <summary>
            Gets/sets the length = endposition - currentposition (wrt rtf m_text)
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.HasOwnPadding">
            <summary>
            To determine if the Padding for the cells needs to be updated
            Only for html cells.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.ToString">
            <summary>
            Prints the cell current position and end position
            </summary>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ActualWidth" -->
        <!-- Badly formed XML comment ignored for member "P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ActualHeight" -->
        <!-- Badly formed XML comment ignored for member "P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#MinWidth" -->
        <!-- Badly formed XML comment ignored for member "P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#MaxWidth" -->
        <!-- Badly formed XML comment ignored for member "P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#Height" -->
        <!-- Badly formed XML comment ignored for member "M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CalculateMinWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CalculateMaxWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)" -->
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CalculateHeight(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Single)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#Bounds">
            <summary>
            Bounds
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CellSpacing">
            <summary>
            CellSpacing
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#Site" -->
        <!-- Badly formed XML comment ignored for member "P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#StartingColumn" -->
        <member name="P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#StartingRow">
            <summary>
            StartingRow
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ResetLayoutData">
            <summary>
            ResetLayoutData
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.System#IComparable#CompareTo(System.Object)">
            <summary>
            CompareTo
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ReadXml(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#WriteXml(System.Xml.XmlElement)">
            <summary>
            
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#ITableCell#Bounds">
            <summary>
            Cells Bounds
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.Attributes">
            <summary>
            Cells Attributes
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#ITableCell#TagName">
            <summary>
            Cells Tag
            </summary>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#ITableCell#Visible">
            <summary>
            GEts/Sets whether the cell should be visible or not
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ShallowClone">
            <summary>
            Clones a table Cell
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#ITableCell#Clone">
            <summary>
            Clones a table Cell
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.SetMinSize(System.Drawing.SizeF,System.Int32)">
            <summary>
            The min size is set to size returned by the content of the cell; based on the height of the row.
            This min size needs to be further modified based on the border, padding, etc. which is done by table.Layout
            </summary>
            <param name="size"></param>
            <param name="rowHeight"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GetContentBounds">
            <summary>
            Returns the bounds for the contents		
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GetContentlayoutWidth(System.Single,System.Boolean)">
            <summary>
            Returns the Layoutwidth for Cell.
            Html cell will susbstact the padding and the borderWidth from it the cell's width, because 
            cells width is an absolute vaalue for a html cell.
            Rtf cell will return the cell width as it is.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DataDynamics.DDWord.WPTableCell.Lines">
            <summary>
            Lines that contain the cell conent information
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.RenderToGraphics(System.Drawing.Graphics,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Renders the content of cell to graphics, no border rendering here
            </summary>
            <param name="g"></param>
            <param name="outRect"></param>
            <param name="startOffset"></param>
            <param name="endOffset"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.RenderContentToPage(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Drawing.PointF,System.Single,System.Single,System.Single)">
            <summary>
            Renders the cell content on a page
            </summary>
            <param name="page"></param>
            <param name="pageOffset"></param>
            <param name="docWidth"></param>
            <param name="startPos"></param>
            <param name="endPos"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.RenderToPage(GrapeCity.ActiveReports.Controls.Table.PagesRenderContext)">
            <summary>
            Renders the content of a cell on its page in the given context.
            </summary>
            <param name="ctx"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.CalculateValue(System.Drawing.Graphics,System.Single,GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType)">
            <summary>
            Calculates the value in inches.
            </summary>
            <param name="graphics"></param>
            <param name="val"></param>
            <param name="unitType"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.DebugLines">
            <summary>
            Debuging lines
            </summary>
            <returns></returns>		
        </member>
        <member name="M:DataDynamics.DDWord.WPTableCell.GetBounds">
            <summary>
            Returns the CellBounds
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.TableRowInfo">
            <summary>
            value holder for info read from the rtf 
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.TableCellInfo">
            <summary>
            info abt the table cell from the rtf
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.BorderConstants">
            <summary>
            Constants or different border types from the rtf specification
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WPTableRender">
            <summary>
            Custom rendering for rtf/html tables.
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableRender.GrapeCity#ActiveReports#Core#Document#DDLib#Table#ITableRender#TableRender(GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable,GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext)">
            <summary>
            Renders a Table 
            </summary>
            <param name="table"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableRender.GrapeCity#ActiveReports#Core#Document#DDLib#Table#ITableRender#RowRender(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row,GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext)">
            <summary>
            Renders a Table Row.
            </summary>
            <param name="row">row to be rendered.</param>
            <param name="context">context on which the row needs to render to.</param>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPTableRender.GrapeCity#ActiveReports#Core#Document#DDLib#Table#ITableRender#CellRender(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell,GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext)">
            <summary>
            Renders a Table cell.
            </summary>
            <param name="cell"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:DataDynamics.DDWord.WPBorderWidth">
            <summary>
            Internal class to store cell/row/table border width.
            Sets the values in inches
            </summary>
        </member>
        <member name="M:DataDynamics.DDWord.WPBorderWidth.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataDynamics.DDWord.WPBorderWidth.ConvertFromBorderMargins(GrapeCity.ActiveReports.Border.BorderMargins)">
            <summary>
            
            </summary>
            <param name="margins"></param>
        </member>
        <member name="M:DataDynamics.DDWord.WPBorderWidth.SetAll(System.Single)">
            <summary>
            Sets the top, bottom, left, right values.
            </summary>
            <param name="borderWidth"></param>
        </member>
        <member name="T:DataDynamics.DDWord.TableConstant">
            <summary>
            Am going to put table contstant in here
            </summary>
        </member>
        <member name="T:DataDynamics.DDWord.WpTextBuffer">
            <summary>
            Summary description for TextBuffer.
            </summary>
        </member>
        <member name="T:DataDynamics.Shared.MetafileSaver">
            <summary>
            Will save a System.Drawing.Image object to various metafile encodings to stream, or to file.
            </summary>
        </member>
        <member name="M:DataDynamics.Shared.MetafileSaver.GetWinMetaFileBitsExtern(System.IntPtr,System.UInt32,System.IntPtr,System.Int32,System.IntPtr)">
             <summary>
             The GetWinMetaFileBits function converts the enhanced-format records from a metafile into Windows-format records and stores the converted records in the specified buffer. 
             </summary>
             <param name="hemf">[in] Handle to the enhanced metafile.</param>
             <param name="cbBuffer">[in] Specifies the size, in bytes, of the buffer into which the converted records are to be copied.</param>
             <param name="lpBuffer">[out] Pointer to the buffer that receives the converted records. If lpbBuffer is NULL, GetWinMetaFileBits returns the number of bytes required to store the converted metafile records.</param>
             <param name="fnMapMode">[in] Specifies the mapping mode to use in the converted metafile.</param>
             <param name="hdcRef">[in] Handle to the reference device context.</param>
             <returns>
             If the function succeeds and the buffer pointer is NULL, the return value is the number of bytes required to store the converted records; if the function succeeds and the buffer pointer is a valid pointer, the return value is the size of the metafile data in bytes.
             If the function fails, the return value is zero.
             Windows NT/2000/XP: To get extended error information, call GetLastError.
             </returns>
             <remarks>
             ///From Platform SDK:
            UINT GetWinMetaFileBits(
            	HENHMETAFILE hemf, // handle to the enhanced metafile
            	UINT cbBuffer,     // buffer size
            	LPBYTE lpbBuffer,  // records buffer
            	INT fnMapMode,     // mapping mode
            	HDC hdcRef         // handle to reference DC
            	);
            	
             From Header file: WINGDIAPI UINT  WINAPI GetWinMetaFileBits( IN HENHMETAFILE, IN UINT, OUT LPBYTE, IN INT, IN HDC);
             </remarks>
        </member>
        <member name="M:DataDynamics.Shared.MetafileSaver.GlobalLockExtern(System.IntPtr)">
            <summary>
            The GlobalLock function locks a global memory object and returns a pointer to the first byte of the object's memory block (from Platform SDK Docs).
            </summary>
            <param name="hMem">[in] Handle to the global memory object. This handle is returned by either the GlobalAlloc or GlobalReAlloc function.</param>
            <returns>
            If the function succeeds, the return value is a pointer to the first byte of the memory block.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
            <remarks>
            The internal data structures for each memory object include a lock count that is initially zero. For movable memory objects, GlobalLock increments the count by one, and the GlobalUnlock function decrements the count by one. For each call that a process makes to GlobalLock for an object, it must eventually call GlobalUnlock. Locked memory will not be moved or discarded, unless the memory object is reallocated by using the GlobalReAlloc function. The memory block of a locked memory object remains locked until its lock count is decremented to zero, at which time it can be moved or discarded.
            Memory objects allocated with GMEM_FIXED always have a lock count of zero. For these objects, the value of the returned pointer is equal to the value of the specified handle.
            If the specified memory block has been discarded or if the memory block has a zero-byte size, this function returns NULL.
            Discarded objects always have a lock count of zero.
            
            Definition from Platform SDK Documentation:
            LPVOID GlobalLock(
             HGLOBAL hMem
            );
            
            </remarks>
        </member>
        <member name="M:DataDynamics.Shared.MetafileSaver.GlobalUnlockExtern(System.IntPtr)">
            <summary>
            The GlobalUnlock function decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE. This function has no effect on memory objects allocated with GMEM_FIXED.
            </summary>
            <param name="hMem">[in] Handle to the global memory object. This handle is returned by either the GlobalAlloc or GlobalReAlloc function.</param>
            <returns>
            If the memory object is still locked after decrementing the lock count, the return value is a nonzero value.
            If the function fails, the return value is zero. To get extended error information, call GetLastError. If GetLastError returns NO_ERROR, the memory object is unlocked.
            </returns>
            <remarks>
            The internal data structures for each memory object include a lock count that is initially zero. For movable memory objects, the GlobalLock function increments the count by one, and GlobalUnlock decrements the count by one. For each call that a process makes to GlobalLock for an object, it must eventually call GlobalUnlock. Locked memory will not be moved or discarded, unless the memory object is reallocated by using the GlobalReAlloc function. The memory block of a locked memory object remains locked until its lock count is decremented to zero, at which time it can be moved or discarded.
            Memory objects allocated with GMEM_FIXED always have a lock count of zero. If the specified memory block is fixed memory, this function returns TRUE.
            If the memory object is already unlocked, GlobalUnlock returns FALSE and GetLastError reports ERROR_NOT_LOCKED.
            A process should not rely on the return value to determine the number of times it must subsequently call GlobalUnlock for a memory object.
            
            
            Definition from Platform SDK: 
            BOOL GlobalUnlock(
            HGLOBAL hMem
            );
            
            </remarks>
        </member>
        <member name="M:DataDynamics.Shared.MetafileSaver.UnmanagedWmfFromImage(System.Drawing.Image,System.Int32)">
            <summary>
            Converts an System.Drawing.Image derived object to a 16 bit compatable WMF image with no headers.  
            This is required with Excel 95's imaging implementation.
            </summary>
            <param name="image">The System.Drawing.Image object to be converted to a the old style WMF bytes.</param>
            <param name="mappingMode">Specifies the mapping mode to be used in the converted metafile.</param>
            <returns>A byte array containing the 16 bit wmf image data.</returns>
        </member>
        <member name="M:DataDynamics.Utility.LayoutUtils.ClampNegativePaddingToZero(GrapeCity.ActiveReports.PaddingEx)">
            <summary>
            Updates the negative padding values to zero
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:AssemblyNames">
            <summary>
            Contains strong assembly names and such
            </summary>
        </member>
    </members>
</doc>
