<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrapeCity.ActiveReports.Core.Export.Excel.Page</name>
    </assembly>
    <members>
        <member name="P:GrapeCity.SharpCells.Areas.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>int</c>
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Areas.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
            <paramref name="index">
            Required <c>int</c>. The index number of the object.
            </paramref>
        </member>
        <member name="T:GrapeCity.SharpCells.Axes">
            <summary>
            Summary description for Axes.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axes.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axes.Item(GrapeCity.SharpCells.AxisType,GrapeCity.SharpCells.AxisGroup)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axes.Item(GrapeCity.SharpCells.AxisType)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Axis">
            <summary>
            Represents a single axis in a chart. The Axis object is a member of the <c>Axes</c> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.AxisBetweenCategories">
            <summary>
            True if the value axis crosses the category axis between categories. Read/write <c>bool</c>.
            </summary>
            <remarks>This property applies only to category axes, and it doesn't apply to 3-D charts.</remarks> 
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.AxisGroup">
            <summary>
            Returns the group for the specified axis. Read-only <c>AxisGroup</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.AxisTitle">
            <summary>
            Use the AxisTitle property to return an <c>AxisTitle</c> object. 
            The following example activates embedded chart one, sets the value axis title text, 
            sets the font to Bookman 10 point, and formats the word millions as italic.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.BaseUnitIsAuto">
            <summary>
            True if Microsoft Excel chooses appropriate base units for the specified category axis.
             The default value is True. Read/write <c>bool</c>.
            </summary>
            <remarks>You cannot set this property for a value axis.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.CategoryNames">
            <summary>
            Returns or sets all the category names for the specified axis, as a text array.
             When you set this property, you can set it to either an array or a Range object
              that contains the category names. Read/write <c>object</c>.
            </summary>
            <remarks>Category names are really a property of the "special" series in an axis grouping.
            Deleting or modifying that special series will change the category names for all series 
            using the axis.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.CategoryType">
            <summary>
            Returns or sets the category axis type. Read/write <c>CategoryType</c>.
            </summary>
            <remarks>You cannot set this property for a value axis.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.Crosses">
            <summary>
            Returns or sets the point on the specified axis where the other axis crosses. 
            Read/write <c>AxisCrosses</c>. Can be one of the <c>AxisCrosses</c> constants 
            listed in the following table. 
            </summary>
            <remarks>This property isn't available for radar charts.
             For 3-D charts, this property indicates where the plane defined by the 
             category axes crosses the value axis.This property can be used for both category 
             and value axes. On the category axis, <c>Minimum</c> sets the value axis to cross at 
             the first category, and <c>Maximum</c> sets the value axis to cross at the last category.
             Note that <c>Minimum</c> and <c>Maximum</c> can have different meanings, depending on the axis.
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.CrossesAt">
            <summary>
            Returns or sets the point on the value axis where the category axis crosses it.
             Applies only to the value axis. Read/write <c>double</c>.
            </summary>
            <remarks> 
            Setting this property causes the <c>Crosses</c> property to change to <c>AxisCrossesCustom</c>.
            This property cannot be used on radar charts. For 3-D charts, this property indicates where the 
            plane defined by the category axes crosses the value axis.
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.HasMajorGridlines">
            <summary>
            True if the axis has major gridlines. Only axes in the primary axis group can have 
            gridlines. Read/write <c> bool </c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.HasMinorGridLines">
            <summary>
            True if the axis has minor gridlines. Only axes in the primary axis group can have 
            gridlines. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.HasTitle">
            <summary>
            True if the axis or chart has a visible title. Read/write <c>bool</c>.
            </summary>
            <remarks>The <c>AxisTitle</c> object doesnï¿½t exist and cannot be used unless the 
            <c>HasTitle</c> property for the axis is True.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MajorGridlines">
            <summary>
            Returns a <c>Gridlines</c> object that represents the major gridlines for the specified axis. 
            Only axes in the primary axis group can have gridlines. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MajorTickMark">
            <summary>
            Returns or sets the type of major tick mark for the specified axis. 
            Read/write <c>TickMark</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MajorUnit">
            <summary>
            Returns or sets the major units for the axis. Read/write <c>double</c>.
            </summary>
            <remarks>Setting this property sets the <c>MajorUnitIsAuto</c> property to <c>False</c>.
            Use the <c>TickMarkSpacing</c> property to set tick mark spacing on the category axis. </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MajorUnitIsAuto">
            <summary>
            <c>True</c> if Microsoft Excel calculates the major units for the axis. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MaximumScale">
            <summary>
            Returns or sets the maximum value on the axis. Read/write <c>double</c>.
            </summary>
            <remarks>Setting this property sets the <c>MaximumScaleIsAuto</c> property to <c>False</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MaximumScaleIsAuto">
            <summary>
            True if Microsoft Excel calculates the maximum value for the axis. Read/write <c>bool</c>.
            </summary>
            <remarks>Setting the <c>MaximumScale</c> property sets this property to <c>False</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MinimumScale">
            <summary>
            Returns or sets the maximum value on the axis. Read/write <c>double</c>.
            </summary>
            <remarks>Setting this property sets the <c>MaximumScaleIsAuto</c> property to <c>False</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MinimumScaleIsAuto">
            <summary>
            <c>True</c> if Microsoft Excel calculates the maximum value for the axis. Read/write <c>bool</c>.
            </summary>
            <remarks>Setting the <c>MaximumScale</c> property sets this property to <c>False</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MinorGridlines">
            <summary>
            Returns a <c>Gridlines</c> object that represents the minor gridlines for the specified axis.
             Only axes in the primary axis group can have gridlines. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MinorTickMark">
            <summary>
            Returns or sets the type of minor tick mark for the specified axis. Read/write <c>TickMark</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MinorUnit">
            <summary>
            Returns or sets the minor units on the axis. Read/write <c>double</c>.
            </summary>
            <remarks>Setting this property sets the <c>MinorUnitIsAuto</c> property to <c>False</c>.
            	Use the <c>TickMarkSpacing</c> property to set tick mark spacing on the category axis.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.MinorUnitIsAuto">
            <summary>
            <c>True</c> if Microsoft Excel calculates minor units for the axis. Read/write <c>bool</c>.
            </summary>
            <remarks>Setting the <c>MinorUnit</c> property sets this property to <c>False</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.ReversePlotOrder">
            <summary>
            <c>True</c> if Microsoft Excel plots data points from last to first. Read/write <c>bool</c>.
            </summary>
            <remarks>This property cannot be used on radar charts.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.ScaleType">
            <summary>
            Returns or sets the value axis scale type. Read/write <c>ScaleType</c>.
            </summary>
            <remarks>A logarithmic scale uses base 10 logarithms.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.TickLabelPosition">
            <summary>
            Describes the position of tick-mark labels on the specified axis. 
            Read/write <c>TickLabelPosition</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.TickLabelSpacing">
            <summary>
            Returns or sets the number of categories or series between tick-mark labels.
             Applies only to category and series axes. Read/write <c>long</c>.
            </summary>
            <remarks>Tick-mark label spacing on the value axis is always calculated by Microsoft Excel.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.TickMarkSpacing">
            <summary>
            Returns or sets the number of categories or series between tick marks. 
            Applies only to category and series axes. Read/write long.
            </summary>
            <remarks>Use the <c>MajorUnit</c> and <c>MinorUnit</c> properties to set tick-mark spacing on the value axis.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Axis.Type">
            <summary>
            Returns or sets the <c>Axis</c> type. Read/write <c>AxisType</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.AxisTitle">
            <summary>
            Use the <c>AxisTitle</c> property to return an <c>AxisTitle</c> object. 
            The following example activates embedded chart one, sets the value axis title text,
             sets the font to Bookman 10 point, and formats the word millions as italic.
            </summary>
            <remarks>The <c>AxisTitle</c> object doesnï¿½t exist and cannot be used unless the 
            <c>HasTitle</c> property for the axis is <c>True</c>.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Caption">
            <summary>
            The axis title text. Read/write string.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Font">
            <summary>
            Returns a <c>Font</c> object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.HorizontalAlignment">
            <summary>
            Returns or sets the horizontal alignment for the specified object. Read/write <c>object</c>.
            </summary>
            <remarks>Some of these constants may not be available to you, depending on the language support that you've selected or installed.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Orientation">
            <summary>
            The text orientation. Can be an integer value from  ï¿½ 90 to 90 degrees. 
            Read/write <c>object</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Shadow">
            <summary>
            <c>True</c> if the font is a shadow font or if the object has a shadow. Read/write <c>bool</c>.
            </summary>
            <remarks>For the <c>Font</c> object, this property has no effect in Microsoft Windows, 
            but its value is retained (it can be set and returned).	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.Text">
             <summary>
             Returns or sets the text for the specified object. 
             </summary>
            <remarks> Read-only <c>string</c> for the <c>Range</c> object, read/write <c>string</c> for all other objects.
            For information about using the <c>Text</c> worksheet function in Visual 
            Basic, see Using Worksheet Functions in Visual Basic. For the <c>Phonetic</c> object, this property 
            returns or sets its phonetic text. You cannot set this property to <c>Null</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.AxisTitle.VerticalAlignment">
            <summary>
            Returns or sets the vertical alignment of the specified object. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.AxisTitle.Delete">
             <summary>
             Deletes the object.
             </summary>
             <remarks>Deleting a <c>Point</c> or <c>LegendKey</c> object deletes the entire series.
            You can delete custom document properties, but you cannot delete a built-in 
            document property.</remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.BooleanWrapper">
            <summary>
            Same as boolean but can be also <c>null</c>
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Border">
            <summary>
            Represents the border of an object.
            For internal use only.
            </summary>
            <remarks>Most bordered objects (all except for the <c>Range</c> and <c>Style</c> objects) 
            have a border thatï¿½s treated as a single entity, regardless of how many sides it has. 
            The entire border must be returned as a unit. Use the <c>Border</c> property to return the 
            <c>Border</c> object for this kind of object. The following example activates the chart sheet named Chart1 
            places a dashed border around the chart area for the active chart and places a dotted border
             around the plot area.</remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Border.#ctor(GrapeCity.SharpCells.Borders,GrapeCity.SharpCells.BordersIndex)">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Border.Color">
            <summary>
            Returns or sets the primary color of the object, as shown in the following table. 
            Use the <c>RGB</c> function to create a color value. Read/write <c>Color</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Border.ColorIndex">
            <summary>
            Returns or sets the color of the border. 
            </summary>
            <remarks>The color is specified as an index 
            value into the current color palette, or as one of the following <c>ColorIndex</c> 
            constants. Read/write <c>int</c>.</remarks> 
        </member>
        <member name="P:GrapeCity.SharpCells.Border.LineStyle">
            <summary>
            Returns or sets the line style for the border. Read/write <c>LineStyle</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Border.Weight">
            <summary>
            Returns or sets the weight of the border. Read/write <c>BorderWeight</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Borders">
            <summary>
            A collection of four <c>Border</c> objects that represent the four borders
             of a <c>Range</c> or <c>Style</c> object.
            For internal use only.
            </summary>
            <remarks>Use the <c>Borders</c> property to return the <c>Borders</c> collection, 
            which contains all four borders. The following example adds a double border 
            to cell A1 on worksheet one.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Borders.Color">
            <summary>
            Returns or sets the primary color of the object, as shown in the following table.
             Use the <c>RGB</c> function to create a color value. Read/write Color.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Borders.ColorIndex">
            <summary>
            Returns or sets the color of all four borders. Returns <c>Null</c> if all four borders 
            aren't the same color. The color is specified as an index value into the current 
            color palette, or as one of the following <c>ColorIndex</c> constants. Read/write Int.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Borders.Item(GrapeCity.SharpCells.BordersIndex)">
            <summary>
            Returns a <c>Border</c> object that represents one of the borders of either a range of cells or a style.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Borders.LineStyle">
            <summary>
            Returns or sets the line style for the border. Read/write <c>LineStyle</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Borders.Weight">
            <summary>
            Returns or sets the weight of the border. Read/write <c>BorderWeight</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.BuiltInStyles">
            <summary>
            Summary description for BuiltInStyles.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Chart">
            <summary>
            Represents a chart in a workbook. The chart can be either an embedded chart 
            (contained in a <c>ChartObject</c>) or a separate chart sheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Walls">
            <summary>
            Returns a <c>Walls</c> object that represents the walls of the 3-D chart. 
            </summary>
            <remarks>This property doesn't apply to 3-D pie charts.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Visible">
            <summary>
            Determines whether the object is visible. Read/write SheetVisibility.
            </summary>
            <remarks>The <c>Visible</c> property for a PivotTable item is <c>True</c> if the item 
            is currently visible in the table. If you set the <c>Visible</c> property for a name 
            to <c>False</c>, the name won't appear in the Define Name dialog box. </remarks>
            TODO: API incompatibility
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.AutoScaling">
            <summary>
            <c>True</c> if Microsoft Excel scales a 3-D chart so that it's closer in size to the 
            equivalent 2-D chart. The <c>RightAngleAxes</c> property must be <c>True</c>. Read/write bool.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.ChartArea">
            <summary>
            Returns a <c>ChartArea</c> object that represents the complete chart area for the chart. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.ChartTitle">
            <summary>
            Returns a <c>ChartTitle</c> object that represents the title of the specified chart.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.ChartType">
            <summary>
            Returns or sets the chart type. Read/write <c>ChartType</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.DepthPercent">
            <summary>
            Returns or sets the depth of a 3-D chart as a percentage of the chart 
            width (between 20 and 2000 percent). Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.DisplayBlanksAs">
            <summary>
            Returns or sets the way that blank cells are plotted on a chart. 
            Can be one of the following <c>DisplayBlanksAs</c> constants: <c>NotPlotted</c>, 
            <c>Interpolated</c>, or <c>Zero</c>. Read/write <c>Common.DisplayBlanksAs</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Elevation">
            <summary>
            Returns or sets the elevation of the 3-D chart view, in degrees. Read/write <c>long</c>.
            </summary>
            <remarks>The chart elevation is the height at which you view the chart, in degrees. 
            The default is 15 for most chart types. The value of this property must be between -90 
            and 90, except for 3-D bar charts, where it must be between 0 and 44.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Floor">
            <summary>
            Returns a <c>Floor</c> object that represents the floor of the 3-D chart. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.GapDepth">
            <summary>
            Returns or sets the distance between the data series in a 3-D chart, as a percentage
             of the marker width. The value of this property must be between 0 and 500. 
             Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasAxis">
            <summary>
            Returns or sets which axes exist on the chart. Read/write <c>bool</c>.
            </summary>
            <remarks>Microsoft Excel may create or delete axes if you change the 
            chart type or the <c>AxisGroup</c> property</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasLegend">
            <summary>
            <c>True</c> if the chart has a legend. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasTitle">
            <summary>
            True if the axis or chart has a visible title. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HeightPercent">
            <summary>
            Returns or sets the height of a 3-D chart as a percentage of the chart width 
            (between 5 and 500 percent). Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Index">
            <summary>
            Returns the index number of the object within the
             collection of similar objects. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Legend">
            <summary>
            Returns a <c>Legend</c> object that represents the legend for the chart. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.PageSetup">
            <summary>
            Returns a <c>PageSetup</c> object that contains all the page setup settings for the specified 
            object. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Perspective">
            <summary>
            Returns or sets the perspective for the 3-D chart view. Must be between 0 and 100. 
            This property is ignored if the <c>RightAngleAxes</c> property is True. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.PlotArea">
            <summary>
            Returns a <c>ChartGroup</c> object that represents the pie chart group on a 3-D chart. 
            </summary>
            <summary>
            Returns a <c>PlotArea</c> object that represents the plot area of a chart. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.RightAngleAxes">
            <summary>
            <c>True</c> if the chart axes are at right angles, independent of chart rotation or elevation. 
            Applies only to 3-D line, column, and bar charts. Read/write <c>bool</c>.
            </summary>
            <remarks>If this property is <c>True</c>, the <c>Perspective</c> property is ignored.</remarks>
             TODO: API incompatibility (Read/write)
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Rotation">
            <summary>
            <c>Chart</c> object: Returns or sets the rotation of the 3-D chart view (the rotation of
             the plot area around the z-axis, in degrees). The value of this property must
              be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.
               The default value is 20. Applies only to 3-D charts. Read/write <c>float</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.Axes(GrapeCity.SharpCells.AxisType,GrapeCity.SharpCells.AxisGroup)">
            <summary>
            Returns an object that represents either a single axis or a collection of the axes 
            on the chart.
            </summary>
            <param name="type"> Specifies the axis to return. 
            Can be one of the following <c>AxisType</c> constants: xlValue, <c>Category</c>, or 
            <c>SeriesAxis</c> (<c>SeriesAxis</c> is valid only for 3-D charts).	</param>
            <param name="axisGroup">Specifies the axis group.  If this argument is omitted,
             the primary group is used. 3-D charts  have only  one axis group.  </param>
            <returns>Returns an object that represents either a single axis or a collection of the axes on the chart.</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.Axes(GrapeCity.SharpCells.AxisType)">
            <summary>
            Returns an object that represents either a single axis or a collection of 
            the axes on the chart.
            </summary>
            <param name="type">Specifies the axis to return. 
            Can be one of the following <c>AxisType</c> constants: xlValue, <c>Category</c>, or 
            <c>SeriesAxis</c> (<c>SeriesAxis</c> is valid only for 3-D charts).	</param>
            <returns>Returns an object that represents either a single axis or a 
            collection of the axes on the chart.</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.Axes(GrapeCity.SharpCells.AxisGroup)">
            <summary>
            Returns an object that represents either a single axis or a collection of 
            the axes on the chart.
            </summary>
            <param name="axisGroup">Specifies the axis group. 
            If this argument is omitted, the primary group is used. 3-D charts  have only 
            one axis group.  </param>
            <returns>Returns an object that represents either a single axis or a collection 
            of the axes on the chart.</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.Axes">
            <summary>
            Returns an object that represents either a single axis or a collection of 
            the axes on the chart.
            </summary>
            /// <returns>Returns an object that represents either a single axis or a collection 
            of the axes on the chart.</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.Delete">
            <summary>
            Deletes the object.
            </summary>
            <remarks>Deleting a <c>Point</c> or <c>LegendKey</c> object deletes the entire series. 
            You can delete custom document properties, but you cannot delete a built-in 
            document property.</remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.SeriesCollection(System.Int32)">
            <summary>
            Returns an object that represents either a single series (a <c>Series</c> object) 
            or a collection of all the series (a <c>SeriesCollection</c> collection) in the chart 
            or chart group.
            </summary>
            <param name="index">The name or number of the series.</param>
            <returns>Returns an object that represents either a single series (a <c>Series</c> object) 
            or a collection of all the series (a <c>SeriesCollection</c> collection) in the chart 
            or chart group.</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.SeriesCollection">
            <summary>
            Returns an object that represents either a single series (a <c>Series</c> object) 
            or a collection of all the series (a <c>SeriesCollection</c> collection) in the chart 
            or chart group.
            </summary>
            <returns>Returns an object that represents either a single series (a <c>Series</c> object) 
            or a collection of all the series (a <c>SeriesCollection</c> collection) in the chart 
            or chart group.</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Chart.Unprotect(System.String)">
            <summary>
            Removes protection from a sheet or workbook. This method has no effect if the 
            sheet or workbook isn't protected.
            </summary>
            <param name="password">A string that denotes the case-sensitive password 
            to use to unprotect the sheet or workbook. If the sheet or workbook isn't 
            protected with a password, this argument is ignored. If you omit this argument
             for a sheet that's protected with a password, you'll be prompted for the password.
              If you omit this argument for a workbook that's protected with a password, the 
              method fails.		</param>
            <remarks>If you forget the password, you cannot unprotect the sheet or workbook. 
            It's a good idea to keep a list of your passwords and their corresponding 
            document names in a safe place.		</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.BubbleScale">
            <summary>
            Returns or sets the scale factor for bubbles in the specified chart group. 
            Can be an integer value from 0 (zero) to 300, corresponding to a percentage 
            of the default size. Applies only to bubble charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.DoughnutHoleSize">
            <summary>
            Returns or sets the size of the hole in a doughnut chart group. The hole size 
            is expressed as a percentage of the chart size, between 10 and 90 percent. 
            Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.DownBars">
            <summary>
            Returns a <c>DownBars</c> object that represents the down bars on a line chart. Applies 
            only to line charts. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.DropLines">
            <summary>
            Returns a <c>DropLines</c> object that represents the drop lines for a series on
             a line chart or area chart. Applies only to line charts or area charts. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.FirstSliceAngle">
            <summary>
            Returns or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical).
             Applies only to pie, 3-D pie, and doughnut charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.GapWidth">
            <summary>
            Bar and Column charts: Returns or sets the space between bar or column clusters,
             as a percentage of the bar or column width.
            </summary>
            <remarks>The value of this property must be between 0 and 500. Read/write <c>long</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasDropLines">
            <summary>
            <c>True</c> if the line chart or area chart has drop lines. Applies only to line
             and area charts. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasHiLoLines">
            <summary>
            <c>True</c> if the line chart has high-low lines. Applies only to line charts. 
            Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasRadarAxisLabels">
            <summary>
            <c>True</c> if a radar chart has axis labels. Applies only to radar charts. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasSeriesLines">
            <summary>
            <c>True</c> if a stacked column chart or bar chart has series lines or if a 
            Pie of Pie chart or Bar of Pie chart has connector lines between the two sections. 
            Applies only to stacked column charts, bar charts, Pie of Pie charts, or Bar of 
            Pie charts. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HasUpDownBars">
            <summary>
            True if a line chart has up and down bars. Applies only to line charts. Read/write <c>bool</c>
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.HiLoLines">
            <summary>
            True if the line chart has high-low lines. Applies only to line charts. 
            Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.Overlap">
            <summary>
            Specifies how bars and columns are positioned. Can be a value between  ï¿½ 100 and 100.
             Applies only to 2-D bar and 2-D column charts. Read/write <c>long</c>.
            </summary>
            <remarks>If this property is set to  ï¿½ 100, bars are positioned so that there's one
             bar width between them. If the overlap is 0 (zero), there's no space between bars 
             (one bar starts immediately after the preceding bar). If the overlap is 100, bars 
             are positioned on top of each other.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.SeriesLines">
            <summary>
            Returns a <c>SeriesLines</c> object that represents the series lines for a stacked bar chart 
            or a stacked column chart. Applies only to stacked bar and stacked column charts. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.ShowNegativeBubbles">
            <summary>
            True if negative bubbles are shown for the chart group. 
            Valid only for bubble charts. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.SizeRepresents">
            <summary>
            Returns or sets what the bubble size represents on a bubble chart. 
            Can be either of the following XlSizeRepresents constants: <c>SizeIsArea</c> or 
            <c>SizeIsWidth</c>. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.UpBars">
            <summary>
            Returns an <c>UpBars</c> object that represents the up bars on a line chart. 
            Applies only to line charts. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Chart.VaryByCategories">
            <summary>
            <c>True</c> if Microsoft Excel assigns a different color or pattern to each data marker. 
            The chart must contain only one series. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.ChartArea">
            <summary>
            Represents the chart area of a chart. 
            </summary>
            <remarks>The chart area on a 2-D chart contains 
            the axes, the chart title, the axis titles, and the legend. The chart area on 
            a 3-D chart contains the chart title and the legend; it doesnï¿½t include 
            the plot area (the area within the chart area where the data is plotted). 
            For information about formatting the plot area, see the PlotArea object.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartArea.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartArea.Font">
            <summary>
            Returns a <c>Font</c> object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartArea.Interior">
            <summary>
            Returns an <c>interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartArea.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartArea.Shadow">
            <summary>
            <c>True</c> if the font is a shadow font or if the object has a shadow. Read/write <c>bool</c>.
            </summary>
            <remarks>For the <c>Font</c> object, this property has no effect in Microsoft Windows, but its value 
            is retained (it can be set and returned).</remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.Charts">
            <summary>
            A collection of all the chart sheets in the specified or active workbook.
            </summary>
            <remarks>Each chart sheet is represented by a <c>Chart</c> object. 
            This doesnï¿½t include charts embedded on worksheets or dialog sheets. 
            For information about embedded charts, see the <c>Chart</c> or <c>ChartObject</c> object.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Charts.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Charts.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Charts.Item(System.String)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Charts.Visible">
            <summary>
            Determines whether the object is visible. Read/write <c>SheetVisibility</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Charts.Add(System.Object,System.Object,System.Object)">
            <summary>
            Creates a new chart sheet. Returns a <c>Chart</c> object.
            </summary>
            <param name="before">An object that specifies the sheet before which 
            the new sheet is added.</param>
            <param name="after"> An object that specifies the sheet after which 
            the new sheet is added.</param>
            <param name="count">The number of sheets to be added. The default 
            value is one.</param>
            <returns><c>Chart</c> object</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Charts.Copy(System.Object,System.Object)">
            <summary>
            Copies the sheet to another location in the workbook.
            </summary>
            <param name="before">The sheet before which the copied sheet will be placed.
             You cannot specify <c>before</c> if you specify <c>after</c>.	</param>
            <param name="after">The sheet after which the copied sheet will be placed.
             You cannot specify <c>after</c> if you specify <c>before</c>.</param>
             <remarks>If you don't specify either Before or After, Microsoft Excel creates 
             a new workbook that contains the copied sheet</remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Charts.Delete">
            <summary>
            Deletes the object.
            </summary>
            <remarks>Deleting a <c>Point</c> or <c>LegendKey</c> object deletes the entire series.
            You can delete custom document properties, but you cannot delete a built-in
             document property.	</remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Charts.Move(System.Object,System.Object)">
            <summary>
            Moves the sheet to another location in the workbook.
            </summary>
            <param name="before">The sheet before which the moved sheet will be placed.
             You cannot specify <c>before</c> if you specify <c>after</c>.	</param>
            <param name="after">The sheet after which the moved sheet will be placed. 
            You cannot specify <c>after</c> if you specify <c>before</c>.	</param>
            <remarks>If you don't specify either <c>before</c> or <c>after</c>, Microsoft Excel creates
             a new workbook that contains the moved sheet</remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.ChartTitle">
            <summary>
            Use the <c>ChartTitle</c> property to return the <c>ChartTitle</c> object. 
            The following example adds a title to embedded chart one on the worksheet
             named "Sheet1."
            </summary>
            <remarks>The <c>ChartTitle</c> object doesnï¿½t exist and cannot be used unless the 
            <c>HasTitle</c> property for the chart is <c>true</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Caption">
            <summary>
            The chart title text. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Font">
            <summary>
            Returns a <c>Font</c> object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.HorizontalAlignment">
            <summary>
            Returns or sets the horizontal alignment for the specified object. 
            Read/write <c>HAlign</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents  the interior of the 
            specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Orientation">
            <summary>
            The text orientation. Can be an integer value from  ï¿½ 90 to 90 degrees.
             Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Shadow">
            <summary>
            <c>true</c> if the font is a shadow font or if the object has a shadow.
             Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.Text">
            <summary>
            Returns or sets the text for the specified object. Read-only 
            <c>string</c> for the <c>Range</c> object, read/write <c>string</c> for all other objects.
            </summary>
            <remarks>For the <c>Phonetic</c> object, this property returns or sets its phonetic 
            text. You cannot set this property to <c>null</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.ChartTitle.VerticalAlignment">
            <summary>
            Returns or sets the vertical alignment of the specified object.
             Read/write <c>VAlign</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.ChartTitle.Delete">
            <summary>
            Deletes the object.
            </summary>
            <remarks>Deleting a <c>Point</c> or <c>LegendKey</c> object deletes the entire series.
            You can delete custom document properties, but you cannot delete a
             built-in document property	</remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.Colors">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Constants">
            <summary>
            Summary description for Constants.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.DownBars">
            <summary>
            Represents the down bars in a chart group. 
            </summary>
            <remarks>Down bars connect points on the first series in the chart group with 
            lower values on the last series (the lines go down from the first series). 
            Only 2-D line groups that contain at least two series can have down bars. 
            This object isnï¿½t a collection. Thereï¿½s no object that represents a single 
            down bar; you either have up bars and down bars turned on for all points in a 
            chart group or you have them turned off.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.DownBars.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.DownBars.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.DownBars.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.DropLines">
            <summary>
            Represents the drop lines in a chart group. Drop lines connect 
            the points in the chart with the x-axis.
            </summary>
            <remarks>Only line and area chart groups can have drop lines. This object 
            isnï¿½t a collection. Thereï¿½s no object that represents a single drop line; 
            you either have drop lines turned on for all points in a chart group or 
            you have them turned off.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.DropLines.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.DropLines.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.FileFormat">
            <summary>
            Represents fill formatting for a shape. A shape can have a solid, gradient, 
            texture, pattern, picture, or semi-transparent fill.
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.DisplayDrawingObjects">
            <summary>
            Returns or sets how shapes are displayed. 
            Can be one of the following <c>DisplayDrawingObjects</c> constants
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.DisplayDrawingObjects.DisplayShapes">
            <summary>
            Show all shapes.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.DisplayDrawingObjects.Placeholders">
            <summary>
            Show only placeholders.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.DisplayDrawingObjects.Hide">
            <summary>
            Hide all shapes.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.ShiftDirection">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.EnableSelection">
            <summary>
            Specifies what can be selected on the sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.EnableSelection.NoSelection">
            <summary>
            Prevents any selection on the sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.EnableSelection.NoRestrictions">
            <summary>
            Allows any cell to be selected.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.EnableSelection.UnlockedCells">
            <summary>
            Allows only those cells whose <c>Locked</c> 
            property is <c>false</c> to be selected.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.SheetType">
            <summary>
            Specifies the worksheet type.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetType.Chart">
            <summary>
            Chart sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetType.DialogSheet">
            <summary>
            Dialog sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetType.Excel4IntlMacroSheet">
            <summary>
            Macro sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetType.Excel4MacroSheet">
            <summary>
            Macro sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetType.Worksheet">
            <summary>
            Worksheet.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.SheetVisibility">
            <summary>
            Sheet visibility options.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetVisibility.SheetHidden">
            <summary>
            Sheet is hidden.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetVisibility.SheetVisible">
            <summary>
            Sheet is visible.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.SheetVisibility.SheetVeryHidden">
            <summary>
            Hides the object so that the only way for you to make 
            it visible again is by setting this property to 
            <c>SheetVisible</c> (the user cannot make the object visible). 
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.HAlign">
            <summary>
            The horizontal alignment for an object.
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Orientation">
            <summary>
            The text orientation. Can be an integer value from  ï¿½ 90 to 90 degrees 
            or one of the Orientation constants
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.VAlign">
            <summary>
            The vertical alignment of an object.
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.FormulaLabel">
            <summary>
            The formula label type for the specified range. Can be 
            None if the range contains no labels, or one of the 
            following <c>FormulaLabel</c> constants
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.PageBreak">
            <summary>
            The location of either automatic or manual page breaks, 
            but it can only set the location of manual breaks (it 
            can only be set to <c>PageBreakManual</c> or <c>PageBreakNone</c>).
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.RangeValueDataType.RangeValueDefault">
            <summary>
            If the specified <c>Range</c> object is empty, returns the 
            value <c>Empty</c> (use the <c>IsEmpty</c> function to test for 
            this case). If the <c>Range</c> object contains more than one cell,
            returns an array of values (use the IsArray function to test 
            for this case). 
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.RangeValueDataType.RangeValueMSPersistXml">
            <summary>
            Returns the recordset representation of the specified 
            <c>Range</c> object in an XML format. 
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.RangeValueDataType.RangeValueXmlSpreadsheet">
            <summary>
            Returns the values, formatting, formulas and names of the 
            specified <c>Range</c> object in the XML <c>Spreadsheet</c> format. 
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.BordersIndex">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.BorderWeight">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Background">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.BorderLineStyle">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.FormatConditionType.CellValue">
            <summary>
            The conditional format is based on a cell value.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.FormatConditionType.Expression">
            <summary>
            The conditional format is based on an expression.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.XlmMacroType.Command">
            <summary>
            The name refers to a user-defined macro.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.XlmMacroType.Function">
            <summary>
            The name refers to a user-defined function.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.XlmMacroType.NotXlm">
            <summary>
            The name doesn't refer to a function or macro.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.UnderlineStyle">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Pattern">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.AxisCrosses.Automatic">
            <summary>
            Microsoft Excel sets the axis crossing point.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.AxisCrosses.Minimum">
            <summary>
            The axis crosses at the minimum value.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.AxisCrosses.Maximum">
            <summary>
            The axis crosses at the maximum value.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.AxisCrosses.Custom">
            <summary>
            The CrossesAt property specifies the axis crossing point.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.PageOrientation">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.PaperSize">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Floor">
            <summary>
            Represents the floor of a 3-D chart
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Floor.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Floor.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Floor.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Floor.ClearFormats">
            <summary>
            Clears the formatting of the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Font">
            <summary>
            Contains the font attributes (font name, font size, color, and so on) for an object.
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Background">
            <summary>
            Returns or sets the text background type. This property is 
            used for text on charts. Read/write <c>Background</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Bold">
            <summary>
            <c>true</c> if the font is bold. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Color">
            <summary>
            Returns or sets the primary color of the object, as shown in the following table.
            Use the RGB function to create a color value. Read/write <c>Color</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.ColorIndex">
            <summary>
            Returns or sets the color of the font. The color is specified as an index 
            value into the current color palette, or as one of the following <c>ColorIndex</c> 
            constants. Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Name">
            <summary>
            Returns or sets the name of the object. The name of a <c>Range</c> object is a <c>Name</c> object. 
            For every other type of object, the name is a string. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Italic">
            <summary>
            <c>true</c> if the font style is italic. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.OutlineFont">
            <summary>
            <c>true</c> if the font is an outline font. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Shadow">
            <summary>
            <c>true</c> if the font is an outline font. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Size">
            <summary>
            <c>true</c> if the font is an outline font. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Strikethrough">
            <summary>
            <c>true</c> if the font is struck through with a horizontal line. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Subscript">
            <summary>
            <c>true</c> if the font is formatted as subscript. <c>false</c> by default. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Superscript">
            <summary>
            <c>true</c> if the font is formatted as superscript; <c>false</c> by default. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Font.Underline">
            <summary>
            Returns or sets the type of underline applied to the font. Can be one of the following 
            <c>UnderlineStyle</c> constants. Read/write <c>UnderlineStyle</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.FormatCondition">
            <summary>
            Represents a conditional format. 
            </summary>
            <remarks>The <c>FormatCondition</c> object is a member of 
            the <c>FormatConditions</c> collection. The <c>FormatConditions</c> collection can contain 
            up to three conditional formats for a given range.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.FormatCondition.Borders">
            <summary>
            Returns a  <c>Borders</c> collection that represents the borders of a style or a range 
            of cells (including a range defined as part of a conditional format).
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.FormatCondition.Formula1">
            <summary>
            Returns the value or expression associated with the conditional format or data 
            validation. Can be a constant value, a string value, a cell reference, or a formula. 
            Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.FormatCondition.Formula2">
            <summary>
            Returns the value or expression associated with the second part of a conditional 
            format or data validation. Used only when the data validation conditional format 
            <c>Operator</c> property is <c>Between</c> or <c>NotBetween</c>. Can be a constant value, a string 
            value, a cell reference, or a formula. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.FormatCondition.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.FormatCondition.Modify(GrapeCity.SharpCells.FormatConditionType,GrapeCity.SharpCells.FormatConditionOperator,System.String,System.String)">
            <summary>
            Modifies the data validation or conditional format. 
            </summary>
            <param name="t">Specifies whether the conditional format is based on a 
            cell value or an expression.</param>
            <param name="o">The conditional format operator.</param>
            <param name="formula1">The value or expression associated with the conditional format. 
            Can be a constant value, a string value, a cell reference, or a formula.</param>
            <param name="formula2">The value or expression associated with the conditional 
            format. Can be a constant value, a string value, a cell reference, or a formula.</param>
        </member>
        <member name="T:GrapeCity.SharpCells.FormatConditions">
            <summary>
            Represents the collection of conditional formats for a single range. 
            The <c>FormatConditions</c> collection can contain up to three conditional formats. 
            Each format is represented by a <c>FormatCondition</c> object.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.FormatConditions.Delete(System.Int32)">
            <summary>
            Deletes the object.
            </summary>
            <param name="index">Index of format condition</param>
        </member>
        <member name="M:GrapeCity.SharpCells.FormatConditions.Add(GrapeCity.SharpCells.FormatConditionType,GrapeCity.SharpCells.FormatConditionOperator,System.String,System.String)">
            <summary>
            Adds a new conditional format. Returns a <c>FormatCondition</c> 
            object that represents the new conditional format.
            </summary>
            <param name="conditionType">Specifies whether the conditional format 
            is based on a cell value or an expression.</param>
            <param name="conditionOperator">The conditional format operator. Can be 
            one of the following <c>FormatConditionOperator</c> constants: <c>Between</c>, 
            <c>Equal</c>, <c>Greater</c>, <c>GreaterEqual</c>, <c>Less</c>, <c>LessEqual</c>, <c>NotBetween</c>, 
            or <c>NotEqual</c>c>. If Type is <c>Expression</c>c>, the <c>Operator</c>c> argument is ignored.</param>
            <param name="formula1">The value or expression associated with the conditional format. 
            Can be a constant value, a string value, a cell reference, or a formula.</param>
            <param name="formula2">The value or expression associated with the second
             part of the conditional format when <c>Operator</c> is <c>Between</c> or <c>NotBetween</c> 
             (otherwise, this argument is ignored). Can be a constant value, a string value, 
             a cell reference, or a formula.	</param>
            <returns><c>FormatCondition</c> object that represents the new conditional format</returns>
        </member>
        <member name="P:GrapeCity.SharpCells.FormatConditions.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.FormatConditions.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Gridlines">
            <summary>
            Represents major or minor gridlines on a chart axis.
            </summary>
            <remarks><c>Gridlines</c> extend the tick marks on a chart axis to make it easier
             to see the values associated with the data markers. This object isnï¿½t a collection. 
             Thereï¿½s no object that represents a single gridline; you either have all gridlines 
             for an axis turned on or all of them turned off.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Gridlines.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Gridlines.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Gridlines.Delete">
            <summary>
            Deletes the object.
            </summary>
            <remarks>Deleting a <c>Point</c> or <c>LegendKey</c> object deletes the entire series.
            You can delete custom document properties, but you cannot delete a 
            built-in document property.
            </remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.HiLoLines">
            <summary>
            Represents the high-low lines in a chart group.
            </summary>
            <remarks>High-low lines connect the highest point with the lowest point in 
            every category in the chart group. Only 2-D line groups can have high-low lines.
             This object isnï¿½t a collection. Thereï¿½s no object that represents a single high-low 
             line; you either have high-low lines turned on for all points in a chart group or you 
             have them turned off</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.HiLoLines.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.HiLoLines.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.HPageBreak">
            <summary>
            Represents a horizontal page break. The <c>HPageBreak</c> object is a member of the 
            <c>HPageBreaks</c> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.HPageBreak.Extent">
            <summary>
            Returns the type of the specified page break: full-screen or only within a 
            print area. Can be either of the following <c>PageBreakExtent</c> constants: 
            <c>PageBreakFull</c> or <c>PageBreakPartial</c>. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.HPageBreak.Location">
            <summary>
            For the <c>PageBreak</c> and <c>PageBreak</c> objects, this property returns or sets the cell 
            (a <c>Range</c> object) that defines the page-break location. 
            </summary>
            <remarks>Horizontal page breaks are aligned with the top edge of the location cell; 
            vertical page breaks are aligned with the left edge of the location cell. Read/write <c>Range</c>.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.HPageBreak.Type">
            <summary>
            Returns or sets the page break type. Read/write <c>PageBreak</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.HPageBreak.Delete">
            <summary>
            Deletes the object.
            </summary>
            <remarks>Deleting a <c>Point</c> or <c>LegendKey</c> object deletes the entire series.
            You can delete custom document properties, but you cannot delete a 
            built-in document property.
            </remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.HPageBreaks">
            <summary>
            The collection of horizontal page breaks within the print area. Each horizontal page break 
            is represented by an <c>HPageBreak</c> object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.HPageBreaks.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.HPageBreaks.Item(System.Int32)">
            <summary>
            Returns an <c>HPageBreaks</c> collection that represents the  horizontal page breaks 
            on the sheet. 
            </summary>
            <remarks><c>Note</c> There is a limit of 1026 horizontal page breaks per sheet.</remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.HPageBreaks.Add(GrapeCity.SharpCells.Range)">
            <summary>
            Adds a horizontal page break. Returns an <c>HPageBreak</c> object.
            </summary>
            <param name="before">A <c>Range</c> object. The range above which the new page break will be added.</param>
            <returns><c>HPageBreak</c> object</returns>
        </member>
        <member name="T:GrapeCity.SharpCells.Hyperlink">
            <summary>
            Represents a hyperlink. The <c>Hyperlink</c> object is a member of the <c>Hyperlinks</c> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlink.Address">
            <summary>
            Returns or sets the address of the target document. Read/write <c>string</c>.
            </summary>
            <remarks>If the reference contains more than one cell, <c>RowAbsolute</c> and
             <c>ColumnAbsolute</c> apply to all rows and columns.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlink.EmailSubject">
            <summary>
            Returns or sets the text string of the specified hyperlinkï¿½s e-mail subject line. 
            The subject line is appended to the hyperlinkï¿½s address. Read/write <c>string</c>.
            </summary>
            <remarks>The value of this property takes precedence over any e-mail subject line 
            you have specified by using the Address property of the same Hyperlink object.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlink.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlink.Range">
            <summary>
            For an <c>AutoFilter</c> object, returns a <c>Range</c> object that 
            represents the range to which the specified AutoFilter applies.
            </summary>
            <remarks>For a <c>Hyperlink</c> object, returns a <c>Range</c> object that represents
             the range the specified hyperlink is attached to. For a <c>PivotCell</c> object, 
             returns a Range object that represents the range the specified PivotCell
              applies to. For a <c>SmartTag</c> object, returns a <c>Range</c> object that represents 
              the range the specified smart tag applies to.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlink.ScreenTip">
            <summary>
            Returns or sets the <c>ScreenTip</c> text for the specified hyperlink. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlink.SubAddress">
            <summary>
            Returns or sets the location within the document associated with the hyperlink. 
            Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlink.TextToDisplay">
            <summary>
            Returns or sets the text to be displayed for the specified hyperlink. 
            The default value is the address of the hyperlink. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Hyperlink.Delete">
            <summary>
            Deletes the object.
            </summary>
            <remarks>Deleting a <c>Point</c> or <c>LegendKey</c> object deletes the entire series.
            You can delete custom document properties, but you cannot delete a 
            built-in document property.
            </remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.Hyperlinks">
            <summary>
            Represents the collection of hyperlinks for a worksheet or range. 
            Each hyperlink is represented by a <c>Hyperlink</c> object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlinks.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Hyperlinks.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Hyperlinks.Add(GrapeCity.SharpCells.Range,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a hyperlink to the specified range or shape. Returns a <c>Hyperlink</c> object.
            </summary>
            <param name="anchor">The anchor for the hyperlink. Can be either a Range or 
            <c>Shape</c> object.</param>
            <param name="address">The address of the hyperlink.	</param>
            <param name="subAddress">The subaddress of the hyperlink.</param>
            <param name="screenTip">The screen tip to be displayed when the mouse pointer 
            is paused over the hyperlink.</param>
            <param name="textToDisplay">The text to be displayed for the hyperlink.</param>
            <returns><c>Hyperlink</c> object</returns>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Area">
            <summary>
            Summary description for Area.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.BofRecordSerializer">
            <summary>
            Summary description for BofRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.CfRecordSerializer">
            <summary>
            Summary description for CfRecordSerializer.
            </summary>
            
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.CodeNameRecordSerializer">
            <summary>
            Summary description for CodeNameRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.CondFmtRecordSerializer">
            <summary>
            Summary description for CondFmtRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.DbCellRecordSerializer">
            <summary>
            Summary description for DbCellRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.DimensionsRecordSerializer">
            <summary>
            Summary description for DimensionsRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.ExternalData.Biff8ExternalData">
            <summary>
            Summary description for Biff8ExternalData.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.Biff8.ExternalData.Biff8ExternalData.DeleteExternalSheet(GrapeCity.SharpCells.Implementation.ExternalData.ExternalPart,GrapeCity.SharpCells.Implementation.ExternalData.IWorkbookDataProvider)">
            <summary>
            Deletes the sheet in the biff.
            </summary>
            <param name="p">external part</param>
            <returns>biff index for the deleted external sheet</returns>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.ExternNameRecordSerializer">
            <summary>
            Summary description for ExternNameRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.ExternSheetRecordSerializer">
            <summary>
            Summary description for ExternSheetRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.FileSharingRecordSerializer">
            <summary>
            Summary description for FileSharingRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.FormatRecordSerializer">
            <summary>
            Summary description for FormatRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.FormulaFormatter">
            <summary>
            Summary description for FormulaFormatter.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.FormulaScanner">
            <summary>
            Summary description for FormulaScanner.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.HideObjRecordSerializer">
            <summary>
            Summary description for HideObjRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.HPageBreakRecordSerializer">
            <summary>
            Summary description for HPageBreakRecordSerializer.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.Biff8.HyperlinkRecordSerializer.WriteFlags(System.IO.BinaryWriter,GrapeCity.SharpCells.Implementation.Hyperlink)">
            <summary>
            it is only first order of approximation
            </summary>
            <param name="bw"></param>
            <param name="hlink"></param>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.LabelSstRecordSerializer">
            <summary>
            Summary description for LabelSstRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.MergeAreasRecordSerializer">
            <summary>
            Summary description for MergeAreasRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.MsoDrawingGroupRecordSerializer">
            <summary>
            Summary description for MsoDrawingGroupRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.MsoDrawingRecordSerializer">
            <summary>
            Summary description for MsoDrawingRecordSerializer.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.Biff8.MsoDrawingRecordSerializer.WriteMsoDrawing(GrapeCity.SharpCells.Implementation.MsoDrawingContainer,System.Collections.ArrayList,System.Int32)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="shapes"></param>
            <param name="index">index of worksheet</param>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.NameRecordSerializer">
            <summary>
            Summary description for NameRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.PaletteRecordSerializer">
            <summary>
            Summary description for PaletteRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.QuicktipRecordSerializer">
            <summary>
            Summary description for QuicktipRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.RecordSerializerFactory">
            <summary>
            Summary description for RecordSerializerFactory.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.SerializationManager">
            <summary>
            Summary description for SerializationManager.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.SheetProtectionRecordSerializer">
            <summary>
            Summary description for SheetProtectionRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.SstRecordSerializer">
            <summary>
            Summary description for SstRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.TabIdRecordSerializer">
            <summary>
            Summary description for TabIdRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.VPageBreakRecordSerializer">
            <summary>
            Summary description for VPageBreakRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.Window2RecordSerializer">
            <summary>
            Summary description for Window2RecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.WorkbookBuilder">
            <summary>
            Summary description for WorkbookBuilder.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.WriteAccessRecordSerializer">
            <summary>
            Summary description for WriteAccessRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.WriteProtectionRecordSerializer">
            <summary>
            Summary description for WriteProtectionRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Biff8.XfRecordSerializer">
            <summary>
            Summary description for XfRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.BiffExternalData">
            <summary>
            Summary description for BiffExternalData.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.BiffExternalData.CreateExternalSheet(GrapeCity.SharpCells.Implementation.ExternalData.ExternalPart,GrapeCity.SharpCells.Implementation.ExternalData.IWorkbookDataProvider)">
            <summary>
            Creates external sheet and returns it's biff index.
            </summary>
            <param name="p">external part</param>
            <param name="provider">workbook data provider</param>
            <returns>returns newly created biff index or -1.</returns>
            <remarks></remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.BiffExternalData.DeleteExternalSheet(GrapeCity.SharpCells.Implementation.ExternalData.ExternalPart,GrapeCity.SharpCells.Implementation.ExternalData.IWorkbookDataProvider)">
            <summary>
            Deletes the sheet in the biff.
            </summary>
            <param name="p">external part</param>
            <returns>biff index for the deleted external sheet</returns>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.BiffRecords">
            <summary>
            Summary description for BiffRecords.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.BlankRecordSerializer">
            <summary>
            Summary description for BlankRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.BooleanRecordSerializer">
            <summary>
            Summary description for BooleanRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.BoolErrRecordSerializer">
            <summary>
            Summary description for BoolErrRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.BottomMarginRecordSerializer">
            <summary>
            Summary description for BottomMarginRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ByteSplitter">
            <summary>
            gets array of bytes and writes it in Biff, writing if necessary some Continue blocks
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.ByteSplitter.#ctor(System.Byte[])">
            <summary>
            data must be without id and size, splitter automatically will calculate it so do not write it in data
            </summary>
            <param name="data">byte array contains data need to write in BIFF</param>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.CellContext">
            <summary>
            Summary description for CellContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.AiProcessor">
            <summary>
            Summary description for AiProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.AreaFormatProcessor">
            <summary>
            Summary description for AreaFormatProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.AreaProcessor">
            <summary>
            Summary description for AreaProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.AxcExtProcessor">
            <summary>
            Summary description for AxcExtProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.AxesUsedProcessor">
            <summary>
            Summary description for AxesUsedProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.AxisLineFormatProcessor">
            <summary>
            Summary description for AxisLineFormatProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.BarProcessor">
            <summary>
            Summary description for BarProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.BlankProcessor">
            <summary>
            Summary description for BlankProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.CatSerRangeProcessor">
            <summary>
            Summary description for CatSerRangeProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.ChartLineProcessor">
            <summary>
            Summary description for SeriesLineProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.FontXProcessor">
            <summary>
            Summary description for FontXProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.LabelProcessor">
            <summary>
            Summary description for LabelProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.LineFormatProcessor">
            <summary>
            Summary description for LineFormatProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.LineProcessor">
            <summary>
            Summary description for LineProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.MarkerFormatProcessor">
            <summary>
            Summary description for MarkerFormatProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.NumberProcessor">
            <summary>
            Summary description for NumberProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.ObjectLinkProcessor">
            <summary>
            Summary description for ObjectLinkProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.PieFormatProcessor">
            <summary>
            Summary description for PieFormatProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.PieProcessor">
            <summary>
            Summary description for PieProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.PlotGrowthProcessor">
            <summary>
            Summary description for PlotGrowth.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.PosProcessor">
            <summary>
            Summary description for PosProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.RadarAreaProcessor">
            <summary>
            Summary description for RadarAreaProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.RadarProcessor">
            <summary>
            Summary description for RadarProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.Rk2Processor">
            <summary>
            Summary description for Rk2RecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.ScatterProcessor">
            <summary>
            Summary description for ScatterProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SclProcessor">
            <summary>
            Summary description for SclProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SerAuxTrendProcessor">
            <summary>
            Summary description for SerAuxTrendProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SerFormatProcessor">
            <summary>
            Summary description for SerFormatProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SeriesBlock">
            <summary>
            Summary description for SeriesBlock.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SeriesTextProcessor">
            <summary>
            Summary description for SeriesTextProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SerParentProcessor">
            <summary>
            Summary description for SerParentProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SerToCrtProcessor">
            <summary>
            Summary description for SerToCrtProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SheettPropertiesProcessor">
            <summary>
            Summary description for SheettPropertiesProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SiIndexTable">
            <summary>
            Summary description for SiIndexTable.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.SurfaceProcessor">
            <summary>
            Summary description for SurfaceProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.ThreeDProcessor">
            <summary>
            Summary description for ThreeDRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.TickProcessor">
            <summary>
            Summary description for TickProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.Unknown4191Processor">
            <summary>
            Summary description for Unknown4191Processor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartBlocks.ValueRangeProcessor">
            <summary>
            Summary description for ValueRangeProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartContext">
            <summary>
            Summary description for ChartContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ChartReadDirector">
            <summary>
            Summary description for ChartReadDirector.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.ChartReader.ReadHeader(GrapeCity.SharpCells.Implementation.Biff.SerializationManager,GrapeCity.SharpCells.Implementation.Biff.ChartContext)">
            <summary>
            reads all data between records Bof and Chart
            </summary>
            <param name="manager"></param>
            <param name="context"></param>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ColInfoRecordSerializer">
            <summary>
            Summary description for ColInfoRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Context">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.CountryRecordSerializer">
            <summary>
            Summary description for CountryRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.DefaultRowHeightRecordSerializer">
            <summary>
            Summary description for DefaultRowHeightRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.DoubleRecordSerializer">
            <summary>
            Summary description for DoubleRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.DrawRecordId">
            <summary>
            Summary description for DrawRecordId.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Xl9File">
            <summary>
            This record identifies a file as having been written
            by Excel2000. It's a zero byte record. You shouldn't 
            need to write this record.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.RecalcId">
            <summary>
            This record contains an ID that marks when a worksheet 
            was last recalculated. It's an optimization Excel uses
            to determine if it needs to recalculate the spreadsheet 
            when it's opened. Since Excel hasn't ever touched the 
            file you're creating, you shouldn't write this record.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.ClrtClient">
            <summary>
            This record contains RGB quads for the foreground, 
            background, and possibly the neutral colors in use 
            when the workbook was saved. You shouldn't need to 
            write this record.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.PhoneticInfo">
            <summary>
            This record is for internal use only, and shouldn't 
            be written.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Units">
            <summary>
            Chart Units
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Chart">
            <summary>
            Location and Overall Chart Dimensions
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Series">
            <summary>
            Series Definition
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.DataFormat">
            <summary>
            Series and Data Point Numbers
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.LineFormat">
            <summary>
            Style of a Line or Border
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.MarkerFormat">
            <summary>
            Style of a Line Marker
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.AreaFormat">
            <summary>
            Colors and Patterns for an Area
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.PieFormat">
            <summary>
            Position of the Pie Slice
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.AttachedLabel">
            <summary>
            Series Data/Value Labels
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SeriesText">
            <summary>
            Legend/Category/Value Text
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.ChartFormat">
            <summary>
            Parent Record for Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Legend">
            <summary>
            Legend Type and Position
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SeriesList">
            <summary>
            Specifies the Series in an Overlay Chart
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Bar">
            <summary>
            Chart Group Is a Bar or Column Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Line">
            <summary>
            Chart Group Is a Line Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Pie">
            <summary>
            Chart Group Is a Pie Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Area">
            <summary>
            Chart Group Is an Area Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Scatter">
            <summary>
            Chart Group Is a Scatter Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.ChartLine">
            <summary>
            Drop/Hi-Lo/Series Lines on a Line Chart
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Axis">
            <summary>
            Axis Type
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Tick">
            <summary>
            Tick Marks and Labels Format
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.ValueRange">
            <summary>
            Defines Value Axis Scale
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.CatSerRange">
            <summary>
            Defines a Category or Series Axis
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.AxisLineFormat">
            <summary>
            Defines a Line That Spans an Axis
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.ChartFormatLink">
            <summary>
            Not Used
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.DefaultText">
            <summary>
            Default Data Label Text Properties
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Text">
            <summary>
            Defines Display of Text Fields
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.FontX">
            <summary>
            Font Index
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.ObjectLink">
            <summary>
            Attaches Text to Chart or to Chart Item
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Frame">
            <summary>
            Defines Border Shape Around Displayed Text
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Begin">
            <summary>
            Defines the Beginning of an Object
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.End">
            <summary>
            Defines the End of an Object
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.PlotArea">
            <summary>
            Frame Belongs to Plot Area 
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.ThreeD">
            <summary>
            Chart Group Is a 3-D Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.PictureFormat">
            <summary>
            Picture Format
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.DropBar">
            <summary>
            Defines Drop Bars
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Radar">
            <summary>
            Chart Group Is a Radar Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Surface">
            <summary>
            Chart Group Is a Surface Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.RadarArea">
            <summary>
            Chart Group Is a Radar Area Chart Group
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.AxisParent">
            <summary>
            Axis Size and Location
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.LegendException">
            <summary>
            Legend Exception
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SheettProps">
            <summary>
            Sheet Properties
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SerToCrt">
            <summary>
            Series Chart-Group Index
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.AxesUsed">
            <summary>
            Number of Axes Sets
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SBaseRef">
            <summary>
            PivotTable Reference
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SerParent">
            <summary>
            Trendline or ErrorBar Series Index
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SerAuxTrend">
            <summary>
            Series Trendline
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Ifmt">
            <summary>
            Number-Format Index
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Pos">
            <summary>
            Position Information
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.AlRuns">
            <summary>
            Text Formatting
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Ai">
            <summary>
            Linked Data
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SerAuxErrBar">
            <summary>
            Series ErrorBar
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SerFormat">
            <summary>
            Series Format
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Fbi">
            <summary>
            Font Basis
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.BopPop">
            <summary>
            Bar of Pie/Pie of Pie Chart Options
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.AxcExt">
            <summary>
            Axis Options
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Dat">
            <summary>
            Data Table Options
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.PlotGrowth">
            <summary>
            Font Scale Factors
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.SiIndex">
            <summary>
            Series Index
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.GelFrame">
            <summary>
            Fill Data
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.BopPopCustom">
            <summary>
            Custom Bar of Pie/Pie of Pie Chart Options
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.RecordId.Unknown51">
            <summary>
            always goes after Setup in Chart sheet
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FontRecordSerializer">
            <summary>
            Summary description for FontRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FontRecordSerializerBase">
            <summary>
            Summary description for FontRecordSerializerBase.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FooterRecordSerializer">
            <summary>
            Summary description for FooterRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormatConditionContext">
            <summary>
            Summary description for FormatConditionContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormatRecordSerializer">
            <summary>
            Summary description for FormatRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormatRecordSerializerBase">
            <summary>
            Summary description for FormatRecordSerializerBase.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormulaData">
            <summary>
            Summary description for FormulaData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormulaFormatter">
            <summary>
            Summary description for FormulaFormatter.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormulaScanner">
            <summary>
            Summary description for FormulaScanner.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormulaSerializer">
            <summary>
            Summary description for FormulaSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Formulas.Area3dTokenProcessor">
            <summary>
            Summary description for Area3dTokenProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Formulas.AreaTokenProcessor">
            <summary>
            Summary description for AreaTokenProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Formulas.FormulaTokenSerializer">
            <summary>
            Summary description for FormulaTokenSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Formulas.Ref3dTokenProcessor">
            <summary>
            Summary description for Ref3dTokenProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Formulas.RefTokenProcessor">
            <summary>
            Summary description for RefTokenProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Formulas.SimpleFormulaTokenSerializer">
            <summary>
            Summary description for SimpleFormulaTokenSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Formulas.UnparsedFormulaImplementation">
            <summary>
            Summary description for UnparsedFormulaImplementation.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.GutsRecordSerializer">
            <summary>
            Summary description for GutsRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.HCenterRecordSerializer">
            <summary>
            Summary description for HCenterRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.HeaderRecordSerializer">
            <summary>
            Summary description for HeaderRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.IntRecordSerializer">
            <summary>
            Summary description for ShortRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.LeftMarginRecordSerializer">
            <summary>
            Summary description for LeftMarginRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.MulBlankRecordSerializer">
            <summary>
            Summary description for MulBlankRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.MulRkRecordSerializer">
            <summary>
            Summary description for MulRkRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.NumberRecordSerializer">
            <summary>
            Summary description for NumberRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ObjProtectRecordSerializer">
            <summary>
            Summary description for ObjProtectRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.PaneRecordSerializer">
            <summary>
            Summary description for PaneRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.PasswordRecordSerializer">
            <summary>
            Summary description for PasswordRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.PrintGridlinesRecordSerializer">
            <summary>
            Summary description for PrintGridlinesRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.PrintHeadersRecordSerializer">
            <summary>
            Summary description for PrintGridlinesRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ProtectRecordSerializer">
            <summary>
            Summary description for ProtectRecordSerializer.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.RecordSerializer.EatRecord(GrapeCity.SharpCells.Implementation.Biff.SerializationManager)">
            <summary>
            Should only be called when id is already read.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.RecordSerializerFactory">
            <summary>
            Summary description for RecordSerializerFactory.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.RightMarginRecordSerializer">
            <summary>
            Summary description for RightMarginRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.RkRecordSerializer">
            <summary>
            Summary description for RkRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.RowBlockContext">
            <summary>
            Summary description for RowsContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.RowContext">
            <summary>
            Summary description for RowContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.RowRecordSerializer">
            <summary>
            Summary description for RowRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ScenProtectRecordSerializer">
            <summary>
            Summary description for ScenProtectRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.SclRecordSerializer">
            <summary>
            Summary description for SclRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.SelectionRecordSerializer">
            <summary>
            Summary description for SelectionRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.SerializationManager">
            <summary>
            Summary description for SerializationManager.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.SetupRecordSerializer">
            <summary>
            Summary description for SetupRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.SheetIndexedItemContext">
            <summary>
            Summary description for SheetIndexedItemContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ShortRecordSerializer">
            <summary>
            Summary description for ShortRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.SimpleRecordSerializer">
            <summary>
            Summary description for SimpleRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.BlankRecord">
            <summary>
            Summary description for BlankRecord.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.BofRecordProcessor">
            <summary>
            Summary description for BofRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.BoundSheetRecordProcessor">
            <summary>
            Creates sheet and do not copies this record to output
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.CellRecord">
            <summary>
            Summary description for ICellRecord.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.CfRecord">
            <summary>
            Summary description for CfRecord.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.ColInfo">
            <summary>
            Summary description for ColInfo.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.ColInfoRecordProcessor">
            <summary>
            Summary description for ColInfoRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.CondFmtRecordProcessor">
            <summary>
            Summary description for CondFmtRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.ConditionalFormat">
            <summary>
            Summary description for ConditionalFormat.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.CustomTag">
            <summary>
            Summary description for CustomTag.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.Biff.Templates.CustomTag.Parameters">
            <summary>
            Parameters could be custom tags or field values
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Drawing.ChartShape">
            <summary>
            Summary description for ChartShape.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Drawing.MsoDrawing">
            <summary>
            Summary description for MsoDrawingRecordSerializer.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.Templates.Drawing.MsoDrawing.WriteMsoDrawing(GrapeCity.SharpCells.Implementation.MsoDrawingContainer,System.Collections.ArrayList,System.Int32)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="shapes"></param>
            <param name="index">index of worksheet</param>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Drawing.MsoDrawingGroup">
            <summary>
            Summary description for MsoDrawingGroup.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Direction">
            <summary>
            Summary description for Enums.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.EofRecordProcessor">
            <summary>
            Summary description for EofRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.ExtSstRecordProcessor">
            <summary>
            Summary description for ExtSstRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.FieldTag">
            <summary>
            Summary description for FieldTag.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Font">
            <summary>
            Summary description for Font.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.FontRecordProcessor">
            <summary>
            Summary description for FontRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.FormulaRecord">
            <summary>
            Summary description for FormulaRecord.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Formulas3dList">
            <summary>
            Summary description for Formulas3dList.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Label">
            <summary>
            Summary description for Label.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.LabelSstRecord">
            <summary>
            Summary description for LabelSstRecord.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.LevelInfo">
            <summary>
            Summary description for LevelInfo.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.MergeAreasRecordProcessor">
            <summary>
            Summary description for MergeAreasRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.NumberRecord">
            <summary>
            Summary description for NumberRecord.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.RecordProcessor">
            <summary>
            Summary description for RecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.RecordProcessorFactory">
            <summary>
            Summary description for RecordSerializerFactory.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.ResultArea">
            <summary>
            Summary description for ResultArea.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.ResultContainer">
            <summary>
            Summary description for ResultContainer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Row">
            <summary>
            represents necessary data from row record
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Series">
            <summary>
            Summary description for Series.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.SeriesCollection">
            <summary>
            Summary description for SeriesCollection.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.SeriesRecordProcessor">
            <summary>
            Summary description for SeriesRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.SstRecordProcessor">
            <summary>
            Sst processor parses Sst record, gets all template strings and puts in the context. Then copies contents of sst to output
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.Templates.SstRecordProcessor.ParseSst(GrapeCity.SharpCells.Implementation.Biff.Templates.TemplateProcessingContext)">
            <summary>
            Reads content 
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.SupBookRecordProcessor">
            <summary>
            Summary description for SupBookRecordProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.TemplateArea">
            <summary>
            Summary description for TemplateArea.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.TemplateProcessingContext">
            <summary>
            Summary description for TemplateProcessingContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.TemplateStreamProcessor">
            <summary>
            Processes input workbook stream and creates records copies.
            For some records also makes changes.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.TemplateString">
            <summary>
            Summary description for TemplateString.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.TemplateUtility">
            <summary>
            Summary description for TemlateUtility.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.ValueTag">
            <summary>
            Summary description for ValueTag.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Worksheet">
            <summary>
            Summary description for Sheet.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.Xf">
            <summary>
            Summary description for Xf.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Templates.XfRecordProcessor">
            <summary>
            Summary description for XfProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.TopMarginRecordSerializer">
            <summary>
            Summary description for TopMarginRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.VCenterRecordSerializer">
            <summary>
            Summary description for HCenterRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.Window1RecordSerializer">
            <summary>
            Summary description for Window1RecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WindowProtectRecordSerializer">
            <summary>
            Summary description for WindowProtectRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorkbookBuilder">
            <summary>
            Summary description for WorkbookBuilder.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorkbookContext">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorkbookIndexedItemContext">
            <summary>
            Summary description for WorkbookIndexedItemContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorkbookReadDirector">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorkbookReader">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorkbookWriteDirector">
            <summary>
            Summary description for WorkbookWriteDirector.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorksheetBuilder">
            <summary>
            Summary description for WorksheetBuilder.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorksheetContext">
            <summary>
            Summary description for WorksheetContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorksheetReadDirector">
            <summary>
            Summary description for WorksheetReadDirector.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorksheetReader">
            <summary>
            Summary description for WorksheetReader.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WorksheetWriteDirector">
            <summary>
            Summary description for WorksheetWriteDirector.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.WSBoolRecordSerializer">
            <summary>
            Summary description for WSBoolRecordSerializer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.FormulaImplementation">
            <summary>
            Summary description for FormulaImplementation.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Biff.FormulaImplementation.Insert(GrapeCity.SharpCells.Implementation.CellReference,GrapeCity.SharpCells.ShiftDirection,System.Boolean)">
            <summary>
            </summary>
            <param name="grow">when true area references must grow</param>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Biff.ShapeGroupHelper">
            <summary>
            Summary description for ShapeGroupHelper.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.BuiltInStyleData">
            <summary>
            Summary description for BuiltInStyleData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cell">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.Blank">
            <summary>
            Summary description for Blank.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.Bool">
            <summary>
            Summary description for BoolCell.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.CellImplementation">
            <summary>
            Summary description for CellImplementation.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.ErrorCell">
            <summary>
            Summary description for BoolErr.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.FormulaCell">
            <summary>
            Summary description for Formula.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.Label">
            <summary>
            Summary description for Label.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.MergedCell">
            <summary>
            Summary description for MergedCell.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Cells.Number">
            <summary>
            Summary description for Number.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.CellType">
            <summary>
            Summary description for CellType.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Array">
            <summary>
            An array-entered formula
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Blank">
            <summary>
            An empty cell
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Error">
            <summary>
            An error value
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Boolean">
            <summary>
            A Boolean value
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Formula">
            <summary>
            A cell formula, stored as parse tokens
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Label">
            <summary>
            A string constant
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.LabelSst">
            <summary>
            String constant that uses BIFF8 shared string table (new to BIFF8)
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Number">
            <summary>
            An IEEE floating-point number
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.MulBlank">
            <summary>
            Multiple empty cells (new to BIFF5)
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.MulRK">
            <summary>
            Multiple RK numbers (new to BIFF5)
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.RK">
            <summary>
            An RK number
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.RString">
            <summary>
            Cell with character formatting
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.SharedFormula">
            <summary>
            A shared formula (new to BIFF5)
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.String">
            <summary>
            A string that represents the result of a formula
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.CellType.Merged">
            <summary>
            Cell is a part of group merged cells
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Axes">
            <summary>
            Summary description for Axes.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Axis">
            <summary>
            Summary description for Axis.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.AxisTitle">
            <summary>
            Summary description for AxisTitle.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.ChartArea">
            <summary>
            Summary description for ChartArea.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.ChartData">
            <summary>
            Summary description for Chart.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.ChartTitle">
            <summary>
            Summary description for ChartTitle.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.DownBars">
            <summary>
            Summary description for DownBars.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.DropLines">
            <summary>
            Summary description for DropLines.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Floor">
            <summary>
            Summary description for Floor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Gridlines">
            <summary>
            Represents major or minor gridlines on a chart axis.
            </summary>
            <remarks><c>Gridlines</c> extend the tick marks on a chart axis to make it easier
             to see the values associated with the data markers. This object isnï¿½t a collection. 
             Thereï¿½s no object that represents a single gridline; you either have all gridlines 
             for an axis turned on or all of them turned off.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Charts.Gridlines.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.HiLoLines">
            <summary>
            Summary description for HiLoLines.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Legend">
            <summary>
            Summary description for Legend.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.PlotArea">
            <summary>
            Summary description for PlotArea.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Point">
            <summary>
            Summary description for Point.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Points">
            <summary>
            Summary description for Points.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Charts.Points.#ctor(System.Collections.ArrayList,GrapeCity.SharpCells.Implementation.WorkbookData,GrapeCity.SharpCells.Implementation.Charts.Series)">
            <summary>
            copy constructor for Points
            </summary>
            <param name="values"> collection of numbers</param>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Series">
            <summary>
            Summary description for Series.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.SeriesCollection">
            <summary>
            Summary description for SeriesCollection.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.SeriesLines">
            <summary>
            Summary description for SeriesLines.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Trendline">
            <summary>
            Summary description for Trendline.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.Trendlines">
            <summary>
            Summary description for Trendlines.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Charts.UpBars">
            <summary>
            Summary description for UpBars.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Colors">
            <summary>
            Workbook color palette of 56 colors.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Crc">
            <summary>
            Summary description for Crc.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Window1Options">
            <summary>
            Summary description for Enums.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ExternalData.ExternalDataBlock">
            <summary>
            Summary description for ExternalDataBlock.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.ExternalData.ExternalDataBlock.CreateExternalSheet(System.String)">
            <summary>
            Creates external sheet.
            </summary>
            <param name="externalReference">external reference string.</param>
            <returns>External sheet or <c>null</c></returns>
            <remarks>external reference should contain '!' sign. So if you need
            to add external sheet for current workbook use form 'SheetN!'</remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ExternalData.ExternalName">
            <summary>
            Summary description for ExternalName.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ExternalData.ExternalPart">
            <summary>
            Summary description for ExternalPart.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ExternalData.ExternalSheet">
            <summary>
            External part of reference
            </summary>
            <remarks>
            <para>This class represents unique string from 3D referincing, 
            everything that stands before the '!' character.</para>
            <para>This is:</para>
            <list type="bullet">
            <listheader>
            <term>Reference</term>
            <description>External part</description>
            </listheader>
            <item>
            <term>Sheet1!A1</term>
            <description>Sheet1</description>
            </item>
            <item>
            <term>Sheet1:Sheet2!A1</term>
            <description>Sheet1:Sheet2</description>
            </item>
            <item>
            <term>[Book1]Sheet1!A1</term>
            <description>[Book1]Sheet1</description>
            </item>
            <item>
            <term>'c:\data\[Book1.xls]Sheet1'!A1</term>
            <description>'c:\data\[Book1.xls]Sheet1'</description>
            </item>
            </list>
            <para>This parts are unique with some rules those depend on
            conent of the current workbook.</para>
            </remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ExternalData.IWorkbookDataProvider">
            <summary>
            Summary description for IWorkbookDataProvider.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Font">
            <summary>
            Summary description for Font.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.FontTable">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.FontTable.FontData">
            <summary>
            Summary description for FontData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.FormatCondition">
            <summary>
            Summary description for FormatCondition.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.FormatConditions">
            <summary>
            Summary description for FormatConditions.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formula">
            <summary>
            Summary description for Formula.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Area3dToken">
            <summary>
            Summary description for Area3dToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.AreaErr3dToken">
            <summary>
            Summary description for AreaErr3dToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.AreaErrToken">
            <summary>
            Summary description for AreaErrToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.AreaNToken">
            <summary>
            Summary description for AreaNToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.AreaToken">
            <summary>
            Summary description for AreaToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.AttrToken">
            <summary>
            Summary description for AttrToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.BinaryOperatorToken">
            <summary>
            Summary description for BinaryOperatorToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.BoolToken">
            <summary>
            Summary description for BoolToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.ChooseOperatorToken">
            <summary>
            Summary description for ChooseOperatorToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.ClassifiedToken">
            <summary>
            Summary description for ClassifiedToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.ErrToken">
            <summary>
            Summary description for ErrToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.EvaluationContext">
            <summary>
            Summary description for EvaluationContext.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Evaluator">
            <summary>
            Summary description for Evaluator.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.FixedArgumentsFunctionToken">
            <summary>
            Summary description for FixedArgumentsFunctionToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.FormulaUtility">
            <summary>
            Summary description for FormulaUtility.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.FunctionToken">
            <summary>
            Summary description for FunctionToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.IfOperatorToken">
            <summary>
            Summary description for IfOperatorToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.IntToken">
            <summary>
            Summary description for IntToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.IToken3dProcessor">
            <summary>
            Summary description for IToken3dProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.ITokenProcessor">
            <summary>
            Summary description for ITokenProcessor.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.MemAreaToken">
            <summary>
            Summary description for MemAreaToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.MemFuncToken">
            <summary>
            Summary description for MemFuncToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.MissArgToken">
            <summary>
            Summary description for MissArgToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.NameToken">
            <summary>
            Summary description for NameToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.NameXToken">
            <summary>
            Summary description for NameXToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.NumToken">
            <summary>
            Summary description for NumToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.ParenToken">
            <summary>
            Summary description for ParenToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.ParsedFormulaImplementation">
            <summary>
            Summary description for ParsedFormulaImplementation.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Parsing.Context">
            <summary>
            Summary description for Context.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Parsing.ExcelFunction">
            <summary>
            Summary description for ExcelFunction.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.Formulas.Parsing.ExcelFunction.GetExcelFunction(System.String,GrapeCity.SharpCells.Implementation.Formulas.Parsing.Context)">
            <summary>
            Gives out <c>ExcelFunction</c> object for a given name.
            </summary>
            <param name="name">
            Function name in MSDN documentation (or
            en-US version of Excel).
            </param>
            <param name="context">
            <c>Context</c> object used to distinguish the
            correct function for the given name.
            </param>
            <returns>
            <c>ExcelFunction</c> object that describes the function.
            </returns>
            <remarks>
            Under some circumstances context is used to find proper 
            function (ABS function for example).
            </remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Parsing.Operator">
            <summary>
            Summary description for Operator.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Parsing.OperatorType">
            <summary>
            Summary description for OperatorType.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Parsing.ParameterDescription">
            <summary>
            Describes the function parameter.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Parsing.Parser">
            <summary>
            Summary description for Parser.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Ref3dToken">
            <summary>
            Summary description for Ref3dToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.RefErrToken">
            <summary>
            Summary description for RefErrToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.RefNToken">
            <summary>
            Summary description for RefNToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.RefToken">
            <summary>
            Summary description for RefToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.SpaceAttrToken">
            <summary>
            Summary description for SpaceAttrToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.StrToken">
            <summary>
            Summary description for StrToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.SumAttrToken">
            <summary>
            Summary description for SumAttrToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.Token">
            <summary>
            Summary description for Token.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.TokenClass">
            <summary>
            Summary description for TokenClass.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.FormulaTokenId">
            <summary>
            Summary description for TockenId.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.UnaryOperatorToken">
            <summary>
            Summary description for UnaryOperatorToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Formulas.VariableArgumentsFunctionToken">
            <summary>
            Summary description for VariableArgumentsFunctionToken.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.FormulaFactory">
            <summary>
            Summary description for FormulaFactory.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.HPageBreak">
            <summary>
            Summary description for HPageBreak.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Hyperlink">
            <summary>
            Summary description for Hyperlink.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Hyperlink.TextToDisplay">
            <summary>
            Returns or sets the text to be displayed for the specified hyperlink. 
            The default value is the address of the hyperlink. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.IBorders">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.IFont">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.IIndexedItem">
            <summary>
            Summary description for IIndexedItem.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.IIndexedItemContainer">
            <summary>
            Summary description for IIndexedItemContainer.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.IInterior">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ImageCrc">
            <summary>
            Summary description for ImageCrc.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ImageShape">
            <summary>
            Summary description for ImageShape.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ImageTable">
            <summary>
            Summary description for ImageTable.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.ImageTable.Add(GrapeCity.SharpCells.Implementation.UniqueImage)">
            <summary>
            Adds image in collection of unique images. 
            If collection already contains this image, 
            increases number of references on this picture
            and returns index of this image
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.IXf">
            <summary>
            Summary description for IXf.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.LineShape">
            <summary>
            Summary description for LineShape.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.LineShape.LineWidth">
            <summary>
            Line width measured in points
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.MsoDrawingContainer">
            <summary>
            Summary description for MsoDrawingContainer.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.Implementation.MsoDrawingContainer.positions">
            <summary>
            stores the beginning position of corresponding piece of record
            so i-th piece lays between i and i+1 positions
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Implementation.MsoDrawingContainer.ResetToWrite">
            <summary>
            prepares container for filling
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Name">
            <summary>
            Summary description for Name.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Name.Visible">
            <summary>
            Determines whether the object is visible. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.NameChangedEventArgs">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.NumberFormatTable">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.NumberFormatTable.NumberFormatData">
            <summary>
            Summary description for NumberFormatData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.PageSetupData">
            <summary>
            Summary description for PageSetupData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.PaneData">
            <summary>
            Summary description for PaneData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Protection">
            <summary>
            Summary description for Protection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowFormattingCells">
            <summary>
            Returns <c>true</c> if the formatting of cells is allowed on 
            a protected worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowFormattingColumns">
            <summary>
            Returns <c>true</c> if the formatting of columns is allowed on a
             protected worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowFormattingRows">
            <summary>
            Returns <c>true</c> if the formatting of rows is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowInsertingColumns">
            <summary>
            Returns <c>true</c> if the insertion of columns is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowInsertingRows">
            <summary>
            Returns <c>true</c> if the insertion of rows is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowInsertingHyperlinks">
            <summary>
            Returns <c>true</c> if the insertion of hyperlinks is allowed on a 
            protected worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowDeletingColumns">
            <summary>
            Returns <c>true</c> if the deletion of columns is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowDeletingRows">
            <summary>
            Returns <c>true</c> if the deletion of rows is allowed on a protected worksheet.
             Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowSorting">
            <summary>
            Returns <c>true</c> if the sorting option is allowed on a protected worksheet.
             Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowFiltering">
            <summary>
            Returns <c>true</c> if the user is allowed to make use of an <c>AutoFilter</c> that was created 
            before the sheet was protected. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Implementation.Protection.AllowUsingPivotTables">
            <summary>
            Returns <c>true</c> if the user is allowed to manipulate pivot tables on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Shape">
            <summary>
            Summary description for Shape.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.ShapeHelper">
            <summary>
            Summary description for ShapeHelper.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.SheetData">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.StorageOfUnrecognizedRecords">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.StyleData">
            <summary>
            Summary description for StyleData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.StyleTable">
            <summary>
            Summary description for StyleTable.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.StyleXf">
            <summary>
            Summary description for StyleXf.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.UniqueImage">
            <summary>
            Summary description for UniqueImage.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.UnparsedShape">
            <summary>
            Summary description for UnparsedShape.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.UserStyleData">
            <summary>
            Summary description for UserStyleData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.VPageBreak">
            <summary>
            Summary description for VPageBreak.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Window1Data">
            <summary>
            Summary description for Window1Data.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.Window2Data">
            <summary>
            Summary description for Window2Data.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.WorkbookData">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.WorksheetData">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.WsBoolData">
            <summary>
            Summary description for OutlineData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.XfTable">
             <summary>
             XfTable may contain duplicate XF entries originally and we are not going 
             to pack them, since they can be used from different locations. But we will 
             preserve uniqueness for the later added entries.
             
             Compacting the table before the save removes unused entries (since it can not
             effeciently merge duplicates those existed on reading).
            
             For internal use only.
             </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.XfTable.StyleXfData">
            <summary>
            Summary description for StyleXfData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Implementation.XfTable.CellXfData">
            <summary>
            Summary description for CellXfData.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.IntegerWrapper">
            <summary>
            Same as boolean but can be also <c>null</c>.
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Interior">
            <summary>
            Represents the interior of an object.
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Interior.Color">
            <summary>
            Returns or sets the primary color of the object, as shown in the following table. 
            Use the RGB function to create a color value. Read/write <c>Color</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Interior.ColorIndex">
            <summary>
            Returns or sets the color of the interior. 
            </summary>
            <remarks>The color is specified as an index value 
            into the current color palette, or as one of the following <c>ColorIndex</c> constants.
             Read/write <c>int</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Interior.InvertIfNegative">
            <summary>
            <c>true</c> if Microsoft Excel inverts the pattern in the item when it corresponds 
            to a negative number. Read/write <c>Variant</c> for the <c>Interior</c> object, read/write 
            BooleanWrapper for all other objects.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Interior.Pattern">
            <summary>
            Returns or sets the interior pattern. Read/write Pattern.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Interior.PatternColor">
            <summary>
            Returns or sets the color of the interior pattern as an RGB value. Read/write <c>Color</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Interior.PatternColorIndex">
            <summary>
            Returns or sets the color of the interior pattern as an index into the current 
            color palette, or as one of the following <c>ColorIndex</c> constants:
             <c>ColorIndexAutomatic</c> or <c>ColorIndexNone</c>. Read/write <c>int</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Legend">
            <summary>
            Represents the legend in a chart. Each chart can have only one legend. 
            The <c>Legend</c> object contains one or more <c>LegendEntry</c> objects; each <c>LegendEntry</c> 
            object contains a <c>LegendKey</c> object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Legend.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Legend.Font">
            <summary>
            Returns a <c>Font</c> object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Legend.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Legend.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Legend.Position">
            <summary>
            Returns or sets the position of the legend on the chart. Read/write <c>LegendPosition</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Legend.Shadow">
            <summary>
            <c>true</c> if the font is a shadow font or if the object has a shadow. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Legend.Clear">
            <summary>
            Clears the entire object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.AreaRange">
            <summary>
            Summary description for AreaRange.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.CellRange">
            <summary>
            Summary description for CellRange.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.CellRange.Areas">
            <summary>
            Returns an <c>Areas</c> collection that represents all 
            the ranges in a multiple-area selection. Read-only.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.CellRange.Borders">
            <summary>
            Returns a  <c>Borders</c> collection that represents the 
            borders of a range of cells (including a range defined 
            as part of a conditional format).
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.CellRange.Column">
            <summary>
            Returns the number of the first column in the first area 
            in the specified range. Read-only.
            </summary>
            <remarks>
            Column A returns 1, column B returns 2, and so on.
            To return the number of the last column in the range, 
            use the following expression.
            <code>
            myRange.Columns[myRange.Columns.Count].Column
            </code>
            </remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Columns">
            <summary>
            Summary description for Columns.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.ColumnsRange">
            <summary>
            Summary description for ColumnsRange.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Composite">
            <summary>
            Summary description for Composite.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.FormatCondition">
            <summary>
            Summary description for FormatCondition.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.FormatConditions">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.HPageBreak">
            <summary>
            Summary description for VPageBreak.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.HPageBreaks">
            <summary>
            Summary description for HPageBreaks.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Name">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Name.Index">
            <summary>
            Returns the index number of the object within the collection of 
            similar objects. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Name.RefersToRange">
            <summary>
            Returns the <c>Range</c> object referred to by a <c>Name</c> object. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Name.Visible">
            <summary>
            Determines whether the object is visible. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.MSApi.Name.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Names">
            <summary>
            Summary description for Name.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Proxy">
            <summary>
            Summary description for Proxy.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Range">
            <summary>
            Represents Excel Range.
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.MSApi.Range.Address(System.Boolean,System.Boolean,GrapeCity.SharpCells.ReferenceStyle,System.Boolean,GrapeCity.SharpCells.MSApi.Range)">
            <summary>
            Returns the range reference in the language of 
            the macro. Read-only.
            </summary>
            <param name="rowAbsolute">
            <c>true</c> to return the row part of the reference 
            as an absolute reference. The default value is <c>true</c>.
            </param>
            <param name="columnAbsolute">
            <c>true</c> to return the column part of the reference 
            as an absolute reference. The default value is <c>true</c>.
            </param>
            <param name="ReferenceStyle">
            Reference style. <c>ReferenceStyle.A1</c> default. Use 
            <c>ReferenceStyle.A1</c> to return an A1-style reference.
            <c>ReferenceStyle.R1C1</c> to return an R1C1-style reference. 
            </param>
            <param name="External">
            <c>true</c> to return an external reference. <c>false</c> 
            to return a local reference. The default value is <c>false</c>.
            </param>
            <param name="RelativeTo">
            If <c>rowAbsolute</c> and <c>columnAbsolute</c> are 
            <c>false</c>, and <c>ReferenceStyle</c> is 
            <c>ReferenceStyle.R1C1</c>, you must include a starting 
            point for the relative reference. This argument is 
            a <c>Range</c> object that defines the starting point.
            </param>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Range.AllowEdit">
            <summary>
            <c>true</c> if the range can be edited on a protected 
            worksheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Range.Areas">
            <summary>
            Returns an <c>Areas</c> collection that represents all 
            the ranges in a multiple-area selection. Read-only.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Range.Borders">
            <summary>
            Returns a  <c>Borders</c> collection that represents the 
            borders of a range of cells (including a range defined 
            
            as part of a conditional format).
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Range.Column">
            <summary>
            Returns the number of the first column in the first area 
            in the specified range. Read-only.
            </summary>
            <remarks>
            Column A returns 1, column B returns 2, and so on.
            To return the number of the last column in the range, 
            use the following expression.
            <code>
            myRange.Columns[myRange.Columns.Count].Column
            </code>
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Range.ColumnWidth">
            <summary>
            Returns or sets the width of all columns in the specified 
            range. Read/write.
            </summary>
            <remarks>
            One unit of column width is equal to the width of one 
            character in the Normal style. For proportional fonts, 
            the width of the character 0 (zero) is used.
            Use the <c>Width</c> property to return the width of 
            a column in points.
            If all columns in the range have the same width, the 
            <c>ColumnWidth</c> property returns the width. If 
            columns in the range have different widths, this 
            property returns <c>Double.NaN</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.Range.Columns">
            <summary>
            Returns a <c>Range</c> object that represents the columns 
            in the specified range. Read-only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Rows">
            <summary>
            Summary description for Rows.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.RowsRange">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.MSApi.RowsRange.Collapse">
            <summary>
            Collapses this RowsRange.
            </summary>
            <remarks>If a child group is expanded, but needs to be hidden due to this collapsing
            the first row after the child group needs to not be Collapsed so when the 
            parent is expanded in Excel the child will also be expanded. Similar to ShowDetail.
            </remarks>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.SheetWindow">
            <summary>
            Summary description for WorksheetWindow.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.SheetWindow.DisplayFormulas">
            <summary>
            <c>true</c> if the window is displaying formulas, <c>false</c> if the window 
            is displaying values. Read/write <c>bool</c>.
            </summary>
            <remarks>This property applies only to worksheets and macro sheets.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.SheetWindow.DisplayGridlines">
            <summary>
            <c>true</c> if gridlines are displayed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.SheetWindow.DisplayHeadings">
            <summary>
            <c>true</c> if both row and column headings are displayed, <c>false</c> if there are 
            no headings displayed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.SheetWindow.DisplayZeros">
            <summary>
            <c>true</c> if zero values are displayed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.SheetWindow.FreezePanes">
            <summary>
            <c>true</c> if split panes are frozen. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.SheetWindow.SplitHorizontal">
            <summary>
            Returns or sets the location of the horizontal window split, 
            in points. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.MSApi.SheetWindow.SplitVertical">
            <summary>
            Returns or sets the location of the vertical window split,
             in points. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.SheetWindows">
            <summary>
            Summary description for WorksheetWindows.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.Utility">
            <summary>
            Summary description for Utility.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.VPageBreak">
            <summary>
            Summary description for VPageBreak.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.VPageBreaks">
            <summary>
            Summary description for VPageBreaks.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.WorkbookNames">
            <summary>
            Summary description for WorkbookNames.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.WorkbookWindow">
            <summary>
            Summary description for WorkbookWindow.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.WorkbookWindows">
            <summary>
            Summary description for Windows.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.WorksheetNames">
            <summary>
            Summary description for WorksheetNames.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.MSApi.WorksheetRange">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Name">
            <summary>
            Represents a defined name for a range of cells.
            For internal use only.
            </summary>
            <remarks>Names can be either built-in names ï¿½ 
            such as Database, Print_Area, and Auto_Open ï¿½ or custom names.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Name.Index">
            <summary>
            Returns the index number of the object within the collection of 
            similar objects. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Name.RefersToRange">
            <summary>
            Returns the <c>Range</c> object referred to by a <c>Name</c> object. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Name.Visible">
            <summary>
            Determines whether the object is visible. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Name.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Names">
            <summary>
            A collection of all the <c>Name</c> objects in the application or workbook.
            For internal use only. 
            </summary>
            <remarks>Each <c>Name</c> object represents a defined name for a range of cells. 
            Names can be either built-in names ï¿½ such as Database, Print_Area, and 
            Auto_Open ï¿½ or custom names.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Names.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Names.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Names.Item(System.String)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Names.Add(System.String,System.String)">
            <summary>
            Defines a new name. Returns a <c>Name</c> object.
            </summary>
            <param name="name">Required if <c>NameLocal</c> isnï¿½t specified. The text to use as the 
            name (in the language of the macro). Names cannot include spaces and cannot
             look like cell references.</param>
            <param name="formula"> </param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Names.Add(System.String,GrapeCity.SharpCells.Range)">
            <summary>
            Defines a new name. Returns a Name object.
            </summary>
            <param name="name">Required if <c>NameLocal</c> isnï¿½t specified. The text to use as the name (in the 
            language of the macro). Names cannot include spaces and cannot look like
             cell references.</param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.SharpCells.Outline">
            <summary>
            Summary description for Outline.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.PageSetup">
            <summary>
            Represents the page setup description. The <c>PageSetup</c> object contains all page setup 
            attributes (left margin, bottom margin, paper size, and so on) as properties.
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.BlackAndWhite">
            <summary>
            <c>true</c> if elements of the document will be printed in black and white. Read/write <c>bool</c>.
            </summary>
            <remarks>This property applies only to worksheet pages.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.BottomMargin">
            <summary>
            Returns or sets the size of the bottom margin, in points. Read/write <c>double</c>.
            </summary>
            <remarks>Margins are set or returned in points. Use either the <c>InchesToPoints</c> method 
            or the <c>CentimetersToPoints</c> method to do the conversion.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.CenterFooter">
            <summary>
            Returns or sets the center part of the footer. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.CenterHeader">
            <summary>
            Returns or sets the center part of the header. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.CenterHorizontally">
            <summary>
            <c>true</c> if the sheet is centered horizontally on the page when it's printed.
             Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.CenterVertically">
            <summary>
            <c>true</c> if the sheet is centered vertically on the page when 
            it's printed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.Draft">
            <summary>
            <c>true</c> if the sheet will be printed without graphics. Read/write <c>bool</c>.
            </summary>
            <remarks>Setting this property to <c>true</c> makes printing faster 
            (at the expense of not printing graphics).</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.FirstPageNumber">
            <summary>
            Returns or sets the first page number that will be used when this sheet is
             printed. If <c>Automatic</c>, Microsoft Excel chooses the first page number. 
             The default is <c>Automatic</c>. Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.FitToPagesTall">
            <summary>
            Returns or sets the number of pages tall the worksheet will be scaled to when
             it's printed. Applies only to worksheets. Read/write <c>int</c>.
            </summary>
            <remarks>If this property is <c>false</c>, Microsoft Excel scales the worksheet 
            according to the <c>FitToPagesWide</c> property.If the Zoom property is <c>true</c>, 
            the <c>FitToPagesTall</c> property is ignored. </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.FitToPagesWide">
            <summary>
            Returns or sets the number of pages wide the worksheet will be scaled to when
             it's printed. Applies only to worksheets. Read/write <c>int</c>.
            </summary>
            <remarks>If this property is <c>false</c>, Microsoft Excel scales the worksheet 
            according to the <c>FitToPagesTall</c> property.If the Zoom property is <c>true</c>, 
            the <c>FitToPagesWide</c> property is ignored. </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.FooterMargin">
            <summary>
            Returns or sets the distance from the bottom of the page to the footer, 
            in points. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.HeaderMargin">
            <summary>
            Returns or sets the distance from the top of the page to the header, 
            in points. Read/write <c>double</c>.
            </summary>
            <remarks>Margins are set or returned in points. Use the <c>InchesToPoints</c> 
            method or the <c>CentimetersToPoints</c> method to convert measurements from 
            inches or centimeters</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.LeftFooter">
            <summary>
            Returns or sets the left part of the footer. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.LeftHeader">
            <summary>
            Returns or sets the left part of the header. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.LeftMargin">
            <summary>
            Returns or sets the size of the left margin, in points. Read/write <c>double</c>.
            </summary>
            <remarks>Margins are set or returned in points. Use the <c>InchesToPoints</c> method 
            or the <c>CentimetersToPoints</c> method to convert measurements from 
            inches or centimeters.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.Order">
            <summary>
            Returns or sets the order that Microsoft Excel uses to number pages when 
            printing a large worksheet. Read/write <c>Order</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PageOrientation">
            <summary>
            
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PaperSize">
            <summary>
            Returns or sets the size of the paper. Read/write <c>PaperSize</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PrintArea">
            <summary>
            Returns or sets the range to be printed, as a string using A1-style 
            references in the language of the macro. Read/write <c>string</c>.
            </summary>
            <remarks>Set this property to <c>false</c> or to the empty string ("")
             to set the print area to the entire sheet.	This property applies
              only to worksheet pages.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PrintComments">
            <summary>
            Returns or sets the way comments are printed with the sheet.
             Read/write <c>PrintLocation</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PrintError">
            <summary>
            Sets or returns an <c>PrintErrors</c> contstant specifying 
            the type of print error displayed. This feature allows users to 
            suppress the display of error values when printing a worksheet. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PrintGridlines">
            <summary>
            <c>true</c> if cell gridlines are printed on the page. Applies only to
             worksheets. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PrintHeadings">
            <summary>
            <c>true</c> if row and column headings are printed with this page. Applies 
            only to worksheets. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PrintNotes">
            <summary>
            <c>true</c> if cell notes are printed as end notes with the sheet. 
            Applies only to worksheets. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.PrintQuality">
            <summary>
            Use the <c>PrintComments</c> property to print comments as text boxes or end notes.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.RightFooter">
            <summary>
            Returns or sets the right part of the footer. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.RightHeader">
            <summary>
            Returns or sets the right part of the header. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.RightMargin">
            <summary>
            Returns or sets the size of the right margin, in points. Read/write <c>double</c>.
            </summary>
            <remarks>
            Margins are set or returned in points. Use the <c>InchesToPoints</c> method or the 
            <c>CentimetersToPoints</c> method to convert measurements from inches or centimeters.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.TopMargin">
            <summary>
            Returns or sets the size of the top margin, in points. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PageSetup.Zoom">
            <summary>
            Returns or sets a percentage (between 10 and 400 percent) by which Microsoft 
            Excel will scale the worksheet for printing. Applies only to worksheets.
             Read/write <c>int</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.PlotArea">
            <summary>
            Represents the plot area of a chart.
            </summary>
            <remarks>This is the area where your chart data is plotted. The plot area
             on a 2-D chart contains the data markers, gridlines, data labels, trendlines,
              and optional chart items placed in the chart area. The plot area on a 3-D chart 
              contains all the above items plus the walls, floor, axes, axis titles, and tick-mark 
              labels in the chart.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.PlotArea.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PlotArea.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.PlotArea.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.PlotArea.ClearFormats">
            <summary>
            Clears the formatting of the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Point">
            <summary>
            Represents a single point in a series in a chart. 
            </summary>
            <remarks>The <c>Point</c> object is a member of the <c>Points</c> collection. 
            The <c>Points</c> collection contains all the points in one series.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.Explosion">
            <summary>
            Returns or sets the explosion value for a pie-chart or doughnut-chart slice. 
            Returns 0 (zero) if there's no explosion (the tip of the slice is in the 
            center of the pie). Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.InvertIfNegative">
            <summary>
            <c>true</c> if Microsoft Excel inverts the pattern in the item when it corresponds
             to a negative number. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.MarkerBackgroundColor">
            <summary>
            Returns or sets the marker background color as an RGB value. Applies only to 
            line, scatter, and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.MarkerBackgroundColorIndex">
            <summary>
            Returns or sets the marker background color as an index into the current
             color palette, or as one of the following <c>ColorIndex</c> constants:
              <c>ColorIndexAutomatic</c> or <c>ColorIndexNone</c>. Applies only to line, 
              scatter, and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.MarkerForegroundColor">
            <summary>
            Returns or sets the foreground color of the marker as an RGB value. 
            Applies only to line, scatter, and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.MarkerForegroundColorIndex">
            <summary>
            Returns or sets the marker foreground color as an index into the current 
            color palette, or as one of the following <c>ColorIndex</c> constants:
             <c>ColorIndexAutomatic</c> or <c>ColorIndexNone</c>. Applies only to line, 
             scatter, and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.MarkerSize">
            <summary>
            Returns or sets the data-marker size, in points. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.MarkerStyle">
            <summary>
            Returns or sets the marker style for a point or series in a line chart, 
            scatter chart, or radar chart. Read/write <c>MarkerStyle</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Point.Shadow">
            <summary>
            <c>true</c> if the font is a shadow font or if the object has a shadow. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Point.ClearFormats">
            <summary>
            Clears the formatting of the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Points">
            <summary>
            A collection of all the <c>Point</c> objects in the specified series in a chart.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Points.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Points.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Protection">
            <summary>
            Represents the various types of protection options available for a worksheet.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Protection.#ctor(GrapeCity.SharpCells.Implementation.Protection)">
            <summary>
            Returns a <c>Protection</c> object that represents the protection options of the worksheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowFormattingCells">
            <summary>
            Returns <c>true</c> if the formatting of cells is allowed on 
            a protected worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowFormattingColumns">
            <summary>
            Returns <c>true</c> if the formatting of columns is allowed on a
             protected worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowFormattingRows">
            <summary>
            Returns <c>true</c> if the formatting of rows is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowInsertingColumns">
            <summary>
            Returns <c>true</c> if the insertion of columns is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowInsertingRows">
            <summary>
            Returns <c>true</c> if the insertion of rows is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowInsertingHyperlinks">
            <summary>
            Returns <c>true</c> if the insertion of hyperlinks is allowed on a 
            protected worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowDeletingColumns">
            <summary>
            Returns <c>true</c> if the deletion of columns is allowed on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowDeletingRows">
            <summary>
            Returns <c>true</c> if the deletion of rows is allowed on a protected worksheet.
             Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowSorting">
            <summary>
            Returns <c>true</c> if the sorting option is allowed on a protected worksheet.
             Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowFiltering">
            <summary>
            Returns <c>true</c> if the user is allowed to make use of an <c>AutoFilter</c> that was created 
            before the sheet was protected. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Protection.AllowUsingPivotTables">
            <summary>
            Returns <c>true</c> if the user is allowed to manipulate pivot tables on a protected 
            worksheet. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Range">
            <summary>
            Represents a cell, a row, a column, a selection of cells containing one or more 
            contiguous blocks of cells, or a 3-D range.
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.Group">
            <summary>
            When the <c>Range</c> object represents a single cell in a <c>PivotTable</c> fieldï¿½s data range,
             the <c>Group</c> method performs numeric or date-based grouping in that field.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.Merge(System.Boolean)">
            <summary>
            Creates a merged cell from the specified <c>Range</c> object.
            </summary>
            <param name="across"></param>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.Address(System.Boolean,System.Boolean,GrapeCity.SharpCells.ReferenceStyle,System.Boolean,GrapeCity.SharpCells.Range)">
            <summary>
            Returns the range reference in the language of 
            the macro. Read-only.
            </summary>
            <param name="rowAbsolute">
            <c>true</c> to return the row part of the reference 
            as an absolute reference. The default value is <c>true</c>.
            </param>
            <param name="columnAbsolute">
            <c>true</c> to return the column part of the reference 
            as an absolute reference. The default value is <c>true</c>.
            </param>
            <param name="referenceStyle">
            Reference style. <c>ReferenceStyle.A1</c> default. Use 
            <c>ReferenceStyle.A1</c> to return an A1-style reference.
            <c>ReferenceStyle.R1C1</c> to return an R1C1-style reference. 
            </param>
            <param name="external">
            <c>true</c> to return an external reference. <c>false</c> 
            to return a local reference. The default value is <c>false</c>.
            </param>
            <param name="relativeTo">
            If <c>rowAbsolute</c> and <c>columnAbsolute</c> are 
            <c>false</c>, and <c>ReferenceStyle</c> is 
            <c>ReferenceStyle.R1C1</c>, you must include a starting 
            point for the relative reference. This argument is 
            a <c>Range</c> object that defines the starting point.
            </param>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.AllowEdit">
            <summary>
            <c>true</c> if the range can be edited on a protected 
            worksheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Areas">
            <summary>
            Returns an <c>Areas</c> collection that represents all 
            the ranges in a multiple-area selection. Read-only.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Borders">
            <summary>
            Returns a  <c>Borders</c> collection that represents the 
            borders of a range of cells (including a range defined 
            as part of a conditional format).
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Cells">
            <summary>
            Returns a <c>Range</c> object that represents the cells in the 
            specified range. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Column">
            <summary>
            Returns the number of the first column in the first area 
            in the specified range. Read-only.
            </summary>
            <remarks>
            Column A returns 1, column B returns 2, and so on.
            To return the number of the last column in the range, 
            use the following expression.
            <code>
            myRange.Columns[myRange.Columns.Count].Column
            </code>
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.ColumnWidth">
            <summary>
            Returns or sets the width of all columns in the specified 
            range. Read/write.
            </summary>
            <remarks>
            One unit of column width is equal to the width of one 
            character in the Normal style. For proportional fonts, 
            the width of the character 0 (zero) is used.
            Use the <c>Width</c> property to return the width of 
            a column in points.
            If all columns in the range have the same width, the 
            <c>ColumnWidth</c> property returns the width. If 
            columns in the range have different widths, this 
            property returns <c>Double.NaN</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Columns">
            <summary>
            Returns a <c>Range</c> object that represents the columns 
            in the specified range. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Font">
            <summary>
            Returns a <c>Font</c> object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Formula">
            <summary>
            Returns or sets the object's formula in A1-style notation and in the
             language of the macro. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.FormulaHidden">
            <summary>
            <c>true</c> if the formula will be hidden when the worksheet is protected. 
            Returns <c>null</c> if the specified range contains some cells with <c>FormulaHidden</c>
             equal to <c>true</c> and some cells with <c>FormulaHidden</c> equal to <c>false</c>. 
             Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.FormulaR1C1">
            <summary>
            Returns or sets the formula for the object, using R1C1-style notation in 
            the language of the macro. Read/write <c>string</c> for <c>Range</c> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.HasFormula">
            <summary>
            <c>true</c> if all cells in the range contain formulas; <c>false</c> if none of the cells 
            in the range contains a formula; <c>null</c> otherwise. Read-only <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Height">
            <summary>
            The height of the range. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Hidden">
            <summary>
            <c>true</c> if the rows or columns are hidden. The specified range must span 
            an entire column or row. Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.HorizontalAlignment">
            <summary>
            <c>true</c>if the rows or columns are hidden. The specified range must 
            span an entire column or row. Read/write <c>HAlign</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Hyperlinks">
            <summary>
            Returns a <c>Hyperlink</c> object that represents the hyperlink for the shape.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.Insert">
            <summary>
            Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.Insert(GrapeCity.SharpCells.ShiftDirection)">
            <summary>
            Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.
            </summary>
            <param name="shift"></param>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.Insert(GrapeCity.SharpCells.ShiftDirection,System.Boolean)">
            <summary>
            Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.
            </summary>
            <param name="shift"></param>
            <param name="copyOrigin"></param>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.InsertRangeOnly(GrapeCity.SharpCells.ShiftDirection)">
            <summary>
            Inserts a copy of a cell or a range of cells into the worksheet or macro sheet and shifts other cells away within the affected range.
            </summary>
            <param name="shift"></param>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.IndentLevel">
            <summary>
            Returns or sets the indent level for the cell or range. Can be an integer 
            from 0 to 15. Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Item(System.Int32,System.Int32)">
            <summary>
            Returns a <c>Range</c> object that represents a range at an offset to the specified range.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Item(System.String)">
            <summary>
            Returns a <c>Range</c> object that represents a range at an offset to the specified range.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.ListHeaderRows">
            <summary>
            Returns the number of header rows for the specified range. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Locked">
            <summary>
            <c>true</c> if the object is locked, <c>false</c> if the object can be modified 
            when the sheet is protected. Returns <c>null</c> if the specified range contains 
            both locked and unlocked cells. Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.MergeArea">
            <summary>
            Returns a <c>Range</c> object that represents the merged range containing the specified
             cell. If the specified cell isnï¿½t in a merged range, this property returns 
             the specified cell. Read-only <c>Range</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.MergeCells">
            <summary>
            <c>true</c> if the range or style contains merged cells. Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Name">
            <summary>
            Returns or sets the name of the object. The name of a <c>Range</c> object is a <c>Name</c> object.
             For every other type of object, the name is a string. Read/write <c>Name</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.NumberFormat">
            <summary>
            Returns or sets the format code for the object. Returns <c>Null</c> if all cells in the 
            specified range don't have the same number format. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Orientation">
            <summary>
            The text orientation. Can be an integer value from  ï¿½ 90 to 90 degrees.
             Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.OutlineLevel">
            <summary>
            Returns or sets the current outline level of the specified row or column. 
            Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.PageBreak">
            <summary>
            Returns or sets the location of a page break. Can be one of the following 
            <c>PageBreak</c> constants: <c>PageBreak.Automatic</c>, <c>PageBreak.Manual</c>, or 
            <c>PageBreakNone</c>. Read/write <c>PageBreak</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.ReadingOrder">
            <summary>
            Returns or sets the reading order for the specified object. Can be one of the 
            following constants: <c>RTL</c> (right-to-left), <c>LTR</c> (left-to-right), or <c>Context</c>. 
            Read/write <c>ReadingOrder</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Range.Resize(System.Int32,System.Int32)">
            <summary>
            Resizes the specified range. Returns a <c>Range</c> object that represents the 
            resized range.
            </summary>
            <param name="h">The number of rows in the new range. If this argument is omitted,
             the number of rows in the range remains the same.	</param>
            <param name="w">The number of columns in the new range. If this argument is 
            omitted, the number of columns in the range remains the same.</param>
            <returns><c>Range</c> object </returns>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Row">
            <summary>
            Returns the number of the first row of the first area in the range. Read-only <c>long.</c>
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.RowHeight">
            <summary>
            Returns the height of all the rows in the range specified, measured in points. 
            Returns <c>null</c> if the rows in the specified range arenï¿½t all the same height. 
            Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Rows">
            <summary>
            For an Application object, returns a Range object that represents all the 
            rows on the active worksheet. 
            </summary>
            <remarks>If the active document isnï¿½t a worksheet, the <c>Rows</c> property fails. 
            For a <c>Range</c> object, returns a Range object that represents the rows in the 
            specified range. For a <c>Worksheet</c> object, returns a <c>Range</c> object that represents
             all the rows on the specified worksheet. Read-only Range object.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.ShowDetail">
            <summary>
            <c>true</c> if the outline is expanded for the specified range (so that the detail 
            of the column or row is visible). The specified range must be a single summary 
            column or row in an outline. Read/write <c>bool</c>.
            </summary>
            <remarks>For the <c>PivotItem</c> object (or the Range object if the range is in a 
            <c>PivotTable</c> report), this property is set to True if the item is showing detail</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.ShrinkToFit">
            <summary>
            <c>true</c> if text automatically shrinks to fit in the available column width. 
            Returns <c>null</c> if this property isnï¿½t set to the same value for all cells 
            in the specified range. Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Style">
            <summary>
            Returns a <c>Style</c> object that represents the style of the 
            specified range. 
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Summary">
            <summary>
            <c>true</c> if the range is an outlining summary row or column. 
            The range should be a row or a column. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Text">
            <summary>
            Returns or sets the text for the specified object. Read-only 
            <c>string</c> for the <c>Range</c> object, read/write <c>string</c> for all other objects.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.UseStandardHeight">
            <summary>
            <c>true</c> if the row height of the Range object equals the standard height of the sheet.
             Returns <c>null</c> if the range contains more than one row and the rows arenï¿½t all 
             the same height. Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.UseStandardWidth">
            <summary>
            <c>true</c> if the column width of the Range object equals the standard width of the sheet. 
            Returns <c>null</c> if the range contains more than one column and the columns arenï¿½t all
             the same width. Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Value">
            <summary>
            Returns or sets the value of the specified range. Read/write <c>object</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.VerticalAlignment">
            <summary>
            Returns or sets the vertical alignment of the specified object. Read/write <c>VAlign</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Width">
            <summary>
            The width of the range. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.Worksheet">
            <summary>
            Returns a <c>Worksheet</c> object that represents the worksheet 
            containing the specified range. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.WrapText">
            <summary>
            <c>true</c> if Microsoft Excel wraps the text in the object. Returns <c>null</c> if the specified 
            range contains some cells that wrap text and other cells that donï¿½t. Read/write <c>BooleanWrapper</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Range.FormatConditions">
            <summary>
            Returns a <c>FormatConditions</c> collection that represents all the conditional 
            formats for the specified range. Read-only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.ReferenceStyle">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.ReferenceStyle.A1">
            <summary>
            Use A1 to return an A1-style reference.
            </summary>
        </member>
        <member name="F:GrapeCity.SharpCells.ReferenceStyle.R1C1">
            <summary>
            Use R1C1 to return an R1C1-style reference.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Series">
            <summary>
            Represents a series in a chart. The <c>Series</c> object is a member
             of the <c>SeriesCollection</c> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.AxisGroup">
            <summary>
            Returns the group for the specified chart group or series. Read/write <c>AxisGroup</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.BarShape">
            <summary>
            Returns or sets the shape used with the 3-D bar or column chart. 
            Read/write <c>BarShape</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.BubbleSizes">
            <summary>
            Returns or sets a string in A1-style notation that refers to the worksheet 
            cells containing the size data for the bubble chart. Applies only to bubble 
            charts. Read/write <c>ArrayList</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.ChartType">
            <summary>
            Returns or sets the chart type. Read/write <c>ChartType</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Explosion">
            <summary>
            Returns or sets the explosion value for a pie-chart or doughnut-chart 
            slice. Returns 0 (zero) if there's no explosion (the tip of the slice 
            is in the center of the pie). Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Has3DEffect">
            <summary>
            <c>true</c> if the series has a three-dimensional appearance. Applies only to 
            bubble charts. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.HasLeaderLines">
            <summary>
            <c>true</c> if the series has leader lines. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior 
            of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.InvertIfNegative">
            <summary>
            <c>true</c> if Microsoft Excel inverts the pattern in the item when it 
            corresponds to a negative number. Read/write <c>object</c> for the <c>Interior</c>
             object, read/write <c>bool</c> for all other objects.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.MarkerBackgroundColor">
            <summary>
            Returns or sets the marker background color as an RGB value. Applies only
             to line, scatter, and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.MarkerBackgroundColorIndex">
            <summary>
            Returns or sets the marker background color as an index into the current 
            color palette, or as one of the following <c>ColorIndex</c> constants:
             <c>ColorIndexAutomatic</c> or <c>ColorIndexNone</c>. Applies only to line, 
             scatter, and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.MarkerForegroundColor">
            <summary>
            Returns or sets the foreground color of the marker as an RGB value. Applies only to
             line,  scatter, and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.MarkerForegroundColorIndex">
            <summary>
            Returns or sets the marker foreground color as an index into the current 
            color palette, or as one of the following <c>ColorIndex</c> constants: 
            <c>ColorIndexAutomatic</c> or <c>ColorIndexNone</c>. Applies only to line, scatter,
             and radar charts. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.MarkerSize">
            <summary>
            Returns or sets the data-marker size, in points. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.MarkerStyle">
            <summary>
            Returns or sets the marker style for a point or series in a line chart, 
            scatter chart, or radar chart. Read/write <c>MarkerStyle</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Name">
            <summary>
            Returns or sets the name of the object. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Shadow">
            <summary>
            <c>true</c> if the font is a shadow font or if the object has a shadow. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Smooth">
            <summary>
            <c>true</c> if curve smoothing is turned on for the line chart or scatter chart. Applies
             only to line and scatter charts. Read/write.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Type">
            <summary>
            Returns or sets the chart or series type. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Values">
            <summary>
            Returns or sets a collection of all the values in the series. This can be a 
            range on a worksheet or an array of constant values, but not a combination of
             both. See the examples for details. Read/write <c>IList</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.XValues">
            <summary>
            Returns or sets an array of x values for a chart series. 
            The <c>XValues</c> property can be set to a range on a worksheet or to an 
            array of values, but it cannot be a combination of both. Read/write <c>IList</c>.
            For <c>PivotChart</c> reports, this property is read-only.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Series.ClearFormats">
            <summary>
            Clears the formatting of the object.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Series.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Points">
            <summary>
            Returns an object that represents a single point (a <c>Point</c> object) 
            or a collection of all the points (a <c>Points</c> collection) in the series. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Series.Trendlines">
            <summary>
            Returns an object that represents a single trendline (a <c>Trendline</c> object)
             or a collection of all the trendlines (a <c>Trendlines</c> collection) for the series.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.SeriesCollection">
            <summary>
            Summary description for SeriesCollection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.SeriesCollection.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.SeriesCollection.Add(System.Object,GrapeCity.SharpCells.RowCol,System.Object,System.Object,System.Object)">
            <summary>
            Adds one or more new series to the <c>SeriesCollection</c> collection.
            </summary>
            <param name="source">The new data, either as a Range object or an array of data points.</param>
            <param name="rowCol">Specifies whether the new values are in the rows or columns 
            of the specified range.	</param>
            <param name="seriesLabels">Ignored if Source is an array. <c>true</c> if the first row 
            or column contains the name of the data series. <c>false</c> if the first row or 
            column contains the first data point of the series. If this argument is
             omitted, Microsoft Excel attempts to determine the location of the series 
             name from the contents of the first row or column.	</param>
            <param name="categoryLabels"><c>true</c> if the first row or column contains the 
            name of the category labels. <c>false</c> if the first row or column contains the 
            first data point of the series. If this argument is omitted, Microsoft Excel
             attempts to determine the location of the category label from the contents 
             of the first row or column.</param>
            <param name="replace">If <c>CategoryLabels</c> is <c>true</c> and <c>Replace</c> is <c>true</c>, the specified 
            categories replace the categories that currently exist for the series. If 
            <c>Replace</c> is <c>false</c>, the existing categories will not be replaced.
             The default value is <c>false</c></param>
        </member>
        <member name="P:GrapeCity.SharpCells.SeriesCollection.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.SeriesCollection.NewSeries">
            <summary>
            Creates a new series. Returns a <c>Series</c> object that represents the new series.
            </summary>
            <returns><c>Series</c> object that represents the new series</returns>
        </member>
        <member name="T:GrapeCity.SharpCells.SeriesLines">
            <summary>
            Represents series lines in a chart group. 
            </summary>
            <remarks>Series lines connect the data values from each series. 
            Only 2-D stacked bar or column chart groups can have series lines. 
            This object isnï¿½t a collection. Thereï¿½s no object that represents a single 
            series line; you either have series lines turned on for all points in a chart 
            group or you have them turned off.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.SeriesLines.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.SeriesLines.Name">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.SeriesLines.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Shape">
            <summary>
            Summary description for Shape.
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Shapes">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Sheet">
            <summary>
            Sheet object.
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Sheet.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Sheet.CodeName">
            <summary>
            Returns the code name for the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Sheets">
             <summary>
            A collection of all the sheets in the specified or active workbook. The <c>Sheets</c>
             collection can contain <c>Chart</c> or <c>Worksheet objects</c>.
             </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Sheets.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Sheets.HPageBreaks">
            <summary>
            Returns an <c>HPageBreaks</c> collection that represents the horizontal
             page breaks on the sheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Sheets.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Sheets.Item(System.String)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Sheets.VPageBreaks">
            <summary>
            Returns a <c>VPageBreaks</c> collection that represents the vertical 
            page breaks on the sheet. Read-only.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Style">
            <summary>
            Represents a style description for a range.
            </summary>
            <remarks>The <c>Style</c> object contains all style attributes (font, number format, 
            alignment, and so on) as properties. There are several built-in styles, including 
            Normal, Currency, and Percent. Using the <c>Style</c> object is a fast and efficient 
            way to change several cell-formatting properties on multiple cells at the same time.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.Borders">
            <summary>
            Returns a  <c>Borders</c> collection that represents the borders of a style or a range 
            of cells (including a range defined as part of a conditional format).
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.BuiltIn">
            <summary>
            <c>true</c> if the style is a built-in style. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.Font">
            <summary>
            Returns a <c>Font</c> object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.FormulaHidden">
            <summary>
            <c>true</c> if the formula will be hidden when the worksheet is protected. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.HorizontalAlignment">
            <summary>
            Returns or sets the horizontal alignment for the specified object. 
            For all objects, this can be one of the following <c>HAlign</c> constants. Read/write <c>HAlign</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.IncludeAlignment">
            <summary>
            <c>true</c> if the style includes the <c>AddIndent</c>, <c>HorizontalAlignment</c>,
             <c>VerticalAlignment</c>, <c>WrapText</c>, and Orientation properties. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.IncludeBorder">
            <summary>
            <c>true</c> if the style includes the <c>Color</c>, <c>ColorIndex</c>, <c>LineStyle</c>, and <c>Weight</c> 
            border properties. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.IncludeFont">
            <summary>
            <c>true</c> if the style includes the Background, <c>Bold</c>, <c>Color</c>, <c>ColorIndex</c>, 
            <c>FontStyle</c>, <c>Italic</c>, <c>Name</c>, <c>OutlineFont</c>, <c>Shadow</c>, <c>Size</c>, <c>Strikethrough</c>, 
            <c>Subscript</c>, <c>Superscript</c>, and <c>Underline</c> font properties. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.IncludeNumber">
            <summary>
            <c>true</c> if the style includes the NumberFormat property. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.IncludePatterns">
            <summary>
            <c>true</c> if the style includes the <c>Color</c>, <c>ColorIndex</c>, <c>InvertIfNegative</c>, 
            <c>Pattern</c>, <c>PatternColor</c>, and <c>PatternColorIndex</c> interior properties.
             Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.IncludeProtection">
            <summary>
            <c>true</c> if the style includes the <c>FormulaHidden</c> and <c>Locked</c> 
            protection properties. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.IndentLevel">
            <summary>
            Returns or sets the indent level for the style. Read/write <c>int</c>.
            </summary>
            <remarks>Using this property to set the indent level to a number less
             than 0 (zero) or greater than 15 causes an error.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.Locked">
            <summary>
            <c>true</c> if the object is locked, <c>false</c> if the object can be 
            modified when the sheet is protected. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.MergeCells">
            <summary>
            <c>true</c> if the range or style contains merged cells. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.Orientation">
            <summary>
            The text orientation. Can be an integer value from  ï¿½ 90 to 90 degrees 
            or one of the Orientation constants.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.ReadingOrder">
            <summary>
            Returns or sets the reading order for the specified object. Can be one 
            of the following constants: <c>RTL</c> (right-to-left), <c>LTR</c> (left-to-right),
             or <c>Context</c>. Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.ShrinkToFit">
            <summary>
            <c>true</c> if text automatically shrinks to fit in the available column width.
            Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.Value">
            <summary>
            Returns <c>Name</c> value.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Style.WrapText">
            <summary>
            <c>true</c> if Microsoft Excel wraps the text in the object. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Style.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Styles">
            <summary>
            A collection of all the <c>Style</c> objects in the specified or active workbook. 
            </summary>
            <remarks>Each <c>Style</c> object represents a style description for a range. 
            The <c>Style</c> object contains all style attributes (font, number format, alignment, 
            and so on) as properties. There are several built-in styles ï¿½ including <c>Normal</c>, 
            <c>Currency</c>, and <c>Percent</c> ï¿½ which are listed in the <c>Style</c> name box in the <c>Style</c> dialog 
            box (<c>Format</c> menu).	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Styles.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Styles.Item(System.String)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Styles.Add(System.String)">
            <summary>
            Creates a new style and adds it to the list of styles that are
             available for the current workbook. Returns a <c>Style</c> object.
            </summary>
            <param name="name">The new style name.</param>
            
        </member>
        <member name="M:GrapeCity.SharpCells.Styles.Add(System.String,GrapeCity.SharpCells.Range)">
            <summary>
            Creates a new style and adds it to the list of styles that are
             available for the current workbook. Returns a <c>Style</c> object.
            </summary>
            <param name="name">The new style name.</param>
            <param name="basedOn"> A <c>Range</c> object that refers to a cell thatï¿½s used 
            as the basis for the new style. If this argument is omitted, the newly 
            created style is based on the <c>Normal</c> style.</param>
            <returns><c>Style</c> object</returns>
            
        </member>
        <member name="M:GrapeCity.SharpCells.Styles.Add(System.String,GrapeCity.SharpCells.Style)">
            <summary>
            Creates a new style and adds it to the list of styles that are
             available for the current workbook. Returns a <c>Style</c> object.
            </summary>
            <param name="name">The new style name.</param>
            <param name="basedOn"> A <c>Range</c> object that refers to a cell thatï¿½s used 
            as the basis for the new style. If this argument is omitted, the newly 
            created style is based on the <c>Normal</c> style.</param>
            <returns><c>Style</c> object</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Styles.Merge(GrapeCity.SharpCells.Workbook)">
            <summary>
            Merges the styles from another workbook into the <c>Styles</c> collection.
            </summary>
            <param name="workbook"></param>
        </member>
        <member name="T:GrapeCity.SharpCells.Templates.DataSourceCollection">
            <summary>
            Summary description for DataSourceCollection.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Templates.NameValueArrayDataSource">
            <summary>
            Summary description for NameValueArrayDataSource.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Templates.NameValueDataSource">
            <summary>
            Summary description for NameValueDataSource.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Templates.SortingProxy">
            <summary>
            Summary description for SortingProxy.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Templates.SortProxy">
            <summary>
            Summary description for ChildProxy.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Templates.SortProxy.Sort(System.Collections.ArrayList)">
            <summary>
            Sorts table by specifyed column not breaking previous sorting
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Templates.SortProxy.Lookup(System.Object[])">
            <summary>
            finds first occurence of row with specifyed search params
            </summary>
            <returns></returns>
        </member>
        <member name="F:GrapeCity.SharpCells.Templates.SortProxy.index">
            <summary>
            Sorting by foreignKeys
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Templates.TemplateProcessor">
            <summary>
            TemplateProcessor class processes Excel templates with given 
            DataSource's data.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Templates.TemplateProcessor.#ctor">
            <summary>
            Constructs <c>TemplateProcessor</c> object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Templates.TemplateProcessor.TemplateFilename">
            <summary>
            Specifies template file name.
            </summary>
            <remarks>Template is an Excel file (.xls or .xlt)
            that is specially formatted to be processed by 
            <c>TemplateProcessor</c>.
            </remarks>
            <value>Template file name.</value>
        </member>
        <member name="P:GrapeCity.SharpCells.Templates.TemplateProcessor.OutputFilename">
            <summary>
            Specifies output file name.
            </summary>
            <remarks>Output file is an Excel file (.xls)
            that is the result of processing the template (<c>TemplateFilename</c>)
            with given data sources (<c>DataSource</c>).
            </remarks>
            <value>Output file name.</value>
        </member>
        <member name="T:GrapeCity.SharpCells.Trendline">
            <summary>
            Represents a trendline in a chart.
            </summary>
            <remarks>A trendline shows the trend, or direction, of data in a series. 
            The <c>Trendline</c> object is a member of the Trendlines collection. The <c>Trendlines</c> 
            collection contains all the <c>Trendline</c> objects for a single series.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Backward">
            <summary>
            Returns or sets the number of periods (or units on a scatter chart) that the trendline
             extends backward. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.DisplayEquation">
            <summary>
            <c>true</c> if the equation for the trendline is displayed on the chart (in the same data 
            label as the R-squared value). Setting this property to <c>true</c> automatically turns 
            on data labels. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.DisplayRSquared">
            <summary>
            <c>true</c> if the R-squared value of the trendline is displayed on the chart 
            (in the same data label as the equation). Setting this property to <c>true</c>
             automatically turns on data labels. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Forward">
            <summary>
            Returns or sets the number of periods (or units on a scatter chart) 
            that the trendline extends forward. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Index">
            <summary>
            Returns the index number of the object within the collection of
             similar objects. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Intercept">
            <summary>
            Returns or sets the point where the trendline crosses the value axis. 
            Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.InterceptIsAuto">
            <summary>
            <c>true</c> if the point where the trendline crosses the value axis is 
            automatically determined by the regression. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Name">
            <summary>
            Returns or sets the name of the object. Read/write <c>string</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.NameIsAuto">
            <summary>
            <c>true</c> if Microsoft Excel automatically determines the name of the 
            trendline. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Order">
            <summary>
            Returns or sets the trendline order (an integer greater than 1) when the
             trendline type is <c>Polynomial</c>. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Period">
            <summary>
            Returns or sets the period for the moving-average trendline. Read/write <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendline.Type">
            <summary>
            Returns or sets the trendline type. Read/write <c>TrendlineType</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Trendline.ClearFormats">
            <summary>
            Clears the formatting of the object.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Trendline.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Trendlines">
            <summary>
            A collection of all the Trendline objects for the specified series.
            </summary>
            <remarks>Each <c>Trendline</c> object represents a trendline in a chart.
             A trendline shows the trend, or direction, of data in a series.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendlines.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Trendlines.Add(GrapeCity.SharpCells.TrendlineType,System.Int64,System.Int64,System.Int64,System.Int64,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new trendline. Returns a <c>Trendline</c> object.
            </summary>
            <param name="type">The trendline type.</param>
            <param name="order">Required if <c>Type</c> is <c>Polynomial</c>.
             The trendline order. Must be an integer from 2 to 6, inclusive.</param>
            <param name="period">Required if Type is xlMovingAvg. The trendline period.
             Must be an integer greater than 1 and less than the number of data points 
             in the series youï¿½re adding a trendline to</param>
            <param name="forward">The number of periods (or units on a scatter chart) 
            that the trendline extends forward.</param>
            <param name="backward">The number of periods (or units on a scatter chart) 
            that the trendline extends backward.</param>
            <param name="intercept">The trendline intercept. If this argument is omitted,
             the intercept is automatically set by the regression.</param>
            <param name="displayEquation"><c>true</c> to display the equation of the trendline
             on the chart (in the same data label as the R-squared value). The default value is <c>false</c>.</param>
            <param name="displayRSquared"><c>true</c> to display the R-squared value of the trendline
             on the chart (in the same data label as the equation). The default value is <c>false</c>.	</param>
            <param name="name">The name of the trendline as text. If this argument is omitted, Microsoft
             Excel generates a name.</param>
            <returns><c>Trendline</c> object.</returns>
        </member>
        <member name="P:GrapeCity.SharpCells.Trendlines.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.UpBars">
            <summary>
            Represents the up bars in a chart group.
            </summary>
            <remarks>Up bars connect points on series one with higher values on the 
            last series in the chart group (the lines go up from series one). Only 2-D 
            line groups that contain at least two series can have up bars. This object 
            isnï¿½t a collection. Thereï¿½s no object that represents a single up bar; you 
            either have up bars turned on for all points in a chart group or you have them turned off.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.UpBars.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.UpBars.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.UpBars.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Utilities.GetLetter(System.Int32)">
            <summary>
            Returns letter by column index
            </summary>
            <param name="index">0-based column index</param>
        </member>
        <member name="T:GrapeCity.SharpCells.VPageBreak">
            <summary>
            Represents a vertical page break. The <c>VPageBreak</c> object is a member of 
            the <c>VPageBreaks</c> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.VPageBreak.Extent">
            <summary>
            Returns the type of the specified page break: full-screen or only 
            within a print area. Can be either of the following<c>PageBreakExtent</c> 
            constants: <c>PageBreakFull</c> or <c>PageBreakPartial</c>. Read-only <c>PageBreakExtent</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.VPageBreak.Location">
            <summary>
            For the <c>HPageBreak</c> and <c>VPageBreak</c> objects, this property returns or sets the cell 
            (a <c>Range</c> object) that defines the page-break location. 
            </summary>
            <remarks>Horizontal page breaks are aligned with the top edge of the location cell; 
            vertical page breaks are aligned with the left edge of the location cell. Read/write 
            <c>Range</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.VPageBreak.Type">
            <summary>
            Returns or sets the page break type. Read/write <c>PageBreak</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.VPageBreak.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.VPageBreaks">
            <summary>
            A collection of vertical page breaks within the print area. 
            Each vertical page break is represented by a <c>VPageBreak</c> object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.VPageBreaks.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.VPageBreaks.Add(GrapeCity.SharpCells.Range)">
            <summary>
            Adds a vertical page break. Returns a <c>VPageBreak</c> object.
            </summary>
            <param name="before"> A <c>Range</c> object. The range to the left of 
            which the new page break will be added.</param>
            <returns> <c>VPageBreak</c> object.</returns>
        </member>
        <member name="T:GrapeCity.SharpCells.Walls">
            <summary>
            Represents the walls of a 3-D chart. This object isnï¿½t a collection. 
            Thereï¿½s no object that represents a single wall; you must return all the walls as a unit.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Walls.Border">
            <summary>
            Returns a <c>Border</c> object that represents the border of the object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Walls.Interior">
            <summary>
            Returns an <c>Interior</c> object that represents the interior of the specified object.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Walls.Name">
            <summary>
            Returns or sets the name of the object. Read-only <c>string</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Walls.ClearFormats">
            <summary>
            Clears the formatting of the object.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Window">
            <summary>
            Represents a window.
            </summary>
            <remarks>Many worksheet characteristics, such as scroll bars and gridlines,
             are actually properties of the window. The <c>Window</c> object is a member of the 
             <c>Windows</c> collection. The <c>Windows</c> collection for the <c>Application</c> object contains
              all the windows in the application, whereas the <c>Windows</c> collection for the <c>Workbook</c> 
              object contains only the windows in the specified workbook. </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.Height">
            <summary>
            The height of the window.
            </summary>
            <remarks>Use the <c>UsableHeight</c> property to determine the maximum size for 
            the window. You cannot set this property if the window is maximized or
             minimized. Use the <c>WindowState</c> property to determine the window state.
              Read/write <c>double</c>.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.Width">
            <summary>
            The width of the window.
            </summary>
            <remarks>Use the <c>UsableWidth</c> property to determine the maximum size for
             the window. You cannot set this property if the window is maximized or 
             minimized. Use the <c>WindowState</c> property to determine the window state.
              Read/write <c>double</c>.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.Left">
            <summary>
            The distance from the left edge of the client 
            area to the left edge of the window. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.Top">
            <summary>
            The distance from the top edge of the window to the top edge of the usable 
            area (below the menus, any toolbars docked at the top, and the formula bar).
            </summary>
            <remarks>You cannot set this property for a maximized window. 
            Use the <c>WindowState</c> property to return or set the state of the window. 
            Read/write <c>double</c>.	</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.DisplayFormulas">
            <summary>
            <c>true</c> if the window is displaying formulas, <c>false</c> if the window 
            is displaying values. Read/write <c>bool</c>.
            </summary>
            <remarks>This property applies only to worksheets and macro sheets.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.DisplayGridlines">
            <summary>
            <c>true</c> if gridlines are displayed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.DisplayHeadings">
            <summary>
            <c>true</c> if both row and column headings are displayed, <c>false</c> if there are 
            no headings displayed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.DisplayZeros">
            <summary>
            <c>true</c> if zero values are displayed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.FreezePanes">
            <summary>
            <c>true</c> if split panes are frozen. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.SplitHorizontal">
            <summary>
            Returns or sets the location of the horizontal window split, 
            in points. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.SplitVertical">
            <summary>
            Returns or sets the location of the vertical window split,
             in points. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.ScrollColumn">
            <summary>
            Returns or sets the number of the leftmost column in the pane or window. 
            Read/write <c>int</c>.
            </summary>
            <remarks>If the window is split, the <c>ScrollColumn</c> property of the <c>Window</c>
             object refers to the upper-left pane. If the panes are frozen, the <c>ScrollColumn</c> 
             property of the <c>Window</c> object excludes the frozen areas</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.ScrollRow">
            <summary>
            Returns or sets the number of the row that appears at the 
            top of the pane or window. Read/write <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Window.DisplayOutline">
            <summary>
            <c>true</c> if outline symbols are displayed. Read/write <c>bool</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Windows">
            <summary>
            A collection of all the Window objects in Microsoft Excel.
            </summary>
            <remarks>The <c>Windows</c> collection for the <c>Application</c> object contains all the windows 
            in the application, whereas the <c>Windows</c> collection for the <c>Workbook</c> object contains 
            only the windows in the specified workbook.</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Windows.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Workbook">
            <summary>
            Represents a Microsoft Excel workbook.
            For internal use only.
            </summary>
            <remarks>The <c>Workbook</c> object is a member of the Workbooks collection. 
            The Workbooks collection contains all the Workbook objects currently 
            open in Microsoft Excel.</remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.#ctor(GrapeCity.SharpCells.Implementation.WorkbookData)">
            <summary>
            Creates new Workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.#ctor(System.String)">
            <summary>
            Tries to load Workbook specified by <c>path</c> filename.
            </summary>
            <param name="path">File name of Excel file.</param>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.Save">
            <summary>
            Saves changes to the specified workbook.
            </summary>
            <remarks>
            To open a workbook file, use the <c>Open</c> method.
            To mark a workbook as saved without writing it to 
            a disk, set its Saved property to <c>true</c>.
            The first time you save a workbook, use the 
            <c>SaveAs</c> method to specify a name for the file.
            </remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.SaveAs(System.String)">
            <summary>
            Saves changes to the workbook in a different file.
            </summary>
            <param name="filename">
            A string that indicates the name of the file to be 
            saved. You can include a full path; if you don't, 
            #XL saves the file in the current folder.
            </param>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.Open(System.String)">
            <summary>g
            Opens a workbook.
            </summary>
            <param name="filename">
            The file name of the workbook to be opened.
            </param>
            <remarks>
            Information contained in current workbook
            is discarded.
            </remarks>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.Close(System.Boolean)">
            <summary>
            Closes the workbook.
            </summary>
            <param name="saveChanges">
            Specifies whether changes should be saved.
            </param>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.Close">
            <summary>
            Closes the workbook saving changes
            if <c>Saved</c> is <c>false</c>.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.DeleteNumberFormat(System.String)">
            <summary>
            Deletes a custom number format from the workbook.
            </summary>
            <param name="numberFormat">
            Names the number format to be deleted.
            </param>
            <example>
            This example deletes the number format "000-00-0000"
            from the active workbook.
            <code>
            workbook.DeleteNumberFormat("000-00-0000");
            </code>
            </example>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.Protect(System.String,System.Boolean,System.Boolean)">
            <summary>
            Protects a workbook so that it cannot be modified.
            </summary>
            <param name="password">
            A string that specifies a case-sensitive password for 
            the worksheet or workbook. If this argument is <c>null</c>
            or <code>String.Empty</code>, user can unprotect the 
            worksheet or workbook without using a password. Otherwise, 
            user must specify the password to unprotect the worksheet 
            or workbook.
            </param>
            <param name="structure">
            <c>true</c> to protect the structure of the workbook (the 
            relative position of the sheets).
            </param>
            <param name="windows">
            <c>True</c> to protect the workbook windows. If this argument is omitted, the windows arenï¿½t protected.
            </param>
            <example>
            This example protects the workbook.
            <code>
            workbook.Protect( "password", true, true );
            </code>
            </example>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.ProtectSharing(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Saves the workbook and protects it for sharing.
            </summary>
            <param name="filename">A string indicating the name of the saved file. 
            You can include a full path; if you donï¿½t, Microsoft Excel saves the 
            file in the current folder.	</param>
            <param name="password"> A case-sensitive string indicating the protection 
            password to be given to the file. Should be no longer than 15 characters.</param>
            <param name="writeResPassword">A string indicating the write-reservation password
             for this file. If a file is saved with the password and the password isnï¿½t supplied
              when the file is opened, the file is opened read-only.</param>
            <param name="readOnlyRecommended"><c>true</c> to display a message when the file is opened, 
            recommending that the file be opened read-only.	</param>
            <param name="createBackup"><c>true</c> to create a backup file.</param>
            <param name="sharingPassword">A string indicating the password to be 
            used to protect the file for sharing.</param>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.Unprotect(System.String)">
            <summary>
            Removes protection from a sheet or workbook. 
            This method has no effect if the sheet or 
            workbook isn't protected.
            </summary>
            <param name="password">
            A string that denotes the case-sensitive 
            password to use to unprotect the sheet 
            or workbook.
            </param>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.UnprotectSharing(System.String)">
            <summary>
            Turns off protection for sharing and saves the 
            workbook.
            </summary>
            <param name="sharingPassword">
            The workbook password.
            </param>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.CodeName">
            <summary>
            Returns the code name for the object. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Colors">
            <summary>
            Returns or sets colors in the palette for the 
            workbook. The palette has 56 entries, each 
            represented by an <c>Color</c> value. 
            Read/write.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.DisplayDrawingObjects">
            <summary>
            Returns or sets how shapes are displayed. Read/write.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.FileFormat">
            <summary>
            Returns the file format and/or type of the workbook.
            Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.FullName">
            <summary>
            Returns the name of the object, including its path 
            on disk, as a string. Read-only
            </summary>
            <remarks>
            This property is equivalent to the <c>Path</c> 
            property, followed by the current file system 
            separator, followed by the <c>Name</c> property.
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.HasPassword">
            <summary>
            <c>true</c> if the workbook has a protection 
            password. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Name">
            <summary>
            Returns or sets the name of the workbook. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Password">
            <summary>
            Returns or sets the password that must be supplied 
            to open the specified workbook. Read/write.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Path">
            <summary>
            Returns the complete path to the application, 
            excluding the final separator and name of the 
            application. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.ReadOnly">
            <summary>
            <c>true</c> if the workbook has been opened 
            as read-only. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Saved">
            <summary>
            <c>true</c> if no changes have been made to 
            the specified workbook since it was last saved.
            Read/write.
            </summary>
            <remarks>
            If a workbook has never been saved, its <c>Path</c>
            property returns an empty string ("").
            You can set this property to <c>true</c> if you 
            want to close a modified workbook without saving it.
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Sheets">
            <summary>
            Returns a <c>Sheets</c> collection that 
            represents all the sheets in the specified 
            workbook. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Styles">
            <summary>
            Returns a <c>Styles</c> collection that 
            represents all the styles in the specified 
            workbook. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Worksheets">
            <summary>
            Returns a <c>Worksheets</c> collection that represents 
            all the worksheets in the specified workbook. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Charts">
            <summary>
            Returns a <c>Charts</c> collection that represents 
            all the chart sheets in the specified workbook. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.WritePassword">
            <summary>
            Returns or sets a string for the write password of 
            a workbook. Read/write.
            </summary>
            <remarks>
            The <c>WritePassword</c> property is readable and 
            returns "********".
            </remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.Windows">
            <summary>
            For an <c>Application</c> object, returns a <c>Windows</c> collection that represents 
            all the windows in all the workbooks. For a <c>Workbook</c> object, returns a 
            <c>Windows</c> collection that represents all the windows in the specified workbook.
             Read-only <c>Windows</c> object.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.NewWindow">
            <summary>
            Creates a new window
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.ReadOnlyRecommended">
            <summary>
            Gets or sets ReadOnlyRecommended file sharing flag
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Workbook.ProtectedBy">
            <summary>
            Gets or sets ProtectedBy
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Workbook.SetWriteProtectPassword(System.String)">
            <summary>
            Sets write protection password for the file (not workbook)
            </summary>
        </member>
        <member name="T:GrapeCity.SharpCells.Worksheet">
            <summary>
            Represents a worksheet.
            For internal use only.
            </summary>
            <remarks>The <c>Worksheet</c> object is a member of the <c>Worksheets</c> collection. 
            The <c>Worksheets</c> collection contains all the <c>Worksheet</c> objects in a workbook</remarks>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.PageSetup">
            <summary>
            Returns a <c>PageSetup</c> object that contains all the page setup settings for the 
            specified object. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Cells">
            <summary>
            Returns a <c>Range</c> object that represents all the cells on the worksheet 
            (not just the cells that are currently in use).  Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Columns">
            <summary>
            Returns a <c>Range</c> object that represents all the columns on the 
            specified worksheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.HPageBreaks">
            <summary>
            Returns an <c>HPageBreaks</c> collection that represents the horizontal 
            page breaks on the sheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Hyperlinks">
            <summary>
            Returns a <c>Hyperlink</c> object that represents the hyperlink for the shape.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Index">
            <summary>
            Returns the index number of the object within the collection of 
            similar objects. Read-only <c>int</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.ProtectContents">
            <summary>
            <c>true</c> if the contents of the sheet are protected. For a chart, this protects 
            the entire chart. For a worksheet, this protects the individual cells. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Protection">
            <summary>
            Returns a <c>Protection</c> object that represents the protection options of the worksheet.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.ProtectionMode">
            <summary>
            <c>true</c> if user-interface-only protection is turned on. To turn on user 
            interface protection, use the <c>Protect</c> method with the <c>UserInterfaceOnly</c>
             argument set to True. Read-only <c>bool</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Range">
            <summary>
            Returns a <c>Range</c> object that represents a cell or a range of cells.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Rows">
            <summary>
            For a <c>Worksheet</c> object, returns a Range object that represents all the 
            rows on the specified worksheet. Read-only Range object./// </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.StandardHeight">
            <summary>
            Returns the standard (default) height of all the rows in the worksheet,
             in points. Read-only <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.StandardWidth">
            <summary>
            Returns or sets the standard (default) width of all the columns in 
            the worksheet. Read/write <c>double</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.UsedRange">
            <summary>
            Returns a <c>Range</c> object that represents the used range on the specified 
            worksheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.Visible">
            <summary>
            Determines whether the object is visible. Read/write <c>SheetVisibility</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheet.VPageBreaks">
            <summary>
            Returns a <c>VPageBreaks</c> collection that represents the vertical 
            page breaks on the sheet. Read-only.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Worksheet.Copy(GrapeCity.SharpCells.CollectionPlacement,GrapeCity.SharpCells.Worksheet)">
            <summary>
            Copies the sheet to another location in the workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Worksheet.Move(GrapeCity.SharpCells.CollectionPlacement,GrapeCity.SharpCells.Worksheet)">
            <summary>
            Moves the sheet to another location in the workbook.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Worksheet.Protect(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Protects a worksheet so that it cannot be modified.
            </summary>
            <param name="password"> A string that specifies a case-sensitive password for 
            the worksheet or workbook. If this argument is omitted, you can unprotect the
             worksheet or workbook without using a password. Otherwise, you must specify
              the password to unprotect the worksheet or workbook. If you forget the password,
               you cannot unprotect the worksheet or workbook. It's a good idea to keep a list
                of your passwords and their corresponding document names in a safe place.</param>
            <param name="drawingObjects"><c>true</c> to protect shapes. The default value is <c>false</c>.</param>
            <param name="contents"><c>true</c> to protect contents. For a chart, this protects the entire 
            chart. For a worksheet, this protects the locked cells. The default value is <c>true</c>.</param>
            <param name="scenarios"><c>True</c> to protect scenarios. This argument is valid only for
             worksheets. The default value is <c>True</c>.	</param>
            <param name="userInterfaceOnly"><c>true</c> to protect the user interface, but not macros. If
             this argument is omitted, protection applies both to macros and to the user interface.</param>
            <param name="allowFormattingCells"><c>true</c> allows the user to format any cell on a protected 
            worksheet.  The default value is <c>false</c>.</param>
            <param name="allowFormattingColumns"><c>true</c> allows the user to format any column 
            on a protected worksheet. The default value is <c>false</c>.	</param>
            <param name="allowFormattingRows">True allows the user to format any row on a protected. 
            The default value is <c>false</c>.</param>
            <param name="allowInsertingColumns"><c>true</c> allows the user to insert columns on the 
            protected worksheet. The default value is <c>false</c>.</param>
            <param name="allowInsertingRows"><c>true</c> allows the user to insert rows on the
             protected worksheet. The default value is <c>false</c>.</param>
            <param name="allowInsertingHyperlinks"><c>true</c> allows the user to insert hyperlinks on 
            the worksheet. The default value is <c>false</c>.</param>
            <param name="allowDeletingColumns"><c>true</c> allows the user to delete columns on the protected
             worksheet, where every cell in the column to be deleted is unlocked. 
             The default value is <c>false</c>.</param>
            <param name="allowDeletingRows"><c>true</c> allows the user to delete rows on the protected worksheet, 
            where every cell in the row to be deleted is unlocked. The default value is <c>false</c>.</param>
            <param name="allowSorting"><c>true</c> allows the user to sort on the protected worksheet. 
            Every cell in the sort range must be unlocked or unprotected. The default value is <c>false</c>.</param>
            <param name="allowFiltering"><c>true</c> allows the user to set filters on the protected 
            worksheet. Users can change filter criteria but can not enable or disable an auto
             filter. Users can set filters on an existing auto filter. The default value is <c>false</c>.</param>
            <param name="allowUsingPivotTables"><c>true</c> allows the user to use pivot table reports on the 
            protected worksheet. The default value is <c>false</c>.</param>
        </member>
        <member name="M:GrapeCity.SharpCells.Worksheet.ResetAllPageBreaks">
            <summary>
            Resets all page breaks on the specified worksheet.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Worksheet.Unprotect(System.String)">
            <summary>
            Removes protection from a sheet or workbook. This method has no 
            effect if the sheet or workbook isn't protected.
            </summary>
            <param name="password">A string that denotes the case-sensitive password 
            to use to unprotect the sheet or workbook. If the sheet or workbook isn't
             protected with a password, this argument is ignored. If you omit this 
             argument for a sheet that's protected with a password, you'll be prompted
              for the password. If you omit this argument for a workbook that's protected 
              with a password, the method fails.</param>
        </member>
        <member name="T:GrapeCity.SharpCells.Worksheets">
            <summary>
            A collection of all the <c>Worksheet</c> objects in the specified or active workbook.
            Each <c>Worksheet</c> object represents a worksheet.
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheets.Count">
            <summary>
            Returns the number of objects in the collection. Read-only <c>long</c>.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheets.HPageBreaks">
            <summary>
            Returns an <c>HPageBreaks</c> collection that represents the horizontal
             page breaks on the sheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheets.VPageBreaks">
            <summary>
            Returns a <c>VPageBreaks</c> collection that represents the vertical page 
            breaks on the sheet. Read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheets.Item(System.Int32)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="P:GrapeCity.SharpCells.Worksheets.Item(System.String)">
            <summary>
            Returns a single object from a collection.
            </summary>
        </member>
        <member name="M:GrapeCity.SharpCells.Worksheets.Add">
            <summary>
            Creates a new worksheet, chart, or macro sheet. The new worksheet
             becomes the active sheet.
            </summary>
            <returns>new worksheet</returns>
        </member>
        <member name="M:GrapeCity.SharpCells.Worksheets.FillAcrossSheets(GrapeCity.SharpCells.Range,GrapeCity.SharpCells.FillWith)">
            <summary>
            Copies a range to the same area on all other worksheets in a collection.
            </summary>
            <param name="range">The range to fill on all the worksheets in the collection. The range must 
            be from a worksheet within the collection.</param>
            <param name="fillWithType">Specifies how to copy the range.	</param>
        </member>
        <member name="T:GrapeCity.CompoundDocument.IStorage">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.CompoundDocument.Managed.Directory">
            <summary>
            Summary description for Storage.
            </summary>
        </member>
        <member name="T:GrapeCity.CompoundDocument.Managed.DirectoryEntry">
            <summary>
            Represents storage or stream
            </summary>
        </member>
        <member name="T:GrapeCity.CompoundDocument.Managed.Document">
            <summary>
            Summary description for Storage.
            </summary>
        </member>
        <member name="M:GrapeCity.CompoundDocument.Managed.Document.#ctor">
            <summary>
            Use this constructor when you want to create new document
            </summary>
        </member>
        <member name="M:GrapeCity.CompoundDocument.Managed.Document.#ctor(System.String)">
            <summary>
            Use this constructor when you want to open existing document
            </summary>
            <param name="fileName">name of file containing compound document</param>
        </member>
        <member name="T:GrapeCity.CompoundDocument.Managed.DocumentWriter">
            <summary>
            Summary description for DocumentWriter.
            </summary>
        </member>
        <member name="F:GrapeCity.CompoundDocument.Managed.Header.Fat1_109">
            Arrays (and other objects) offset must be multiple of 8 (for x64 target platform)
        </member>
        <member name="P:GrapeCity.CompoundDocument.Managed.Header.FatSectors">
            <summary>
            Easy way to access FAT as a single array (Fat0 | Fat1_109)
            </summary>
        </member>
        <member name="T:GrapeCity.CompoundDocument.Managed.ManagedStorageImp">
            <summary>
            I factored this out from the original implementation. It wasn't working (not able to read existing xls files from excel, didn't find Workbook stream) -- ScottW
            </summary>
        </member>
        <member name="T:GrapeCity.CompoundDocument.Managed.Storage">
            <summary>
            Summary description for Class2.
            </summary>
        </member>
        <member name="T:GrapeCity.CompoundDocument.Storage">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.CompoundDocument.StorageImp">
            <summary>
            The implementation base class used to encapsulates the underlying compound document implementation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.AreaMappingEngine.ToggleMapBuilder">
            <summary>
            Responsible for building a map containing the reportItems and their levels, hidden and collapsed states.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.AreaMappingEngine.ToggleMapBuilder.Build(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Passes through all child items and builds a map containing the reportItems and their levels, hidden and collapsed states.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.Border">
            <summary>
            The internal representation of the some <see cref="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelRange" /> border(left, top, right, bottom border).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.Borders">
            <summary>
            The internal representation of the some <see cref="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelRange" /> borders.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelRange.MergeStyles(GrapeCity.SharpCells.Range,System.Boolean)">
            <summary>
            Copies style values from the first cell for the entire range of merged cells.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelStyleConverter">
            <summary>
            Allows to convert the style of Range to the internal representation and vice versa.
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelWorksheet.WorksheetData">
            <summary>
            Only for internal use in Excel wrappers such as <see cref="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelWorkbook"/>, <see cref="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelRange"/>
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.Style">
            <summary>
            The internal representation of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.ExcelWrappers.ExcelRange" /> style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.DDR.Core.LayoutTreeRebuildingEventArgs.LayoutTree">
            <summary>
            Instance of current layout tree for RE core (before rebuild).
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.ImageConvertableExcelRenderer.GetImageData(GrapeCity.ActiveReports.Export.Excel.DDR.ExcelRenderingContext,GrapeCity.ActiveReports.Extensibility.Layout.ILayoutArea,System.Collections.Generic.IDictionary{GrapeCity.ActiveReports.Export.Excel.DDR.Common.BorderIndex,System.Int32})">
            <summary>
            Gets PNG/JPEG image data.
            </summary>
            <param name="area"></param>
            <param name="innerBorderWidthInPixels"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.TextItemExcelRenderer.ReplaceSingleQuotes(System.String)">
            <summary>
            Replaces single quotes marking literal text with double quotes.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.TextItemExcelRenderer.GenerateCurrencyFormat(System.Globalization.NumberFormatInfo)">
            <summary>
            Builds the positive and negative currency format based on NumberFormatInfo settings.
            </summary>
            <remarks>n represents the number, - represents the negative symbol, $ represents currency symbol in the patterns.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.TextItemExcelRenderer.GenerateNumberFormat(System.Globalization.NumberFormatInfo,System.String)">
            <summary>
            Builds the positive and negative number format based on NumberFormatInfo settings.
            </summary>
            <remarks>n represents the number, - represents the negative symbol in the patterns.
            The positive pattern is always "n"</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.TextItemExcelRenderer.ConvertToExcelFormat(System.String,System.Collections.Generic.IList{GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.TextItemExcelRenderer.FormatReplacement},System.String)">
            <summary>
            Some of the dotnet date time format codes are not exact matches to excel format codes.  This returns the
            equivalent format string that is understood by excel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.TextItemExcelRenderer.GetLiteral(System.String)">
            <summary>
            Returns the literal portion from the beginning of the string.
            </summary>
            <remarks>A literal is either a double-quoted string that includes the quotes or 
            an escaped character that includes the escape character.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.TextItemExcelRenderer.GetNonLiteral(System.String)">
            <summary>
            Returns the non-literal portion from the beginning of the string.
            </summary>
            <remarks>A non-literal is everything character that is not in double quotes and is not escaped.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.StyleTransformer.GetFilteredBorders(GrapeCity.ActiveReports.Extensibility.Layout.ILayoutArea,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IStyle,System.Func{System.String,System.String,System.Boolean},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the borders from specified style and filters
            them using filtering rule.
            </summary>
            <param name="style">Style from where to take borders</param>
            <param name="filteringRule">Filtering rule. Return true for border that needs to included</param>
            <param name="omitBottomBorder">Force omit bottom border</param>
            <param name="omitRightBorder">Force omit right border</param>
            <returns>Dictionary of pairs (border index)-(border object)</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils">
            <summary>
            Provider helper methods for Excel rendering.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.IsNumeric(System.Object)">
            <summary>
            Checks if the specified value data type is number
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.IsDate(System.Object)">
            <summary>
            Checks if the specified value data type is date/time
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.GetCultureForReportItem(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem,System.Boolean)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the report item's style, updated with report item's calendar.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.GetCultureWithCalendarForReportItem(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the report item's style, updated with report item's calendar.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.GetOptionalCalendar(System.Globalization.CultureInfo,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IStyle,System.Boolean@)">
            <summary>
            Retrieves a calendar that is consistent (optinal) for the specified Culture.
            according to the style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.GetCultureForReportItem(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReportItem)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the report item's style.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.CultureFromLanguage(System.String)">
            <summary>
            Returns <see cref="T:System.Globalization.CultureInfo"/> determined from the specified style
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.NeedsConverted(System.Object)">
            <summary>
            Checks if the specified value data type needs converted if sharp cells cannot handle the type.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Rendering.Utils.IsNaNOrInfValue(System.Object)">
            <summary>
            Checks if the specified value is NaN or infinity
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.OpenXmlExcelExport">
            <summary>
            This class performs exporting SharpCells in-memory model of excel document to OpenXML file format.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.OpenXmlExcelExport.OpenXmlStandard">
            <summary>
            Gets or sets the level of Open XML document conformance on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1">
            <summary>
            This class performs mapping of collection with duplicating elements to collection with unique elements
            from original collection.
            Mapper adds only unique values and remembers mapping from external index of added element (in original collection)
            to internal index which is index in resulting collection with unique elements.
            </summary>
            <typeparam name="TValue">The type of objects in collections</typeparam>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Takes comparer to compare added objects.
            </summary>
            <param name="comparer">The comparer to compare added object. This comparer is responsible to decide which elements are unique.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1.Add(System.Int32,`0)">
            <summary>
            Add new mapping (external -> internal) of indexes.
            New element added only when it is unique, otherwise only mapping to existing element occurs.
            The decision what element is unique is up to comparer.
            </summary>
            <param name="index">External index of element</param>
            <param name="item">Added element</param>
            <returns>Internal index of added object</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1.Remove(System.Int32)">
            <summary>
            Remove mapping for specified external index. If mapping not exist, has no effect.
            </summary>
            <param name="index">External index</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1.Clear">
            <summary>
            Clears the unique elements and mappings.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1.Item(System.Int32)">
            <summary>
            Return mapped internal index in collection of unique elements by external index.
            </summary>
            <param name="index">External index</param>
            <returns>Internal index in collection of unique elements.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1.GetAt(System.Int32)">
            <summary>
            Shortcut method. Returns mapped object by external index.
            </summary>
            <param name="index">External index of added object.</param>
            <returns>Mapped object or null, if no mapping exist.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Optimizer.UniqueIndexMapper`1.UniqueValues">
            <summary>
            Returns collection of unique elements.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.StandardEncryption">
            <summary>
            This approach utilizes a binary EncryptionInfo structure, 
            uses Advanced Encryption Standard (AES) as an encryption 
            algorithm, and SHA-1 as a hashing algorithm.
            Can find the spec in [MS-OFFCRYPTO].
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.StandardEncryption.H(System.Byte[],System.Byte[])">
            <summary>
            Perform SHA1Managed hash.
            </summary>
            <param name="b1">The first bytes array.</param>
            <param name="b2">The second bytes array.</param>
            <returns>The hashed bytes array.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.StandardEncryption.EncryptToBytes(System.IO.Stream,System.String,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Encrypt stream to bytes with AES encryption, and output the salt, 
            encrypted verifier and encrypted verifier hash.
            </summary>
            <param name="inputStream">The input stream.</param>
            <param name="password">The password.</param>
            <param name="salt">Outputed salt.</param>
            <param name="encryptedVerifier">Outputed encrypted verifier.</param>
            <param name="encryptedVerifierHash">Outputed encrypted verifier hash.</param>
            <returns>Return encrypted bytes.</returns>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.EmusPerInch">
            <summary>
            The integer represents EMUs per inch.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.EmusPerPoint">
            <summary>
            The integer represents EMUs per point.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.CreateUri(System.String)">
            <summary>
            Create Uri according to a string.
            </summary>
            <param name="uriStr">The string used to convert.</param>
            <returns>A Uri instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.GetReferenceString(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get Reference string according.
            </summary>
            <param name="colIndex1">The first column index.</param>
            <param name="rowIndex1">The first row index.</param>
            <param name="colIndex2">The second column index.</param>
            <param name="rowIndex2">The second row index.</param>
            <returns>The string represents Reference.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.GetCellReferenceString(System.Int32,System.Int32)">
            <summary>
            Get CellReference string according.
            </summary>
            <param name="colIndex">The column index.</param>
            <param name="rowIndex">The row index.</param>
            <returns>The string represents CellReference.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.GenerateRandomBytes(System.Int32)">
            <summary>
            Get a random bytes.
            </summary>
            <param name="length">The length of the random bytes.</param>
            <returns>The random bytes.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.PrepareValueForOpenXml(System.Object)">
            <summary>
            Performs preparing of value depending on type of value
            </summary>
            <param name="value">The value to be prepared</param>
            <returns>Prepared value according to value type</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.Utils.ContainsSignificantSpaces(System.String)">
            <summary>
            Determines if string contains significant white spaces (at start or at end)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.XorObfuscator">
            <summary>
            Several records (Password (section 2.4.191), FileSharing (section 2.4.118), 
            Prot4RevPass (section 2.4.206), FeatProtection (section 2.5.124), and 
            FilePass (section 2.4.117)) use a password verifier to provide a locking and 
            unlocking system for viewing or editing parts of the workbook. This password verifier 
            is used to prevent accidental editing, and is not designed to be used as a security 
            feature. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Serialization.XorObfuscator.CreatePasswordVerifier1(System.String)">
            <summary>
            This procedure specifies how a 16-bit password verifier is obtained 
            from a password string. The password verifier is used in XOR 
            obfuscation, as well as for document write protection.(the XOR obfuscation 
            algorithm specified in [MS-OFFCRYPTO], 2.3.7.1, Binary Document Password 
            Verifier Derivation Method 1)
            </summary>
            <param name="pwd">A string indicates password.</param>
            <returns>Get the hash code of the password.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.ILayoutTreeItem">
            <summary>
            Wrapper for layout tree item (layout area)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.LayoutTreeTraversal">
            <summary>
            This class contains traversing algorithm for filtering 
            layout tree items by target device
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.LayoutTreeTraversal.LayoutTreeItem.GetChildren">
            <summary>
            Common realization of children gathering
            </summary>
            <returns>Enumerable with children of current tree item</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.LayoutTreeTraversal.GridCellTreeItem">
            <summary>
            Specific version of gathering childrens for grid cell
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.LayoutTreeTraversal.GridTreeItem">
            <summary>
            Specific version of gathering childrens for grid
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.LayoutTreeTraversal.LayoutTreeItemsFactory">
            <summary>
            Factory of layout tree items
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.TraversalExtensions.Traverse(GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.LayoutTreeTraversal,GrapeCity.ActiveReports.Extensibility.Layout.ILayoutArea)">
            <summary>
            Traverse layout area using specified traverser.
            </summary>
            <param name="traverser">Traverser of layout tree items</param>
            <param name="area">Layout area to traverse</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.TraversalExtensions.Traverse(GrapeCity.ActiveReports.Export.Excel.DDR.Core.Traversal.LayoutTreeTraversal,GrapeCity.ActiveReports.Extensibility.Layout.ILayoutPage)">
            <summary>
            Traverses layout page using specified traverser.
            </summary>
            <param name="traverser"></param>
            <param name="page">Layout page to filter</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.DDR.ExcelRenderingContext.Cache">
            <summary>
            Special property to cache some data between different render methods of renderer. Allows to have stateless renderers.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.FileFormat">
            <summary>
            Specifies the output format of Excel document.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.FileFormat.Xls">
            <summary>
            Excel BIFF format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.FileFormat.Xlsx">
            <summary>
            Excel Open XML format.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.OpenXmlStandard">
            <summary>
            Specifies the level of Open XML document conformance on exporting with Xlsx file format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.OpenXmlStandard.Strict">
            <summary>
            ISO/IEC 29500 Strict.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.OpenXmlStandard.Transitional">
            <summary>
            ISO/IEC 29500 Transitional.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExport">
            <summary>
            Provides Rdl report export to Excel (xls or xlsx) format.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExport.Export(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,System.IO.Stream,GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings)">
            <summary>
            Exports <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport"/> to Excel.
            </summary>
            <param name="report">Report's rendering tree to be exported.</param>
            <param name="stream">Output stream</param>
            <param name="settings">Optional export settings.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExport.Export(GrapeCity.ActiveReports.Extensibility.Layout.ILayoutTree,System.IO.Stream,GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings)">
            <summary>
            Exports give report represented by its LayoutTree to Excel (xls or xlsx) format.
            </summary>
            <param name="layoutTree">Reports layout tree to be exported.</param>
            <param name="stream">Output stream.</param>
            <param name="settings"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings"/> class.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.UseCompression">
            <summary>
            Gets or sets the value indicating should compression be used on exporting with Xlsx file format. True by default.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.OutputFormat">
            <summary>
            Specifies excel output format.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.MultiSheet">
            <summary>
            Indicates whether to generate single-sheet or multisheet document.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.SheetName">
            <summary>
             Sets or returns a value indicating the name of sheet. <b>Sheet</b> is default.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.UseDefaultPalette">
            <summary>
            Sets or returns whether export document with Excel default palette.
            </summary>
            <remarks>
            Setting this value to true, application will use the color which is in default palette and is closest to pre-defined custom color of control's forecolor and backcolor.
            </remarks>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.PageSettings">
            <summary>
            Page info to be written in excel output.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.LayoutPageHeight">
            <summary>
            Specifies distance between top edge of page in output file. If 0, then page height well be taken from ILayoutPage.Height for each page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.LayoutMode">
            <summary>
            Gets or sets the mode to use when rendering to html
            </summary>
            <value>A<see cref="T:GrapeCity.ActiveReports.Export.Excel.Page.LayoutMode" /> indicating the rendering mode to use.</value>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.EnableToggles">
            <summary>
            Specifies whether to export toggles from table details or groups to collapsible rows.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelExportSettings.RightToLeft">
            <summary>
            Show sheets right to left. Content will not be mirrored.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.LayoutMode">
            <summary>
            Layout modes of the excel rendering.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.LayoutMode.Galley">
            <summary>
            The report will be rendered in Xls/Xlsx with one page header, one page footer (if they exist) and the report body will be rendered in one large section.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.LayoutMode.Paginated">
            <summary>
            The report will be rendered in Xls/Xlsx with a page head and page footer for each page (if they exist) and the positions will be determined by the report's page height.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.PageOrientation">
            <summary>
            Valid paper orientation values.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PageOrientation.Default">
            <summary>
            Default printer orientation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PageOrientation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes">
            <summary>
            Valid paper size values.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Default">
            <summary>
            The paper size is defined by the user.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Letter">
            <summary>
            Letter paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.LetterSmall">
            <summary>
            Letter small paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Tabloid">
            <summary>
            Tabloid paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Ledger">
            <summary>
            Ledger paper (17 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Legal">
            <summary>
            Legal paper (8.5 in. by 14 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Statement">
            <summary>
            Statement paper (5.5 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Executive">
            <summary>
            Executive paper (7.25 in. by 10.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A3">
            <summary>
            A3 paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A4">
            <summary>
            A4 paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A4Small">
            <summary>
            A4 small paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A5">
            <summary>
            A5 paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B4">
            <summary>
            B4 paper (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B5">
            <summary>
            B5 paper (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Folio">
            <summary>
            Folio paper (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Quarto">
            <summary>
            Quarto paper (215 mm by 275 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Standard10x14">
            <summary>
            Standard paper (10 in. by 14 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Standard11x17">
            <summary>
            Standard paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Note">
            <summary>
            Note paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Number9Envelope">
            <summary>
            #9 envelope (3.875 in. by 8.875 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Number10Envelope">
            <summary>
            #10 envelope (4.125 in. by 9.5 in.)
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Number11Envelope">
            <summary>
            #11 envelope (4.5 in. by 10.375 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Number12Envelope">
            <summary>
            #12 envelope (4.75 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Number14Envelope">
            <summary>
            #14 envelope (5 in. by 11.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.CSheet">
            <summary>
            C paper (17 in. by 22 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.DSheet">
            <summary>
            D paper (22 in. by 34 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.ESheet">
            <summary>
            E paper (34 in. by 44 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.DLEnvelope">
            <summary>
            DL envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.C5Envelope">
            <summary>
            C5 envelope (162 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.C3Envelope">
            <summary>
            C3 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.C4Envelope">
            <summary>
            C4 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.C6Envelope">
            <summary>
            C6 envelope (114 mm by 162 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.C65Envelope">
            <summary>
            C65 envelope (114 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B4Envelope">
            <summary>
            B4 envelope (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B5Envelope">
            <summary>
            B5 envelope (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B6Envelope">
            <summary>
            B6 envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.ItalyEnvelope">
            <summary>
            Italy envelope (110 mm by 230 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.MonarchEnvelope">
            <summary>
            Monarch envelope (3.875 in. by 7.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PersonalEnvelope">
            <summary>
            6 3/4 envelope (3.625 in. by 6.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.USStandardFanfold">
            <summary>
            US standard fanfold (14.875 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.GermanStandardFanfold">
            <summary>
            German standard fanfold (8.5 in. by 12 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.GermanLegalFanfold">
            <summary>
            German legal fanfold (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.IsoB4">
            <summary>
            ISO B4 (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapanesePostcard">
            <summary>
            Japanese postcard (100 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Standard9x11">
            <summary>
            Standard paper (9 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Standard10x11">
            <summary>
            Standard paper (10 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Standard15x11">
            <summary>
            Standard paper (15 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.InviteEnvelope">
            <summary>
            Invitation envelope (220 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.LetterExtra">
            <summary>
            Letter extra paper (9.275 in. by 12 in.). This value is specific to the PostScript
            driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.LegalExtra">
            <summary>
            Legal extra paper (9.275 in. by 15 in.). This value is specific to the PostScript
            driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.TabloidExtra">
            <summary>
            Tabloid extra paper (11.69 in. by 18 in.). This value is specific to the
            PostScript driver and is used only by Linotronic printers in order to conserve
            paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A4Extra">
            <summary>
            A4 extra paper (236 mm by 322 mm). This value is specific to the PostScript
            driver and is used only by Linotronic printers to help save paper.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.LetterTransverse">
            <summary>
            Letter transverse paper (8.275 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A4Transverse">
            <summary>
            A4 transverse paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.LetterExtraTransverse">
            <summary>
            Letter extra transverse paper (9.275 in. by 12 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.APlus">
            <summary>
            SuperA/SuperA/A4 paper (227 mm by 356 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.BPlus">
            <summary>
            SuperB/SuperB/A3 paper (305 mm by 487 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.LetterPlus">
            <summary>
            Letter plus paper (8.5 in. by 12.69 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A4Plus">
            <summary>
            A4 plus paper (210 mm by 330 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A5Transverse">
            <summary>
            A5 transverse paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B5Transverse">
            <summary>
            JIS B5 transverse paper (182 mm by 257 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A3Extra">
            <summary>
            A3 extra paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A5Extra">
            <summary>
            A5 extra paper (174 mm by 235 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B5Extra">
            <summary>
            ISO B5 extra paper (201 mm by 276 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A2">
            <summary>
            A2 paper (420 mm by 594 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A3Transverse">
            <summary>
            A3 transverse paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A3ExtraTransverse">
            <summary>
            A3 extra transverse paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseDoublePostcard">
            <summary>
            Japanese double postcard (200 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A6">
            <summary>
            A6 paper (105 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeKakuNumber2">
            <summary>
            Japanese Kaku #2 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeKakuNumber3">
            <summary>
            Japanese Kaku #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeChouNumber3">
            <summary>
            Japanese Chou #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeChouNumber4">
            <summary>
            Japanese Chou #4 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.LetterRotated">
            <summary>
            Letter rotated paper (11 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A3Rotated">
            <summary>
            A3 rotated paper (420 mm by 297 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A4Rotated">
            <summary>
            A4 rotated paper (297 mm by 210 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A5Rotated">
            <summary>
            A5 rotated paper (210 mm by 148 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B4JisRotated">
            <summary>
            JIS B4 rotated paper (364 mm by 257 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B5JisRotated">
            <summary>
            JIS B5 rotated paper (257 mm by 182 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapanesePostcardRotated">
            <summary>
            Japanese rotated postcard (148 mm by 100 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseDoublePostcardRotated">
            <summary>
            Japanese rotated double postcard (148 mm by 200 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.A6Rotated">
            <summary>
            A6 rotated paper (148 mm by 105 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeKakuNumber2Rotated">
            <summary>
            Japanese rotated Kaku #2 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeKakuNumber3Rotated">
            <summary>
            Japanese rotated Kaku #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeChouNumber3Rotated">
            <summary>
            Japanese rotated Chou #3 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeChouNumber4Rotated">
            <summary>
            Japanese rotated Chou #4 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B6Jis">
            <summary>
            JIS B6 paper (128 mm by 182 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.B6JisRotated">
            <summary>
            JIS B6 rotated paper (182 mm by 128 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Standard12x11">
            <summary>
            Standard paper (12 in. by 11 in.).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeYouNumber4">
            <summary>
            Japanese You #4 envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.JapaneseEnvelopeYouNumber4Rotated">
            <summary>
            Japanese You #4 rotated envelope.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Prc16K">
            <summary>
            People's Republic of China 16K paper (146 mm by 215 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Prc32K">
            <summary>
            People's Republic of China 32K paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Prc32KBig">
            <summary>
            People's Republic of China 32K big paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber1">
            <summary>
            People's Republic of China #1 envelope (102 mm by 165 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber2">
            <summary>
            People's Republic of China #2 envelope (102 mm by 176 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber3">
            <summary>
            People's Republic of China #3 envelope (125 mm by 176 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber4">
            <summary>
            People's Republic of China #4 envelope (110 mm by 208 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber5">
            <summary>
            People's Republic of China #5 envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber6">
            <summary>
            People's Republic of China #6 envelope (120 mm by 230 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber7">
            <summary>
            People's Republic of China #7 envelope (160 mm by 230 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber8">
            <summary>
            People's Republic of China #8 envelope (120 mm by 309 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber9">
            <summary>
            People's Republic of China #9 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber10">
            <summary>
            People's Republic of China #10 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Prc16KRotated">
            <summary>
            People's Republic of China 16K rotated paper (146 mm by 215 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Prc32KRotated">
            <summary>
            People's Republic of China 32K rotated paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.Prc32KBigRotated">
            <summary>
            People's Republic of China 32K big rotated paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber1Rotated">
            <summary>
            People's Republic of China #1 rotated envelope (165 mm by 102 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber2Rotated">
            <summary>
            People's Republic of China #2 rotated envelope (176 mm by 102 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber3Rotated">
            <summary>
            People's Republic of China #3 rotated envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber4Rotated">
            <summary>
            People's Republic of China #4 rotated envelope (208 mm by 110 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber5Rotated">
            <summary>
            People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber6Rotated">
            <summary>
            People's Republic of China #6 rotated envelope (230 mm by 120 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber7Rotated">
            <summary>
            People's Republic of China #7 rotated envelope (230 mm by 160 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber8Rotated">
            <summary>
            People's Republic of China #8 rotated envelope (309 mm by 120 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber9Rotated">
            <summary>
            People's Republic of China #9 rotated envelope (324 mm by 229 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.PaperSizes.PrcEnvelopeNumber10Rotated">
            <summary>
            People's Republic of China #10 rotated envelope (458 mm by 324 mm).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelOutputFormat.Biff">
            <summary>
            Excel BIFF format (xls).
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelOutputFormat.OpenXmlTransitional">
            <summary>
            ISO/IEC 29500 Transitional.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelOutputFormat.OpenXmlStrict">
            <summary>
            ISO/IEC 29500 Strict.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelSecuritySettings.ProtectedBy">
            <summary>
            Gets or sets the User Name responsible to password protect the excel spreadsheet. Max 52 chars.  
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.Page.ExcelSecuritySettings.WritePassword">
            <summary>
            Gets or sets the write password of the Excel file. Maximum 15 chars.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelSecuritySettings.Password">
            <summary>
            Gets or sets the password which can be entered to permit to open Excel document.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Export.Excel.Page.ExcelSecuritySettings.ReadOnlyRecommended">
            <summary>
            Gets or sets the value to indicate if the Excel file was saved as read only recommended.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatcher">
            <summary>
            Patch the document according to the Transitional standard.
            </summary>
            <remarks>
            Refer to case 166868. The OpenXML sdk saves the document in Strict standard. 
            The Google Docs (Google Drive) does not support Strict standard fully.
            So need convert some files in the document according to the Transitional standard.
            It does not convert the document to Transitional standard fully. 
            Just make the necessary conversion to make Google Docs accept the document.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatcher.CommonFilePatcher.PatchFile(System.IO.Compression.ZipArchive,System.String)">
            <summary>
            Patch one file in the package with the name.
            </summary>
            <param name="zip"></param>
            <param name="name">The file name in the package.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatcher.CommonFilePatcher.PatchFileCore(System.String,System.IO.Stream)">
            <summary>
            Patch the file in the package with the stream.
            </summary>
            <param name="name"></param>
            <param name="inputStream">The input stream extract from the package.</param>
            <returns>The output stream after patching, used to replace the original one in the package.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatcher.WorkbookFilePatcher">
            <summary>
            Patcher for "xl/workbook.xml".
            </summary>
            <remarks>
            Namespaces should be declared in root node.
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatcher.ContentTypeFilePatcher">
            <summary>
            Patcher for "[Content_Types].xml".
            </summary>
            <remarks>
            The content type for "/xl/workbook.xml" is missing in "[Content_Types].xml".
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatcher.RelationshipsFilePatcher">
            <summary>
            Patcher for relationships files ("*.rels").
            </summary>
            <remarks>
            The target path in *.rels is absolute, should change to relative.
            </remarks>
        </member>
        <member name="T:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatchSettings">
            <summary>
            Patch settings.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatchSettings.PatchRelationships">
            <summary>
            Patch the ".rels" relationships file in the "_rels" folder.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatchSettings.PatchContentType">
            <summary>
            Patch the "[Content_Types].xml", add missing contents.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatchSettings.PatchWorkbook">
            <summary>
            Patch the "xl/workbook.xml", move namespace declarations.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Export.Excel.OpenXmlTransitionalPatchSettings.All">
            <summary>
            Gets the OpenXmlPatchSettings object with all settings true.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.EncryptionTools">
            <summary>
            The tool class for encryption. Can find the spec in [MS-OFFCRYPTO].
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptionTools.IsRecordNeedEncrypt(GrapeCity.SpreadBuilder.BiffRecordID)">
            <summary>
            Check if the record need be encrypted.
            </summary>
            <param name="recordID">The BiffRecordID.</param>
            <returns>A bool value indicates if the record need be encrypted.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptionTools.GenerateVerifier(System.Byte[],System.Byte[]@,System.Byte[]@)">
            <summary>
            Generate the verifier and verifierHash.
            </summary>
            <param name="key">A bytes indicates the key.</param>
            <param name="verifier">Output the verifier as a bytes.</param>
            <param name="verifierHash">Output the verifier hash as a bytes.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptionTools.MD5Hash(System.Byte[])">
            <summary>
            Get MD5 hash.
            </summary>
            <param name="input">The input bytes.</param>
            <returns>The hashed bytes.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.EncryptionTools.GetRC4Key(System.Byte[],System.String,System.UInt32)">
            <summary>
            Get RC4 key.
            </summary>
            <param name="salt">A bytes indicates salt.</param>
            <param name="password">Password.</param>
            <param name="blockNo">The block number. The block size is 1024.</param>
            <returns>RC4 key.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.RC4">
            <summary>
            Implement RC4 encryption.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.RC4.count_i">
            <summary>
            counter
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.RC4.count_j">
            <summary>
            counter
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.RC4.S_BOX_LENGTH">
            <summary>
            The sandbox length.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.RC4.s_box">
            <summary>
            The sandbox.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.RC4.SetKey(System.Byte[])">
            <summary>
            Initialize the sandbox.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.RC4.En_De_Crypt(System.Byte)">
            <summary>
            Encrypt or Decrypt a byte.
            </summary>
            <param name="input">A byte.</param>
            <returns>The result byte.</returns>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.RC4.En_De_Crypt(System.Byte[])">
            <summary>
            Encrypt or Decrypt bytes.
            </summary>
            <param name="input">A bytes array.</param>
            <returns>The result bytes array.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.Biff8RC4Encryption">
            <summary>
            Implement biff8 rc4 encryption. Can find the spec in [MS-OFFCRYPTO].
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._rc4">
            <summary>
            The RC4 encryption arithmetic.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._bw">
            <summary>
            Represents the BinaryWriter which contains the input stream.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._br">
            <summary>
            Represents the BinaryReader to read the stream in _bw.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._streamPos">
            <summary>
            The stream position.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._nextBlockNum">
            <summary>
            The postion of next block
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._block">
            <summary>
            The block number.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._password">
            <summary>
            Represent password.
            </summary>
        </member>
        <member name="F:GrapeCity.SpreadBuilder.Biff8RC4Encryption._salt">
            <summary>
            Represent the salt.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8RC4Encryption.#ctor(System.IO.BinaryWriter,System.String,System.Byte[])">
            <summary>
            Create a  Biff8RC4Encryption class.
            </summary>
            <param name="bw">The BinaryWriter which contains input stream.</param>
            <param name="password">A string indicates the password.</param>
            <param name="salt">The salt of password.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8RC4Encryption.EncryptionRecord">
            <summary>
            Encrypt record.
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8RC4Encryption.SkipRecordHeader(System.UInt16@,System.UInt16@)">
            <summary>
            Skip record header.
            </summary>
            <param name="recID">Record id.</param>
            <param name="recLen">Record length.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8RC4Encryption.GetRC4Byte(System.Byte@,System.Byte@)">
            <summary>
            Get RC4 bytes.
            </summary>
            <param name="origin">Output the original bytes.</param>
            <param name="rc4Byte">Output the RC4 encrypted bytes.</param>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.Biff8RC4Encryption.EncryptionBiff8Stream">
            <summary>
            Encrypt the biff8 stream.
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.XORObfuscation">
            <summary>
            Several records (Password (section 2.4.191), FileSharing (section 2.4.118), 
            Prot4RevPass (section 2.4.206), FeatProtection (section 2.5.124), and 
            FilePass (section 2.4.117)) use a password verifier to provide a locking and 
            unlocking system for viewing or editing parts of the workbook. This password verifier 
            is used to prevent accidental editing, and is not designed to be used as a security 
            feature. 
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.XORObfuscation.CreatePasswordVerifier1(System.String)">
            <summary>
            This procedure specifies how a 16-bit password verifier is obtained 
            from a password string. The password verifier is used in XOR 
            obfuscation, as well as for document write protection.(the XOR obfuscation 
            algorithm specified in [MS-OFFCRYPTO], 2.3.7.1, Binary Document Password 
            Verifier Derivation Method 1)
            </summary>
            <param name="pwd">A string indicates password.</param>
            <returns>Get the hash code of the password.</returns>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.BiffRecordID">
            <summary>
            Enum containing all BIFF Record Identifiers (a.k.a. record numbers, Codes, OpCodes, Identifiers, whatever you want to call them).
            </summary>
        </member>
        <member name="T:GrapeCity.SpreadBuilder.StandardEncryption">
            <summary>
            This approach utilizes a binary EncryptionInfo structure, 
            uses Advanced Encryption Standard (AES) as an encryption 
            algorithm, and SHA-1 as a hashing algorithm.
            Can find the spec in [MS-OFFCRYPTO].
            </summary>
        </member>
        <member name="M:GrapeCity.SpreadBuilder.StandardEncryption.GenerateRandomBytes(System.Int32)">
            <summary>
            Get a random bytes.
            </summary>
            <param name="length">The length of the random bytes.</param>
            <returns>The random bytes.</returns>
        </member>
        <member name="T:ColorMine.ColorSpaces.IColorSpace">
            <summary>
            Defines the public methods for all color spaces
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.IColorSpace.Initialize(ColorMine.ColorSpaces.IRgb)">
            <summary>
            Initialize settings from an Rgb object
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:ColorMine.ColorSpaces.IColorSpace.ToRgb">
            <summary>
            Convert the color space to Rgb, you should probably using the "To" method instead. Need to figure out a way to "hide" or otherwise remove this method from the public interface.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ColorMine.ColorSpaces.IColorSpace.To``1">
            <summary>
            Convert any IColorSpace to any other IColorSpace.
            </summary>
            <typeparam name="T">IColorSpace type to convert to</typeparam>
            <returns></returns>
        </member>
        <member name="M:ColorMine.ColorSpaces.IColorSpace.Compare(ColorMine.ColorSpaces.IColorSpace,ColorMine.ColorSpaces.Comparisons.IColorSpaceComparison)">
            <summary>
            Determine how close two IColorSpaces are to each other using a passed in algorithm
            </summary>
            <param name="compareToValue">Other IColorSpace to compare to</param>
            <param name="comparer">Algorithm to use for comparison</param>
            <returns>Distance in 3d space as double</returns>
        </member>
        <member name="T:ColorMine.ColorSpaces.ColorSpace">
            <summary>
            Abstract ColorSpace class, defines the To method that converts between any IColorSpace.
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.ColorSpace.Compare(ColorMine.ColorSpaces.IColorSpace,ColorMine.ColorSpaces.Comparisons.IColorSpaceComparison)">
            <summary>
            Convienience method for comparing any IColorSpace
            </summary>
            <param name="compareToValue"></param>
            <param name="comparer"></param>
            <returns>Single number representing the difference between two colors</returns>
        </member>
        <member name="M:ColorMine.ColorSpaces.ColorSpace.To``1">
            <summary>
            Convert any IColorSpace to any other IColorSpace
            </summary>
            <typeparam name="T">Must implement IColorSpace, new()</typeparam>
            <returns></returns>
        </member>
        <member name="T:ColorMine.ColorSpaces.Comparisons.Cie1976Comparison">
            <summary>
            Implements the CIE76 method of delta-e: http://en.wikipedia.org/wiki/Color_difference#CIE76
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.Cie1976Comparison.Compare(ColorMine.ColorSpaces.IColorSpace,ColorMine.ColorSpaces.IColorSpace)">
            <summary>
            Calculates the CIE76 delta-e value: http://en.wikipedia.org/wiki/Color_difference#CIE76
            </summary>
        </member>
        <member name="T:ColorMine.ColorSpaces.Comparisons.Cie94Comparison">
            <summary>
            Implements the Cie94 method of delta-e: http://en.wikipedia.org/wiki/Color_difference#CIE94
            </summary>
        </member>
        <member name="T:ColorMine.ColorSpaces.Comparisons.Cie94Comparison.Application">
            <summary>
            Application type defines constants used in the Cie94 comparison
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.Cie94Comparison.#ctor">
            <summary>
            Create new Cie94Comparison. Defaults to GraphicArts application type.
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.Cie94Comparison.#ctor(ColorMine.ColorSpaces.Comparisons.Cie94Comparison.Application)">
            <summary>
            Create new Cie94Comparison for specific application type.
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.Cie94Comparison.Compare(ColorMine.ColorSpaces.IColorSpace,ColorMine.ColorSpaces.IColorSpace)">
            <summary>
            Compare colors using the Cie94 algorithm. The first color (a) will be used as the reference color.
            </summary>
            <param name="a">Reference color</param>
            <param name="b">Comparison color</param>
            <returns></returns>
        </member>
        <member name="T:ColorMine.ColorSpaces.Comparisons.CieDe2000Comparison">
            <summary>
            Implements the DE2000 method of delta-e: http://en.wikipedia.org/wiki/Color_difference#CIEDE2000
            Correct implementation provided courtesy of Jonathan Hofinger, jaytar42
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.CieDe2000Comparison.Compare(ColorMine.ColorSpaces.IColorSpace,ColorMine.ColorSpaces.IColorSpace)">
            <summary>
            Calculates the DE2000 delta-e value: http://en.wikipedia.org/wiki/Color_difference#CIEDE2000
            Correct implementation provided courtesy of Jonathan Hofinger, jaytar42
            </summary>
        </member>
        <member name="T:ColorMine.ColorSpaces.Comparisons.CmcComparison">
            <summary>
            Implements the CMC l:c (1984) method of delta-e: http://en.wikipedia.org/wiki/Color_difference#CMC_l:c_.281984.29
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.CmcComparison.#ctor">
            <summary>
            Create CMC l:c comparison with DefaultLightness and DefaultChroma values.
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.CmcComparison.#ctor(System.Double,System.Double)">
            <summary>
            Create CMC l:c comparison with specific lightness (l) and chroma (c) values.
            </summary>
            <param name="lightness"></param>
            <param name="chroma"></param>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.CmcComparison.Compare(ColorMine.ColorSpaces.IColorSpace,ColorMine.ColorSpaces.IColorSpace)">
            <summary>
            Calculates the CMC l:c (1984) delta-e value: http://en.wikipedia.org/wiki/Color_difference#CMC_l:c_.281984.29
            </summary>
            <param name="colorA"></param>
            <param name="colorB"></param>
            <returns></returns>
        </member>
        <member name="T:ColorMine.ColorSpaces.Comparisons.IColorSpaceComparison">
            <summary>
            Defines how comparison methods may be called
            </summary>
        </member>
        <member name="M:ColorMine.ColorSpaces.Comparisons.IColorSpaceComparison.Compare(ColorMine.ColorSpaces.IColorSpace,ColorMine.ColorSpaces.IColorSpace)">
            <summary>
            Returns the difference between two colors given based on the specified defined in the called class.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>Score based on similarity, the lower the score the closer the colors</returns>
        </member>
        <member name="T:ColorMine.ColorSpaces.Conversions.HsbConverter">
            <summary>
            HSB is another name for HSV
            </summary>
        </member>
    </members>
</doc>
